- en: Streamlit Spaces
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Streamlit Spaces
- en: 'Original text: [https://huggingface.co/docs/hub/spaces-sdks-streamlit](https://huggingface.co/docs/hub/spaces-sdks-streamlit)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/hub/spaces-sdks-streamlit](https://huggingface.co/docs/hub/spaces-sdks-streamlit)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '**Streamlit** gives users freedom to build a full-featured web app with Python
    in a *reactive* way. Your code is rerun each time the state of the app changes.
    Streamlit is also great for data visualization and supports several charting libraries
    such as Bokeh, Plotly, and Altair. Read this [blog post](https://huggingface.co/blog/streamlit-spaces)
    about building and hosting Streamlit apps in Spaces.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit为用户提供了使用Python以*反应式*方式构建完整功能的Web应用程序的自由。每次应用程序状态发生变化时，都会重新运行您的代码。Streamlit还非常适合数据可视化，并支持多个图表库，如Bokeh、Plotly和Altair。阅读这篇关于在Spaces中构建和托管Streamlit应用程序的[博客文章](https://huggingface.co/blog/streamlit-spaces)。
- en: Selecting **Streamlit** as the SDK when [creating a new Space](https://huggingface.co/new-space)
    will initialize your Space with the latest version of Streamlit by setting the
    `sdk` property to `streamlit` in your `README.md` file’s YAML block. If you’d
    like to change the Streamlit version, you can edit the `sdk_version` property.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在[创建新Space](https://huggingface.co/new-space)时选择**Streamlit**作为SDK，将通过在`README.md`文件的YAML块中将`sdk`属性设置为`streamlit`来初始化您的Space的最新版本。如果您想更改Streamlit版本，可以编辑`sdk_version`属性。
- en: 'To use Streamlit in a Space, select **Streamlit** as the SDK when you create
    a Space through the [**New Space** form](https://huggingface.co/new-space). This
    will create a repository with a `README.md` that contains the following properties
    in the YAML configuration block:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Space中使用Streamlit，请在通过[**New Space**表单](https://huggingface.co/new-space)创建Space时选择**Streamlit**作为SDK。这将创建一个包含以下属性的YAML配置块的`README.md`的存储库：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can edit the `sdk_version`, but note that issues may occur when you use
    an unsupported Streamlit version. Not all Streamlit versions are supported, so
    please refer to the [reference section](./spaces-config-reference) to see which
    versions are available.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以编辑`sdk_version`，但请注意，当您使用不受支持的Streamlit版本时可能会出现问题。并非所有Streamlit版本都受支持，请参考[参考部分](./spaces-config-reference)查看可用版本。
- en: For in-depth information about Streamlit, refer to the [Streamlit documentation](https://docs.streamlit.io/).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Streamlit的详细信息，请参阅[Streamlit文档](https://docs.streamlit.io/)。
- en: Only port 8501 is allowed for Streamlit Spaces (default port). As a result if
    you provide a `config.toml` file for your Space make sure the default port is
    not overriden.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 只允许使用端口8501进行Streamlit Spaces（默认端口）。因此，如果为您的Space提供了`config.toml`文件，请确保未覆盖默认端口。
- en: 'Your First Streamlit Space: Hot Dog Classifier'
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您的第一个Streamlit Space：Hot Dog Classifier
- en: In the following sections, you’ll learn the basics of creating a Space, configuring
    it, and deploying your code to it. We’ll create a **Hot Dog Classifier** Space
    with Streamlit that’ll be used to demo the [julien-c/hotdog-not-hotdog](https://huggingface.co/julien-c/hotdog-not-hotdog)
    model, which can detect whether a given picture contains a hot dog 🌭
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，您将学习创建Space、配置Space和将代码部署到Space的基础知识。我们将创建一个使用Streamlit的**Hot Dog Classifier**
    Space，用于演示[julien-c/hotdog-not-hotdog](https://huggingface.co/julien-c/hotdog-not-hotdog)模型，该模型可以检测给定图片是否包含热狗🌭
- en: You can find a completed version of this hosted at [NimaBoscarino/hotdog-streamlit](https://huggingface.co/spaces/NimaBoscarino/hotdog-streamlit).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[NimaBoscarino/hotdog-streamlit](https://huggingface.co/spaces/NimaBoscarino/hotdog-streamlit)找到此主机化版本。
- en: Create a new Streamlit Space
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个新的Streamlit Space
- en: We’ll start by [creating a brand new Space](https://huggingface.co/new-space)
    and choosing **Streamlit** as our SDK. Hugging Face Spaces are Git repositories,
    meaning that you can work on your Space incrementally (and collaboratively) by
    pushing commits. Take a look at the [Getting Started with Repositories](./repositories-getting-started)
    guide to learn about how you can create and edit files before continuing.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从[创建全新Space](https://huggingface.co/new-space)并选择**Streamlit**作为我们的SDK开始。
    Hugging Face Spaces是Git存储库，这意味着您可以通过推送提交逐步（和协作地）处理Space。在继续之前，请查看[开始使用存储库](./repositories-getting-started)指南，了解如何在继续之前创建和编辑文件。
- en: Add the dependencies
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加依赖项
- en: 'For the **Hot Dog Classifier** we’ll be using a [🤗 Transformers pipeline](https://huggingface.co/docs/transformers/pipeline_tutorial)
    to use the model, so we need to start by installing a few dependencies. This can
    be done by creating a **requirements.txt** file in our repository, and adding
    the following dependencies to it:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**Hot Dog Classifier**，我们将使用[🤗 Transformers pipeline](https://huggingface.co/docs/transformers/pipeline_tutorial)来使用模型，因此我们需要首先安装一些依赖项。这可以通过在我们的存储库中创建一个**requirements.txt**文件，并将以下依赖项添加到其中来完成：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Spaces runtime will handle installing the dependencies!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Spaces运行时将处理安装依赖项！
- en: Create the Streamlit app
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Streamlit应用程序
- en: 'To create the Streamlit app, make a new file in the repository called **app.py**,
    and add the following code:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建Streamlit应用程序，请在存储库中创建一个名为**app.py**的新文件，并添加以下代码：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This Python script uses a [🤗 Transformers pipeline](https://huggingface.co/docs/transformers/pipeline_tutorial)
    to load the [julien-c/hotdog-not-hotdog](https://huggingface.co/julien-c/hotdog-not-hotdog)
    model, which is used by the Streamlit interface. The Streamlit app will expect
    you to upload an image, which it’ll then classify as *hot dog* or *not hot dog*.
    Once you’ve saved the code to the **app.py** file, visit the **App** tab to see
    your app in action!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此Python脚本使用[🤗 Transformers pipeline](https://huggingface.co/docs/transformers/pipeline_tutorial)加载[julien-c/hotdog-not-hotdog](https://huggingface.co/julien-c/hotdog-not-hotdog)模型，该模型由Streamlit界面使用。Streamlit应用程序将要求您上传一张图片，然后将其分类为*热狗*或*非热狗*。保存代码到**app.py**文件后，访问**App**选项卡以查看您的应用程序运行情况！
- en: '![](../Images/c3481cc29034be8134667fb3042f09ab.png) ![](../Images/cacfe2f21d36f60d9537f92cb3bb0e64.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c3481cc29034be8134667fb3042f09ab.png) ![](../Images/cacfe2f21d36f60d9537f92cb3bb0e64.png)'
- en: Embed Streamlit Spaces on other webpages
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在其他网页上嵌入Streamlit Spaces
- en: You can use the HTML `<iframe>` tag to embed a Streamlit Space as an inline
    frame on other webpages. Simply include the URL of your Space, ending with the
    `.hf.space` suffix. To find the URL of your Space, you can use the “Embed this
    Space” button from the Spaces options.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 HTML `<iframe>` 标签将 Streamlit Space 嵌入到其他网页的内联框架中。只需包含您的 Space 的 URL，以
    `.hf.space` 结尾。要找到您的 Space 的 URL，您可以使用 Spaces 选项中的“嵌入此 Space”按钮。
- en: 'For example, the demo above can be embedded in these docs with the following
    tag:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，上面的演示可以使用以下标签嵌入到这些文档中：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[https://NimaBoscarino-hotdog-streamlit.hf.space?embed=true](https://NimaBoscarino-hotdog-streamlit.hf.space?embed=true)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://NimaBoscarino-hotdog-streamlit.hf.space?embed=true](https://NimaBoscarino-hotdog-streamlit.hf.space?embed=true)'
- en: Please note that we have added `?embed=true` to the URL, which activates the
    embed mode of the Streamlit app, removing some spacers and the footer for slim
    embeds.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们已将 `?embed=true` 添加到 URL 中，这将激活 Streamlit 应用程序的嵌入模式，删除一些间隔和页脚以实现精简嵌入。
- en: Embed Streamlit Spaces with auto-resizing IFrames
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用自动调整大小的 IFrames 嵌入 Streamlit Spaces
- en: Streamlit has supported automatic iframe resizing since [1.17.0](https://docs.streamlit.io/library/changelog#version-1170)
    so that the size of the parent iframe is automatically adjusted to fit the content
    volume of the embedded Streamlit application.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 自从 [1.17.0](https://docs.streamlit.io/library/changelog#version-1170) 版本以来，Streamlit
    支持自动调整 iframe 大小，以便自动调整父 iframe 的大小以适应嵌入的 Streamlit 应用程序的内容量。
- en: It relies on the [`iFrame Resizer`](https://github.com/davidjbradshaw/iframe-resizer)
    library, for which you need to add a few lines of code, as in the following example
    where
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 它依赖于 [`iFrame Resizer`](https://github.com/davidjbradshaw/iframe-resizer) 库，您需要添加几行代码，就像以下示例中所示
- en: '`id` is set to `<iframe />` that is used to specify the auto-resize target.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id` 设置为 `<iframe />`，用于指定自动调整大小的目标。'
- en: The `iFrame Resizer` is loaded via the `script` tag.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iFrame Resizer` 通过 `script` 标签加载。'
- en: The `iFrameResize()` function is called with the ID of the target `iframe` element,
    so that its size changes automatically.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用 `iFrameResize()` 函数时，使用目标 `iframe` 元素的 ID，以便其大小自动更改。
- en: We can pass options to the first argument of `iFrameResize()`. See [the document](https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/parent_page/options.md)
    for the details.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将选项传递给 `iFrameResize()` 的第一个参数。有关详细信息，请参阅[文档](https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/parent_page/options.md)。
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Additionally, you can checkout [our documentation](./spaces-embed).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以查看[我们的文档](./spaces-embed)。
