- en: Share a model
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享模型
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/model_sharing](https://huggingface.co/docs/transformers/v4.37.2/en/model_sharing)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/transformers/v4.37.2/en/model_sharing](https://huggingface.co/docs/transformers/v4.37.2/en/model_sharing)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The last two tutorials showed how you can fine-tune a model with PyTorch, Keras,
    and 🤗 Accelerate for distributed setups. The next step is to share your model
    with the community! At Hugging Face, we believe in openly sharing knowledge and
    resources to democratize artificial intelligence for everyone. We encourage you
    to consider sharing your model with the community to help others save time and
    resources.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 最后两个教程展示了如何使用PyTorch、Keras和🤗加速进行分布式设置对模型进行微调。下一步是与社区分享您的模型！在Hugging Face，我们相信公开分享知识和资源，以使人人都能民主化人工智能。我们鼓励您考虑与社区分享您的模型，以帮助他人节省时间和资源。
- en: 'In this tutorial, you will learn two methods for sharing a trained or fine-tuned
    model on the [Model Hub](https://huggingface.co/models):'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您将学习两种在[模型中心](https://huggingface.co/models)上分享经过训练或微调模型的方法：
- en: Programmatically push your files to the Hub.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过程序将文件推送到Hub。
- en: Drag-and-drop your files to the Hub with the web interface.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Web界面将文件拖放到Hub中。
- en: '[https://www.youtube.com/embed/XvSGPZFEjDY](https://www.youtube.com/embed/XvSGPZFEjDY)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.youtube.com/embed/XvSGPZFEjDY](https://www.youtube.com/embed/XvSGPZFEjDY)'
- en: To share a model with the community, you need an account on [huggingface.co](https://huggingface.co/join).
    You can also join an existing organization or create a new one.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要与社区分享模型，您需要在[huggingface.co](https://huggingface.co/join)上拥有一个帐户。您还可以加入现有组织或创建一个新组织。
- en: Repository features
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储库功能
- en: Each repository on the Model Hub behaves like a typical GitHub repository. Our
    repositories offer versioning, commit history, and the ability to visualize differences.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 模型中心上的每个存储库的行为类似于典型的GitHub存储库。我们的存储库提供版本控制、提交历史记录和可视化差异的功能。
- en: The Model Hub’s built-in versioning is based on git and [git-lfs](https://git-lfs.github.com/).
    In other words, you can treat one model as one repository, enabling greater access
    control and scalability. Version control allows *revisions*, a method for pinning
    a specific version of a model with a commit hash, tag or branch.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 模型中心内置的版本控制基于git和[git-lfs](https://git-lfs.github.com/)。换句话说，您可以将一个模型视为一个存储库，实现更大的访问控制和可扩展性。版本控制允许*修订*，这是通过提交哈希、标签或分支固定模型的特定版本的方法。
- en: 'As a result, you can load a specific model version with the `revision` parameter:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您可以使用`revision`参数加载特定模型版本：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Files are also easily edited in a repository, and you can view the commit history
    as well as the difference:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 文件也可以在存储库中轻松编辑，您还可以查看提交历史记录以及差异：
- en: '![vis_diff](../Images/fe2de1419250ff9a84376a51a78ba39e.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![vis_diff](../Images/fe2de1419250ff9a84376a51a78ba39e.png)'
- en: Setup
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置
- en: 'Before sharing a model to the Hub, you will need your Hugging Face credentials.
    If you have access to a terminal, run the following command in the virtual environment
    where 🤗 Transformers is installed. This will store your access token in your Hugging
    Face cache folder (`~/.cache/` by default):'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在将模型分享到Hub之前，您将需要您的Hugging Face凭据。如果您可以访问终端，请在安装🤗 Transformers的虚拟环境中运行以下命令。这将在您的Hugging
    Face缓存文件夹（默认为`~/.cache/`）中存储您的访问令牌：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you are using a notebook like Jupyter or Colaboratory, make sure you have
    the [`huggingface_hub`](https://huggingface.co/docs/hub/adding-a-library) library
    installed. This library allows you to programmatically interact with the Hub.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用Jupyter或Colaboratory等笔记本，请确保已安装[`huggingface_hub`](https://huggingface.co/docs/hub/adding-a-library)库。该库允许您以编程方式与Hub进行交互。
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then use `notebook_login` to sign-in to the Hub, and follow the link [here](https://huggingface.co/settings/token)
    to generate a token to login with:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用`notebook_login`登录到Hub，并按照链接[此处](https://huggingface.co/settings/token)生成一个令牌以登录：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Convert a model for all frameworks
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将模型转换为所有框架
- en: To ensure your model can be used by someone working with a different framework,
    we recommend you convert and upload your model with both PyTorch and TensorFlow
    checkpoints. While users are still able to load your model from a different framework
    if you skip this step, it will be slower because 🤗 Transformers will need to convert
    the checkpoint on-the-fly.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保您的模型可以被使用不同框架的人使用，我们建议您将您的模型转换并上传为PyTorch和TensorFlow检查点。虽然用户仍然可以从不同框架加载您的模型，如果您跳过此步骤，加载速度会较慢，因为🤗
    Transformers需要即时转换检查点。
- en: Converting a checkpoint for another framework is easy. Make sure you have PyTorch
    and TensorFlow installed (see [here](installation) for installation instructions),
    and then find the specific model for your task in the other framework.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将另一个框架的检查点转换为另一个框架很容易。确保您已安装PyTorch和TensorFlow（请参阅[此处](installation)获取安装说明），然后在另一个框架中找到适合您任务的特定模型。
- en: PytorchHide Pytorch content
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Pytorch隐藏Pytorch内容
- en: 'Specify `from_tf=True` to convert a checkpoint from TensorFlow to PyTorch:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 指定`from_tf=True`以将TensorFlow的检查点转换为PyTorch：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: TensorFlowHide TensorFlow content
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow隐藏TensorFlow内容
- en: 'Specify `from_pt=True` to convert a checkpoint from PyTorch to TensorFlow:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 指定`from_pt=True`以将PyTorch的检查点转换为TensorFlow：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then you can save your new TensorFlow model with its new checkpoint:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以使用新的检查点保存您的新TensorFlow模型：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: JAXHide JAX content
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: JAX隐藏JAX内容
- en: 'If a model is available in Flax, you can also convert a checkpoint from PyTorch
    to Flax:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个模型在Flax中可用，您也可以将PyTorch的检查点转换为Flax：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Push a model during training
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在训练期间推送模型
- en: PytorchHide Pytorch content
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Pytorch隐藏Pytorch内容
- en: '[https://www.youtube-nocookie.com/embed/Z1-XMy-GNLQ](https://www.youtube-nocookie.com/embed/Z1-XMy-GNLQ)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.youtube-nocookie.com/embed/Z1-XMy-GNLQ](https://www.youtube-nocookie.com/embed/Z1-XMy-GNLQ)'
- en: 'Sharing a model to the Hub is as simple as adding an extra parameter or callback.
    Remember from the [fine-tuning tutorial](training), the [TrainingArguments](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.TrainingArguments)
    class is where you specify hyperparameters and additional training options. One
    of these training options includes the ability to push a model directly to the
    Hub. Set `push_to_hub=True` in your [TrainingArguments](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.TrainingArguments):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 将模型共享到Hub就像添加一个额外的参数或回调一样简单。请记住来自[微调教程](training)中，[TrainingArguments](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.TrainingArguments)类是您指定超参数和额外训练选项的地方。其中一个训练选项包括直接将模型推送到Hub的能力。在您的[TrainingArguments](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.TrainingArguments)中设置`push_to_hub=True`：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Pass your training arguments as usual to [Trainer](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.Trainer):'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样将您的训练参数传递给[Trainer](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.Trainer)：
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After you fine-tune your model, call [push_to_hub()](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.Trainer.push_to_hub)
    on [Trainer](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.Trainer)
    to push the trained model to the Hub. 🤗 Transformers will even automatically add
    training hyperparameters, training results and framework versions to your model
    card!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在微调您的模型后，调用[push_to_hub()](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.Trainer.push_to_hub)在[Trainer](/docs/transformers/v4.37.2/en/main_classes/trainer#transformers.Trainer)上将训练好的模型推送到Hub。🤗
    Transformers甚至会自动将训练超参数、训练结果和框架版本添加到您的模型卡中！
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: TensorFlowHide TensorFlow content
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow隐藏TensorFlow内容
- en: 'Share a model to the Hub with [PushToHubCallback](/docs/transformers/v4.37.2/en/main_classes/keras_callbacks#transformers.PushToHubCallback).
    In the [PushToHubCallback](/docs/transformers/v4.37.2/en/main_classes/keras_callbacks#transformers.PushToHubCallback)
    function, add:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[PushToHubCallback](/docs/transformers/v4.37.2/en/main_classes/keras_callbacks#transformers.PushToHubCallback)将模型共享到Hub。在[PushToHubCallback](/docs/transformers/v4.37.2/en/main_classes/keras_callbacks#transformers.PushToHubCallback)函数中，添加：
- en: An output directory for your model.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于您的模型的输出目录。
- en: A tokenizer.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个分词器。
- en: The `hub_model_id`, which is your Hub username and model name.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hub_model_id`，即您的Hub用户名和模型名称。'
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add the callback to [`fit`](https://keras.io/api/models/model_training_apis/),
    and 🤗 Transformers will push the trained model to the Hub:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将回调添加到[`fit`](https://keras.io/api/models/model_training_apis/)，🤗 Transformers将推送训练好的模型到Hub：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Use the push_to_hub function
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用`push_to_hub`函数
- en: You can also call `push_to_hub` directly on your model to upload it to the Hub.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以直接在您的模型上调用`push_to_hub`来将其上传到Hub。
- en: 'Specify your model name in `push_to_hub`:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在`push_to_hub`中指定您的模型名称：
- en: '[PRE13]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This creates a repository under your username with the model name `my-awesome-model`.
    Users can now load your model with the `from_pretrained` function:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的用户名下创建一个名为`my-awesome-model`的模型存储库。用户现在可以使用`from_pretrained`函数加载您的模型：
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you belong to an organization and want to push your model under the organization
    name instead, just add it to the `repo_id`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您属于一个组织，并希望将您的模型推送到组织名称下，只需将其添加到`repo_id`中：
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `push_to_hub` function can also be used to add other files to a model repository.
    For example, add a tokenizer to a model repository:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`push_to_hub`函数也可以用于向模型存储库添加其他文件。例如，向模型存储库添加一个分词器：'
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Or perhaps you’d like to add the TensorFlow version of your fine-tuned PyTorch
    model:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 或者您可能想要添加您微调的PyTorch模型的TensorFlow版本：
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now when you navigate to your Hugging Face profile, you should see your newly
    created model repository. Clicking on the **Files** tab will display all the files
    you’ve uploaded to the repository.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当您导航到您的Hugging Face个人资料时，您应该看到您新创建的模型存储库。点击**文件**选项卡将显示您上传到存储库的所有文件。
- en: For more details on how to create and upload files to a repository, refer to
    the Hub documentation [here](https://huggingface.co/docs/hub/how-to-upstream).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何创建和上传文件到存储库的更多详细信息，请参考Hub文档[这里](https://huggingface.co/docs/hub/how-to-upstream)。
- en: Upload with the web interface
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Web界面上传
- en: 'Users who prefer a no-code approach are able to upload a model through the
    Hub’s web interface. Visit [huggingface.co/new](https://huggingface.co/new) to
    create a new repository:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 喜欢无代码方法的用户可以通过Hub的Web界面上传模型。访问[huggingface.co/new](https://huggingface.co/new)创建一个新存储库：
- en: '![new_model_repo](../Images/f1cd7603a42af7630a0639dc990d2015.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![new_model_repo](../Images/f1cd7603a42af7630a0639dc990d2015.png)'
- en: 'From here, add some information about your model:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，添加有关您的模型的一些信息：
- en: Select the **owner** of the repository. This can be yourself or any of the organizations
    you belong to.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择存储库的**所有者**。这可以是您自己或您所属的任何组织。
- en: Pick a name for your model, which will also be the repository name.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您的模型选择一个名称，这也将是存储库名称。
- en: Choose whether your model is public or private.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择您的模型是公开的还是私有的。
- en: Specify the license usage for your model.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您的模型指定许可证使用情况。
- en: Now click on the **Files** tab and click on the **Add file** button to upload
    a new file to your repository. Then drag-and-drop a file to upload and add a commit
    message.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在点击**文件**选项卡，然后点击**添加文件**按钮将新文件上传到您的存储库。然后拖放文件进行上传并添加提交消息。
- en: '![upload_file](../Images/aad87a6b56bf13c34f4376d15142f7b0.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![upload_file](../Images/aad87a6b56bf13c34f4376d15142f7b0.png)'
- en: Add a model card
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加一个模型卡
- en: 'To make sure users understand your model’s capabilities, limitations, potential
    biases and ethical considerations, please add a model card to your repository.
    The model card is defined in the `README.md` file. You can add a model card by:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保用户了解您的模型的功能、限制、潜在偏见和道德考虑，请向您的存储库添加一个模型卡。模型卡在`README.md`文件中定义。您可以通过以下方式添加模型卡：
- en: Manually creating and uploading a `README.md` file.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动创建和上传`README.md`文件。
- en: Clicking on the **Edit model card** button in your model repository.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击您的模型存储库中的**编辑模型卡**按钮。
- en: Take a look at the DistilBert [model card](https://huggingface.co/distilbert-base-uncased)
    for a good example of the type of information a model card should include. For
    more details about other options you can control in the `README.md` file such
    as a model’s carbon footprint or widget examples, refer to the documentation [here](https://huggingface.co/docs/hub/models-cards).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 查看DistilBert的[模型卡片](https://huggingface.co/distilbert-base-uncased)，这是模型卡片应包含的信息类型的一个很好的例子。有关您可以在`README.md`文件中控制的其他选项的更多详细信息，例如模型的碳足迹或小部件示例，请参考[此处的文档](https://huggingface.co/docs/hub/models-cards)。
