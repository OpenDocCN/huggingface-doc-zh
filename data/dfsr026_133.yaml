- en: AutoPipeline
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AutoPipeline
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/pipelines/auto_pipeline](https://huggingface.co/docs/diffusers/api/pipelines/auto_pipeline)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '原文链接: [https://huggingface.co/docs/diffusers/api/pipelines/auto_pipeline](https://huggingface.co/docs/diffusers/api/pipelines/auto_pipeline)'
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '`AutoPipeline` is designed to:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`AutoPipeline` 的设计目的是:'
- en: make it easy for you to load a checkpoint for a task without knowing the specific
    pipeline class to use
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使您能够加载任务的检查点，而无需知道要使用的特定管道类
- en: use multiple pipelines in your workflow
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在工作流中使用多个管道
- en: Based on the task, the `AutoPipeline` class automatically retrieves the relevant
    pipeline given the name or path to the pretrained weights with the `from_pretrained()`
    method.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 基于任务，`AutoPipeline` 类会根据预训练权重的名称或路径自动检索相关管道，使用 `from_pretrained()` 方法。
- en: To seamlessly switch between tasks with the same checkpoint without reallocating
    additional memory, use the `from_pipe()` method to transfer the components from
    the original pipeline to the new one.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在不重新分配额外内存的情况下无缝切换任务，使用 `from_pipe()` 方法将组件从原始管道传输到新管道。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Check out the [AutoPipeline](../../tutorials/autopipeline) tutorial to learn
    how to use this API!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [AutoPipeline](../../tutorials/autopipeline) 教程，了解如何使用此 API！
- en: '`AutoPipeline` supports text-to-image, image-to-image, and inpainting for the
    following diffusion models:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`AutoPipeline` 支持以下扩散模型的文本到图像、图像到图像和修补功能：'
- en: '[Stable Diffusion](./stable_diffusion/overview)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[稳定扩散](./stable_diffusion/overview)'
- en: '[ControlNet](./controlnet)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ControlNet](./controlnet)'
- en: '[Stable Diffusion XL (SDXL)](./stable_diffusion/stable_diffusion_xl)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[稳定扩散 XL (SDXL)](./stable_diffusion/stable_diffusion_xl)'
- en: '[DeepFloyd IF](./deepfloyd_if)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[DeepFloyd IF](./deepfloyd_if)'
- en: '[Kandinsky 2.1](./kandinsky)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kandinsky 2.1](./kandinsky)'
- en: '[Kandinsky 2.2](./kandinsky_v22)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Kandinsky 2.2](./kandinsky_v22)'
- en: AutoPipelineForText2Image
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AutoPipelineForText2Image
- en: '### `class diffusers.AutoPipelineForText2Image`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.AutoPipelineForText2Image`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L175)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L175)'
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[AutoPipelineForText2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image)
    is a generic pipeline class that instantiates a text-to-image pipeline class.
    The specific underlying pipeline class is automatically selected from either the
    [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image.from_pretrained)
    or [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image.from_pipe)
    methods.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[AutoPipelineForText2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image)
    是一个通用的管道类，实例化一个文本到图像的管道类。具体的底层管道类会自动从 [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image.from_pretrained)
    或 [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image.from_pipe)
    方法中选择。'
- en: This class cannot be instantiated using `__init__()` (throws an error).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类不能使用 `__init__()` 实例化（会抛出错误）。
- en: 'Class attributes:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '类属性:'
- en: '`config_name` (`str`) — The configuration filename that stores the class and
    module names of all the diffusion pipeline’s components.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config_name` (`str`) — 存储所有扩散管道组件类和模块名称的配置文件名。'
- en: '#### `from_pretrained`'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L200)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L200)'
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) — Can
    be either:'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str` 或 `os.PathLike`, *可选*) — 可以是:'
- en: A string, the *repo id* (for example `CompVis/ldm-text2im-large-256`) of a pretrained
    pipeline hosted on the Hub.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练管道的 *repo id*（例如 `CompVis/ldm-text2im-large-256`）。
- en: A path to a *directory* (for example `./my_pipeline_directory/`) containing
    pipeline weights saved using [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained).
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*目录*路径（例如 `./my_pipeline_directory/`），其中包含使用 [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained)
    保存的管道权重。
- en: '`torch_dtype` (`str` or `torch.dtype`, *optional*) — Override the default `torch.dtype`
    and load the model with another dtype. If “auto” is passed, the dtype is automatically
    derived from the model’s weights.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`torch_dtype` (`str` 或 `torch.dtype`, *可选*) — 覆盖默认的 `torch.dtype` 并使用另一种 dtype
    加载模型。如果传递“auto”，dtype 将自动从模型的权重中派生。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`, *可选*, 默认为 `False`) — 是否强制（重新）下载模型权重和配置文件，覆盖缓存版本（如果存在）。'
- en: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) — Path to a directory where
    a downloaded pretrained model configuration is cached if the standard cache is
    not used.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`Union[str, os.PathLike]`, *可选*) — 下载预训练模型配置的缓存路径，如果不使用标准缓存。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to resume downloading the model weights and configuration files. If set to `False`,
    any incompletely downloaded files are deleted.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`, *可选*, 默认为 `False`) — 是否恢复下载模型权重和配置文件。如果设置为 `False`，则删除任何未完全下载的文件。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`Dict[str, str]`, *可选*) — 一个代理服务器字典，按协议或端点使用，例如，`{''http'': ''foo.bar:3128'',
    ''http://hostname'': ''foo.bar:4012''}`。这些代理会在每个请求中使用。'
- en: '`output_loading_info(bool,` *optional*, defaults to `False`) — Whether or not
    to also return a dictionary containing missing keys, unexpected keys and error
    messages.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_loading_info(bool,` *可选*, 默认为 `False`) — 是否返回一个包含缺失键、意外键和错误消息的字典。'
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) — Whether to only
    load local model weights and configuration files or not. If set to `True`, the
    model won’t be downloaded from the Hub.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_files_only` (`bool`, *optional*, defaults to `False`) — 是否仅加载本地模型权重和配置文件。如果设置为`True`，则不会从Hub下载模型。'
- en: '`token` (`str` or *bool*, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str` or *bool*, *optional*) — 用作远程文件的HTTP令牌。如果为`True`，则使用从`diffusers-cli
    login`生成的令牌（存储在`~/.huggingface`中）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, a commit id, or any identifier allowed
    by Git.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *optional*, defaults to `"main"`) — 要使用的特定模型版本。可以是分支名称、标签名称、提交ID或Git允许的任何标识符。'
- en: '`custom_revision` (`str`, *optional*, defaults to `"main"`) — The specific
    model version to use. It can be a branch name, a tag name, or a commit id similar
    to `revision` when loading a custom pipeline from the Hub. It can be a 🤗 Diffusers
    version when loading a custom pipeline from GitHub, otherwise it defaults to `"main"`
    when loading from the Hub.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`custom_revision` (`str`, *optional*, defaults to `"main"`) — 要使用的特定模型版本。当从Hub加载自定义管道时，可以是分支名称、标签名称或提交ID。当从GitHub加载自定义管道时，可以是🤗
    Diffusers版本，否则在从Hub加载时默认为`"main"`。'
- en: '`mirror` (`str`, *optional*) — Mirror source to resolve accessibility issues
    if you’re downloading a model in China. We do not guarantee the timeliness or
    safety of the source, and you should refer to the mirror site for more information.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mirror` (`str`, *optional*) — 镜像源以解决在中国下载模型时的可访问性问题。我们不保证源的及时性或安全性，您应参考镜像站点获取更多信息。'
- en: '`device_map` (`str` or `Dict[str, Union[int, str, torch.device]]`, *optional*)
    — A map that specifies where each submodule should go. It doesn’t need to be defined
    for each parameter/buffer name; once a given module name is inside, every submodule
    of it will be sent to the same device.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device_map` (`str` or `Dict[str, Union[int, str, torch.device]]`, *optional*)
    — 指定每个子模块应该放在哪里的映射。不需要为每个参数/缓冲区名称定义它；一旦给定模块名称在内部，它的每个子模块都将发送到相同的设备。'
- en: Set `device_map="auto"` to have 🤗 Accelerate automatically compute the most
    optimized `device_map`. For more information about each option see [designing
    a device map](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map).
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置`device_map="auto"`以使🤗 Accelerate自动计算最优化的`device_map`。有关每个选项的更多信息，请参阅[设计设备映射](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map)。
- en: '`max_memory` (`Dict`, *optional*) — A dictionary device identifier for the
    maximum memory. Will default to the maximum memory available for each GPU and
    the available CPU RAM if unset.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_memory` (`Dict`, *optional*) — 用于最大内存的字典设备标识符。如果未设置，将默认为每个GPU和可用CPU RAM的最大内存。'
- en: '`offload_folder` (`str` or `os.PathLike`, *optional*) — The path to offload
    weights if device_map contains the value `"disk"`.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offload_folder` (`str` or `os.PathLike`, *optional*) — 如果`device_map`包含值`"disk"`，则为卸载权重的路径。'
- en: '`offload_state_dict` (`bool`, *optional*) — If `True`, temporarily offloads
    the CPU state dict to the hard drive to avoid running out of CPU RAM if the weight
    of the CPU state dict + the biggest shard of the checkpoint does not fit. Defaults
    to `True` when there is some disk offload.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offload_state_dict` (`bool`, *optional*) — 如果为`True`，则临时将CPU状态字典卸载到硬盘，以避免CPU
    RAM不足，如果CPU状态字典的权重+检查点的最大分片不适合。当存在一些磁盘卸载时，默认为`True`。'
- en: '`low_cpu_mem_usage` (`bool`, *optional*, defaults to `True` if torch version
    >= 1.9.0 else `False`) — Speed up model loading only loading the pretrained weights
    and not initializing the weights. This also tries to not use more than 1x model
    size in CPU memory (including peak memory) while loading the model. Only supported
    for PyTorch >= 1.9.0\. If you are using an older version of PyTorch, setting this
    argument to `True` will raise an error.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`low_cpu_mem_usage` (`bool`, *optional*, defaults to `True` if torch version
    >= 1.9.0 else `False`) — 仅加载预训练权重而不初始化权重以加快模型加载速度。在加载模型时，尝试不使用超过1倍模型大小的CPU内存（包括峰值内存）。仅支持PyTorch
    >= 1.9.0。如果您使用较旧版本的PyTorch，将此参数设置为`True`将引发错误。'
- en: '`use_safetensors` (`bool`, *optional*, defaults to `None`) — If set to `None`,
    the safetensors weights are downloaded if they’re available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_safetensors` (`bool`, *optional*, defaults to `None`) — 如果设置为`None`，则在可用时下载safetensors权重
    **并且** 如果已安装safetensors库。如果设置为`True`，则强制从safetensors权重加载模型。如果设置为`False`，则不加载safetensors权重。'
- en: '`kwargs` (remaining dictionary of keyword arguments, *optional*) — Can be used
    to overwrite load and saveable variables (the pipeline components of the specific
    pipeline class). The overwritten components are passed directly to the pipelines
    `__init__` method. See example below for more information.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs`（剩余的关键字参数字典，*可选*） — 可用于覆盖加载和可保存变量（特定管道类的管道组件）。被覆盖的组件直接传递给管道的`__init__`方法。有关更多信息，请参阅下面的示例。'
- en: '`variant` (`str`, *optional*) — Load weights from a specified variant filename
    such as `"fp16"` or `"ema"`. This is ignored when loading `from_flax`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variant` (`str`, *optional*) — 从指定的变体文件名（如`"fp16"`或`"ema"`）加载权重。在加载`from_flax`时会被忽略。'
- en: Instantiates a text-to-image Pytorch diffusion pipeline from pretrained pipeline
    weight.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 从预训练管道权重实例化一个文本到图像的Pytorch扩散管道。
- en: 'The from_pretrained() method takes care of returning the correct pipeline class
    instance by:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: from_pretrained()方法负责通过以下方式返回正确的管道类实例：
- en: Detect the pipeline class of the pretrained_model_or_path based on the _class_name
    property of its config object
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据其配置对象的_class_name属性检测预训练模型或路径的管道类
- en: Find the text-to-image pipeline linked to the pipeline class using pattern matching
    on pipeline class name.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过对管道类名称进行模式匹配，找到与管道类相关联的文本到图像管道。
- en: If a `controlnet` argument is passed, it will instantiate a [StableDiffusionControlNetPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetPipeline)
    object.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递了一个 `controlnet` 参数，它将实例化一个 [StableDiffusionControlNetPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetPipeline)
    对象。
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，管道设置为评估模式 (`model.eval()`)。
- en: 'If you get the error message below, you need to finetune the weights for your
    downstream task:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '如果收到以下错误消息，则需要为下游任务微调权重:'
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To use private or [gated](https://huggingface.co/docs/hub/models-gated#gated-models)
    models, log-in with `huggingface-cli login`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用私有或[门控](https://huggingface.co/docs/hub/models-gated#gated-models)模型，请使用
    `huggingface-cli login` 登录。
- en: 'Examples:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '示例:'
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '#### `from_pipe`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pipe`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L346)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L346)'
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pipeline` (`DiffusionPipeline`) — an instantiated `DiffusionPipeline` object'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pipeline` (`DiffusionPipeline`) — 一个实例化的 `DiffusionPipeline` 对象'
- en: Instantiates a text-to-image Pytorch diffusion pipeline from another instantiated
    diffusion pipeline class.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个实例化的扩散管道类实例化一个文本到图像 Pytorch 扩散管道。
- en: The from_pipe() method takes care of returning the correct pipeline class instance
    by finding the text-to-image pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: from_pipe() 方法负责通过在管道类名称上进行模式匹配找到与管道类链接的文本到图像管道的正确管道类实例。
- en: All the modules the pipeline contains will be used to initialize the new pipeline
    without reallocating additional memoery.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 管道包含的所有模块将用于初始化新管道，而不重新分配额外的内存。
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，管道设置为评估模式 (`model.eval()`)。
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: AutoPipelineForImage2Image
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AutoPipelineForImage2Image
- en: '### `class diffusers.AutoPipelineForImage2Image`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.AutoPipelineForImage2Image`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L447)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L447)'
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[AutoPipelineForImage2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image)
    is a generic pipeline class that instantiates an image-to-image pipeline class.
    The specific underlying pipeline class is automatically selected from either the
    [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pretrained)
    or [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)
    methods.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[AutoPipelineForImage2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image)
    是一个通用管道类，实例化一个图像到图像管道类。具体的底层管道类会自动从 [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pretrained)
    或 [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)
    方法中选择。'
- en: This class cannot be instantiated using `__init__()` (throws an error).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此类不能使用 `__init__()` 实例化（会抛出错误）。
- en: 'Class attributes:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '类属性:'
- en: '`config_name` (`str`) — The configuration filename that stores the class and
    module names of all the diffusion pipeline’s components.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config_name` (`str`) — 存储所有扩散管道组件的类和模块名称的配置文件名。'
- en: '#### `from_pretrained`'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L472)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L472)'
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) — Can
    be either:'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str` 或 `os.PathLike`, *可选*) — 可以是:'
- en: A string, the *repo id* (for example `CompVis/ldm-text2im-large-256`) of a pretrained
    pipeline hosted on the Hub.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练管道的 *repo id*（例如 `CompVis/ldm-text2im-large-256`），托管在 Hub 上。
- en: A path to a *directory* (for example `./my_pipeline_directory/`) containing
    pipeline weights saved using [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained).
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 *目录* 路径（例如 `./my_pipeline_directory/`），其中包含使用 [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained)
    保存的管道权重。
- en: '`torch_dtype` (`str` or `torch.dtype`, *optional*) — Override the default `torch.dtype`
    and load the model with another dtype. If “auto” is passed, the dtype is automatically
    derived from the model’s weights.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`torch_dtype` (`str` 或 `torch.dtype`, *可选*) — 覆盖默认的 `torch.dtype` 并使用另一种 dtype
    加载模型。如果传递“auto”，dtype 将从模型的权重自动推导。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`, *可选*, 默认为 `False`) — 是否强制（重新）下载模型权重和配置文件，覆盖缓存版本（如果存在）。'
- en: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) — Path to a directory where
    a downloaded pretrained model configuration is cached if the standard cache is
    not used.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`Union[str, os.PathLike]`, *可选*) — 下载的预训练模型配置缓存在标准缓存未使用时的目录路径。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to resume downloading the model weights and configuration files. If set to `False`,
    any incompletely downloaded files are deleted.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`, *可选*, 默认为 `False`) — 是否恢复下载模型权重和配置文件。如果设置为 `False`，则删除任何未完全下载的文件。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`Dict[str, str]`, *可选*) — 一个按协议或端点使用的代理服务器字典，例如，`{''http'': ''foo.bar:3128'',
    ''http://hostname'': ''foo.bar:4012''}`。代理在每个请求上使用。'
- en: '`output_loading_info(bool,` *optional*, defaults to `False`) — Whether or not
    to also return a dictionary containing missing keys, unexpected keys and error
    messages.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_loading_info(bool,` *可选*, 默认为 `False`) — 是否返回一个包含缺失键、意外键和错误消息的字典。'
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) — Whether to only
    load local model weights and configuration files or not. If set to `True`, the
    model won’t be downloaded from the Hub.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_files_only`（`bool`，*可选*，默认为`False`）— 是否仅加载本地模型权重和配置文件。如果设置为`True`，则不会从Hub下载模型。'
- en: '`token` (`str` or *bool*, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token`（`str`或*bool*，*可选*）— 用作远程文件的HTTP bearer授权的令牌。如果为`True`，则使用从`diffusers-cli
    login`生成的令牌（存储在`~/.huggingface`中）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, a commit id, or any identifier allowed
    by Git.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision`（`str`，*可选*，默认为`"main"`）— 要使用的特定模型版本。可以是分支名称、标签名称、提交ID或Git允许的任何标识符。'
- en: '`custom_revision` (`str`, *optional*, defaults to `"main"`) — The specific
    model version to use. It can be a branch name, a tag name, or a commit id similar
    to `revision` when loading a custom pipeline from the Hub. It can be a 🤗 Diffusers
    version when loading a custom pipeline from GitHub, otherwise it defaults to `"main"`
    when loading from the Hub.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`custom_revision`（`str`，*可选*，默认为`"main"`）— 要使用的特定模型版本。可以是分支名称、标签名称或提交ID，类似于从Hub加载自定义管道时的`revision`。在从GitHub加载自定义管道时可以是🤗
    Diffusers版本，否则在从Hub加载时默认为`"main"`。'
- en: '`mirror` (`str`, *optional*) — Mirror source to resolve accessibility issues
    if you’re downloading a model in China. We do not guarantee the timeliness or
    safety of the source, and you should refer to the mirror site for more information.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mirror`（`str`，*可选*）— 镜像源以解决在中国下载模型时的可访问性问题。我们不保证源的及时性或安全性，您应参考镜像站点获取更多信息。'
- en: '`device_map` (`str` or `Dict[str, Union[int, str, torch.device]]`, *optional*)
    — A map that specifies where each submodule should go. It doesn’t need to be defined
    for each parameter/buffer name; once a given module name is inside, every submodule
    of it will be sent to the same device.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device_map`（`str`或`Dict[str，Union[int，str，torch.device]]`，*可选*）— 指定每个子模块应放置在何处的映射。不需要为每个参数/缓冲区名称定义它；一旦给定模块名称在内部，它的每个子模块都将发送到相同的设备。'
- en: Set `device_map="auto"` to have 🤗 Accelerate automatically compute the most
    optimized `device_map`. For more information about each option see [designing
    a device map](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map).
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置`device_map="auto"`以使🤗 Accelerate自动计算最优化的`device_map`。有关每个选项的更多信息，请参见[设计设备映射](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map)。
- en: '`max_memory` (`Dict`, *optional*) — A dictionary device identifier for the
    maximum memory. Will default to the maximum memory available for each GPU and
    the available CPU RAM if unset.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_memory`（`Dict`，*可选*）— 用于最大内存的字典设备标识符。如果未设置，将默认为每个GPU和可用CPU RAM的最大内存。'
- en: '`offload_folder` (`str` or `os.PathLike`, *optional*) — The path to offload
    weights if device_map contains the value `"disk"`.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offload_folder`（`str`或`os.PathLike`，*可选*）— 如果`device_map`包含值`"disk"`，则为卸载权重的路径。'
- en: '`offload_state_dict` (`bool`, *optional*) — If `True`, temporarily offloads
    the CPU state dict to the hard drive to avoid running out of CPU RAM if the weight
    of the CPU state dict + the biggest shard of the checkpoint does not fit. Defaults
    to `True` when there is some disk offload.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offload_state_dict`（`bool`，*可选*）— 如果为`True`，则临时将CPU状态字典卸载到硬盘，以避免CPU RAM的权重
    + 检查点的最大分片不适合的情况。当存在一些磁盘卸载时，默认为`True`。'
- en: '`low_cpu_mem_usage` (`bool`, *optional*, defaults to `True` if torch version
    >= 1.9.0 else `False`) — Speed up model loading only loading the pretrained weights
    and not initializing the weights. This also tries to not use more than 1x model
    size in CPU memory (including peak memory) while loading the model. Only supported
    for PyTorch >= 1.9.0\. If you are using an older version of PyTorch, setting this
    argument to `True` will raise an error.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`low_cpu_mem_usage`（`bool`，*可选*，如果torch版本 >= 1.9.0则默认为`True`，否则为`False`）— 加快模型加载，仅加载预训练权重而不初始化权重。在加载模型时，还尝试不使用超过CPU内存中的1倍模型大小（包括峰值内存）。仅支持PyTorch
    >= 1.9.0。如果您使用较旧版本的PyTorch，将此参数设置为`True`将引发错误。'
- en: '`use_safetensors` (`bool`, *optional*, defaults to `None`) — If set to `None`,
    the safetensors weights are downloaded if they’re available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_safetensors`（`bool`，*可选*，默认为`None`）— 如果设置为`None`，则在可用时下载safetensors权重
    **并且** 如果已安装safetensors库。如果设置为`True`，则模型将强制从safetensors权重加载。如果设置为`False`，则不加载safetensors权重。'
- en: '`kwargs` (remaining dictionary of keyword arguments, *optional*) — Can be used
    to overwrite load and saveable variables (the pipeline components of the specific
    pipeline class). The overwritten components are passed directly to the pipelines
    `__init__` method. See example below for more information.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs`（剩余的关键字参数字典，*可选*）— 可用于覆盖加载和保存变量（特定管道类的管道组件）。被覆盖的组件直接传递给管道的`__init__`方法。有关更多信息，请参见下面的示例。'
- en: '`variant` (`str`, *optional*) — Load weights from a specified variant filename
    such as `"fp16"` or `"ema"`. This is ignored when loading `from_flax`.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variant`（`str`，*可选*）— 从指定的变体文件名（例如`"fp16"`或`"ema"`）加载权重。在加载`from_flax`时会忽略此选项。'
- en: Instantiates a image-to-image Pytorch diffusion pipeline from pretrained pipeline
    weight.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 从预训练管道权重实例化一个图像到图像的Pytorch扩散管道。
- en: 'The from_pretrained() method takes care of returning the correct pipeline class
    instance by:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`from_pretrained()`方法负责通过以下方式返回正确的管道类实例：'
- en: Detect the pipeline class of the pretrained_model_or_path based on the _class_name
    property of its config object
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据其配置对象的_class_name属性检测预训练模型或路径的管道类
- en: Find the image-to-image pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在管道类名称上进行模式匹配，找到与管道类相关联的图像到图像管道。
- en: If a `controlnet` argument is passed, it will instantiate a [StableDiffusionControlNetImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetImg2ImgPipeline)
    object.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递了 `controlnet` 参数，它将实例化一个 [StableDiffusionControlNetImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetImg2ImgPipeline)
    对象。
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，管道设置为评估模式（`model.eval()`）。
- en: 'If you get the error message below, you need to finetune the weights for your
    downstream task:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您收到以下错误消息，则需要为下游任务微调权重：
- en: '[PRE9]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: To use private or [gated](https://huggingface.co/docs/hub/models-gated#gated-models)
    models, log-in with `huggingface-cli login`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用私有或[门控](https://huggingface.co/docs/hub/models-gated#gated-models)模型，请使用
    `huggingface-cli login` 登录。
- en: 'Examples:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE10]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '#### `from_pipe`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pipe`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L619)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L619)'
- en: '[PRE11]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Parameters
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pipeline` (`DiffusionPipeline`) — an instantiated `DiffusionPipeline` object'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pipeline` (`DiffusionPipeline`) — 一个实例化的 `DiffusionPipeline` 对象'
- en: Instantiates a image-to-image Pytorch diffusion pipeline from another instantiated
    diffusion pipeline class.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个已实例化的扩散管道类实例化一个图像到图像的Pytorch扩散管道。
- en: The from_pipe() method takes care of returning the correct pipeline class instance
    by finding the image-to-image pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: from_pipe() 方法负责通过在管道类名称上进行模式匹配找到与管道类链接的图像到图像管道的正确管道类实例。
- en: All the modules the pipeline contains will be used to initialize the new pipeline
    without reallocating additional memoery.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 管道包含的所有模块将用于初始化新管道，而无需重新分配额外的内存。
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，管道设置为评估模式（`model.eval()`）。
- en: 'Examples:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE12]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: AutoPipelineForInpainting
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AutoPipelineForInpainting
- en: '### `class diffusers.AutoPipelineForInpainting`'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.AutoPipelineForInpainting`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L724)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L724)'
- en: '[PRE13]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[AutoPipelineForInpainting](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting)
    is a generic pipeline class that instantiates an inpainting pipeline class. The
    specific underlying pipeline class is automatically selected from either the [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting.from_pretrained)
    or [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting.from_pipe)
    methods.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[AutoPipelineForInpainting](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting)
    是一个通用管道类，实例化一个修复管道类。具体的底层管道类会自动从 [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting.from_pretrained)
    或 [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting.from_pipe)
    方法中选择。'
- en: This class cannot be instantiated using `__init__()` (throws an error).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 此类不能使用 `__init__()` 实例化（会抛出错误）。
- en: 'Class attributes:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 类属性：
- en: '`config_name` (`str`) — The configuration filename that stores the class and
    module names of all the diffusion pipeline’s components.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config_name` (`str`) — 存储所有扩散管道组件类和模块名称的配置文件名。'
- en: '#### `from_pretrained`'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L749)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L749)'
- en: '[PRE14]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Parameters
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) — Can
    be either:'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) — 可以是：'
- en: A string, the *repo id* (for example `CompVis/ldm-text2im-large-256`) of a pretrained
    pipeline hosted on the Hub.
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练管道的*repo id*（例如 `CompVis/ldm-text2im-large-256`）。
- en: A path to a *directory* (for example `./my_pipeline_directory/`) containing
    pipeline weights saved using [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained).
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*目录*的路径（例如 `./my_pipeline_directory/`），其中包含使用 [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained)
    保存的管道权重。
- en: '`torch_dtype` (`str` or `torch.dtype`, *optional*) — Override the default `torch.dtype`
    and load the model with another dtype. If “auto” is passed, the dtype is automatically
    derived from the model’s weights.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`torch_dtype` (`str` or `torch.dtype`, *optional*) — 覆盖默认的 `torch.dtype` 并使用另一种数据类型加载模型。如果传递“auto”，数据类型将自动从模型的权重中派生。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`, *optional*, defaults to `False`) — 是否强制（重新）下载模型权重和配置文件，覆盖缓存版本（如果存在）。'
- en: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) — Path to a directory where
    a downloaded pretrained model configuration is cached if the standard cache is
    not used.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) — 下载预训练模型配置的缓存路径，如果不使用标准缓存。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to resume downloading the model weights and configuration files. If set to `False`,
    any incompletely downloaded files are deleted.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`, *optional*, defaults to `False`) — 是否恢复下载模型权重和配置文件。如果设置为
    `False`，则删除任何未完全下载的文件。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`Dict[str, str]`, *optional*) — 一个按协议或端点使用的代理服务器字典，例如，`{''http'':
    ''foo.bar:3128'', ''http://hostname'': ''foo.bar:4012''}`。代理服务器在每个请求上使用。'
- en: '`output_loading_info(bool,` *optional*, defaults to `False`) — Whether or not
    to also return a dictionary containing missing keys, unexpected keys and error
    messages.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_loading_info(bool,` *optional*, defaults to `False`) — 是否返回包含缺失键、意外键和错误消息的字典。'
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) — Whether to only
    load local model weights and configuration files or not. If set to `True`, the
    model won’t be downloaded from the Hub.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_files_only` (`bool`, *optional*, 默认为 `False`) — 是否仅加载本地模型权重和配置文件。如果设置为
    `True`，模型将不会从 Hub 下载。'
- en: '`token` (`str` or *bool*, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str` 或 *bool*, *optional*) — 用作远程文件的 HTTP bearer 授权的令牌。如果为 `True`，则使用从
    `diffusers-cli login` 生成的令牌（存储在 `~/.huggingface` 中）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, a commit id, or any identifier allowed
    by Git.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *optional*, 默认为 `"main"`) — 要使用的特定模型版本。它可以是分支名称、标签名称、提交
    ID 或 Git 允许的任何标识符。'
- en: '`custom_revision` (`str`, *optional*, defaults to `"main"`) — The specific
    model version to use. It can be a branch name, a tag name, or a commit id similar
    to `revision` when loading a custom pipeline from the Hub. It can be a 🤗 Diffusers
    version when loading a custom pipeline from GitHub, otherwise it defaults to `"main"`
    when loading from the Hub.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`custom_revision` (`str`, *optional*, 默认为 `"main"`) — 要使用的特定模型版本。它可以是分支名称、标签名称或提交
    ID，类似于从 Hub 加载自定义管道时的 `revision`。当从 GitHub 加载自定义管道时，它可以是一个 🤗 Diffusers 版本，否则在从
    Hub 加载时默认为 `"main"`。'
- en: '`mirror` (`str`, *optional*) — Mirror source to resolve accessibility issues
    if you’re downloading a model in China. We do not guarantee the timeliness or
    safety of the source, and you should refer to the mirror site for more information.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mirror` (`str`, *optional*) — 镜像源以解决在中国下载模型时的可访问性问题。我们不保证源的及时性或安全性，您应参考镜像站点获取更多信息。'
- en: '`device_map` (`str` or `Dict[str, Union[int, str, torch.device]]`, *optional*)
    — A map that specifies where each submodule should go. It doesn’t need to be defined
    for each parameter/buffer name; once a given module name is inside, every submodule
    of it will be sent to the same device.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device_map` (`str` 或 `Dict[str, Union[int, str, torch.device]]`, *optional*)
    — 指定每个子模块应该去的映射。不需要为每个参数/缓冲器名称定义；一旦给定模块名称在内部，它的每个子模块都将发送到相同的设备。'
- en: Set `device_map="auto"` to have 🤗 Accelerate automatically compute the most
    optimized `device_map`. For more information about each option see [designing
    a device map](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map).
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置 `device_map="auto"` 以使 🤗 Accelerate 自动计算最优化的 `device_map`。有关每个选项的更多信息，请参见[设计设备映射](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map)。
- en: '`max_memory` (`Dict`, *optional*) — A dictionary device identifier for the
    maximum memory. Will default to the maximum memory available for each GPU and
    the available CPU RAM if unset.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_memory` (`Dict`, *optional*) — 用于最大内存的字典设备标识符。如果未设置，将默认为每个GPU可用的最大内存和可用的CPU
    RAM。'
- en: '`offload_folder` (`str` or `os.PathLike`, *optional*) — The path to offload
    weights if device_map contains the value `"disk"`.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offload_folder` (`str` 或 `os.PathLike`, *optional*) — 如果 device_map 包含值 `"disk"`，则是卸载权重的路径。'
- en: '`offload_state_dict` (`bool`, *optional*) — If `True`, temporarily offloads
    the CPU state dict to the hard drive to avoid running out of CPU RAM if the weight
    of the CPU state dict + the biggest shard of the checkpoint does not fit. Defaults
    to `True` when there is some disk offload.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offload_state_dict` (`bool`, *optional*) — 如果为 `True`，则临时将 CPU 状态字典转移到硬盘，以避免
    CPU RAM 不足，如果 CPU 状态字典的权重 + 检查点的最大分片的权重不适合。当存在一些磁盘卸载时，默认为 `True`。'
- en: '`low_cpu_mem_usage` (`bool`, *optional*, defaults to `True` if torch version
    >= 1.9.0 else `False`) — Speed up model loading only loading the pretrained weights
    and not initializing the weights. This also tries to not use more than 1x model
    size in CPU memory (including peak memory) while loading the model. Only supported
    for PyTorch >= 1.9.0\. If you are using an older version of PyTorch, setting this
    argument to `True` will raise an error.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`low_cpu_mem_usage` (`bool`, *optional*, 如果 torch 版本 >= 1.9.0 则默认为 `True`，否则为
    `False`) — 加速模型加载，仅加载预训练权重而不初始化权重。这也尝试在加载模型时不使用超过 CPU 内存中的 1x 模型大小（包括峰值内存）。仅支持
    PyTorch >= 1.9.0。如果您使用较旧版本的 PyTorch，将此参数设置为 `True` 将引发错误。'
- en: '`use_safetensors` (`bool`, *optional*, defaults to `None`) — If set to `None`,
    the safetensors weights are downloaded if they’re available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_safetensors` (`bool`, *optional*, 默认为 `None`) — 如果设置为 `None`，则在可用时下载 safetensors
    权重 **并且** 如果已安装 safetensors 库。如果设置为 `True`，则强制从 safetensors 权重加载模型。如果设置为 `False`，则不加载
    safetensors 权重。'
- en: '`kwargs` (remaining dictionary of keyword arguments, *optional*) — Can be used
    to overwrite load and saveable variables (the pipeline components of the specific
    pipeline class). The overwritten components are passed directly to the pipelines
    `__init__` method. See example below for more information.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs`（剩余的关键字参数字典，*optional*） — 可用于覆盖加载和可保存变量（特定管道类的管道组件）。被覆盖的组件将直接传递给管道的
    `__init__` 方法。有关更多信息，请参见下面的示例。'
- en: '`variant` (`str`, *optional*) — Load weights from a specified variant filename
    such as `"fp16"` or `"ema"`. This is ignored when loading `from_flax`.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variant` (`str`, *optional*) — 从指定的变体文件名（如 `"fp16"` 或 `"ema"`）加载权重。在加载 `from_flax`
    时会忽略此选项。'
- en: Instantiates a inpainting Pytorch diffusion pipeline from pretrained pipeline
    weight.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 从预训练管道权重实例化一个修复 Pytorch 扩散管道。
- en: 'The from_pretrained() method takes care of returning the correct pipeline class
    instance by:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: from_pretrained() 方法负责通过返回正确的管道类实例：
- en: Detect the pipeline class of the pretrained_model_or_path based on the _class_name
    property of its config object
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于其配置对象的_class_name属性，检测pretrained_model_or_path的管道类。
- en: Find the inpainting pipeline linked to the pipeline class using pattern matching
    on pipeline class name.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用管道类名称上的模式匹配找到与管道类相关联的修复管道。
- en: If a `controlnet` argument is passed, it will instantiate a [StableDiffusionControlNetInpaintPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetInpaintPipeline)
    object.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递了 `controlnet` 参数，它将实例化一个 [StableDiffusionControlNetInpaintPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetInpaintPipeline)
    对象。
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，管道被设置为评估模式 (`model.eval()`)。
- en: 'If you get the error message below, you need to finetune the weights for your
    downstream task:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您收到下面的错误消息，则需要微调权重以适应您的下游任务：
- en: '[PRE15]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: To use private or [gated](https://huggingface.co/docs/hub/models-gated#gated-models)
    models, log-in with `huggingface-cli login`.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用私有或 [门控](https://huggingface.co/docs/hub/models-gated#gated-models) 模型，请使用
    `huggingface-cli login` 登录。
- en: 'Examples:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE16]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '#### `from_pipe`'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pipe`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L895)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L895)'
- en: '[PRE17]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Parameters
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pipeline` (`DiffusionPipeline`) — an instantiated `DiffusionPipeline` object'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pipeline` (`DiffusionPipeline`) — 一个实例化的 `DiffusionPipeline` 对象'
- en: Instantiates a inpainting Pytorch diffusion pipeline from another instantiated
    diffusion pipeline class.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一个实例化的扩散管道类实例化一个修补 Pytorch 扩散管道。
- en: The from_pipe() method takes care of returning the correct pipeline class instance
    by finding the inpainting pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: from_pipe() 方法负责通过在管道类名称上进行模式匹配，找到与管道类相关联的修补管道，从而返回正确的管道类实例。
- en: All the modules the pipeline class contain will be used to initialize the new
    pipeline without reallocating additional memoery.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 管道类包含的所有模块将用于初始化新管道，而不需要重新分配额外的内存。
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，管道被设置为评估模式 (`model.eval()`)。
- en: 'Examples:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE18]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
