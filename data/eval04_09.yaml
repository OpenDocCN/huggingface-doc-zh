- en: Using the evaluator
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用评估器
- en: 'Original text: [https://huggingface.co/docs/evaluate/base_evaluator](https://huggingface.co/docs/evaluate/base_evaluator)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/evaluate/base_evaluator](https://huggingface.co/docs/evaluate/base_evaluator)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The `Evaluator` classes allow to evaluate a triplet of model, dataset, and metric.
    The models wrapped in a pipeline, responsible for handling all preprocessing and
    post-processing and out-of-the-box, `Evaluator`s support transformers pipelines
    for the supported tasks, but custom pipelines can be passed, as showcased in the
    section [Using the `evaluator` with custom pipelines](custom_evaluator).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`Evaluator`类允许评估模型、数据集和度量的三元组。包装在管道中的模型负责处理所有预处理和后处理，并且`Evaluator`支持支持任务的transformers管道，但可以传递自定义管道，如在[使用自定义管道与评估器](custom_evaluator)部分中展示的那样。'
- en: 'Currently supported tasks are:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当前支持的任务有：
- en: '`"text-classification"`: will use the [TextClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TextClassificationEvaluator).'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"text-classification"：将使用[TextClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TextClassificationEvaluator)。'
- en: '`"token-classification"`: will use the [TokenClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TokenClassificationEvaluator).'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"token-classification"：将使用[TokenClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TokenClassificationEvaluator)。'
- en: '`"question-answering"`: will use the [QuestionAnsweringEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.QuestionAnsweringEvaluator).'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"question-answering"：将使用[QuestionAnsweringEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.QuestionAnsweringEvaluator)。'
- en: '`"image-classification"`: will use the [ImageClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.ImageClassificationEvaluator).'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"image-classification"：将使用[ImageClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.ImageClassificationEvaluator)。'
- en: '`"text-generation"`: will use the [TextGenerationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TextGenerationEvaluator).'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"text-generation"：将使用[TextGenerationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TextGenerationEvaluator)。'
- en: '`"text2text-generation"`: will use the [Text2TextGenerationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.Text2TextGenerationEvaluator).'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"text2text-generation"：将使用[Text2TextGenerationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.Text2TextGenerationEvaluator)。'
- en: '`"summarization"`: will use the [SummarizationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.SummarizationEvaluator).'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"summarization"：将使用[SummarizationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.SummarizationEvaluator)。'
- en: '`"translation"`: will use the [TranslationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TranslationEvaluator).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"translation"：将使用[TranslationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TranslationEvaluator)。'
- en: '`"automatic-speech-recognition"`: will use the [AutomaticSpeechRecognitionEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.AutomaticSpeechRecognitionEvaluator).'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"automatic-speech-recognition"：将使用[AutomaticSpeechRecognitionEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.AutomaticSpeechRecognitionEvaluator)。'
- en: To run an `Evaluator` with several tasks in a single call, use the [EvaluationSuite](evaluation_suite),
    which runs evaluations on a collection of `SubTask`s.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要在单个调用中运行具有多个任务的`Evaluator`，请使用[EvaluationSuite](evaluation_suite)，它在一组`SubTask`上运行评估。
- en: Each task has its own set of requirements for the dataset format and pipeline
    output, make sure to check them out for your custom use case. Let’s have a look
    at some of them and see how you can use the evaluator to evalute a single or multiple
    of models, datasets, and metrics at the same time.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每个任务都有自己的数据集格式和管道输出的要求，确保为您的自定义用例检查它们。让我们看看其中一些，并了解如何使用评估器同时评估单个或多个模型、数据集和度量。
- en: Text classification
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本分类
- en: 'The text classification evaluator can be used to evaluate text models on classification
    datasets such as IMDb. Beside the model, data, and metric inputs it takes the
    following optional inputs:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 文本分类评估器可用于评估文本模型在分类数据集（如IMDb）上的性能。除了模型、数据和度量输入外，它还接受以下可选输入：
- en: '`input_column="text"`: with this argument the column with the data for the
    pipeline can be specified.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"input_column="text""：使用此参数可以指定管道数据的列。'
- en: '`label_column="label"`: with this argument the column with the labels for the
    evaluation can be specified.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"label_column="label""：使用此参数可以指定用于评估的标签列。'
- en: '`label_mapping=None`: the label mapping aligns the labels in the pipeline output
    with the labels need for evaluation. E.g. the labels in `label_column` can be
    integers (`0`/`1`) whereas the pipeline can produce label names such as `"positive"`/`"negative"`.
    With that dictionary the pipeline outputs are mapped to the labels.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"label_mapping=None"：标签映射将使管道输出中的标签与评估所需的标签对齐。例如，标签列中的标签可以是整数（`0`/`1`），而管道可以生成标签名称，如`"positive"`/`"negative"`。通过该字典，管道输出被映射到标签。'
- en: By default the `"accuracy"` metric is computed.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下计算"accuracy"度量。
- en: Evaluate models on the Hub
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Hub上评估模型
- en: 'There are several ways to pass a model to the evaluator: you can pass the name
    of a model on the Hub, you can load a `transformers` model and pass it to the
    evaluator or you can pass an initialized `transformers.Pipeline`. Alternatively
    you can pass any callable function that behaves like a `pipeline` call for the
    task in any framework.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以将模型传递给评估器：您可以传递Hub上模型的名称，可以加载`transformers`模型并将其传递给评估器，也可以传递已初始化的`transformers.Pipeline`。或者，您可以传递任何行为类似于任何框架中任务的`pipeline`调用的可调用函数。
- en: 'So any of the following works:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 因此以下任何一种都可以：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Without specifying a device, the default for model inference will be the first
    GPU on the machine if one is available, and else CPU. If you want to use a specific
    device you can pass `device` to `compute` where -1 will use the GPU and a positive
    integer (starting with 0) will use the associated CUDA device.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不指定设备，默认情况下，模型推理将使用机器上的第一个GPU（如果有的话），否则使用CPU。如果要使用特定设备，可以将`device`传递给`compute`，其中-1将使用GPU，正整数（从0开始）将使用相关的CUDA设备。
- en: 'The results will look as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that evaluation results include both the requested metric, and information
    about the time it took to obtain predictions through the pipeline.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，评估结果包括请求的指标以及通过管道获取预测所花费的时间的信息。
- en: 'The time performances can give useful indication on model speed for inference
    but should be taken with a grain of salt: they include all the processing that
    goes on in the pipeline. This may include tokenizing, post-processing, that may
    be different depending on the model. Furthermore, it depends a lot on the hardware
    you are running the evaluation on and you may be able to improve the performance
    by optimizing things like the batch size.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 时间性能可以为推理速度提供有用的指示，但应该谨慎对待：它们包括管道中进行的所有处理。这可能包括标记化、后处理，这可能因模型而异。此外，它在您运行评估的硬件上有很大的依赖性，您可以通过优化诸如批处理大小之类的内容来提高性能。
- en: Evaluate multiple metrics
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评估多个指标
- en: 'With the [combine()](/docs/evaluate/v0.4.0/en/package_reference/main_classes#evaluate.combine)
    function one can bundle several metrics into an object that behaves like a single
    metric. We can use this to evaluate several metrics at once with the evaluator:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[combine()](/docs/evaluate/v0.4.0/en/package_reference/main_classes#evaluate.combine)函数，可以将几个指标捆绑到一个行为像单个指标的对象中。我们可以使用这个来一次性评估几个指标：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The results will look as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next let’s have a look at token classification.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来让我们看一下标记分类。
- en: Token Classification
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标记分类
- en: 'With the token classification evaluator one can evaluate models for tasks such
    as NER or POS tagging. It has the following specific arguments:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用标记分类评估器，可以评估诸如NER或POS标记等任务的模型。它具有以下特定参数：
- en: '`input_column="text"`: with this argument the column with the data for the
    pipeline can be specified.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_column="text"`: 使用此参数可以指定用于管道的数据列。'
- en: '`label_column="label"`: with this argument the column with the labels for the
    evaluation can be specified.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_column="label"`: 使用此参数可以指定用于评估的标签列。'
- en: '`label_mapping=None`: the label mapping aligns the labels in the pipeline output
    with the labels need for evaluation. E.g. the labels in `label_column` can be
    integers (`0`/`1`) whereas the pipeline can produce label names such as `"positive"`/`"negative"`.
    With that dictionary the pipeline outputs are mapped to the labels.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_mapping=None`: 标签映射将管道输出中的标签与评估所需的标签对齐。例如，`label_column`中的标签可以是整数（`0`/`1`），而管道可以生成标签名称，如`"positive"`/`"negative"`。通过该字典，管道输出被映射到标签。'
- en: '`join_by=" "`: While most datasets are already tokenized the pipeline expects
    a string. Thus the tokens need to be joined before passing to the pipeline. By
    default they are joined with a whitespace.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`join_by=" "`: 虽然大多数数据集已经被标记，但管道期望一个字符串。因此，在传递给管道之前，需要将标记连接起来。默认情况下，它们用空格连接。'
- en: Let’s have a look how we can use the evaluator to benchmark several models.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用评估器来对比几个模型。
- en: Benchmarking several models
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对多个模型进行基准测试
- en: 'Here is an example where several models can be compared thanks to the `evaluator`
    in only a few lines of code, abstracting away the preprocessing, inference, postprocessing,
    metric computation:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例，几行代码就可以比较几个模型，这要归功于`evaluator`，它抽象了预处理、推理、后处理、度量计算：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The result is a table that looks like this:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个看起来像这样的表格：
- en: '| model | overall_f1 | overall_accuracy | total_time_in_seconds | samples_per_second
    | latency_in_seconds |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| model | overall_f1 | overall_accuracy | total_time_in_seconds | samples_per_second
    | latency_in_seconds |'
- en: '| :-- | --: | --: | --: | --: | --: |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| :-- | --: | --: | --: | --: | --: |'
- en: '| Jorgeutd/albert-base-v2-finetuned-ner | 0.941 | 0.989 | 4.515 | 221.468 |
    0.005 |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| Jorgeutd/albert-base-v2-finetuned-ner | 0.941 | 0.989 | 4.515 | 221.468 |
    0.005 |'
- en: '| dbmdz/bert-large-cased-finetuned-conll03-english | 0.962 | 0.881 | 11.648
    | 85.850 | 0.012 |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| dbmdz/bert-large-cased-finetuned-conll03-english | 0.962 | 0.881 | 11.648
    | 85.850 | 0.012 |'
- en: '| dbmdz/electra-large-discriminator-finetuned-conll03-english | 0.965 | 0.881
    | 11.456 | 87.292 | 0.011 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| dbmdz/electra-large-discriminator-finetuned-conll03-english | 0.965 | 0.881
    | 11.456 | 87.292 | 0.011 |'
- en: '| elastic/distilbert-base-uncased-finetuned-conll03-english | 0.940 | 0.989
    | 2.318 | 431.378 | 0.002 |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| elastic/distilbert-base-uncased-finetuned-conll03-english | 0.940 | 0.989
    | 2.318 | 431.378 | 0.002 |'
- en: '| gunghio/distilbert-base-multilingual-cased-finetuned-conll2003-ner | 0.947
    | 0.991 | 2.376 | 420.873 | 0.002 |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| gunghio/distilbert-base-multilingual-cased-finetuned-conll2003-ner | 0.947
    | 0.991 | 2.376 | 420.873 | 0.002 |'
- en: '| philschmid/distilroberta-base-ner-conll2003 | 0.961 | 0.994 | 2.436 | 410.579
    | 0.002 |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| philschmid/distilroberta-base-ner-conll2003 | 0.961 | 0.994 | 2.436 | 410.579
    | 0.002 |'
- en: '| xlm-roberta-large-finetuned-conll03-english | 0.969 | 0.882 | 11.996 | 83.359
    | 0.012 |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| xlm-roberta-large-finetuned-conll03-english | 0.969 | 0.882 | 11.996 | 83.359
    | 0.012 |'
- en: Visualizing results
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视化结果
- en: 'You can feed in the `results` list above into the `plot_radar()` function to
    visualize different aspects of their performance and choose the model that is
    the best fit, depending on the metric(s) that are relevant to your use case:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将上面的`results`列表输入到`plot_radar()`函数中，以可视化它们的性能的不同方面，并选择最适合的模型，具体取决于与您的用例相关的指标。
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/c3518aca067a8cd6a7da9de34fdc0dcb.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c3518aca067a8cd6a7da9de34fdc0dcb.png)'
- en: Don’t forget to specify `invert_range` for metrics for which smaller is better
    (such as the case for latency in seconds).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记为那些较小更好的指标（比如秒级的延迟）指定`invert_range`。
- en: If you want to save the plot locally, you can use the `plot.savefig()` function
    with the option `bbox_inches='tight'`, to make sure no part of the image gets
    cut off.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要将图保存在本地，可以使用`plot.savefig()`函数，并使用选项`bbox_inches='tight'`，以确保图像的任何部分都不会被裁剪掉。
- en: Question Answering
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问答
- en: 'With the question-answering evaluator one can evaluate models for QA without
    needing to worry about the complicated pre- and post-processing that’s required
    for these models. It has the following specific arguments:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用问答评估器，可以评估QA模型，而无需担心这些模型所需的复杂预处理和后处理。它具有以下特定参数：
- en: '`question_column="question"`: the name of the column containing the question
    in the dataset'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`question_column="question"`：数据集中包含问题的列的名称'
- en: '`context_column="context"`: the name of the column containing the context'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context_column="context"`：包含上下文的列的名称'
- en: '`id_column="id"`: the name of the column cointaing the identification field
    of the question and answer pair'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id_column="id"`：包含问题和答案对的标识字段的列的名称'
- en: '`label_column="answers"`: the name of the column containing the answers'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_column="answers"`：包含答案的列的名称'
- en: '`squad_v2_format=None`: whether the dataset follows the format of squad_v2
    dataset where a question may have no answer in the context. If this parameter
    is not provided, the format will be automatically inferred.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`squad_v2_format=None`：数据集是否遵循squad_v2数据集的格式，其中问题可能在上下文中没有答案。如果未提供此参数，则将自动推断格式。'
- en: Let’s have a look how we can evaluate QA models and compute confidence intervals
    at the same time.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何同时评估QA模型并计算置信区间。
- en: Confidence intervals
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 置信区间
- en: Every evaluator comes with the options to compute confidence intervals using
    [bootstrapping](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).
    Simply pass `strategy="bootstrap"` and set the number of resanmples with `n_resamples`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 每个评估器都提供使用[bootstrapping](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)计算置信区间的选项。只需传递`strategy="bootstrap"`并设置重新采样的次数为`n_resamples`。
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Results include confidence intervals as well as error estimates as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 结果包括置信区间以及以下的误差估计：
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Image classification
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像分类
- en: 'With the image classification evaluator we can evaluate any image classifier.
    It uses the same keyword arguments at the text classifier:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用图像分类评估器，我们可以评估任何图像分类器。它使用与文本分类器相同的关键字参数：
- en: '`input_column="image"`: the name of the column containing the images as PIL
    ImageFile'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_column="image"`：包含图像的列的名称为PIL ImageFile'
- en: '`label_column="label"`: the name of the column containing the labels'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_column="label"`：包含标签的列的名称'
- en: '`label_mapping=None`: We want to map class labels defined by the model in the
    pipeline to values consistent with those defined in the `label_column`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_mapping=None`：我们希望将流水线中模型定义的类标签映射到与`label_column`中定义的一致的值'
- en: Let’s have a look at how can evaluate image classification models on large datasets.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看如何在大型数据集上评估图像分类模型。
- en: Handling large datasets
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理大型数据集
- en: The evaluator can be used on large datasets! Below, an example shows how to
    use it on ImageNet-1k for image classification. Beware that this example will
    require to download ~150 GB.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 评估器可以用于大型数据集！下面，一个示例展示了如何在ImageNet-1k上进行图像分类评估。请注意，此示例将需要下载约150 GB。
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Since we are using `datasets` to store data we make use of a technique called
    memory mappings. This means that the dataset is never fully loaded into memory
    which saves a lot of RAM. Running the above code only uses roughly 1.5 GB of RAM
    while the validation split is more than 30 GB big.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用`datasets`来存储数据，我们利用一种称为内存映射的技术。这意味着数据集永远不会完全加载到内存中，从而节省了大量RAM。运行上述代码仅使用大约1.5
    GB的RAM，而验证拆分的大小超过30 GB。
