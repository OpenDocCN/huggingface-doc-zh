- en: EulerDiscreteScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EulerDiscreteScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/euler](https://huggingface.co/docs/diffusers/api/schedulers/euler)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/docs/diffusers/api/schedulers/euler](https://huggingface.co/docs/diffusers/api/schedulers/euler)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The Euler scheduler (Algorithm 2) is from the [Elucidating the Design Space
    of Diffusion-Based Generative Models](https://huggingface.co/papers/2206.00364)
    paper by Karras et al. This is a fast scheduler which can often generate good
    outputs in 20-30 steps. The scheduler is based on the original [k-diffusion](https://github.com/crowsonkb/k-diffusion/blob/481677d114f6ea445aa009cf5bd7a9cdee909e47/k_diffusion/sampling.py#L51)
    implementation by [Katherine Crowson](https://github.com/crowsonkb/).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Euler 调度程序（算法 2）来自 Karras 等人的[Elucidating the Design Space of Diffusion-Based
    Generative Models](https://huggingface.co/papers/2206.00364) 论文。这是一个快速调度程序，通常可以在
    20-30 步内生成良好的输出。该调度程序基于 [k-diffusion](https://github.com/crowsonkb/k-diffusion/blob/481677d114f6ea445aa009cf5bd7a9cdee909e47/k_diffusion/sampling.py#L51)
    的原始实现，由 [Katherine Crowson](https://github.com/crowsonkb/) 实现。
- en: EulerDiscreteScheduler
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EulerDiscreteScheduler
- en: '### `class diffusers.EulerDiscreteScheduler`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.EulerDiscreteScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L132)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L132)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_train_timesteps` (`int`, 默认为 1000) — 训练模型的扩散步数。'
- en: '`beta_start` (`float`, defaults to 0.0001) — The starting `beta` value of inference.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_start` (`float`, 默认为 0.0001) — 推理的起始 `beta` 值。'
- en: '`beta_end` (`float`, defaults to 0.02) — The final `beta` value.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_end` (`float`, 默认为 0.02) — 最终的 `beta` 值。'
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`
    or `scaled_linear`.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_schedule` (`str`, 默认为 `"linear"`) — beta 计划，从 beta 范围到用于步进模型的一系列 beta
    的映射。选择 `linear` 或 `scaled_linear`。'
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trained_betas` (`np.ndarray`, *可选*) — 直接传递一个 beta 数组给构造函数，以绕过 `beta_start`
    和 `beta_end`。'
- en: '`prediction_type` (`str`, defaults to `epsilon`, *optional*) — Prediction type
    of the scheduler function; can be `epsilon` (predicts the noise of the diffusion
    process), `sample` (directly predicts the noisy sample`) or` v_prediction` (see
    section 2.4 of [Imagen Video](https://imagen.research.google/video/paper.pdf)
    paper).'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prediction_type` (`str`, 默认为 `epsilon`, *可选*) — 调度程序函数的预测类型；可以是 `epsilon`（预测扩散过程的噪声）、`sample`（直接预测有噪声的样本）或
    `v_prediction`（参见[Imagen Video](https://imagen.research.google/video/paper.pdf)
    论文的第 2.4 节）。'
- en: '`interpolation_type(str,` defaults to `"linear"`, *optional*) — The interpolation
    type to compute intermediate sigmas for the scheduler denoising steps. Should
    be on of `"linear"` or `"log_linear"`.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`interpolation_type(str,` 默认为 `"linear"`, *可选*) — 用于计算调度程序去噪步骤的中间 sigma 的插值类型。应为
    `"linear"` 或 `"log_linear"` 中的一个。'
- en: '`use_karras_sigmas` (`bool`, *optional*, defaults to `False`) — Whether to
    use Karras sigmas for step sizes in the noise schedule during the sampling process.
    If `True`, the sigmas are determined according to a sequence of noise levels {σi}.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_karras_sigmas` (`bool`, *可选*, 默认为 `False`) — 是否在采样过程中使用 Karras sigmas
    作为噪声计划中的步长。如果为 `True`，则根据噪声级别序列 {σi} 确定 sigmas。'
- en: '`timestep_spacing` (`str`, defaults to `"linspace"`) — The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep_spacing` (`str`, 默认为 `"linspace"`) — 时间步长应该如何缩放的方式。有关更多信息，请参考[Common
    Diffusion Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)
    的表2。'
- en: '`steps_offset` (`int`, defaults to 0) — An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use step 0 for the previous alpha product like in Stable Diffusion.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`steps_offset` (`int`, 默认为 0) — 添加到推理步骤的偏移量。您可以使用 `offset=1` 和 `set_alpha_to_one=False`
    的组合，使最后一步使用前一个 alpha 乘积的步骤 0，就像在 Stable Diffusion 中一样。'
- en: '`rescale_betas_zero_snr` (`bool`, defaults to `False`) — Whether to rescale
    the betas to have zero terminal SNR. This enables the model to generate very bright
    and dark samples instead of limiting it to samples with medium brightness. Loosely
    related to [`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506).'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rescale_betas_zero_snr` (`bool`, 默认为 `False`) — 是否重新缩放 beta 以使终端 SNR 为零。这使模型能够生成非常明亮和非常暗的样本，而不仅限于中等亮度的样本。与
    [`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506)
    loosely 相关。'
- en: Euler scheduler.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Euler 调度程序。
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型继承自 [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    和 [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。检查超类文档以了解库为所有调度程序实现的通用方法，例如加载和保存。
- en: '#### `scale_model_input`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L258)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L258)'
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 输入样本。'
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`, *可选*) — 扩散链中的当前时间步长。'
- en: Returns
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一个缩放后的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep. Scales the denoising model input
    by `(sigma**2 + 1) ** 0.5` to match the Euler algorithm.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度程序可以互换。通过 `(sigma**2 + 1) ** 0.5` 缩放去噪模型输入以匹配 Euler
    算法。
- en: '#### `set_timesteps`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L284)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L284)'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_inference_steps` (`int`) — 在使用预训练模型生成样本时使用的扩散步骤数。'
- en: '`device` (`str` or `torch.device`, *optional*) — The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`str`或`torch.device`，*可选*) — 将时间步移动到的设备。如果为`None`，则不移动时间步。'
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于扩散链的离散时间步长（在推断之前运行）。
- en: '#### `step`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L413)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L413)'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`float`) — The current discrete timestep in the diffusion chain.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`float`) — 扩散链中当前的离散时间步长。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 扩散过程创建的当前样本实例。'
- en: '`s_churn` (`float`) —'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_churn` (`float`) —'
- en: '`s_tmin` (`float`) —'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_tmin` (`float`) —'
- en: '`s_tmax` (`float`) —'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_tmax` (`float`) —'
- en: '`s_noise` (`float`, defaults to 1.0) — Scaling factor for noise added to the
    sample.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_noise` (`float`，默认为1.0) — 添加到样本的噪声的缩放因子。'
- en: '`generator` (`torch.Generator`, *optional*) — A random number generator.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generator` (`torch.Generator`, *可选*) — 一个随机数生成器。'
- en: '`return_dict` (`bool`) — Whether or not to return a [EulerDiscreteSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput)
    or tuple.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`) — 是否返回[EulerDiscreteSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput)或元组。'
- en: Returns
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '[EulerDiscreteSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput)
    or `tuple`'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[EulerDiscreteSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput)或`tuple`'
- en: If return_dict is `True`, [EulerDiscreteSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果return_dict为`True`，则返回[EulerDiscreteSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput)，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE从上一个时间步预测样本。此函数从学习模型输出（通常是预测的噪声）传播扩散过程。
- en: EulerDiscreteSchedulerOutput
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EulerDiscreteSchedulerOutput
- en: '### `class diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput`'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.scheduling_euler_discrete.EulerDiscreteSchedulerOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L31)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_euler_discrete.py#L31)'
- en: '[PRE4]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample `(x_{t-1})` of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prev_sample` (`torch.FloatTensor`，形状为`(batch_size, num_channels, height, width)`，用于图像)
    — 计算上一个时间步的样本`(x_{t-1})`。`prev_sample` 应该在去噪循环中作为下一个模型输入使用。'
- en: '`pred_original_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels,
    height, width)` for images) — The predicted denoised sample `(x_{0})` based on
    the model output from the current timestep. `pred_original_sample` can be used
    to preview progress or for guidance.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pred_original_sample` (`torch.FloatTensor`，形状为`(batch_size, num_channels,
    height, width)`，用于图像) — 基于当前时间步的模型输出预测的去噪样本`(x_{0})`。`pred_original_sample`可用于预览进度或指导。'
- en: Output class for the scheduler’s `step` function output.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 调度程序的`step`函数输出的输出类。
