- en: Table Classes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表类
- en: 'Original text: [https://huggingface.co/docs/datasets/package_reference/table_classes](https://huggingface.co/docs/datasets/package_reference/table_classes)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/datasets/package_reference/table_classes](https://huggingface.co/docs/datasets/package_reference/table_classes)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Each `Dataset` object is backed by a PyArrow Table. A Table can be loaded from
    either the disk (memory mapped) or in memory. Several Table types are available,
    and they all inherit from [table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每个`Dataset`对象都由PyArrow Table支持。表可以从磁盘（内存映射）或内存中加载。有几种表类型可用，它们都继承自[table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)。
- en: Table
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表
- en: '### `class datasets.table.Table`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class datasets.table.Table`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L154)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L154)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Wraps a pyarrow Table by using composition. This is the base class for `InMemoryTable`,
    `MemoryMappedTable` and `ConcatenationTable`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用组合包装pyarrow Table。这是`InMemoryTable`、`MemoryMappedTable`和`ConcatenationTable`的基类。
- en: 'It implements all the basic attributes/methods of the pyarrow Table class except
    the Table transforms: `slice, filter, flatten, combine_chunks, cast, add_column,
    append_column, remove_column, set_column, rename_columns` and `drop`.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它实现了pyarrow Table类的所有基本属性/方法，除了Table转换：`slice, filter, flatten, combine_chunks,
    cast, add_column, append_column, remove_column, set_column, rename_columns`和`drop`。
- en: The implementation of these methods differs for the subclasses.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法的实现对于子类有所不同。
- en: '#### `validate`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `validate`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`full` (`bool`, defaults to `False`) — If `True`, run expensive checks, otherwise
    cheap checks only.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full`（`bool`，默认为`False`） — 如果为`True`，运行昂贵的检查，否则仅运行廉价的检查。'
- en: Raises
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`pa.lib.ArrowInvalid`'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid`'
- en: '`pa.lib.ArrowInvalid` — if validation fails'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid` — 如果验证失败'
- en: Perform validation checks. An exception is raised if validation fails.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 执行验证检查。如果验证失败，则会引发异常。
- en: By default only cheap validation checks are run. Pass `full=True` for thorough
    validation checks (potentially `O(n)`).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，只运行廉价的验证检查。传递`full=True`进行彻底的验证检查（可能是`O(n)`）。
- en: '#### `equals`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `equals`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`other` ([Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table))
    — Table to compare against.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`other`（[Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)）
    — 要比较的表。'
- en: '`check_metadata` `bool`, defaults to `False`) — Whether schema metadata equality
    should be checked as well.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check_metadata` `bool`，默认为`False`） — 是否应该检查模式元数据的相等性。'
- en: Returns
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: Check if contents of two tables are equal.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 检查两个表的内容是否相等。
- en: '#### `to_batches`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_batches`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`max_chunksize` (`int`, defaults to `None`) — Maximum size for `RecordBatch`
    chunks. Individual chunks may be smaller depending on the chunk layout of individual
    columns.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_chunksize`（`int`，默认为`None`） — `RecordBatch`块的最大大小。根据各列的块布局，单个块可能较小。'
- en: Convert Table to list of (contiguous) `RecordBatch` objects.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 将表转换为（连续的）`RecordBatch`对象列表。
- en: '#### `to_pydict`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pydict`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Returns
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`dict`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`dict`'
- en: Convert the Table to a `dict` or `OrderedDict`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 将表转换为`dict`或`OrderedDict`。
- en: '#### `to_pandas`'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pandas`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — Arrow MemoryPool to use
    for allocations. Uses the default memory pool is not passed.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool`（`MemoryPool`，默认为`None`） — 用于分配的Arrow MemoryPool。如果未传递，则使用默认内存池。'
- en: '`strings_to_categorical` (`bool`, defaults to `False`) — Encode string (UTF8)
    and binary types to `pandas.Categorical`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strings_to_categorical`（`bool`，默认为`False`） — 将字符串（UTF8）和二进制类型编码为`pandas.Categorical`。'
- en: '`categories` (`list`, defaults to `empty`) — List of fields that should be
    returned as `pandas.Categorical`. Only applies to table-like data structures.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categories`（`list`，默认为空） — 应返回为`pandas.Categorical`的字段列表。仅适用于类似表的数据结构。'
- en: '`zero_copy_only` (`bool`, defaults to `False`) — Raise an `ArrowException`
    if this function call would require copying the underlying data.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zero_copy_only`（`bool`，默认为`False`） — 如果此函数调用需要复制底层数据，则引发`ArrowException`。'
- en: '`integer_object_nulls` (`bool`, defaults to `False`) — Cast integers with nulls
    to objects.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`integer_object_nulls`（`bool`，默认为`False`） — 将带有空值的整数转换为对象。'
- en: '`date_as_object` (`bool`, defaults to `True`) — Cast dates to objects. If `False`,
    convert to `datetime64[ns]` dtype.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_as_object`（`bool`，默认为`True`） — 将日期转换为对象。如果为`False`，则转换为`datetime64[ns]`数据类型。'
- en: '`timestamp_as_object` (`bool`, defaults to `False`) — Cast non-nanosecond timestamps
    (`np.datetime64`) to objects. This is useful if you have timestamps that don’t
    fit in the normal date range of nanosecond timestamps (1678 CE-2262 CE). If `False`,
    all timestamps are converted to `datetime64[ns]` dtype.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestamp_as_object`（`bool`，默认为`False`） — 将非纳秒时间戳（`np.datetime64`）转换为对象。如果您有不适合正常纳秒时间戳范围（1678年至2262年）的时间戳，则此选项很有用。如果为`False`，则所有时间戳都将转换为`datetime64[ns]`数据类型。'
- en: '`use_threads` (`bool`, defaults to `True`) — Whether to parallelize the conversion
    using multiple threads.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_threads`（`bool`，默认为`True`） — 是否使用多个线程并行化转换。'
- en: '`deduplicate_objects` (`bool`, defaults to `False`) — Do not create multiple
    copies Python objects when created, to save on memory use. Conversion will be
    slower.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deduplicate_objects`（`bool`，默认为`False`） — 创建时不创建多个Python对象的副本，以节省内存使用。转换将会更慢。'
- en: '`ignore_metadata` (`bool`, defaults to `False`) — If `True`, do not use the
    ‘pandas’ metadata to reconstruct the DataFrame index, if present.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ignore_metadata`（`bool`，默认为`False`）— 如果为`True`，则不使用“pandas”元数据来重建DataFrame索引（如果存在）。'
- en: '`safe` (`bool`, defaults to `True`) — For certain data types, a cast is needed
    in order to store the data in a pandas DataFrame or Series (e.g. timestamps are
    always stored as nanoseconds in pandas). This option controls whether it is a
    safe cast or not.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe`（`bool`，默认为`True`）— 对于某些数据类型，需要进行转换才能将数据存储在pandas DataFrame或Series中（例如，时间戳始终以纳秒形式存储在pandas中）。此选项控制是否进行安全转换。'
- en: '`split_blocks` (`bool`, defaults to `False`) — If `True`, generate one internal
    “block” for each column when creating a pandas.DataFrame from a `RecordBatch`
    or `Table`. While this can temporarily reduce memory note that various pandas
    operations can trigger “consolidation” which may balloon memory use.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split_blocks`（`bool`，默认为`False`）— 如果为`True`，在从`RecordBatch`或`Table`创建pandas.DataFrame时，为每列生成一个内部“块”。虽然这可能会暂时减少内存使用量，但请注意，各种pandas操作可能会触发“合并”，从而可能会增加内存使用量。'
- en: '`self_destruct` (`bool`, defaults to `False`) — EXPERIMENTAL: If `True`, attempt
    to deallocate the originating Arrow memory while converting the Arrow object to
    pandas. If you use the object after calling `to_pandas` with this option it will
    crash your program.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`self_destruct`（`bool`，默认为`False`）— 实验性功能：如果为`True`，则在将Arrow对象转换为pandas时尝试释放原始Arrow内存。如果在使用带有此选项的`to_pandas`后继续使用对象，程序将崩溃。'
- en: '`types_mapper` (`function`, defaults to `None`) — A function mapping a pyarrow
    DataType to a pandas `ExtensionDtype`. This can be used to override the default
    pandas type for conversion of built-in pyarrow types or in absence of `pandas_metadata`
    in the Table schema. The function receives a pyarrow DataType and is expected
    to return a pandas `ExtensionDtype` or `None` if the default conversion should
    be used for that type. If you have a dictionary mapping, you can pass `dict.get`
    as function.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`types_mapper`（`function`，默认为`None`）— 将pyarrow DataType映射到pandas `ExtensionDtype`的函数。这可用于覆盖内置pyarrow类型的默认pandas类型，或在表模式中缺少`pandas_metadata`时使用。该函数接收一个pyarrow
    DataType，并应返回一个pandas `ExtensionDtype`，或者如果应该使用默认转换，则返回`None`。如果您有一个映射字典，可以将`dict.get`作为函数传递。'
- en: Returns
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`pandas.Series` or `pandas.DataFrame`'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.Series`或`pandas.DataFrame`'
- en: '`pandas.Series` or `pandas.DataFrame` depending on type of object'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 根据对象类型，`pandas.Series`或`pandas.DataFrame`
- en: Convert to a pandas-compatible NumPy array or DataFrame, as appropriate.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为与pandas兼容的NumPy数组或DataFrame。
- en: '#### `to_string`'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_string`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '#### `field`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `field`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the field to retrieve.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i`（`Union[int, str]`）— 要检索的字段的索引或名称。'
- en: Select a schema field by its column name or numeric index.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 按列名或数字索引选择模式字段。
- en: '#### `column`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the column to retrieve.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i`（`Union[int, str]`）— 要检索的列的索引或名称。'
- en: Select a column by its column name, or numeric index.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 按列名或数字索引选择列。
- en: '#### `itercolumns`'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `itercolumns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Iterator over all columns in their numerical order.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 按其数字顺序迭代所有列。
- en: '#### `schema`'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `schema`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Schema of the table and its columns.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 表及其列的模式。
- en: '#### `columns`'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: List of all columns in numerical order.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 按数字顺序列出所有列。
- en: '#### `num_columns`'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Number of columns in this table.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的列数。
- en: '#### `num_rows`'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_rows`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
- en: '[PRE13]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Number of rows in this table.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的行数。
- en: Due to the definition of a table, all columns have the same number of rows.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 由于表的定义，所有列具有相同数量的行。
- en: '#### `shape`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `shape`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
- en: '[PRE14]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Returns
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`(int, int)`'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: （int，int）
- en: Number of rows and number of columns.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 行数和列数。
- en: 'Dimensions of the table: (#rows, #columns).'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 表的维度：（#行，#列）。
- en: '#### `nbytes`'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `nbytes`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
- en: '[PRE15]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Total number of bytes consumed by the elements of the table.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 表中元素消耗的总字节数。
- en: InMemoryTable
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: InMemoryTable
- en: '### `class datasets.table.InMemoryTable`'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class datasets.table.InMemoryTable`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L639)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L639)'
- en: '[PRE16]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The table is said in-memory when it is loaded into the user’s RAM.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当表加载到用户的RAM中时，称为内存中的表。
- en: Pickling it does copy all the data using memory. Its implementation is simple
    and uses the underlying pyarrow Table methods directly.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 将其进行Pickling会复制所有数据使用内存。其实现简单，直接使用底层的pyarrow Table方法。
- en: This is different from the `MemoryMapped` table, for which pickling doesn’t
    copy all the data in memory. For a `MemoryMapped`, unpickling instead reloads
    the table from the disk.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这与`MemoryMapped`表不同，对于`MemoryMapped`，Pickling不会复制所有数据到内存。对于`MemoryMapped`，反Pickling会从磁盘重新加载表。
- en: '`InMemoryTable` must be used when data fit in memory, while `MemoryMapped`
    are reserved for data bigger than memory or when you want the memory footprint
    of your application to stay low.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据适合内存时，必须使用`InMemoryTable`，而`MemoryMapped`则保留用于数据大于内存或当您希望应用程序的内存占用保持较低时。
- en: '#### `validate`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `validate`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
- en: '[PRE17]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Parameters
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`full` (`bool`, defaults to `False`) — If `True`, run expensive checks, otherwise
    cheap checks only.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full`（`bool`，默认为`False`）— 如果为`True`，则运行昂贵的检查，否则仅运行廉价的检查。'
- en: Raises
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`pa.lib.ArrowInvalid`'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid`'
- en: '`pa.lib.ArrowInvalid` — if validation fails'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid` — 如果验证失败'
- en: Perform validation checks. An exception is raised if validation fails.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 执行验证检查。如果验证失败，则会引发异常。
- en: By default only cheap validation checks are run. Pass `full=True` for thorough
    validation checks (potentially `O(n)`).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，仅运行廉价的验证检查。传递`full=True`进行彻底的验证检查（可能为`O(n)`）。
- en: '#### `equals`'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `equals`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
- en: '[PRE18]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Parameters
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`other` ([Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table))
    — Table to compare against.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`other`（[Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table））—
    要比较的表格。'
- en: '`check_metadata` `bool`, defaults to `False`) — Whether schema metadata equality
    should be checked as well.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check_metadata` `bool`，默认为`False`）— 是否应该检查模式元数据的相等性。'
- en: Returns
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: Check if contents of two tables are equal.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 检查两个表的内容是否相等。
- en: '#### `to_batches`'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_batches`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
- en: '[PRE19]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Parameters
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`max_chunksize` (`int`, defaults to `None`) — Maximum size for `RecordBatch`
    chunks. Individual chunks may be smaller depending on the chunk layout of individual
    columns.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_chunksize`（`int`，默认为`None`）— `RecordBatch`块的最大大小。根据各列的块布局，单个块可能较小。'
- en: Convert Table to list of (contiguous) `RecordBatch` objects.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 将表格转换为（连续的）`RecordBatch`对象列表。
- en: '#### `to_pydict`'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pydict`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
- en: '[PRE20]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Returns
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`dict`'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`dict`'
- en: Convert the Table to a `dict` or `OrderedDict`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 将表格转换为`dict`或`OrderedDict`。
- en: '#### `to_pandas`'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pandas`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
- en: '[PRE21]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Parameters
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — Arrow MemoryPool to use
    for allocations. Uses the default memory pool is not passed.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool`（`MemoryPool`，默认为`None`）— 用于分配的Arrow MemoryPool。如果未传递，则使用默认内存池。'
- en: '`strings_to_categorical` (`bool`, defaults to `False`) — Encode string (UTF8)
    and binary types to `pandas.Categorical`.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strings_to_categorical`（`bool`，默认为`False`）— 将字符串（UTF8）和二进制类型编码为`pandas.Categorical`。'
- en: '`categories` (`list`, defaults to `empty`) — List of fields that should be
    returned as `pandas.Categorical`. Only applies to table-like data structures.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categories`（`list`，默认为空）— 应返回为`pandas.Categorical`的字段列表。仅适用于类似表格的数据结构。'
- en: '`zero_copy_only` (`bool`, defaults to `False`) — Raise an `ArrowException`
    if this function call would require copying the underlying data.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zero_copy_only`（`bool`，默认为`False`）— 如果此函数调用需要复制底层数据，则引发`ArrowException`。'
- en: '`integer_object_nulls` (`bool`, defaults to `False`) — Cast integers with nulls
    to objects.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`integer_object_nulls`（`bool`，默认为`False`）— 将带有空值的整数转换为对象。'
- en: '`date_as_object` (`bool`, defaults to `True`) — Cast dates to objects. If `False`,
    convert to `datetime64[ns]` dtype.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_as_object`（`bool`，默认为`True`）— 将日期转换为对象。如果为`False`，则转换为`datetime64[ns]`数据类型。'
- en: '`timestamp_as_object` (`bool`, defaults to `False`) — Cast non-nanosecond timestamps
    (`np.datetime64`) to objects. This is useful if you have timestamps that don’t
    fit in the normal date range of nanosecond timestamps (1678 CE-2262 CE). If `False`,
    all timestamps are converted to `datetime64[ns]` dtype.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestamp_as_object`（`bool`，默认为`False`）— 将非纳秒时间戳（`np.datetime64`）转换为对象。如果您有不适合正常纳秒时间戳范围（1678年至2262年）的时间戳，则此选项很有用。如果为`False`，则所有时间戳都将转换为`datetime64[ns]`数据类型。'
- en: '`use_threads` (`bool`, defaults to `True`) — Whether to parallelize the conversion
    using multiple threads.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_threads`（`bool`，默认为`True`）— 是否使用多个线程并行化转换。'
- en: '`deduplicate_objects` (`bool`, defaults to `False`) — Do not create multiple
    copies Python objects when created, to save on memory use. Conversion will be
    slower.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deduplicate_objects`（`bool`，默认为`False`）— 创建时不创建多个副本Python对象，以节省内存使用。转换速度会变慢。'
- en: '`ignore_metadata` (`bool`, defaults to `False`) — If `True`, do not use the
    ‘pandas’ metadata to reconstruct the DataFrame index, if present.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ignore_metadata`（`bool`，默认为`False`）— 如果为`True`，则不使用“pandas”元数据重建DataFrame索引（如果存在）。'
- en: '`safe` (`bool`, defaults to `True`) — For certain data types, a cast is needed
    in order to store the data in a pandas DataFrame or Series (e.g. timestamps are
    always stored as nanoseconds in pandas). This option controls whether it is a
    safe cast or not.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe`（`bool`，默认为`True`）— 对于某些数据类型，需要进行转换才能将数据存储在pandas DataFrame或Series中（例如，时间戳始终以纳秒存储在pandas中）。此选项控制是否是安全转换。'
- en: '`split_blocks` (`bool`, defaults to `False`) — If `True`, generate one internal
    “block” for each column when creating a pandas.DataFrame from a `RecordBatch`
    or `Table`. While this can temporarily reduce memory note that various pandas
    operations can trigger “consolidation” which may balloon memory use.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split_blocks`（`bool`，默认为`False`）— 如果为`True`，则在从`RecordBatch`或`Table`创建pandas.DataFrame时为每列生成一个内部“块”。虽然这可能会暂时减少内存使用量，但请注意各种pandas操作可能会触发“合并”，从而可能会增加内存使用量。'
- en: '`self_destruct` (`bool`, defaults to `False`) — EXPERIMENTAL: If `True`, attempt
    to deallocate the originating Arrow memory while converting the Arrow object to
    pandas. If you use the object after calling `to_pandas` with this option it will
    crash your program.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`self_destruct` (`bool`，默认为`False`) — 实验性功能：如果为`True`，则在将Arrow对象转换为pandas时尝试释放原始Arrow内存。如果在使用此选项调用`to_pandas`后继续使用对象，程序将崩溃。'
- en: '`types_mapper` (`function`, defaults to `None`) — A function mapping a pyarrow
    DataType to a pandas `ExtensionDtype`. This can be used to override the default
    pandas type for conversion of built-in pyarrow types or in absence of `pandas_metadata`
    in the Table schema. The function receives a pyarrow DataType and is expected
    to return a pandas `ExtensionDtype` or `None` if the default conversion should
    be used for that type. If you have a dictionary mapping, you can pass `dict.get`
    as function.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`types_mapper` (`function`，默认为`None`) — 将pyarrow DataType映射到pandas `ExtensionDtype`的函数。这可用于覆盖内置pyarrow类型的默认pandas类型转换，或在表模式中缺少`pandas_metadata`时使用。该函数接收一个pyarrow
    DataType，并应返回一个pandas `ExtensionDtype`，如果应该使用该类型的默认转换，则返回`None`。如果有一个映射字典，可以将`dict.get`作为函数传递。'
- en: Returns
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`pandas.Series` or `pandas.DataFrame`'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.Series`或`pandas.DataFrame`'
- en: '`pandas.Series` or `pandas.DataFrame` depending on type of object'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 根据对象类型为`pandas.Series`或`pandas.DataFrame`
- en: Convert to a pandas-compatible NumPy array or DataFrame, as appropriate.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 根据需要将其转换为与pandas兼容的NumPy数组或DataFrame。
- en: '#### `to_string`'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_string`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
- en: '[PRE22]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '#### `field`'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `field`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
- en: '[PRE23]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Parameters
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the field to retrieve.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`Union[int, str]`) — 要检索的字段的索引或名称。'
- en: Select a schema field by its column name or numeric index.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 按列名或数字索引选择模式字段。
- en: '#### `column`'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
- en: '[PRE24]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Parameters
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the column to retrieve.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`Union[int, str]`) — 要检索的列的索引或名称。'
- en: Select a column by its column name, or numeric index.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 按列名或数字索引选择列。
- en: '#### `itercolumns`'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `itercolumns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
- en: '[PRE25]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Iterator over all columns in their numerical order.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 按其数字顺序迭代所有列。
- en: '#### `schema`'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `schema`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
- en: '[PRE26]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Schema of the table and its columns.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 表及其列的模式。
- en: '#### `columns`'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
- en: '[PRE27]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: List of all columns in numerical order.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 按数字顺序列出所有列。
- en: '#### `num_columns`'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
- en: '[PRE28]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Number of columns in this table.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的列数。
- en: '#### `num_rows`'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_rows`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
- en: '[PRE29]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Number of rows in this table.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的行数。
- en: Due to the definition of a table, all columns have the same number of rows.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 由于表的定义，所有列具有相同数量的行。
- en: '#### `shape`'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `shape`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
- en: '[PRE30]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Returns
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`(int, int)`'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`(int, int)`'
- en: Number of rows and number of columns.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 行数和列数。
- en: 'Dimensions of the table: (#rows, #columns).'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 表的维度：(#行，#列)。
- en: '#### `nbytes`'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `nbytes`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
- en: '[PRE31]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Total number of bytes consumed by the elements of the table.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 表元素消耗的总字节数。
- en: '#### `column_names`'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `column_names`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L420)'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L420)'
- en: '[PRE32]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Names of the table’s columns.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 表的列名。
- en: '#### `slice`'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `slice`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L794)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L794)'
- en: '[PRE33]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Parameters
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`offset` (`int`, defaults to `0`) — Offset from start of table to slice.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offset` (`int`，默认为`0`) — 从表的开头开始的偏移量。'
- en: '`length` (`int`, defaults to `None`) — Length of slice (default is until end
    of table starting from offset).'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`length` (`int`，默认为`None`) — 切片的长度（默认为从偏移开始到表的末尾）。'
- en: Compute zero-copy slice of this Table.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 计算此表的零拷贝切片。
- en: '#### `filter`'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `filter`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L811)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L811)'
- en: '[PRE34]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Select records from a Table. See `pyarrow.compute.filter` for full usage.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 从表中选择记录。有关完整用法，请参阅`pyarrow.compute.filter`。
- en: '#### `flatten`'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `flatten`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L817)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L817)'
- en: '[PRE35]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Parameters
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — For memory allocations,
    if required, otherwise use default pool.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool` (`MemoryPool`，默认为`None`) — 对于内存分配，如果需要，否则使用默认池。'
- en: Flatten this Table. Each column with a struct type is flattened into one column
    per struct field. Other columns are left unchanged.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 展平此表。具有结构类型的每列都展平为每个结构字段的一列。其他列保持不变。
- en: '#### `combine_chunks`'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `combine_chunks`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L831)'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L831)'
- en: '[PRE36]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Parameters
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — For memory allocations,
    if required, otherwise use default pool.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool` (`MemoryPool`，默认为`None`) — 用于内存分配，如果需要的话，否则使用默认池。'
- en: Make a new table by combining the chunks this table has.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 通过合并此表的块创建新表。
- en: All the underlying chunks in the `ChunkedArray` of each column are concatenated
    into zero or one chunk.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 每列的`ChunkedArray`中的所有底层块都被连接成零个或一个块。
- en: '#### `cast`'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `cast`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L847)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L847)'
- en: '[PRE37]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Parameters
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`target_schema` (`Schema`) — Schema to cast to, the names and order of fields
    must match.'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target_schema` (`Schema`) — 要转换的模式，字段的名称和顺序必须匹配。'
- en: '`safe` (`bool`, defaults to `True`) — Check for overflows or other unsafe conversions.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe` (`bool`，默认为`True`) — 检查溢出或其他不安全的转换。'
- en: Cast table values to another schema.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 将表值转换为另一个模式。
- en: '#### `replace_schema_metadata`'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `replace_schema_metadata`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L862)'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L862)'
- en: '[PRE38]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Parameters
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`metadata` (`dict`, defaults to `None`) —'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata` (`dict`，默认为`None`) —'
- en: Returns
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: shallow_copy
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: shallow_copy
- en: 'EXPERIMENTAL: Create shallow copy of table by replacing schema key-value metadata
    with the indicated new metadata (which may be `None`, which deletes any existing
    metadata).'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性功能：通过用指定的新元数据替换模式键值元数据来创建表的浅拷贝（可能为`None`，这将删除任何现有元数据）。
- en: '#### `add_column`'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L876)'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L876)'
- en: '[PRE39]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Parameters
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index to place the column at.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 要放置列的索引。'
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column added.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 添加传递的列后的新表。
- en: Add column to Table at position.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定位置向表中添加列。
- en: A new table is returned with the column added, the original table object is
    left unchanged.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 返回带有添加列的新表，原始表对象保持不变。
- en: '#### `append_column`'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `append_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L897)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L897)'
- en: '[PRE40]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Parameters
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column added.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 添加传递的列后的新表。
- en: Append column at end of columns.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在列末尾追加列。
- en: '#### `remove_column`'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `remove_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L914)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L914)'
- en: '[PRE41]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Parameters
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index of column to remove.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 要移除的列的索引。'
- en: Returns
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table without the column.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 不包含列的新表。
- en: Create new Table with the indicated column removed.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新的表，删除指定的列。
- en: '#### `set_column`'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L928)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L928)'
- en: '[PRE42]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Parameters
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index to place the column at.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 要放置列的索引。'
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column set.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 添加传递的列的新表。
- en: Replace column in Table at position.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 替换表中位置的列。
- en: '#### `rename_columns`'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `rename_columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L947)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L947)'
- en: '[PRE43]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Create new table with columns renamed to provided names.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新表，将列重命名为提供的名称。
- en: '#### `select`'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `select`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L970)'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L970)'
- en: '[PRE44]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Parameters
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`columns` (`Union[List[str], List[int]]`) — The column names or integer indices
    to select.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns` (`Union[List[str], List[int]]`) — 要选择的列名或整数索引。'
- en: Returns
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[datasets.table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '[datasets.table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)'
- en: New table with the specified columns, and metadata preserved.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 具有指定列和元数据的新表。
- en: Select columns of the table.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 选择表的列。
- en: Returns a new table with the specified columns, and metadata preserved.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个具有指定列和元数据的新表。
- en: '#### `drop`'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `drop`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L953)'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L953)'
- en: '[PRE45]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Parameters
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`columns` (`List[str]`) — List of field names referencing existing columns.'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns` (`List[str]`) — 引用现有列的字段名称列表。'
- en: Returns
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table without the columns.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 不包含列的新表。
- en: Raises
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`KeyError`'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '`KeyError`'
- en: '`KeyError` — : if any of the passed columns name are not existing.'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeyError` — ：如果传递的列名不存在。'
- en: Drop one or more columns and return a new table.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 删除一个或多个列并返回新表。
- en: '#### `from_file`'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_file`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L654)'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L654)'
- en: '[PRE46]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '#### `from_buffer`'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_buffer`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L659)'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L659)'
- en: '[PRE47]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '#### `from_pandas`'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pandas`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L664)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L664)'
- en: '[PRE48]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Parameters
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`df` (`pandas.DataFrame`) —'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`df`（`pandas.DataFrame`）—'
- en: '`schema` (`pyarrow.Schema`, *optional*) — The expected schema of the Arrow
    Table. This can be used to indicate the type of columns if we cannot infer it
    automatically. If passed, the output will have exactly this schema. Columns specified
    in the schema that are not found in the DataFrame columns or its index will raise
    an error. Additional columns or index levels in the DataFrame which are not specified
    in the schema will be ignored.'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`schema`（`pyarrow.Schema`，*可选*）— Arrow表的预期模式。如果我们无法自动推断列的类型，则可以使用此选项指示。如果传递，输出将完全具有此模式。在DataFrame列或其索引中找不到的模式中指定的列将引发错误。在DataFrame中未在模式中指定的附加列或索引级别将被忽略。'
- en: '`preserve_index` (`bool`, *optional*) — Whether to store the index as an additional
    column in the resulting `Table`. The default of None will store the index as a
    column, except for RangeIndex which is stored as metadata only. Use `preserve_index=True`
    to force it to be stored as a column.'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`preserve_index`（`bool`，*可选*）— 是否将索引存储为结果`Table`中的附加列。默认值为`None`，将索引存储为列，除了RangeIndex仅存储为元数据。使用`preserve_index=True`强制将其存储为列。'
- en: '`nthreads` (`int`, defaults to `None` (may use up to system CPU count threads))
    — If greater than 1, convert columns to Arrow in parallel using indicated number
    of threads.'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nthreads`（`int`，默认为`None`（可能使用系统CPU计数线程））— 如果大于1，使用指定数量的线程并行转换列为Arrow。'
- en: '`columns` (`List[str]`, *optional*) — List of column to be converted. If `None`,
    use all columns.'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns`（`List[str]`，*可选*）— 要转换的列的列表。如果为`None`，则使用所有列。'
- en: '`safe` (`bool`, defaults to `True`) — Check for overflows or other unsafe conversions,'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe`（`bool`，默认为`True`）— 检查溢出或其他不安全的转换，'
- en: Returns
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: Convert pandas.DataFrame to an Arrow Table.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 将pandas.DataFrame转换为Arrow表。
- en: The column types in the resulting Arrow Table are inferred from the dtypes of
    the pandas.Series in the DataFrame. In the case of non-object Series, the NumPy
    dtype is translated to its Arrow equivalent. In the case of `object`, we need
    to guess the datatype by looking at the Python objects in this Series.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 结果Arrow表中的列类型是从DataFrame中的pandas.Series的dtype推断出来的。对于非对象Series，NumPy dtype会被转换为其Arrow等效项。对于`object`，我们需要通过查看该Series中的Python对象来猜测数据类型。
- en: Be aware that Series of the `object` dtype don’t carry enough information to
    always lead to a meaningful Arrow type. In the case that we cannot infer a type,
    e.g. because the DataFrame is of length 0 or the Series only contains `None/nan`
    objects, the type is set to null. This behavior can be avoided by constructing
    an explicit schema and passing it to this function.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`object` dtype的Series并不包含足够的信息，无法始终导致有意义的Arrow类型。在我们无法推断类型的情况下，例如因为DataFrame的长度为0或Series仅包含`None/nan`对象，类型将设置为null。可以通过构造明确的模式并将其传递给此函数来避免这种行为。
- en: 'Examples:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE49]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '#### `from_arrays`'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_arrays`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L722)'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L722)'
- en: '[PRE50]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Parameters
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`arrays` (`List[Union[pyarrow.Array, pyarrow.ChunkedArray]]`) — Equal-length
    arrays that should form the table.'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`arrays`（`List[Union[pyarrow.Array, pyarrow.ChunkedArray]]`）— 应形成表的等长数组。'
- en: '`names` (`List[str]`, *optional*) — Names for the table columns. If not passed,
    schema must be passed.'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`names`（`List[str]`，*可选*）— 表列的名称。如果未传递，必须传递模式。'
- en: '`schema` (`Schema`, defaults to `None`) — Schema for the created table. If
    not passed, names must be passed.'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`schema`（`Schema`，默认为`None`）— 创建表的模式。如果未传递，必须传递名称。'
- en: '`metadata` (`Union[dict, Mapping]`, defaults to `None`) — Optional metadata
    for the schema (if inferred).'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata`（`Union[dict, Mapping]`，默认为`None`）— 模式的可选元数据（如果推断出来）。'
- en: Construct a Table from Arrow arrays.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 从Arrow数组构造表。
- en: '#### `from_pydict`'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pydict`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L742)'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L742)'
- en: '[PRE51]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Parameters
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`mapping` (`Union[dict, Mapping]`) — A mapping of strings to Arrays or Python
    lists.'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mapping`（`Union[dict, Mapping]`）— 字符串到数组或Python列表的映射。'
- en: '`schema` (`Schema`, defaults to `None`) — If not passed, will be inferred from
    the Mapping values'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`schema`（`Schema`，默认为`None`）— 如果未传递，则将从映射值中推断出来'
- en: '`metadata` (`Union[dict, Mapping]`, defaults to `None`) — Optional metadata
    for the schema (if inferred).'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata`（`Union[dict, Mapping]`，默认为`None`）— 模式的可选元数据（如果推断出来）。'
- en: Construct a Table from Arrow arrays or columns.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 从Arrow数组或列构造表。
- en: '#### `from_batches`'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_batches`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L778)'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L778)'
- en: '[PRE52]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Parameters
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`batches` (`Union[Sequence[pyarrow.RecordBatch], Iterator[pyarrow.RecordBatch]]`)
    — Sequence of `RecordBatch` to be converted, all schemas must be equal.'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`batches`（`Union[Sequence[pyarrow.RecordBatch], Iterator[pyarrow.RecordBatch]]`）—
    要转换的`RecordBatch`序列，所有模式必须相等。'
- en: '`schema` (`Schema`, defaults to `None`) — If not passed, will be inferred from
    the first `RecordBatch`.'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`schema`（`Schema`，默认为`None`）— 如果未传递，则将从第一个`RecordBatch`中推断出来。'
- en: Returns
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: Construct a Table from a sequence or iterator of Arrow `RecordBatches`.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 从Arrow `RecordBatches`的序列或迭代器构造表。
- en: MemoryMappedTable
  id: totrans-380
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MemoryMappedTable
- en: '### `class datasets.table.MemoryMappedTable`'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class datasets.table.MemoryMappedTable`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L990)'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L990)'
- en: '[PRE53]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: The table is said memory mapped when it doesn’t use the user’s RAM but loads
    the data from the disk instead.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 当表不使用用户的RAM而是从磁盘加载数据时，称为内存映射表。
- en: Pickling it doesn’t copy the data into memory. Instead, only the path to the
    memory mapped arrow file is pickled, as well as the list of transforms to “replay”
    when reloading the table from the disk.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 将其进行pickling不会将数据复制到内存中。相反，只会将内存映射的arrow文件的路径进行pickling，以及重新加载表时要“重放”的转换列表。
- en: Its implementation requires to store an history of all the transforms that were
    applied to the underlying pyarrow Table, so that they can be “replayed” when reloading
    the Table from the disk.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 其实现需要存储应用于底层pyarrow Table的所有转换的历史，以便在从磁盘重新加载Table时可以“重放”它们。
- en: This is different from the `InMemoryTable` table, for which pickling does copy
    all the data in memory.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 这与`InMemoryTable`表不同，对于`InMemoryTable`表，pickling会复制所有内存中的数据。
- en: '`InMemoryTable` must be used when data fit in memory, while `MemoryMapped`
    are reserved for data bigger than memory or when you want the memory footprint
    of your application to stay low.'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据适合内存时，必须使用`InMemoryTable`，而`MemoryMapped`用于数据大于内存或当您希望应用程序的内存占用保持较低时。
- en: '#### `validate`'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `validate`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
- en: '[PRE54]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Parameters
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`full` (`bool`, defaults to `False`) — If `True`, run expensive checks, otherwise
    cheap checks only.'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full` (`bool`，默认为`False`) — 如果为`True`，运行昂贵的检查，否则仅运行廉价的检查。'
- en: Raises
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`pa.lib.ArrowInvalid`'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid`'
- en: '`pa.lib.ArrowInvalid` — if validation fails'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid` — 如果验证失败'
- en: Perform validation checks. An exception is raised if validation fails.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 执行验证检查。如果验证失败，则会引发异常。
- en: By default only cheap validation checks are run. Pass `full=True` for thorough
    validation checks (potentially `O(n)`).
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，仅运行廉价的验证检查。传递`full=True`进行彻底的验证检查（可能为`O(n)`）。
- en: '#### `equals`'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `equals`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
- en: '[PRE55]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Parameters
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`other` ([Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table))
    — Table to compare against.'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`other`（[Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)）
    — 要与之比较的表。'
- en: '`check_metadata` `bool`, defaults to `False`) — Whether schema metadata equality
    should be checked as well.'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check_metadata` `bool`，默认为`False`) — 是否应检查模式元数据的相等性。'
- en: Returns
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: Check if contents of two tables are equal.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 检查两个表的内容是否相等。
- en: '#### `to_batches`'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_batches`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
- en: '[PRE56]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Parameters
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`max_chunksize` (`int`, defaults to `None`) — Maximum size for `RecordBatch`
    chunks. Individual chunks may be smaller depending on the chunk layout of individual
    columns.'
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_chunksize` (`int`，默认为`None`) — `RecordBatch`块的最大大小。根据各列的块布局，各个块可能较小。'
- en: Convert Table to list of (contiguous) `RecordBatch` objects.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 将Table转换为（连续的）`RecordBatch`对象列表。
- en: '#### `to_pydict`'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pydict`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
- en: '[PRE57]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Returns
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`dict`'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '`dict`'
- en: Convert the Table to a `dict` or `OrderedDict`.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 将Table转换为`dict`或`OrderedDict`。
- en: '#### `to_pandas`'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pandas`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
- en: '[PRE58]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Parameters
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — Arrow MemoryPool to use
    for allocations. Uses the default memory pool is not passed.'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool` (`MemoryPool`，默认为`None`) — 用于分配的Arrow MemoryPool。如果未传递，则使用默认内存池。'
- en: '`strings_to_categorical` (`bool`, defaults to `False`) — Encode string (UTF8)
    and binary types to `pandas.Categorical`.'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strings_to_categorical` (`bool`，默认为`False`) — 将字符串（UTF8）和二进制类型编码为`pandas.Categorical`。'
- en: '`categories` (`list`, defaults to `empty`) — List of fields that should be
    returned as `pandas.Categorical`. Only applies to table-like data structures.'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categories` (`list`，默认为空） — 应返回为`pandas.Categorical`的字段列表。仅适用于类似表的数据结构。'
- en: '`zero_copy_only` (`bool`, defaults to `False`) — Raise an `ArrowException`
    if this function call would require copying the underlying data.'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zero_copy_only` (`bool`，默认为`False`) — 如果此函数调用需要复制底层数据，则引发`ArrowException`。'
- en: '`integer_object_nulls` (`bool`, defaults to `False`) — Cast integers with nulls
    to objects.'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`integer_object_nulls` (`bool`，默认为`False`) — 将带有空值的整数转换为对象。'
- en: '`date_as_object` (`bool`, defaults to `True`) — Cast dates to objects. If `False`,
    convert to `datetime64[ns]` dtype.'
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_as_object` (`bool`，默认为`True`) — 将日期转换为对象。如果为`False`，则转换为`datetime64[ns]`类型。'
- en: '`timestamp_as_object` (`bool`, defaults to `False`) — Cast non-nanosecond timestamps
    (`np.datetime64`) to objects. This is useful if you have timestamps that don’t
    fit in the normal date range of nanosecond timestamps (1678 CE-2262 CE). If `False`,
    all timestamps are converted to `datetime64[ns]` dtype.'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestamp_as_object` (`bool`，默认为`False`) — 将非纳秒时间戳（`np.datetime64`）转换为对象。如果您有不适合正常纳秒时间戳范围（1678年至2262年）的时间戳，则此选项很有用。如果为`False`，则所有时间戳都将转换为`datetime64[ns]`类型。'
- en: '`use_threads` (`bool`, defaults to `True`) — Whether to parallelize the conversion
    using multiple threads.'
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_threads` (`bool`，默认为`True`) — 是否使用多个线程并行化转换。'
- en: '`deduplicate_objects` (`bool`, defaults to `False`) — Do not create multiple
    copies Python objects when created, to save on memory use. Conversion will be
    slower.'
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deduplicate_objects` (`bool`，默认为`False`) — 创建时不要创建多个Python对象的副本，以节省内存使用。转换速度会变慢。'
- en: '`ignore_metadata` (`bool`, defaults to `False`) — If `True`, do not use the
    ‘pandas’ metadata to reconstruct the DataFrame index, if present.'
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ignore_metadata` (`bool`，默认为`False`) — 如果为`True`，则不使用‘pandas’元数据重建DataFrame索引（如果存在）。'
- en: '`safe` (`bool`, defaults to `True`) — For certain data types, a cast is needed
    in order to store the data in a pandas DataFrame or Series (e.g. timestamps are
    always stored as nanoseconds in pandas). This option controls whether it is a
    safe cast or not.'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe` (`bool`，默认为`True`) — 对于某些数据类型，需要进行转换才能将数据存储在pandas DataFrame或Series中（例如，时间戳始终以纳秒存储在pandas中）。此选项控制是否是安全转换。'
- en: '`split_blocks` (`bool`, defaults to `False`) — If `True`, generate one internal
    “block” for each column when creating a pandas.DataFrame from a `RecordBatch`
    or `Table`. While this can temporarily reduce memory note that various pandas
    operations can trigger “consolidation” which may balloon memory use.'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split_blocks`（`bool`，默认为`False`）— 如果为`True`，则在从`RecordBatch`或`Table`创建pandas.DataFrame时为每列生成一个内部“块”。虽然这可能会暂时减少内存使用量，但请注意，各种pandas操作可能会触发“合并”，从而可能会增加内存使用量。'
- en: '`self_destruct` (`bool`, defaults to `False`) — EXPERIMENTAL: If `True`, attempt
    to deallocate the originating Arrow memory while converting the Arrow object to
    pandas. If you use the object after calling `to_pandas` with this option it will
    crash your program.'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`self_destruct`（`bool`，默认为`False`）— 实验性功能：如果为`True`，则尝试在将Arrow对象转换为pandas时释放原始Arrow内存。如果在使用此选项调用`to_pandas`后继续使用对象，程序将崩溃。'
- en: '`types_mapper` (`function`, defaults to `None`) — A function mapping a pyarrow
    DataType to a pandas `ExtensionDtype`. This can be used to override the default
    pandas type for conversion of built-in pyarrow types or in absence of `pandas_metadata`
    in the Table schema. The function receives a pyarrow DataType and is expected
    to return a pandas `ExtensionDtype` or `None` if the default conversion should
    be used for that type. If you have a dictionary mapping, you can pass `dict.get`
    as function.'
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`types_mapper`（`function`，默认为`None`）— 将pyarrow DataType映射到pandas `ExtensionDtype`的函数。这可用于覆盖内置pyarrow类型的默认pandas类型转换，或在表模式中缺少`pandas_metadata`时使用。该函数接收一个pyarrow
    DataType，并应返回一个pandas `ExtensionDtype`，或者如果应该对该类型使用默认转换，则返回`None`。如果您有一个映射字典，可以将`dict.get`作为函数传递。'
- en: Returns
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`pandas.Series` or `pandas.DataFrame`'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.Series`或`pandas.DataFrame`'
- en: '`pandas.Series` or `pandas.DataFrame` depending on type of object'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 根据对象类型为`pandas.Series`或`pandas.DataFrame`
- en: Convert to a pandas-compatible NumPy array or DataFrame, as appropriate.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为与pandas兼容的NumPy数组或DataFrame。
- en: '#### `to_string`'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_string`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
- en: '[PRE59]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '#### `field`'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `字段`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
- en: '[PRE60]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Parameters
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the field to retrieve.'
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i`（`Union[int, str]`）— 要检索的字段的索引或名称。'
- en: Select a schema field by its column name or numeric index.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 通过列名或数字索引选择模式字段。
- en: '#### `column`'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `列`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
- en: '[PRE61]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Parameters
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the column to retrieve.'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i`（`Union[int, str]`）— 要检索的列的索引或名称。'
- en: Select a column by its column name, or numeric index.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 通过列名或数字索引选择列。
- en: '#### `itercolumns`'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `itercolumns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
- en: '[PRE62]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Iterator over all columns in their numerical order.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 按照它们的数字顺序迭代所有列。
- en: '#### `schema`'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `模式`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
- en: '[PRE63]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Schema of the table and its columns.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 表及其列的模式。
- en: '#### `columns`'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `列`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
- en: '[PRE64]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: List of all columns in numerical order.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 按数字顺序列出所有列。
- en: '#### `num_columns`'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
- en: '[PRE65]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Number of columns in this table.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的列数。
- en: '#### `num_rows`'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_rows`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
- en: '[PRE66]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Number of rows in this table.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的行数。
- en: Due to the definition of a table, all columns have the same number of rows.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 由于表的定义，所有列都具有相同数量的行。
- en: '#### `shape`'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `形状`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
- en: '[PRE67]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Returns
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`(int, int)`'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '`(int, int)`'
- en: Number of rows and number of columns.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 行数和列数。
- en: 'Dimensions of the table: (#rows, #columns).'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 表的维度：（#行，#列）。
- en: '#### `nbytes`'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `nbytes`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
- en: '[PRE68]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Total number of bytes consumed by the elements of the table.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 表中元素消耗的总字节数。
- en: '#### `column_names`'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `列名`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L420)'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L420)'
- en: '[PRE69]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Names of the table’s columns.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 表的列名。
- en: '#### `slice`'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `切片`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1049)'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1049)'
- en: '[PRE70]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Parameters
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`offset` (`int`, defaults to `0`) — Offset from start of table to slice.'
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offset`（`int`，默认为`0`）— 从表的开头偏移以进行切片。'
- en: '`length` (`int`, defaults to `None`) — Length of slice (default is until end
    of table starting from offset).'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`length`（`int`，默认为`None`）— 切片的长度（默认为从偏移开始直到表末尾）。'
- en: Compute zero-copy slice of this Table.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 计算此表的零拷贝切片。
- en: '#### `filter`'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `过滤`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1068)'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1068)'
- en: '[PRE71]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Select records from a Table. See `pyarrow.compute.filter` for full usage.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 从表中选择记录。查看`pyarrow.compute.filter`以获取完整用法。
- en: '#### `flatten`'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `展平`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1076)'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1076)'
- en: '[PRE72]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Parameters
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — For memory allocations,
    if required, otherwise use default pool.'
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool`（`MemoryPool`，默认为`None`）— 用于内存分配，如果需要的话，否则使用默认池。'
- en: Flatten this Table. Each column with a struct type is flattened into one column
    per struct field. Other columns are left unchanged.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 展平此表。每个具有结构类型的列都展平为每个结构字段一个列。其他列保持不变。
- en: '#### `combine_chunks`'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `combine_chunks`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1092)'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1092)'
- en: '[PRE73]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Parameters
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — For memory allocations,
    if required, otherwise use default pool.'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool` (`MemoryPool`，默认为`None`) — 用于内存分配，如果需要，否则使用默认池。'
- en: Make a new table by combining the chunks this table has.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 通过合并此表的块创建一个新表。
- en: All the underlying chunks in the ChunkedArray of each column are concatenated
    into zero or one chunk.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 每列的ChunkedArray中的所有基础块都连接成零个或一个块。
- en: '#### `cast`'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `转换`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1110)'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1110)'
- en: '[PRE74]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Parameters
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`target_schema` (`Schema`) — Schema to cast to, the names and order of fields
    must match.'
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target_schema` (`Schema`) — 要转换的模式，字段的名称和顺序必须匹配。'
- en: '`safe` (`bool`, defaults to `True`) — Check for overflows or other unsafe conversions.'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe` (`bool`，默认为`True`) — 检查溢出或其他不安全的转换。'
- en: Cast table values to another schema
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 将表值转换为另一个模式
- en: '#### `replace_schema_metadata`'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `replace_schema_metadata`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1127)'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1127)'
- en: '[PRE75]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Parameters
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`metadata` (`dict`, defaults to `None`) —'
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata` (`dict`，默认为`None`) —'
- en: Returns
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: shallow_copy
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: shallow_copy
- en: 'EXPERIMENTAL: Create shallow copy of table by replacing schema key-value metadata
    with the indicated new metadata (which may be None, which deletes any existing
    metadata.'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性的：通过用指定的新元数据替换模式键值元数据来创建表的浅拷贝（新元数据可以是None，这将删除任何现有元数据。
- en: '#### `add_column`'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1143)'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1143)'
- en: '[PRE76]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Parameters
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index to place the column at.'
  id: totrans-537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 放置列的索引。'
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column added.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了传递列的新表。
- en: Add column to Table at position.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 在表中的位置添加列。
- en: A new table is returned with the column added, the original table object is
    left unchanged.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 返回添加了列的新表，原始表对象保持不变。
- en: '#### `append_column`'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `append_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1166)'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1166)'
- en: '[PRE77]'
  id: totrans-547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Parameters
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column added.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了传递列的新表。
- en: Append column at end of columns.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 在列末尾追加列。
- en: '#### `remove_column`'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `remove_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1185)'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1185)'
- en: '[PRE78]'
  id: totrans-557
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Parameters
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index of column to remove.'
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 要移除的列的索引。'
- en: Returns
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table without the column.
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 不包含该列的新表。
- en: Create new Table with the indicated column removed.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 创建具有指定列移除的新表。
- en: '#### `set_column`'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1201)'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1201)'
- en: '[PRE79]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Parameters
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index to place the column at.'
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 放置列的索引。'
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column set.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了传递列的新表。
- en: Replace column in Table at position.
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 替换表中位置的列。
- en: '#### `rename_columns`'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `rename_columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1222)'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1222)'
- en: '[PRE80]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Create new table with columns renamed to provided names.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 创建具有重命名为提供名称的列的新表。
- en: '#### `select`'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `选择`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1249)'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1249)'
- en: '[PRE81]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Parameters
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`columns` (`Union[List[str], List[int]]`) — The column names or integer indices
    to select.'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns` (`Union[List[str], List[int]]`) — 要选择的列名或整数索引。'
- en: Returns
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[datasets.table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: '[datasets.table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)'
- en: New table with the specified columns, and metadata preserved.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 具有指定列和保留元数据的新表。
- en: Select columns of the table.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 选择表的列。
- en: Returns a new table with the specified columns, and metadata preserved.
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个具有指定列和保留元数据的新表。
- en: '#### `drop`'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `删除`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1230)'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1230)'
- en: '[PRE82]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Parameters
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`columns` (`List[str]`) — List of field names referencing existing columns.'
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns` (`List[str]`) — 引用现有列的字段名称列表。'
- en: Returns
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table without the columns.
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 不包含列的新表。
- en: Raises
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`KeyError`'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '`KeyError`'
- en: '`KeyError` — : if any of the passed columns name are not existing.'
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeyError` — ：如果传递的列名中有任何不存在的列。'
- en: Drop one or more columns and return a new table.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 删除一个或多个列并返回一个新表。
- en: '#### `from_file`'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_file`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1016)'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1016)'
- en: '[PRE83]'
  id: totrans-603
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: ConcatenationTable
  id: totrans-604
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ConcatenationTable
- en: '### `class datasets.table.ConcatenationTable`'
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class datasets.table.ConcatenationTable`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1274)'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1274)'
- en: '[PRE84]'
  id: totrans-607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: The table comes from the concatenation of several tables called blocks. It enables
    concatenation on both axis 0 (append rows) and axis 1 (append columns).
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 该表来自称为块的多个表的连接。它使得可以在轴0（附加行）和轴1（附加列）上进行连接。
- en: 'The underlying tables are called “blocks” and can be either `InMemoryTable`
    or `MemoryMappedTable` objects. This allows to combine tables that come from memory
    or that are memory mapped. When a `ConcatenationTable` is pickled, then each block
    is pickled:'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 底层表称为“块”，可以是`InMemoryTable`或`MemoryMappedTable`对象。这允许组合来自内存或内存映射的表。当pickle一个`ConcatenationTable`时，然后pickle每个块：
- en: the `InMemoryTable` objects are pickled by copying all the data in memory.
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InMemoryTable`对象通过将所有数据复制到内存中进行pickle。'
- en: the MemoryMappedTable objects are pickled without copying the data into memory.
    Instead, only the path to the memory mapped arrow file is pickled, as well as
    the list of transforms to “replays” when reloading the table from the disk.
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MemoryMappedTable`对象在不将数据复制到内存的情况下进行pickle。相反，只有内存映射的箭头文件的路径被pickle，以及重新加载表时要“重播”的转换列表。'
- en: Its implementation requires to store each block separately. The `blocks` attributes
    stores a list of list of blocks. The first axis concatenates the tables along
    the axis 0 (it appends rows), while the second axis concatenates tables along
    the axis 1 (it appends columns).
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 其实现需要单独存储每个块。`blocks`属性存储块的列表。第一个轴沿着轴0连接表（它附加行），而第二个轴沿着轴1连接表（它附加列）。
- en: If some columns are missing when concatenating on axis 0, they are filled with
    null values. This is done using `pyarrow.concat_tables(tables, promote=True)`.
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在轴0上连接时某些列缺失，则使用null值填充。这是使用`pyarrow.concat_tables(tables, promote=True)`完成的。
- en: You can access the fully combined table by accessing the `ConcatenationTable.table`
    attribute, and the blocks by accessing the `ConcatenationTable.blocks` attribute.
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问`ConcatenationTable.table`属性访问完全合并的表，通过访问`ConcatenationTable.blocks`属性访问块。
- en: '#### `validate`'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `validate`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L179)'
- en: '[PRE85]'
  id: totrans-617
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Parameters
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`full` (`bool`, defaults to `False`) — If `True`, run expensive checks, otherwise
    cheap checks only.'
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full`（`bool`，默认为`False`）— 如果为`True`，则运行昂贵的检查，否则仅运行廉价的检查。'
- en: Raises
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`pa.lib.ArrowInvalid`'
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid`'
- en: '`pa.lib.ArrowInvalid` — if validation fails'
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pa.lib.ArrowInvalid` — 如果验证失败'
- en: Perform validation checks. An exception is raised if validation fails.
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 执行验证检查。如果验证失败，则会引发异常。
- en: By default only cheap validation checks are run. Pass `full=True` for thorough
    validation checks (potentially `O(n)`).
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，仅运行廉价的验证检查。传递`full=True`进行彻底的验证检查（可能为`O(n)`）。
- en: '#### `equals`'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `equals`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L195)'
- en: '[PRE86]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Parameters
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`other` ([Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table))
    — Table to compare against.'
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`other`（[Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)）—
    要比较的表。'
- en: '`check_metadata` `bool`, defaults to `False`) — Whether schema metadata equality
    should be checked as well.'
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check_metadata` `bool`，默认为`False`）— 是否应该检查模式元数据的相等性。'
- en: Returns
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: Check if contents of two tables are equal.
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: 检查两个表的内容是否相等。
- en: '#### `to_batches`'
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_batches`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L212)'
- en: '[PRE87]'
  id: totrans-636
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Parameters
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`max_chunksize` (`int`, defaults to `None`) — Maximum size for `RecordBatch`
    chunks. Individual chunks may be smaller depending on the chunk layout of individual
    columns.'
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_chunksize`（`int`，默认为`None`）— `RecordBatch`块的最大大小。根据各列的块布局，单个块可能较小。'
- en: Convert Table to list of (contiguous) `RecordBatch` objects.
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 将表转换为（连续）`RecordBatch`对象的列表。
- en: '#### `to_pydict`'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pydict`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L226)'
- en: '[PRE88]'
  id: totrans-642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Returns
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`dict`'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: '`dict`'
- en: Convert the Table to a `dict` or `OrderedDict`.
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: 将表转换为`dict`或`OrderedDict`。
- en: '#### `to_pandas`'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pandas`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L244)'
- en: '[PRE89]'
  id: totrans-648
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Parameters
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — Arrow MemoryPool to use
    for allocations. Uses the default memory pool is not passed.'
  id: totrans-650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool`（`MemoryPool`，默认为`None`）— 用于分配的Arrow MemoryPool。如果未传递，则使用默认内存池。'
- en: '`strings_to_categorical` (`bool`, defaults to `False`) — Encode string (UTF8)
    and binary types to `pandas.Categorical`.'
  id: totrans-651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strings_to_categorical`（`bool`，默认为`False`）— 将字符串（UTF8）和二进制类型编码为`pandas.Categorical`。'
- en: '`categories` (`list`, defaults to `empty`) — List of fields that should be
    returned as `pandas.Categorical`. Only applies to table-like data structures.'
  id: totrans-652
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categories`（`list`，默认为`empty`）— 应返回为`pandas.Categorical`的字段列表。仅适用于类似表的数据结构。'
- en: '`zero_copy_only` (`bool`, defaults to `False`) — Raise an `ArrowException`
    if this function call would require copying the underlying data.'
  id: totrans-653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zero_copy_only`（`bool`，默认为`False`）— 如果此函数调用需要复制底层数据，则引发`ArrowException`。'
- en: '`integer_object_nulls` (`bool`, defaults to `False`) — Cast integers with nulls
    to objects.'
  id: totrans-654
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`integer_object_nulls`（`bool`，默认为`False`）— 将带有空值的整数转换为对象。'
- en: '`date_as_object` (`bool`, defaults to `True`) — Cast dates to objects. If `False`,
    convert to `datetime64[ns]` dtype.'
  id: totrans-655
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_as_object`（`bool`，默认为`True`）— 将日期转换为对象。如果为`False`，则转换为`datetime64[ns]`
    dtype。'
- en: '`timestamp_as_object` (`bool`, defaults to `False`) — Cast non-nanosecond timestamps
    (`np.datetime64`) to objects. This is useful if you have timestamps that don’t
    fit in the normal date range of nanosecond timestamps (1678 CE-2262 CE). If `False`,
    all timestamps are converted to `datetime64[ns]` dtype.'
  id: totrans-656
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestamp_as_object` (`bool`，默认为 `False`) — 将非纳秒时间戳（`np.datetime64`）转换为对象。如果您有不适合正常纳秒时间戳范围（1678年至2262年）的时间戳，则此选项很有用。如果为
    `False`，则所有时间戳都将转换为 `datetime64[ns]` 类型。'
- en: '`use_threads` (`bool`, defaults to `True`) — Whether to parallelize the conversion
    using multiple threads.'
  id: totrans-657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_threads` (`bool`，默认为 `True`) — 是否使用多个线程并行化转换。'
- en: '`deduplicate_objects` (`bool`, defaults to `False`) — Do not create multiple
    copies Python objects when created, to save on memory use. Conversion will be
    slower.'
  id: totrans-658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deduplicate_objects` (`bool`，默认为 `False`) — 创建时不要创建多个 Python 对象的副本，以节省内存使用。转换速度会变慢。'
- en: '`ignore_metadata` (`bool`, defaults to `False`) — If `True`, do not use the
    ‘pandas’ metadata to reconstruct the DataFrame index, if present.'
  id: totrans-659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ignore_metadata` (`bool`，默认为 `False`) — 如果为 `True`，则不使用‘pandas’元数据来重建 DataFrame
    索引（如果存在）。'
- en: '`safe` (`bool`, defaults to `True`) — For certain data types, a cast is needed
    in order to store the data in a pandas DataFrame or Series (e.g. timestamps are
    always stored as nanoseconds in pandas). This option controls whether it is a
    safe cast or not.'
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe`（`bool`，默认为 `True`） — 对于某些数据类型，需要进行转换以便将数据存储在 pandas DataFrame 或 Series
    中（例如，时间戳始终以纳秒存储在 pandas 中）。此选项控制是否进行安全转换。'
- en: '`split_blocks` (`bool`, defaults to `False`) — If `True`, generate one internal
    “block” for each column when creating a pandas.DataFrame from a `RecordBatch`
    or `Table`. While this can temporarily reduce memory note that various pandas
    operations can trigger “consolidation” which may balloon memory use.'
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split_blocks` (`bool`，默认为 `False`) — 如果为 `True`，在从 `RecordBatch` 或 `Table`
    创建 `pandas.DataFrame` 时为每列生成一个内部“块”。虽然这可能会暂时减少内存使用量，但请注意各种 pandas 操作可能会触发“合并”，从而可能导致内存使用量激增。'
- en: '`self_destruct` (`bool`, defaults to `False`) — EXPERIMENTAL: If `True`, attempt
    to deallocate the originating Arrow memory while converting the Arrow object to
    pandas. If you use the object after calling `to_pandas` with this option it will
    crash your program.'
  id: totrans-662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`self_destruct` (`bool`，默认为 `False`) — 实验性功能：如果为 `True`，则在将 Arrow 对象转换为 pandas
    时尝试释放原始 Arrow 内存。如果在使用带有此选项的 `to_pandas` 后继续使用对象，则会导致程序崩溃。'
- en: '`types_mapper` (`function`, defaults to `None`) — A function mapping a pyarrow
    DataType to a pandas `ExtensionDtype`. This can be used to override the default
    pandas type for conversion of built-in pyarrow types or in absence of `pandas_metadata`
    in the Table schema. The function receives a pyarrow DataType and is expected
    to return a pandas `ExtensionDtype` or `None` if the default conversion should
    be used for that type. If you have a dictionary mapping, you can pass `dict.get`
    as function.'
  id: totrans-663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`types_mapper` (`function`，默认为 `None`) — 将 pyarrow DataType 映射到 pandas `ExtensionDtype`
    的函数。这可用于覆盖内置 pyarrow 类型的默认 pandas 类型转换，或在表模式中缺少 `pandas_metadata` 的情况下使用。该函数接收一个
    pyarrow DataType，并应返回一个 pandas `ExtensionDtype`，或者如果应该使用该类型的默认转换，则返回 `None`。如果有一个映射字典，可以将
    `dict.get` 作为函数传递。'
- en: Returns
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`pandas.Series` or `pandas.DataFrame`'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas.Series` 或 `pandas.DataFrame`'
- en: '`pandas.Series` or `pandas.DataFrame` depending on type of object'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 根据对象类型返回 `pandas.Series` 或 `pandas.DataFrame`
- en: Convert to a pandas-compatible NumPy array or DataFrame, as appropriate.
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 根据需要转换为与 pandas 兼容的 NumPy 数组或 DataFrame。
- en: '#### `to_string`'
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_string`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L306)'
- en: '[PRE90]'
  id: totrans-670
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '#### `field`'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `field`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L325)'
- en: '[PRE91]'
  id: totrans-673
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Parameters
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the field to retrieve.'
  id: totrans-675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i`（`Union[int, str]`） — 要检索的字段的索引或名称。'
- en: Select a schema field by its column name or numeric index.
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: 通过列名或数字索引选择模式字段。
- en: '#### `column`'
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L338)'
- en: '[PRE92]'
  id: totrans-679
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Parameters
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`Union[int, str]`) — The index or name of the column to retrieve.'
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i`（`Union[int, str]`） — 要检索的列的索引或名称。'
- en: Select a column by its column name, or numeric index.
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 按列名或数字索引选择列。
- en: '#### `itercolumns`'
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `itercolumns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L351)'
- en: '[PRE93]'
  id: totrans-685
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Iterator over all columns in their numerical order.
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 按其数字顺序迭代所有列。
- en: '#### `schema`'
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `schema`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L360)'
- en: '[PRE94]'
  id: totrans-689
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Schema of the table and its columns.
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 表及其列的模式。
- en: '#### `columns`'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L370)'
- en: '[PRE95]'
  id: totrans-693
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: List of all columns in numerical order.
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 按数字顺序列出所有列。
- en: '#### `num_columns`'
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L380)'
- en: '[PRE96]'
  id: totrans-697
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: Number of columns in this table.
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的列数。
- en: '#### `num_rows`'
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `num_rows`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L390)'
- en: '[PRE97]'
  id: totrans-701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Number of rows in this table.
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 此表中的行数。
- en: Due to the definition of a table, all columns have the same number of rows.
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 由于表的定义，所有列具有相同数量的行。
- en: '#### `shape`'
  id: totrans-704
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `shape`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L403)'
- en: '[PRE98]'
  id: totrans-706
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Returns
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`(int, int)`'
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: '`(int, int)`'
- en: Number of rows and number of columns.
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: 行数和列数。
- en: 'Dimensions of the table: (#rows, #columns).'
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 表的维度：（#行，#列）。
- en: '#### `nbytes`'
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `nbytes`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L413)'
- en: '[PRE99]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Total number of bytes consumed by the elements of the table.
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: 表中元素消耗的总字节数。
- en: '#### `column_names`'
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `column_names`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L420)'
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L420)'
- en: '[PRE100]'
  id: totrans-717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Names of the table’s columns.
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 表的列名。
- en: '#### `slice`'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `slice`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1480)'
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1480)'
- en: '[PRE101]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Parameters
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`offset` (`int`, defaults to `0`) — Offset from start of table to slice.'
  id: totrans-723
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`offset` (`int`，默认为`0`) — 从表的起始位置偏移。'
- en: '`length` (`int`, defaults to `None`) — Length of slice (default is until end
    of table starting from offset).'
  id: totrans-724
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`length` (`int`，默认为`None`) — 切片的长度（默认为从偏移开始直到表的末尾）。'
- en: Compute zero-copy slice of this Table.
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: 计算此表的零拷贝切片。
- en: '#### `filter`'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `filter`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1511)'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1511)'
- en: '[PRE102]'
  id: totrans-728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Select records from a Table. See `pyarrow.compute.filter` for full usage.
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 从表中选择记录。查看`pyarrow.compute.filter`以获取完整用法。
- en: '#### `flatten`'
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `flatten`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1522)'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1522)'
- en: '[PRE103]'
  id: totrans-732
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Parameters
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — For memory allocations,
    if required, otherwise use default pool.'
  id: totrans-734
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool` (`MemoryPool`，默认为`None`) — 对于内存分配，如果需要，否则使用默认池。'
- en: Flatten this Table. Each column with a struct type is flattened into one column
    per struct field. Other columns are left unchanged.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 展平此表。具有结构类型的每列都被展平为每个结构字段的一列。其他列保持不变。
- en: '#### `combine_chunks`'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `combine_chunks`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1540)'
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1540)'
- en: '[PRE104]'
  id: totrans-738
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Parameters
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`memory_pool` (`MemoryPool`, defaults to `None`) — For memory allocations,
    if required, otherwise use default pool.'
  id: totrans-740
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memory_pool` (`MemoryPool`，默认为`None`) — 对于内存分配，如果需要，否则使用默认池。'
- en: Make a new table by combining the chunks this table has.
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: 通过合并此表的块创建新表。
- en: All the underlying chunks in the `ChunkedArray` of each column are concatenated
    into zero or one chunk.
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: 每列中`ChunkedArray`的基础块都被连接成零个或一个块。
- en: '#### `cast`'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `cast`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1560)'
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1560)'
- en: '[PRE105]'
  id: totrans-745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Parameters
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`target_schema` (`Schema`) — Schema to cast to, the names and order of fields
    must match.'
  id: totrans-747
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target_schema` (`Schema`) — 要转换的模式，字段的名称和顺序必须匹配。'
- en: '`safe` (`bool`, defaults to `True`) — Check for overflows or other unsafe conversions.'
  id: totrans-748
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe` (`bool`，默认为`True`) — 检查溢出或其他不安全的转换。'
- en: Cast table values to another schema.
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: 将表值转换为另一个模式。
- en: '#### `replace_schema_metadata`'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `replace_schema_metadata`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1591)'
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1591)'
- en: '[PRE106]'
  id: totrans-752
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Parameters
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`metadata` (`dict`, defaults to `None`) —'
  id: totrans-754
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata` (`dict`，默认为`None`) —'
- en: Returns
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: shallow_copy
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: 浅拷贝
- en: 'EXPERIMENTAL: Create shallow copy of table by replacing schema key-value metadata
    with the indicated new metadata (which may be `None`, which deletes any existing
    metadata).'
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性功能：通过用指定的新元数据（可能为`None`，这将删除任何现有元数据）替换模式键值元数据，创建表的浅拷贝。
- en: '#### `add_column`'
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1609)'
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1609)'
- en: '[PRE107]'
  id: totrans-761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Parameters
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index to place the column at.'
  id: totrans-763
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 要放置列的索引。'
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-764
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断出来。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-765
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column added.
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: 添加传递的列后的新表。
- en: Add column to Table at position.
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定位置向表中添加列。
- en: A new table is returned with the column added, the original table object is
    left unchanged.
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: 返回添加了列的新表，原始表对象保持不变。
- en: '#### `append_column`'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `append_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1630)'
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1630)'
- en: '[PRE108]'
  id: totrans-773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Parameters
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-775
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断出来。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-776
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column added.
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: 添加传递的列后的新表。
- en: Append column at end of columns.
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 在列的末尾追加列。
- en: '#### `remove_column`'
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `remove_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1647)'
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1647)'
- en: '[PRE109]'
  id: totrans-783
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Parameters
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index of column to remove.'
  id: totrans-785
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 要移除的列的索引。'
- en: Returns
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table without the column.
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 不包含该列的新表。
- en: Create new Table with the indicated column removed.
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新表，删除指定的列。
- en: '#### `set_column`'
  id: totrans-790
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_column`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1671)'
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1671)'
- en: '[PRE110]'
  id: totrans-792
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Parameters
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`i` (`int`) — Index to place the column at.'
  id: totrans-794
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i` (`int`) — 要放置列的索引。'
- en: '`field_` (`Union[str, pyarrow.Field]`) — If a string is passed then the type
    is deduced from the column data.'
  id: totrans-795
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`field_` (`Union[str, pyarrow.Field]`) — 如果传递字符串，则类型将从列数据中推断出来。'
- en: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — Column data.'
  id: totrans-796
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column` (`Union[pyarrow.Array, List[pyarrow.Array]]`) — 列数据。'
- en: Returns
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table with the passed column set.
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: 添加传递的列后的新表。
- en: Replace column in Table at position.
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: 替换表中指定位置的列。
- en: '#### `rename_columns`'
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `rename_columns`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1690)'
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1690)'
- en: '[PRE111]'
  id: totrans-803
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Create new table with columns renamed to provided names.
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新表格，将列重命名为提供的名称。
- en: '#### `select`'
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `select`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1724)'
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1724)'
- en: '[PRE112]'
  id: totrans-807
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Parameters
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`columns` (`Union[List[str], List[int]]`) — The column names or integer indices
    to select.'
  id: totrans-809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns`（`Union[List[str], List[int]]`） — 要选择的列名或整数索引。'
- en: Returns
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[datasets.table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)'
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: '[datasets.table.Table](/docs/datasets/v2.17.0/en/package_reference/table_classes#datasets.table.Table)'
- en: New table with the specified columns, and metadata preserved.
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: 具有指定列的新表格，并保留元数据。
- en: Select columns of the table.
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: 选择表格的列。
- en: Returns a new table with the specified columns, and metadata preserved.
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有指定列的新表格，并保留元数据。
- en: '#### `drop`'
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `drop`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1703)'
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1703)'
- en: '[PRE113]'
  id: totrans-817
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Parameters
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`columns` (`List[str]`) — List of field names referencing existing columns.'
  id: totrans-819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns`（`List[str]`） — 引用现有列的字段名称列表。'
- en: Returns
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: New table without the columns.
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: 不包含列的新表格。
- en: Raises
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`KeyError`'
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: '`KeyError`'
- en: '`KeyError` — : if any of the passed columns name are not existing.'
  id: totrans-825
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeyError` — ：如果传递的列名中有任何不存在的列。'
- en: Drop one or more columns and return a new table.
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: 删除一个或多个列并返回一个新表格。
- en: '#### `from_blocks`'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_blocks`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1376)'
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1376)'
- en: '[PRE114]'
  id: totrans-829
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '#### `from_tables`'
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_tables`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1390)'
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1390)'
- en: '[PRE115]'
  id: totrans-832
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Parameters
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`tables` (list of `Table` or list of `pyarrow.Table`) — List of tables.'
  id: totrans-834
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tables`（`Table`或`pyarrow.Table`的列表） — 表格列表。'
- en: '`axis` (`{0, 1}`, defaults to `0`, meaning over rows) — Axis to concatenate
    over, where `0` means over rows (vertically) and `1` means over columns (horizontally).'
  id: totrans-835
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`axis` (`{0, 1}`, 默认为`0`，表示在行上) — 要连接的轴，其中`0`表示在行上（垂直），`1`表示在列上（水平）。'
- en: Added in 1.6.0
  id: totrans-836
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加于1.6.0
- en: Create `ConcatenationTable` from list of tables.
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: 从表格列表创建`ConcatenationTable`。
- en: Utils
  id: totrans-838
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具
- en: '#### `datasets.table.concat_tables`'
  id: totrans-839
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `datasets.table.concat_tables`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1744)'
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1744)'
- en: '[PRE116]'
  id: totrans-841
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Parameters
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`tables` (list of `Table`) — List of tables to be concatenated.'
  id: totrans-843
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tables`（`Table`的列表） — 要连接的表格列表。'
- en: '`axis` (`{0, 1}`, defaults to `0`, meaning over rows) — Axis to concatenate
    over, where `0` means over rows (vertically) and `1` means over columns (horizontally).'
  id: totrans-844
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`axis` (`{0, 1}`, 默认为`0`，表示在行上) — 要连接的轴，其中`0`表示在行上（垂直），`1`表示在列上（水平）。'
- en: Added in 1.6.0
  id: totrans-845
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加于1.6.0
- en: Returns
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`datasets.table.Table`'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: '`datasets.table.Table`'
- en: If the number of input tables is > 1, then the returned table is a `datasets.table.ConcatenationTable`.
    Otherwise if there’s only one table, it is returned as is.
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入表格的数量大于1，则返回的表格是`datasets.table.ConcatenationTable`。否则，如果只有一个表格，则返回原样。
- en: Concatenate tables.
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 连接表格。
- en: '#### `datasets.table.list_table_cache_files`'
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `datasets.table.list_table_cache_files`'
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1767)'
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/table.py#L1767)'
- en: '[PRE117]'
  id: totrans-852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Returns
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`List[str]`'
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: '`List[str]`'
- en: A list of paths to the cache files loaded by the table.
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含表格加载的缓存文件路径的列表。
- en: Get the cache files that are loaded by the table. Cache file are used when parts
    of the table come from the disk via memory mapping.
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 获取表格加载的缓存文件。当表格的部分来自磁盘通过内存映射时，会使用缓存文件。
