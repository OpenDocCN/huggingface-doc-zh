- en: ConsistencyDecoderScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ConsistencyDecoderScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/consistency_decoder](https://huggingface.co/docs/diffusers/api/schedulers/consistency_decoder)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '原始文本: [https://huggingface.co/docs/diffusers/api/schedulers/consistency_decoder](https://huggingface.co/docs/diffusers/api/schedulers/consistency_decoder)'
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: This scheduler is a part of the `ConsistencyDecoderPipeline` and was introduced
    in [DALL-E 3](https://openai.com/dall-e-3).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此调度器是 `ConsistencyDecoderPipeline` 的一部分，并在 [DALL-E 3](https://openai.com/dall-e-3)
    中引入。
- en: The original codebase can be found at [openai/consistency_models](https://github.com/openai/consistency_models).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 原始代码库可以在 [openai/consistency_models](https://github.com/openai/consistency_models)
    找到。
- en: ConsistencyDecoderScheduler
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ConsistencyDecoderScheduler
- en: '### `class diffusers.schedulers.ConsistencyDecoderScheduler`'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.ConsistencyDecoderScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_consistency_decoder.py#L72)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_consistency_decoder.py#L72)'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '#### `scale_model_input`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_consistency_decoder.py#L116)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_consistency_decoder.py#L116)'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`样本` (`torch.FloatTensor`) — 输入样本。'
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`时间步长` (`int`, *可选的*) — 扩散链中的当前时间步长。'
- en: Returns
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经过缩放的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度器可以互换。
- en: '#### `step`'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_consistency_decoder.py#L133)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_consistency_decoder.py#L133)'
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from the learned diffusion
    model.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出的结果。'
- en: '`timestep` (`float`) — The current timestep in the diffusion chain.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`时间步长` (`float`) — 扩散链中的当前时间步长。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`样本` (`torch.FloatTensor`) — 由扩散过程创建的样本的当前实例。'
- en: '`generator` (`torch.Generator`, *optional*) — A random number generator.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`生成器` (`torch.Generator`, *可选的*) — 一个随机数生成器。'
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a `~schedulers.scheduling_consistency_models.ConsistencyDecoderSchedulerOutput`
    or `tuple`.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`, *可选的*, 默认为 `True`) — 是否返回 `~schedulers.scheduling_consistency_models.ConsistencyDecoderSchedulerOutput`
    或 `tuple`。'
- en: Returns
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`~schedulers.scheduling_consistency_models.ConsistencyDecoderSchedulerOutput`
    or `tuple`'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`~schedulers.scheduling_consistency_models.ConsistencyDecoderSchedulerOutput`
    或 `tuple`'
- en: If return_dict is `True`, `~schedulers.scheduling_consistency_models.ConsistencyDecoderSchedulerOutput`
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 return_dict 为 `True`，则返回 `~schedulers.scheduling_consistency_models.ConsistencyDecoderSchedulerOutput`，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转 SDE 预测前一个时间步的样本。此函数从学习模型输出（通常是预测的噪声）中传播扩散过程。
