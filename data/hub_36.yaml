- en: Using GPU Spaces
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GPU Spaces
- en: 'Original text: [https://huggingface.co/docs/hub/spaces-gpus](https://huggingface.co/docs/hub/spaces-gpus)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/hub/spaces-gpus](https://huggingface.co/docs/hub/spaces-gpus)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: You can upgrade your Space to use a GPU accelerator using the *Settings* button
    in the top navigation bar of the Space. You can even request a free upgrade if
    you are building a cool demo for a side project!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在Space顶部导航栏中使用*设置*按钮来升级您的Space以使用GPU加速器。如果您正在为一个副业项目构建一个很酷的演示，甚至可以请求免费升级！
- en: '![](../Images/f250872d73732a4ae6f12dd2dfa240d2.png) ![](../Images/666b57cb00f4f222cf0073074268799c.png)Longer-term,
    we would also like to expose non-GPU hardware, like HPU, IPU or TPU. If you have
    a specific AI hardware you''d like to run on, please let us know (website at huggingface.co).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/f250872d73732a4ae6f12dd2dfa240d2.png) ![](../Images/666b57cb00f4f222cf0073074268799c.png)长期来看，我们还希望公开非GPU硬件，如HPU、IPU或TPU。如果您有特定的AI硬件希望运行，请告诉我们（网站在huggingface.co）。'
- en: 'As soon as your Space is running on GPU you can see which hardware it’s running
    on directly from this badge:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的Space在GPU上运行，您可以直接从此徽章上看到它正在运行的硬件：
- en: '![](../Images/68b2c747962ca5143f60782b8531081c.png) ![](../Images/bb429b5fd1102e9c89033e8c763fb07f.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/68b2c747962ca5143f60782b8531081c.png) ![](../Images/bb429b5fd1102e9c89033e8c763fb07f.png)'
- en: Hardware Specs
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件规格
- en: In the following table, you can see the Specs for the different upgrade options.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在下表中，您可以看到不同升级选项的规格。
- en: '| **Hardware** | **GPU Memory** | **CPU** | **Memory** | **Disk** | **Hourly
    Price** |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| **硬件** | **GPU内存** | **CPU** | **内存** | **磁盘** | **每小时价格** |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| CPU Basic | - | 2 vCPU | 16 GB | 50 GB | Free! |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| CPU基础 | - | 2 vCPU | 16 GB | 50 GB | 免费！ |'
- en: '| CPU Upgrade | - | 8 vCPU | 32 GB | 50 GB | $0.03 |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| CPU升级 | - | 8 vCPU | 32 GB | 50 GB | $0.03 |'
- en: '| Nvidia T4 - small | 16GB | 4 vCPU | 15 GB | 50 GB | $0.60 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia T4 - 小 | 16GB | 4 vCPU | 15 GB | 50 GB | $0.60 |'
- en: '| Nvidia T4 - medium | 16GB | 8 vCPU | 30 GB | 100 GB | $0.90 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia T4 - 中 | 16GB | 8 vCPU | 30 GB | 100 GB | $0.90 |'
- en: '| Nvidia A10G - small | 24GB | 4 vCPU | 15 GB | 110 GB | $1.05 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia A10G - 小 | 24GB | 4 vCPU | 15 GB | 110 GB | $1.05 |'
- en: '| Nvidia A10G - large | 24GB | 12 vCPU | 46 GB | 200 GB | $3.15 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia A10G - 大 | 24GB | 12 vCPU | 46 GB | 200 GB | $3.15 |'
- en: '| Nvidia A100 - large | 40GB | 12 vCPU | 142 GB | 1000 GB | $4.13 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia A100 - 大 | 40GB | 12 vCPU | 142 GB | 1000 GB | $4.13 |'
- en: Configure hardware programmatically
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过编程配置硬件
- en: You can programmatically configure your Space hardware using `huggingface_hub`.
    This allows for a wide range of use cases where you need to dynamically assign
    GPUs. Check out [this guide](https://huggingface.co/docs/huggingface_hub/main/en/guides/manage_spaces)
    for more details.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`huggingface_hub`来以编程方式配置您的Space硬件。这允许在需要动态分配GPU的各种用例中使用。查看[此指南](https://huggingface.co/docs/huggingface_hub/main/en/guides/manage_spaces)以获取更多详细信息。
- en: Framework specific requirements
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 框架特定要求
- en: Most Spaces should run out of the box after a GPU upgrade, but sometimes you’ll
    need to install CUDA versions of the machine learning frameworks you use. Please,
    follow this guide to ensure your Space takes advantage of the improved hardware.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Spaces在GPU升级后应该可以直接运行，但有时您需要安装您使用的机器学习框架的CUDA版本。请按照本指南确保您的Space充分利用改进的硬件。
- en: PyTorch
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PyTorch
- en: 'You’ll need to install a version of PyTorch compatible with the built-in CUDA
    drivers. Adding the following two lines to your `requirements.txt` file should
    work:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装与内置CUDA驱动程序兼容的PyTorch版本。将以下两行添加到您的`requirements.txt`文件中应该可以工作：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can verify whether the installation was successful by running the following
    code in your `app.py` and checking the output in your Space logs:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在您的`app.py`中运行以下代码并在您的Space日志中检查输出来验证安装是否成功：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Many frameworks automatically use the GPU if one is available. This is the
    case for the Pipelines in 🤗 `transformers`, `fastai` and many others. In other
    cases, or if you use PyTorch directly, you may need to move your models and data
    to the GPU to ensure computation is done on the accelerator and not on the CPU.
    You can use PyTorch’s `.to()` syntax, for example:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 许多框架在有GPU时会自动使用GPU。这适用于🤗`transformers`、`fastai`等库中的Pipelines。在其他情况下，或者如果您直接使用PyTorch，您可能需要将您的模型和数据移动到GPU上，以确保计算在加速器上而不是在CPU上进行。您可以使用PyTorch的`.to()`语法，例如：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: JAX
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JAX
- en: 'If you use JAX, you need to specify the URL that contains CUDA compatible packages.
    Please, add the following lines to your `requirements.txt` file:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用JAX，您需要指定包含CUDA兼容包的URL。请将以下行添加到您的`requirements.txt`文件中：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After that, you can verify the installation by printing the output from the
    following code and checking it in your Space logs.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，您可以通过打印以下代码的输出并在您的Space日志中检查来验证安装是否成功。
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tensorflow
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Tensorflow
- en: The default `tensorflow` installation should recognize the CUDA device. Just
    add `tensorflow` to your `requirements.txt` file and use the following code in
    your `app.py` to verify in your Space logs.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的`tensorflow`安装应该能够识别CUDA设备。只需将`tensorflow`添加到您的`requirements.txt`文件中，并在您的`app.py`中使用以下代码来在您的Space日志中进行验证。
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Billing
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计费
- en: 'Billing on Spaces is based on hardware usage and is computed by the minute:
    you get charged for every minute the Space runs on the requested hardware, regardless
    of whether the Space is used.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Spaces上的计费基于硬件使用情况，并按分钟计算：您将为Space在请求的硬件上运行的每一分钟收费，无论Space是否被使用。
- en: During a Space’s lifecycle, it is only billed when the Space is actually `Running`.
    This means that there is no cost during build or startup.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在Space的生命周期中，只有当Space实际处于`运行`状态时才会计费。这意味着在构建或启动过程中没有费用。
- en: If a running Space starts to fail, it will be automatically suspended and the
    billing will stop.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果正在运行的Space开始失败，它将被自动暂停，计费也将停止。
- en: Spaces running on free hardware are suspended automatically if they are not
    used for an extended period of time (e.g. two days). Upgraded Spaces run indefinitely
    by default, even if there is no usage. You can change this behavior by [setting
    a custom “sleep time”](#sleep-time) in the Space’s settings. To interrupt the
    billing on your Space, you can change the Hardware to CPU basic, or [pause](#pause)
    it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 运行在免费硬件上的空间如果长时间不使用（例如两天），将自动暂停。升级后的空间默认情况下会永久运行，即使没有使用。您可以通过在空间设置中[设置自定义“睡眠时间”](#sleep-time)来更改此行为。要中断空间的计费，您可以将硬件更改为CPU基础，或者[暂停](#pause)它。
- en: Additional information about billing can be found in the [dedicated Hub-wide
    section](./billing).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 关于计费的额外信息可以在[专门的全局部分](./billing)中找到。
- en: Community GPU Grants
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 社区GPU赠款
- en: 'Do you have an awesome Space but need help covering the GPU hardware upgrade
    costs? We love helping out those with an innovative Space so please feel free
    to apply for a community GPU grant and see if yours makes the cut! This application
    can be found in your Space hardware repo settings in the lower left corner under
    “sleep time settings”:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您是否拥有一个很棒的空间，但需要帮助支付GPU硬件升级的费用？我们很乐意帮助那些拥有创新空间的人，所以请随时申请社区GPU赠款，看看您的空间是否符合条件！此申请可以在您的空间硬件存储库设置中找到，位于左下角的“睡眠时间设置”下方：
- en: '![Community GPU Grant](../Images/53688f2d91512644bb224b818b9a356d.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![社区GPU赠款](../Images/53688f2d91512644bb224b818b9a356d.png)'
- en: Set a custom sleep time
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置自定义睡眠时间
- en: If your Space runs on the default `cpu-basic` hardware, it will go to sleep
    if inactive for more than a set time (currently, 48 hours). Anyone visiting your
    Space will restart it automatically.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的空间运行在默认的`cpu-basic`硬件上，并且在超过一定时间（目前为48小时）内处于非活动状态，它将进入睡眠状态。任何访问您的空间的人都将自动重新启动它。
- en: If you want your Space never to deactivate or if you want to set a custom sleep
    time, you need to upgrade to a paid Hardware.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望您的空间永远不会停用，或者想设置自定义睡眠时间，您需要升级到付费硬件。
- en: By default, an upgraded Space will never go to sleep. However, you can use this
    setting for your upgraded Space to become idle (`stopped` stage) when it’s unused
    😴. You are not going to be charged for the upgraded hardware while it is asleep.
    The Space will ‘wake up’ or get restarted once it receives a new visitor.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，升级后的空间永远不会进入睡眠状态。但是，您可以使用此设置使您的升级后的空间在未使用时变为空闲（`停止`阶段）😴。在空间处于休眠状态时，您不会被收取升级硬件的费用。一旦空间收到新访客，空间将“唤醒”或重新启动。
- en: 'The following interface will then be available in your Spaces hardware settings:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在您的空间硬件设置中将提供以下界面：
- en: '![](../Images/13dc5075b8c78365eb0eed9b0def888f.png) ![](../Images/e279b61cfbb67cbfafc33ca4ee956593.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/13dc5075b8c78365eb0eed9b0def888f.png) ![](../Images/e279b61cfbb67cbfafc33ca4ee956593.png)'
- en: 'The following options are available:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下选项可用：
- en: '![](../Images/f217013f6a02f28770fef1607f219710.png) ![](../Images/7bcb6e2518414ad6d4b5fe06c961dcb5.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f217013f6a02f28770fef1607f219710.png) ![](../Images/7bcb6e2518414ad6d4b5fe06c961dcb5.png)'
- en: Pausing a Space
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 暂停一个空间
- en: You can `pause` a Space from the repo settings. A “paused” Space means that
    the Space is on hold and will not use resources until manually restarted, and
    only the owner of a paused Space can restart it. Paused time is not billed.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从存储库设置中`暂停`一个空间。 “暂停”空间意味着该空间被暂停，直到手动重新启动，只有暂停空间的所有者才能重新启动。暂停时间不计费。
