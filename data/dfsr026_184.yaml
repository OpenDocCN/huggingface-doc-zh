- en: Schedulers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调度器
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/overview](https://huggingface.co/docs/diffusers/api/schedulers/overview)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/overview](https://huggingface.co/docs/diffusers/api/schedulers/overview)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 🤗 Diffusers provides many scheduler functions for the diffusion process. A scheduler
    takes a model’s output (the sample which the diffusion process is iterating on)
    and a timestep to return a denoised sample. The timestep is important because
    it dictates where in the diffusion process the step is; data is generated by iterating
    forward *n* timesteps and inference occurs by propagating backward through the
    timesteps. Based on the timestep, a scheduler may be *discrete* in which case
    the timestep is an `int` or *continuous* in which case the timestep is a `float`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 Diffusers 提供了许多扩散过程的调度器函数。调度器接收模型的输出（扩散过程正在迭代的样本）和一个时间步长，返回一个去噪的样本。时间步长很重要，因为它决定了步骤在扩散过程中的位置；数据是通过向前迭代
    *n* 个时间步生成的，推断是通过向后传播到时间步中进行的。根据时间步长，调度器可能是*离散*的，此时时间步长是一个 `int`，或者是*连续*的，此时时间步长是一个
    `float`。
- en: 'Depending on the context, a scheduler defines how to iteratively add noise
    to an image or how to update a sample based on a model’s output:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上下文，调度器定义了如何迭代地向图像添加噪声或者根据模型的输出更新样本：
- en: during *training*, a scheduler adds noise (there are different algorithms for
    how to add noise) to a sample to train a diffusion model
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*训练*期间，调度器向样本添加噪声（有不同的算法来添加噪声）以训练扩散模型
- en: during *inference*, a scheduler defines how to update a sample based on a pretrained
    model’s output
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*推断*期间，调度器定义了如何根据预训练模型的输出更新样本
- en: 'Many schedulers are implemented from the [k-diffusion](https://github.com/crowsonkb/k-diffusion)
    library by [Katherine Crowson](https://github.com/crowsonkb/), and they’re also
    widely used in A1111\. To help you map the schedulers from k-diffusion and A1111
    to the schedulers in 🤗 Diffusers, take a look at the table below:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 许多调度器是从 [k-diffusion](https://github.com/crowsonkb/k-diffusion) 库中由 [Katherine
    Crowson](https://github.com/crowsonkb/) 实现的，并且它们也广泛用于 A1111。为了帮助您将 k-diffusion
    和 A1111 中的调度器映射到 🤗 Diffusers 中的调度器，请查看下表：
- en: '| A1111/k-diffusion | 🤗 Diffusers | Usage |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| A1111/k-diffusion | 🤗 Diffusers | 用法 |'
- en: '| --- | --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| DPM++ 2M | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    |  |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ 2M | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    |  |'
- en: '| DPM++ 2M Karras | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    | init with `use_karras_sigmas=True` |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ 2M Karras | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    | 初始化时使用 `use_karras_sigmas=True` |'
- en: '| DPM++ 2M SDE | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    | init with `algorithm_type="sde-dpmsolver++"` |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ 2M SDE | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    | 初始化时使用 `algorithm_type="sde-dpmsolver++"` |'
- en: '| DPM++ 2M SDE Karras | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    | init with `use_karras_sigmas=True` and `algorithm_type="sde-dpmsolver++"` |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ 2M SDE Karras | [DPMSolverMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/multistep_dpm_solver#diffusers.DPMSolverMultistepScheduler)
    | 初始化时使用 `use_karras_sigmas=True` 和 `algorithm_type="sde-dpmsolver++"` |'
- en: '| DPM++ 2S a | N/A | very similar to `DPMSolverSinglestepScheduler` |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ 2S a | N/A | 与 `DPMSolverSinglestepScheduler` 非常相似 |'
- en: '| DPM++ 2S a Karras | N/A | very similar to `DPMSolverSinglestepScheduler(use_karras_sigmas=True,
    ...)` |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ 2S a Karras | N/A | 与 `DPMSolverSinglestepScheduler(use_karras_sigmas=True,
    ...)` 非常相似 |'
- en: '| DPM++ SDE | [DPMSolverSinglestepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/singlestep_dpm_solver#diffusers.DPMSolverSinglestepScheduler)
    |  |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ SDE | [DPMSolverSinglestepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/singlestep_dpm_solver#diffusers.DPMSolverSinglestepScheduler)
    |  |'
- en: '| DPM++ SDE Karras | [DPMSolverSinglestepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/singlestep_dpm_solver#diffusers.DPMSolverSinglestepScheduler)
    | init with `use_karras_sigmas=True` |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| DPM++ SDE Karras | [DPMSolverSinglestepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/singlestep_dpm_solver#diffusers.DPMSolverSinglestepScheduler)
    | 初始化时使用 `use_karras_sigmas=True` |'
- en: '| DPM2 | [KDPM2DiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete#diffusers.KDPM2DiscreteScheduler)
    |  |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| DPM2 | [KDPM2DiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete#diffusers.KDPM2DiscreteScheduler)
    |  |'
- en: '| DPM2 Karras | [KDPM2DiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete#diffusers.KDPM2DiscreteScheduler)
    | init with `use_karras_sigmas=True` |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| DPM2 Karras | [KDPM2DiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete#diffusers.KDPM2DiscreteScheduler)
    | 初始化时使用 `use_karras_sigmas=True` |'
- en: '| DPM2 a | [KDPM2AncestralDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.KDPM2AncestralDiscreteScheduler)
    |  |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| DPM2 a | [KDPM2AncestralDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.KDPM2AncestralDiscreteScheduler)
    |  |'
- en: '| DPM2 a Karras | [KDPM2AncestralDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.KDPM2AncestralDiscreteScheduler)
    | init with `use_karras_sigmas=True` |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| DPM2 a Karras | [KDPM2AncestralDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.KDPM2AncestralDiscreteScheduler)
    | 初始化时使用 `use_karras_sigmas=True` |'
- en: '| DPM adaptive | N/A |  |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| DPM adaptive | N/A |  |'
- en: '| DPM fast | N/A |  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| DPM fast | N/A |  |'
- en: '| Euler | [EulerDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.EulerDiscreteScheduler)
    |  |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| Euler | [EulerDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/euler#diffusers.EulerDiscreteScheduler)
    |  |'
- en: '| Euler a | [EulerAncestralDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/euler_ancestral#diffusers.EulerAncestralDiscreteScheduler)
    |  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| Euler a | [EulerAncestralDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/euler_ancestral#diffusers.EulerAncestralDiscreteScheduler)
    |  |'
- en: '| Heun | [HeunDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/heun#diffusers.HeunDiscreteScheduler)
    |  |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| Heun | [HeunDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/heun#diffusers.HeunDiscreteScheduler)
    |  |'
- en: '| LMS | [LMSDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/lms_discrete#diffusers.LMSDiscreteScheduler)
    |  |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| LMS | [LMSDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/lms_discrete#diffusers.LMSDiscreteScheduler)
    |  |'
- en: '| LMS Karras | [LMSDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/lms_discrete#diffusers.LMSDiscreteScheduler)
    | init with `use_karras_sigmas=True` |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| LMS Karras | [LMSDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/lms_discrete#diffusers.LMSDiscreteScheduler)
    | 使用 `use_karras_sigmas=True` 初始化 |'
- en: '| N/A | [DEISMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/deis#diffusers.DEISMultistepScheduler)
    |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| N/A | [DEISMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/deis#diffusers.DEISMultistepScheduler)
    |  |'
- en: '| N/A | [UniPCMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/unipc#diffusers.UniPCMultistepScheduler)
    |  |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| N/A | [UniPCMultistepScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/unipc#diffusers.UniPCMultistepScheduler)
    |  |'
- en: All schedulers are built from the base [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    class which implements low level utilities shared by all schedulers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 所有调度器都是从基础 [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    类构建的，该类实现了所有调度器共享的低级实用程序。
- en: SchedulerMixin
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SchedulerMixin
- en: '### `class diffusers.SchedulerMixin`'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.SchedulerMixin`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L64)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L64)'
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Base class for all schedulers.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所有调度器的基类。
- en: '[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    contains common functions shared by all schedulers such as general loading and
    saving functionalities.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    包含所有调度器共享的通用函数，如一般加载和保存功能。'
- en: '[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)
    takes care of storing the configuration attributes (like `num_train_timesteps`)
    that are passed to the scheduler’s `__init__` function, and the attributes can
    be accessed by `scheduler.config.num_train_timesteps`.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)
    负责存储传递给调度器的 `__init__` 函数的配置属性（如 `num_train_timesteps`），这些属性可以通过 `scheduler.config.num_train_timesteps`
    访问。'
- en: 'Class attributes:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '类属性:'
- en: '`_compatibles` (`List[str]`) — A list of scheduler classes that are compatible
    with the parent scheduler class. Use [from_config()](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin.from_config)
    to load a different compatible scheduler class (should be overridden by parent
    class).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_compatibles` (`List[str]`) — 与父调度器类兼容的调度器类列表。使用 [from_config()](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin.from_config)
    加载不同的兼容调度器类（应该被父类覆盖）。'
- en: '#### `from_pretrained`'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L84)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L84)'
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) — Can
    be either:'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str` 或 `os.PathLike`, *optional*) — 可以是：'
- en: A string, the *model id* (for example `google/ddpm-celebahq-256`) of a pretrained
    model hosted on the Hub.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练模型在 Hub 上托管的 *模型 ID*（例如 `google/ddpm-celebahq-256`）。
- en: A path to a *directory* (for example `./my_model_directory`) containing the
    scheduler configuration saved with [save_pretrained()](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin.save_pretrained).
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 *目录* 路径（例如 `./my_model_directory`），其中包含使用 [save_pretrained()](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin.save_pretrained)
    保存的调度器配置。
- en: '`subfolder` (`str`, *optional*) — The subfolder location of a model file within
    a larger model repository on the Hub or locally.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subfolder` (`str`, *optional*) — 在 Hub 或本地的较大模型存储库中模型文件的子文件夹位置。'
- en: '`return_unused_kwargs` (`bool`, *optional*, defaults to `False`) — Whether
    kwargs that are not consumed by the Python class should be returned or not.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_unused_kwargs` (`bool`, *optional*, 默认为 `False`) — 是否返回未被 Python 类使用的
    kwargs。'
- en: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) — Path to a directory where
    a downloaded pretrained model configuration is cached if the standard cache is
    not used.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) — 下载预训练模型配置的缓存目录路径，如果不使用标准缓存。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`, *optional*, 默认为 `False`) — 是否强制（重新）下载模型权重和配置文件，覆盖缓存版本。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to resume downloading the model weights and configuration files. If set to `False`,
    any incompletely downloaded files are deleted.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`, *optional*, 默认为 `False`) — 是否恢复下载模型权重和配置文件。如果设置为
    `False`，则删除任何未完全下载的文件。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`Dict[str, str]`, *optional*) — 一个代理服务器字典，按协议或端点使用，例如，`{''http'':
    ''foo.bar:3128'', ''http://hostname'': ''foo.bar:4012''}`。代理在每个请求上使用。'
- en: '`output_loading_info(bool,` *optional*, defaults to `False`) — Whether or not
    to also return a dictionary containing missing keys, unexpected keys and error
    messages.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_loading_info(bool,` *optional*, 默认为 `False`) — 是否还返回包含缺失键、意外键和错误消息的字典。'
- en: '`local_files_only(bool,` *optional*, defaults to `False`) — Whether to only
    load local model weights and configuration files or not. If set to `True`, the
    model won’t be downloaded from the Hub.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_files_only(bool,` *optional*, 默认为 `False`) — 是否仅加载本地模型权重和配置文件。如果设置为
    `True`，则不会从 Hub 下载模型。'
- en: '`token` (`str` or *bool*, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str` 或 *bool*, *optional*) — 用作远程文件的 HTTP bearer 授权的令牌。如果为 `True`，则使用从
    `diffusers-cli login` 生成的令牌（存储在 `~/.huggingface`）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, a commit id, or any identifier allowed
    by Git.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *optional*, 默认为 `"main"`) — 要使用的特定模型版本。可以是分支名称、标签名称、提交 ID
    或 Git 允许的任何标识符。'
- en: Instantiate a scheduler from a pre-defined JSON configuration file in a local
    directory or Hub repository.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 从本地目录或 Hub 存储库中的预定义 JSON 配置文件实例化调度程序。
- en: To use private or [gated models](https://huggingface.co/docs/hub/models-gated#gated-models),
    log-in with `huggingface-cli login`. You can also activate the special [“offline-mode”](https://huggingface.co/diffusers/installation.html#offline-mode)
    to use this method in a firewalled environment.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用私有或[门控模型](https://huggingface.co/docs/hub/models-gated#gated-models)，请使用
    `huggingface-cli login` 登录。您还可以激活特殊的[“离线模式”](https://huggingface.co/diffusers/installation.html#offline-mode)以在防火墙环境中使用此方法。
- en: '#### `save_pretrained`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `save_pretrained`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L151)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L151)'
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`save_directory` (`str` or `os.PathLike`) — Directory where the configuration
    JSON file will be saved (will be created if it does not exist).'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save_directory` (`str` 或 `os.PathLike`) — 将保存配置 JSON 文件的目录（如果不存在将创建）。'
- en: '`push_to_hub` (`bool`, *optional*, defaults to `False`) — Whether or not to
    push your model to the Hugging Face Hub after saving it. You can specify the repository
    you want to push to with `repo_id` (will default to the name of `save_directory`
    in your namespace).'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`push_to_hub` (`bool`, *可选*, 默认为 `False`) — 是否在保存后将模型推送到 Hugging Face Hub。您可以使用
    `repo_id` 指定要推送到的存储库（将默认为您的命名空间中的 `save_directory` 名称）。'
- en: '`kwargs` (`Dict[str, Any]`, *optional*) — Additional keyword arguments passed
    along to the [push_to_hub()](/docs/diffusers/v0.26.3/en/api/models/overview#diffusers.utils.PushToHubMixin.push_to_hub)
    method.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`, *可选*) — 传递给 [push_to_hub()](/docs/diffusers/v0.26.3/en/api/models/overview#diffusers.utils.PushToHubMixin.push_to_hub)
    方法的额外关键字参数。'
- en: Save a scheduler configuration object to a directory so that it can be reloaded
    using the [from_pretrained()](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin.from_pretrained)
    class method.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 将调度程序配置对象保存到目录中，以便可以使用 [from_pretrained()](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin.from_pretrained)
    类方法重新加载。
- en: SchedulerOutput
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SchedulerOutput
- en: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
- en: '[PRE3]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample `(x_{t-1})` of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prev_sample`（对于图像，形状为 `(batch_size, num_channels, height, width)` 的 `torch.FloatTensor`）
    — 上一个时间步的计算样本 `(x_{t-1})`。`prev_sample` 应在去噪循环中作为下一个模型输入使用。'
- en: Base class for the output of a scheduler’s `step` function.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 调度程序 `step` 函数的输出的基类。
- en: KarrasDiffusionSchedulers
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KarrasDiffusionSchedulers
- en: '`KarrasDiffusionSchedulers` are a broad generalization of schedulers in 🤗 Diffusers.
    The schedulers in this class are distinguished at a high level by their noise
    sampling strategy, the type of network and scaling, the training strategy, and
    how the loss is weighed.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`KarrasDiffusionSchedulers` 是 🤗 Diffusers 中调度程序的广义概括。该类中的调度程序在高层次上通过其噪声采样策略、网络和缩放类型、训练策略以及损失加权方式进行区分。'
- en: The different schedulers in this class, depending on the ordinary differential
    equations (ODE) solver type, fall into the above taxonomy and provide a good abstraction
    for the design of the main schedulers implemented in 🤗 Diffusers. The schedulers
    in this class are given [here](https://github.com/huggingface/diffusers/blob/a69754bb879ed55b9b6dc9dd0b3cf4fa4124c765/src/diffusers/schedulers/scheduling_utils.py#L32).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 该类中的不同调度程序根据常微分方程（ODE）求解器类型，落入上述分类，并为 🤗 Diffusers 中实现的主要调度程序的设计提供了很好的抽象。该类中的调度程序在[这里](https://github.com/huggingface/diffusers/blob/a69754bb879ed55b9b6dc9dd0b3cf4fa4124c765/src/diffusers/schedulers/scheduling_utils.py#L32)给出。
- en: PushToHubMixin
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PushToHubMixin
- en: '### `class diffusers.utils.PushToHubMixin`'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.utils.PushToHubMixin`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/utils/hub_utils.py#L351)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/utils/hub_utils.py#L351)'
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A Mixin to push a model, scheduler, or pipeline to the Hugging Face Hub.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 Mixin，用于将模型、调度程序或管道推送到 Hugging Face Hub。
- en: '#### `push_to_hub`'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `push_to_hub`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/utils/hub_utils.py#L380)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/utils/hub_utils.py#L380)'
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The name of the repository you want to push your model,
    scheduler, or pipeline files to. It should contain your organization name when
    pushing to an organization. `repo_id` can also be a path to a local directory.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 您要将模型、调度程序或管道文件推送到的存储库的名称。当推送到组织时，它应包含您的组织名称。`repo_id`
    也可以是指向本地目录的路径。'
- en: '`commit_message` (`str`, *optional*) — Message to commit while pushing. Default
    to `"Upload {object}"`.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`, *可选*) — 推送时要提交的消息。默认为 `"Upload {object}"`。'
- en: '`private` (`bool`, *optional*) — Whether or not the repository created should
    be private.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private` (`bool`, *可选*) — 创建的存储库是否应为私有。'
- en: '`token` (`str`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. The token generated when running `huggingface-cli login` (stored
    in `~/.huggingface`).'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 用作远程文件的 HTTP bearer 授权的令牌。在运行 `huggingface-cli login`
    时生成的令牌（存储在 `~/.huggingface` 中）。'
- en: '`create_pr` (`bool`, *optional*, defaults to `False`) — Whether or not to create
    a PR with the uploaded files or directly commit.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_pr` (`bool`, *可选*, 默认为 `False`) — 是否创建一个包含上传文件的 PR 或直接提交。'
- en: '`safe_serialization` (`bool`, *optional*, defaults to `True`) — Whether or
    not to convert the model weights to the `safetensors` format.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe_serialization` (`bool`, *可选*, 默认为 `True`) — 是否将模型权重转换为 `safetensors`
    格式。'
- en: '`variant` (`str`, *optional*) — If specified, weights are saved in the format
    `pytorch_model.<variant>.bin`.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variant` (`str`, *可选*) — 如果指定，权重将以 `pytorch_model.<variant>.bin` 格式保存。'
- en: Upload model, scheduler, or pipeline files to the 🤗 Hugging Face Hub.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 将模型、调度器或流水线文件上传到🤗 Hugging Face Hub。
- en: 'Examples:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
