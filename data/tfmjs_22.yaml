- en: configs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: configs
- en: 'Original text: [https://huggingface.co/docs/transformers.js/api/configs](https://huggingface.co/docs/transformers.js/api/configs)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '原文链接: [https://huggingface.co/docs/transformers.js/api/configs](https://huggingface.co/docs/transformers.js/api/configs)'
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Helper module for using model configs. For more information, see the corresponding
    [Python documentation](https://huggingface.co/docs/transformers/main/en/model_doc/auto#transformers.AutoConfig).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于使用模型配置的辅助模块。更多信息，请参阅相应的[Python文档](https://huggingface.co/docs/transformers/main/en/model_doc/auto#transformers.AutoConfig)。
- en: '**Example:** Load an `AutoConfig`.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例:** 加载一个`AutoConfig`。'
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[configs](#module_configs)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[configs](#module_configs)'
- en: '*static*'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*静态*'
- en: '[.PretrainedConfig](#module_configs.PretrainedConfig)'
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[.PretrainedConfig](#module_configs.PretrainedConfig)'
- en: '[`new PretrainedConfig(configJSON)`](#new_module_configs.PretrainedConfig_new)'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`new PretrainedConfig(configJSON)`](#new_module_configs.PretrainedConfig_new)'
- en: '[`.from_pretrained(pretrained_model_name_or_path, options)`](#module_configs.PretrainedConfig.from_pretrained)
    ⇒ `Promise.<PretrainedConfig>`'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`.from_pretrained(pretrained_model_name_or_path, options)`](#module_configs.PretrainedConfig.from_pretrained)
    ⇒ `Promise.<PretrainedConfig>`'
- en: '[.AutoConfig](#module_configs.AutoConfig)'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[.AutoConfig](#module_configs.AutoConfig)'
- en: '[`.from_pretrained()`](#module_configs.AutoConfig.from_pretrained) : `PretrainedConfig.from_pretrained`'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`.from_pretrained()`](#module_configs.AutoConfig.from_pretrained) : `PretrainedConfig.from_pretrained`'
- en: '*inner*'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*内部*'
- en: '[`~loadConfig(pretrained_model_name_or_path, options)`](#module_configs..loadConfig)
    ⇒ `Promise.<Array>`'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`~loadConfig(pretrained_model_name_or_path, options)`](#module_configs..loadConfig)
    ⇒ `Promise.<Array>`'
- en: '[`~PretrainedOptions`](#module_configs..PretrainedOptions) : `*`'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`~PretrainedOptions`](#module_configs..PretrainedOptions) : `*`'
- en: '* * *'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: configs.PretrainedConfig
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: configs.PretrainedConfig
- en: Base class for all configuration classes. For more information, see the corresponding
    [Python documentation](https://huggingface.co/docs/transformers/main/en/main_classes/configuration#transformers.PretrainedConfig).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 所有配置类的基类。更多信息，请参阅相应的[Python文档](https://huggingface.co/docs/transformers/main/en/main_classes/configuration#transformers.PretrainedConfig)。
- en: '**Kind**: static class of [`configs`](#module_configs)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**种类**: [`configs`](#module_configs) 的静态类'
- en: '[.PretrainedConfig](#module_configs.PretrainedConfig)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[.PretrainedConfig](#module_configs.PretrainedConfig)'
- en: '[`new PretrainedConfig(configJSON)`](#new_module_configs.PretrainedConfig_new)'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`new PretrainedConfig(configJSON)`](#new_module_configs.PretrainedConfig_new)'
- en: '[`.from_pretrained(pretrained_model_name_or_path, options)`](#module_configs.PretrainedConfig.from_pretrained)
    ⇒ `Promise.<PretrainedConfig>`'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`.from_pretrained(pretrained_model_name_or_path, options)`](#module_configs.PretrainedConfig.from_pretrained)
    ⇒ `Promise.<PretrainedConfig>`'
- en: '* * *'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: new PretrainedConfig(configJSON)
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: new PretrainedConfig(configJSON)
- en: Create a new PreTrainedTokenizer instance.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 PreTrainedTokenizer 实例。
- en: '| Param | Type | Description |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| configJSON | `Object` | The JSON of the config. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| configJSON | `Object` | 配置的 JSON 对象。 |'
- en: '* * *'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: PretrainedConfig.from_pretrained(pretrained_model_name_or_path, options) ⇒ <code>
    Promise. < PretrainedConfig > </code>
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PretrainedConfig.from_pretrained(pretrained_model_name_or_path, options) ⇒ <code>
    Promise. < PretrainedConfig > </code>
- en: Loads a pre-trained config from the given `pretrained_model_name_or_path`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从给定的`pretrained_model_name_or_path`加载预训练配置。
- en: '**Kind**: static method of [`PretrainedConfig`](#module_configs.PretrainedConfig)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**种类**: [`PretrainedConfig`](#module_configs.PretrainedConfig) 的静态方法'
- en: '**Returns**: `Promise.<PretrainedConfig>` - A new instance of the `PretrainedConfig`
    class.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**返回**: `Promise.<PretrainedConfig>` - `PretrainedConfig` 类的新实例。'
- en: '**Throws**:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**抛出**:'
- en: '`Error` Throws an error if the config.json is not found in the `pretrained_model_name_or_path`.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在`pretrained_model_name_or_path`中找不到`config.json`，则抛出`Error`。
- en: '| Param | Type | Description |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| pretrained_model_name_or_path | `string` | The path to the pre-trained config.
    |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| pretrained_model_name_or_path | `string` | 预训练配置的路径。 |'
- en: '| options | `PretrainedOptions` | Additional options for loading the config.
    |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| options | `PretrainedOptions` | 加载配置时的额外选项。 |'
- en: '* * *'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: configs.AutoConfig
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: configs.AutoConfig
- en: Helper class which is used to instantiate pretrained configs with the `from_pretrained`
    function.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 用于使用`from_pretrained`函数实例化预训练配置的辅助类。
- en: '**Kind**: static class of [`configs`](#module_configs)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**种类**: [`configs`](#module_configs) 的静态类'
- en: '* * *'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'AutoConfig.from_pretrained() : <code> PretrainedConfig.from_pretrained </code>'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'AutoConfig.from_pretrained() : <code> PretrainedConfig.from_pretrained </code>'
- en: '**Kind**: static method of [`AutoConfig`](#module_configs.AutoConfig)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**种类**: [`AutoConfig`](#module_configs.AutoConfig) 的静态方法'
- en: '* * *'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: configs~loadConfig(pretrained_model_name_or_path, options) ⇒ <code> Promise.
    < Array > </code>
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: configs~loadConfig(pretrained_model_name_or_path, options) ⇒ <code> Promise.
    < Array > </code>
- en: Loads a config from the specified path.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 从指定路径加载配置。
- en: '**Kind**: inner method of [`configs`](#module_configs)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**种类**: [`configs`](#module_configs) 的内部方法'
- en: '**Returns**: `Promise.<Array>` - A promise that resolves with information about
    the loaded config.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**返回**: `Promise.<Array>` - 一个解析为加载的配置信息的 Promise。'
- en: '| Param | Type | Description |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| pretrained_model_name_or_path | `string` | The path to the config directory.
    |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| pretrained_model_name_or_path | `string` | 配置目录的路径。 |'
- en: '| options | `PretrainedOptions` | Additional options for loading the config.
    |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| options | `PretrainedOptions` | 加载配置时的额外选项。 |'
- en: '* * *'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'configs~PretrainedOptions : <code> * </code>'
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'configs~PretrainedOptions : <code> * </code>'
- en: '**Kind**: inner typedef of [`configs`](#module_configs)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**种类**: [`configs`](#module_configs) 的内部类型'
- en: '* * *'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
