- en: UNet3DConditionModel
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UNet3DConditionModel
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/models/unet3d-cond](https://huggingface.co/docs/diffusers/api/models/unet3d-cond)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/models/unet3d-cond](https://huggingface.co/docs/diffusers/api/models/unet3d-cond)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The [UNet](https://huggingface.co/papers/1505.04597) model was originally introduced
    by Ronneberger et al. for biomedical image segmentation, but it is also commonly
    used in 🤗 Diffusers because it outputs images that are the same size as the input.
    It is one of the most important components of a diffusion system because it facilitates
    the actual diffusion process. There are several variants of the UNet model in
    🤗 Diffusers, depending on it’s number of dimensions and whether it is a conditional
    model or not. This is a 3D UNet conditional model.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[UNet](https://huggingface.co/papers/1505.04597)模型最初由Ronneberger等人提出，用于生物医学图像分割，但它也常用于🤗
    Diffusers，因为它输出与输入相同大小的图像。它是扩散系统中最重要的组件之一，因为它促进了实际的扩散过程。在🤗 Diffusers中有几个UNet模型的变体，取决于它的维度数量以及是否是有条件模型。这是一个3D
    UNet有条件模型。'
- en: 'The abstract from the paper is:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 论文摘要为：
- en: '*There is large consent that successful training of deep networks requires
    many thousand annotated training samples. In this paper, we present a network
    and training strategy that relies on the strong use of data augmentation to use
    the available annotated samples more efficiently. The architecture consists of
    a contracting path to capture context and a symmetric expanding path that enables
    precise localization. We show that such a network can be trained end-to-end from
    very few images and outperforms the prior best method (a sliding-window convolutional
    network) on the ISBI challenge for segmentation of neuronal structures in electron
    microscopic stacks. Using the same network trained on transmitted light microscopy
    images (phase contrast and DIC) we won the ISBI cell tracking challenge 2015 in
    these categories by a large margin. Moreover, the network is fast. Segmentation
    of a 512x512 image takes less than a second on a recent GPU. The full implementation
    (based on Caffe) and the trained networks are available at [http://lmb.informatik.uni-freiburg.de/people/ronneber/u-net](http://lmb.informatik.uni-freiburg.de/people/ronneber/u-net).*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*有很大的共识，成功训练深度网络需要成千上万个注释的训练样本。在本文中，我们提出了一种依赖于强大数据增强的网络和训练策略，以更有效地利用可用的注释样本。该架构由一个收缩路径和一个对称扩展路径组成，用于捕获上下文和实现精确定位。我们展示了这样一个网络可以从很少的图像端到端训练，并在ISBI挑战中胜过先前最佳方法（滑动窗口卷积网络）用于电子显微镜堆中神经结构的分割。使用相同的网络在透射光显微镜图像（相差和DIC）上训练，我们在这些类别上以很大的优势赢得了2015年ISBI细胞跟踪挑战。此外，该网络速度很快。在最新的GPU上，对512x512图像的分割不到一秒。完整的实现（基于Caffe）和训练网络可在[http://lmb.informatik.uni-freiburg.de/people/ronneber/u-net](http://lmb.informatik.uni-freiburg.de/people/ronneber/u-net)上获得。*'
- en: UNet3DConditionModel
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UNet3DConditionModel
- en: '### `class diffusers.UNet3DConditionModel`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.UNet3DConditionModel`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L64)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L64)'
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample_size` (`int` or `Tuple[int, int]`, *optional*, defaults to `None`)
    — Height and width of input/output sample.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample_size`（`int`或`Tuple[int, int]`，*可选*，默认为`None`）— 输入/输出样本的高度和宽度。'
- en: '`in_channels` (`int`, *optional*, defaults to 4) — The number of channels in
    the input sample.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`in_channels`（`int`，*可选*，默认为4）— 输入样本中的通道数。'
- en: '`out_channels` (`int`, *optional*, defaults to 4) — The number of channels
    in the output.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`out_channels`（`int`，*可选*，默认为4）— 输出中的通道数。'
- en: '`down_block_types` (`Tuple[str]`, *optional*, defaults to `("CrossAttnDownBlock2D",
    "CrossAttnDownBlock2D", "CrossAttnDownBlock2D", "DownBlock2D")`) — The tuple of
    downsample blocks to use.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`down_block_types`（`Tuple[str]`，*可选*，默认为`("CrossAttnDownBlock2D", "CrossAttnDownBlock2D",
    "CrossAttnDownBlock2D", "DownBlock2D")`）— 要使用的下采样块的元组。'
- en: '`up_block_types` (`Tuple[str]`, *optional*, defaults to `("UpBlock2D", "CrossAttnUpBlock2D",
    "CrossAttnUpBlock2D", "CrossAttnUpBlock2D")`) — The tuple of upsample blocks to
    use.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`up_block_types`（`Tuple[str]`，*可选*，默认为`("UpBlock2D", "CrossAttnUpBlock2D",
    "CrossAttnUpBlock2D", "CrossAttnUpBlock2D")`）— 要使用的上采样块的元组。'
- en: '`block_out_channels` (`Tuple[int]`, *optional*, defaults to `(320, 640, 1280,
    1280)`) — The tuple of output channels for each block.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`block_out_channels`（`Tuple[int]`，*可选*，默认为`(320, 640, 1280, 1280)`）— 每个块的输出通道的元组。'
- en: '`layers_per_block` (`int`, *optional*, defaults to 2) — The number of layers
    per block.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`layers_per_block`（`int`，*可选*，默认为2）— 每个块的层数。'
- en: '`downsample_padding` (`int`, *optional*, defaults to 1) — The padding to use
    for the downsampling convolution.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`downsample_padding`（`int`，*可选*，默认为1）— 用于下采样卷积的填充。'
- en: '`mid_block_scale_factor` (`float`, *optional*, defaults to 1.0) — The scale
    factor to use for the mid block.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mid_block_scale_factor`（`float`，*可选*，默认为1.0）— 用于中间块的比例因子。'
- en: '`act_fn` (`str`, *optional*, defaults to `"silu"`) — The activation function
    to use.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`act_fn`（`str`，*可选*，默认为`"silu"`) — 要使用的激活函数。'
- en: '`norm_num_groups` (`int`, *optional*, defaults to 32) — The number of groups
    to use for the normalization. If `None`, normalization and activation layers is
    skipped in post-processing.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`norm_num_groups`（`int`，*可选*，默认为32）— 用于规范化的组数。如果为`None`，则在后处理中跳过规范化和激活层。'
- en: '`norm_eps` (`float`, *optional*, defaults to 1e-5) — The epsilon to use for
    the normalization.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`norm_eps`（`float`，*可选*，默认为1e-5）— 用于规范化的ε。'
- en: '`cross_attention_dim` (`int`, *optional*, defaults to 1280) — The dimension
    of the cross attention features.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cross_attention_dim`（`int`，*可选*，默认为1280）— 交叉注意力特征的维度。'
- en: '`attention_head_dim` (`int`, *optional*, defaults to 8) — The dimension of
    the attention heads.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attention_head_dim`（`int`，*可选*，默认为8）— 注意力头的维度。'
- en: '`num_attention_heads` (`int`, *optional*) — The number of attention heads.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_attention_heads`（`int`，*可选*）— 注意力头的数量。'
- en: A conditional 3D UNet model that takes a noisy sample, conditional state, and
    a timestep and returns a sample shaped output.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有条件的3D UNet模型，接受一个嘈杂的样本、条件状态和一个时间步，并返回一个形状为样本的输出。
- en: This model inherits from [ModelMixin](/docs/diffusers/v0.26.3/en/api/models/overview#diffusers.ModelMixin).
    Check the superclass documentation for it’s generic methods implemented for all
    models (such as downloading or saving).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型继承自[ModelMixin](/docs/diffusers/v0.26.3/en/api/models/overview#diffusers.ModelMixin)。查看超类文档，了解为所有模型实现的通用方法（如下载或保存）。
- en: '#### `disable_freeu`'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `disable_freeu`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L498)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L498)'
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Disables the FreeU mechanism.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用FreeU机制。
- en: '#### `enable_forward_chunking`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `enable_forward_chunking`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L412)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L412)'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`chunk_size` (`int`, *optional*) — The chunk size of the feed-forward layers.
    If not specified, will run feed-forward layer individually over each tensor of
    dim=`dim`.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chunk_size`（`int`，*可选*）—前馈层的分块大小。如果未指定，将在dim=`dim`的每个张量上单独运行前馈层。'
- en: '`dim` (`int`, *optional*, defaults to `0`) — The dimension over which the feed-forward
    computation should be chunked. Choose between dim=0 (batch) or dim=1 (sequence
    length).'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dim`（`int`，*可选*，默认为`0`）—应该对其进行分块的前馈计算的维度。在dim=0（批处理）或dim=1（序列长度）之间进行选择。'
- en: Sets the attention processor to use [feed forward chunking](https://huggingface.co/blog/reformer#2-chunked-feed-forward-layers).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 将注意力处理器设置为使用[前馈分块](https://huggingface.co/blog/reformer#2-chunked-feed-forward-layers)。
- en: '#### `enable_freeu`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `enable_freeu`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L473)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L473)'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`s1` (`float`) — Scaling factor for stage 1 to attenuate the contributions
    of the skip features. This is done to mitigate the “oversmoothing effect” in the
    enhanced denoising process.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s1`（`float`）—阶段1的缩放因子，用于减弱跳过特征的贡献。这样做是为了减轻增强去噪过程中的“过度平滑效应”。'
- en: '`s2` (`float`) — Scaling factor for stage 2 to attenuate the contributions
    of the skip features. This is done to mitigate the “oversmoothing effect” in the
    enhanced denoising process.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s2`（`float`）—阶段2的缩放因子，用于减弱跳过特征的贡献。这样做是为了减轻增强去噪过程中的“过度平滑效应”。'
- en: '`b1` (`float`) — Scaling factor for stage 1 to amplify the contributions of
    backbone features.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`b1`（`float`）—阶段1的缩放因子，用于放大骨干特征的贡献。'
- en: '`b2` (`float`) — Scaling factor for stage 2 to amplify the contributions of
    backbone features.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`b2`（`float`）—阶段2的缩放因子，用于放大骨干特征的贡献。'
- en: Enables the FreeU mechanism from [https://arxiv.org/abs/2309.11497](https://arxiv.org/abs/2309.11497).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从[https://arxiv.org/abs/2309.11497](https://arxiv.org/abs/2309.11497)启用FreeU机制。
- en: The suffixes after the scaling factors represent the stage blocks where they
    are being applied.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 缩放因子后的后缀表示它们被应用的阶段块。
- en: Please refer to the [official repository](https://github.com/ChenyangSi/FreeU)
    for combinations of values that are known to work well for different pipelines
    such as Stable Diffusion v1, v2, and Stable Diffusion XL.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[官方存储库](https://github.com/ChenyangSi/FreeU)，了解已知适用于不同流水线（如Stable Diffusion
    v1、v2和Stable Diffusion XL）的值组合。
- en: '#### `forward`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `forward`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L518)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L518)'
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The noisy input tensor with the following
    shape `(batch, num_frames, channel, height, width`.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample`（`torch.FloatTensor`）—带有以下形状的嘈杂输入张量`(batch, num_frames, channel, height,
    width)`。'
- en: '`timestep` (`torch.FloatTensor` or `float` or `int`) — The number of timesteps
    to denoise an input.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep`（`torch.FloatTensor`或`float`或`int`）—去噪输入的时间步数。'
- en: '`encoder_hidden_states` (`torch.FloatTensor`) — The encoder hidden states with
    shape `(batch, sequence_length, feature_dim)`.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`encoder_hidden_states`（`torch.FloatTensor`）—形状为`(batch, sequence_length, feature_dim)`的编码器隐藏状态。'
- en: '`class_labels` (`torch.Tensor`, *optional*, defaults to `None`) — Optional
    class labels for conditioning. Their embeddings will be summed with the timestep
    embeddings. timestep_cond — (`torch.Tensor`, *optional*, defaults to `None`):
    Conditional embeddings for timestep. If provided, the embeddings will be summed
    with the samples passed through the `self.time_embedding` layer to obtain the
    timestep embeddings.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`class_labels`（`torch.Tensor`，*可选*，默认为`None`）—用于条件化的可选类标签。它们的嵌入将与时间步嵌入相加。timestep_cond—（`torch.Tensor`，*可选*，默认为`None`）：时间步的条件嵌入。如果提供，嵌入将与通过`self.time_embedding`层传递的样本相加，以获得时间步嵌入。'
- en: '`attention_mask` (`torch.Tensor`, *optional*, defaults to `None`) — An attention
    mask of shape `(batch, key_tokens)` is applied to `encoder_hidden_states`. If
    `1` the mask is kept, otherwise if `0` it is discarded. Mask will be converted
    into a bias, which adds large negative values to the attention scores corresponding
    to “discard” tokens.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attention_mask`（`torch.Tensor`，*可选*，默认为`None`）—形状为`(batch, key_tokens)`的注意力掩码应用于`encoder_hidden_states`。如果为`1`，则保留掩码，否则如果为`0`，则丢弃。掩码将被转换为偏置，将大的负值添加到与“丢弃”标记对应的注意力分数中。'
- en: '`cross_attention_kwargs` (`dict`, *optional*) — A kwargs dictionary that if
    specified is passed along to the `AttentionProcessor` as defined under `self.processor`
    in [diffusers.models.attention_processor](https://github.com/huggingface/diffusers/blob/main/src/diffusers/models/attention_processor.py).
    down_block_additional_residuals — (`tuple` of `torch.Tensor`, *optional*): A tuple
    of tensors that if specified are added to the residuals of down unet blocks. mid_block_additional_residual
    — (`torch.Tensor`, *optional*): A tensor that if specified is added to the residual
    of the middle unet block.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cross_attention_kwargs`（`dict`，*可选*）- 如果指定，则传递给`AttentionProcessor`的kwargs字典，如在[diffusers.models.attention_processor](https://github.com/huggingface/diffusers/blob/main/src/diffusers/models/attention_processor.py)中的`self.processor`下定义的。down_block_additional_residuals
    — (`torch.Tensor`的`tuple`，*可选*）：如果指定，则添加到下行 unet 块的残差中的张量的元组。mid_block_additional_residual
    — (`torch.Tensor`，*可选*）：如果指定，则添加到中间 unet 块的残差中的张量。'
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a `~models.unet_3d_condition.UNet3DConditionOutput` instead of a plain
    tuple.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict`（`bool`，*可选*，默认为`True`）- 是否返回一个`~models.unet_3d_condition.UNet3DConditionOutput`而不是一个普通的元组。'
- en: '`cross_attention_kwargs` (`dict`, *optional*) — A kwargs dictionary that if
    specified is passed along to the `AttnProcessor`.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cross_attention_kwargs`（`dict`，*可选*）- 如果指定，则传递给`AttnProcessor`的kwargs字典。'
- en: Returns
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`~models.unet_3d_condition.UNet3DConditionOutput` or `tuple`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`~models.unet_3d_condition.UNet3DConditionOutput`或`tuple`'
- en: If `return_dict` is True, an `~models.unet_3d_condition.UNet3DConditionOutput`
    is returned, otherwise a `tuple` is returned where the first element is the sample
    tensor.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`return_dict`为True，则返回一个`~models.unet_3d_condition.UNet3DConditionOutput`，否则返回一个元组，其中第一个元素是样本张量。
- en: The [UNet3DConditionModel](/docs/diffusers/v0.26.3/en/api/models/unet3d-cond#diffusers.UNet3DConditionModel)
    forward method.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[UNet3DConditionModel](/docs/diffusers/v0.26.3/en/api/models/unet3d-cond#diffusers.UNet3DConditionModel)的前向方法。'
- en: '#### `set_attention_slice`'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_attention_slice`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L312)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L312)'
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`slice_size` (`str` or `int` or `list(int)`, *optional*, defaults to `"auto"`)
    — When `"auto"`, input to the attention heads is halved, so attention is computed
    in two steps. If `"max"`, maximum amount of memory is saved by running only one
    slice at a time. If a number is provided, uses as many slices as `attention_head_dim
    // slice_size`. In this case, `attention_head_dim` must be a multiple of `slice_size`.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`slice_size`（`str`或`int`或`list(int)`，*可选*，默认为`"auto"`）- 当为`"auto"`时，注意力头的输入减半，因此注意力在两个步骤中计算。如果为`"max"`，通过一次只运行一个切片来节省最大内存。如果提供了一个数字，则使用`attention_head_dim
    // slice_size`个切片。在这种情况下，`attention_head_dim`必须是`slice_size`的倍数。'
- en: Enable sliced attention computation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 启用切片注意力计算。
- en: When this option is enabled, the attention module splits the input tensor in
    slices to compute attention in several steps. This is useful for saving some memory
    in exchange for a small decrease in speed.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用此选项时，注意力模块将输入张量分割成片段，以便在多个步骤中计算注意力。这对于在节省一些内存的同时换取一点速度下降是有用的。
- en: '#### `set_attn_processor`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_attn_processor`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L378)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L378)'
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`processor` (`dict` of `AttentionProcessor` or only `AttentionProcessor`) —
    The instantiated processor class or a dictionary of processor classes that will
    be set as the processor for **all** `Attention` layers.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`processor`（`dict`，包含`AttentionProcessor`或仅`AttentionProcessor`）- 实例化的处理器类或将设置为**所有**`Attention`层的处理器的处理器类字典。'
- en: If `processor` is a dict, the key needs to define the path to the corresponding
    cross attention processor. This is strongly recommended when setting trainable
    attention processors.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果`processor`是一个字典，则键需要定义到相应交叉注意力处理器的路径。在设置可训练的注意力处理器时，强烈建议这样做。
- en: Sets the attention processor to use to compute attention.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于计算注意力的注意力处理器。
- en: '#### `set_default_attn_processor`'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_default_attn_processor`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L453)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L453)'
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Disables custom attention processors and sets the default attention implementation.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用自定义注意力处理器并设置默认的注意力实现。
- en: '#### `unload_lora`'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `unload_lora`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L507)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L507)'
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Unloads LoRA weights.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 卸载 LoRA 权重。
- en: UNet3DConditionOutput
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UNet3DConditionOutput
- en: '### `class diffusers.models.unets.unet_3d_condition.UNet3DConditionOutput`'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.models.unets.unet_3d_condition.UNet3DConditionOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L51)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/models/unets/unet_3d_condition.py#L51)'
- en: '[PRE9]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor` of shape `(batch_size, num_frames, num_channels,
    height, width)`) — The hidden states output conditioned on `encoder_hidden_states`
    input. Output of last layer of model.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample`（形状为`(batch_size, num_frames, num_channels, height, width)`的`torch.FloatTensor`）-
    在`encoder_hidden_states`输入条件下的隐藏状态输出。模型的最后一层的输出。'
- en: The output of [UNet3DConditionModel](/docs/diffusers/v0.26.3/en/api/models/unet3d-cond#diffusers.UNet3DConditionModel).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[UNet3DConditionModel](/docs/diffusers/v0.26.3/en/api/models/unet3d-cond#diffusers.UNet3DConditionModel)的输出。'
