- en: Load different Stable Diffusion formats
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载不同的 Stable Diffusion 格式
- en: 'Original text: [https://huggingface.co/docs/diffusers/using-diffusers/other-formats](https://huggingface.co/docs/diffusers/using-diffusers/other-formats)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/using-diffusers/other-formats](https://huggingface.co/docs/diffusers/using-diffusers/other-formats)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Stable Diffusion models are available in different formats depending on the
    framework they’re trained and saved with, and where you download them from. Converting
    these formats for use in 🤗 Diffusers allows you to use all the features supported
    by the library, such as [using different schedulers](schedulers) for inference,
    [building your custom pipeline](write_own_pipeline), and a variety of techniques
    and methods for [optimizing inference speed](../optimization/opt_overview).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定的扩散模型以不同的格式提供，具体取决于它们所训练和保存的框架，以及您从哪里下载它们。将这些格式转换为 🤗 Diffusers 以便在库中使用所有支持的功能，例如[使用不同的调度器](schedulers)进行推断，[构建自定义流水线](write_own_pipeline)，以及各种用于[优化推断速度](../optimization/opt_overview)的技术和方法。
- en: We highly recommend using the `.safetensors` format because it is more secure
    than traditional pickled files which are vulnerable and can be exploited to execute
    any code on your machine (learn more in the [Load safetensors](using_safetensors)
    guide).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议使用 `.safetensors` 格式，因为它比传统的可被利用来在您的机器上执行任何代码的 pickled 文件更安全（在[加载 safetensors](using_safetensors)指南中了解更多）。
- en: This guide will show you how to convert other Stable Diffusion formats to be
    compatible with 🤗 Diffusers.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南将向您展示如何将其他 Stable Diffusion 格式转换为与 🤗 Diffusers 兼容。
- en: PyTorch .ckpt
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PyTorch .ckpt
- en: The checkpoint - or `.ckpt` - format is commonly used to store and save models.
    The `.ckpt` file contains the entire model and is typically several GBs in size.
    While you can load and use a `.ckpt` file directly with the [from_single_file()](/docs/diffusers/v0.26.3/en/api/loaders/single_file#diffusers.loaders.FromSingleFileMixin.from_single_file)
    method, it is generally better to convert the `.ckpt` file to 🤗 Diffusers so both
    formats are available.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 检查点 - 或 `.ckpt` - 格式通常用于存储和保存模型。`.ckpt` 文件包含整个模型，通常大小为几个GB。虽然您可以直接使用 [from_single_file()](/docs/diffusers/v0.26.3/en/api/loaders/single_file#diffusers.loaders.FromSingleFileMixin.from_single_file)
    方法加载和使用 `.ckpt` 文件，但通常最好将 `.ckpt` 文件转换为 🤗 Diffusers，以便两种格式都可用。
- en: 'There are two options for converting a `.ckpt` file: use a Space to convert
    the checkpoint or convert the `.ckpt` file with a script.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种选项可以转换 `.ckpt` 文件：使用 Space 转换检查点或使用脚本转换 `.ckpt` 文件。
- en: Convert with a Space
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Space 进行转换
- en: The easiest and most convenient way to convert a `.ckpt` file is to use the
    [SD to Diffusers](https://huggingface.co/spaces/diffusers/sd-to-diffusers) Space.
    You can follow the instructions on the Space to convert the `.ckpt` file.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 转换 `.ckpt` 文件的最简单和最便捷的方法是使用 [SD to Diffusers](https://huggingface.co/spaces/diffusers/sd-to-diffusers)
    Space。您可以按照 Space 上的说明转换 `.ckpt` 文件。
- en: This approach works well for basic models, but it may struggle with more customized
    models. You’ll know the Space failed if it returns an empty pull request or error.
    In this case, you can try converting the `.ckpt` file with a script.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法适用于基本模型，但可能在更定制的模型上遇到困难。如果返回空的拉取请求或错误，则会知道空间失败。在这种情况下，您可以尝试使用脚本转换 `.ckpt`
    文件。
- en: Convert with a script
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用脚本进行转换
- en: 🤗 Diffusers provides a [conversion script](https://github.com/huggingface/diffusers/blob/main/scripts/convert_original_stable_diffusion_to_diffusers.py)
    for converting `.ckpt` files. This approach is more reliable than the Space above.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 Diffusers 提供了一个[转换脚本](https://github.com/huggingface/diffusers/blob/main/scripts/convert_original_stable_diffusion_to_diffusers.py)用于转换
    `.ckpt` 文件。这种方法比上面的 Space 更可靠。
- en: Before you start, make sure you have a local clone of 🤗 Diffusers to run the
    script and log in to your Hugging Face account so you can open pull requests and
    push your converted model to the Hub.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，请确保您有一个本地克隆的 🤗 Diffusers 以运行脚本，并登录到您的 Hugging Face 帐户，以便您可以打开拉取请求并将转换的模型推送到
    Hub。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To use the script:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用脚本：
- en: 'Git clone the repository containing the `.ckpt` file you want to convert. For
    this example, let’s convert this [TemporalNet](https://huggingface.co/CiaraRowles/TemporalNet)
    `.ckpt` file:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆包含您要转换的 `.ckpt` 文件的存储库。例如，让我们转换这个 [TemporalNet](https://huggingface.co/CiaraRowles/TemporalNet)
    `.ckpt` 文件：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Open a pull request on the repository where you’re converting the checkpoint
    from:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您从中转换检查点的存储库上打开一个拉取请求：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'There are several input arguments to configure in the conversion script, but
    the most important ones are:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转换脚本中有几个输入参数需要配置，但最重要的是：
- en: '`checkpoint_path`: the path to the `.ckpt` file to convert.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`checkpoint_path`：要转换的 `.ckpt` 文件的路径。'
- en: '`original_config_file`: a YAML file defining the configuration of the original
    architecture. If you can’t find this file, try searching for the YAML file in
    the GitHub repository where you found the `.ckpt` file.'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`original_config_file`：定义原始架构配置的 YAML 文件。如果找不到此文件，请尝试在找到 `.ckpt` 文件的 GitHub
    存储库中搜索 YAML 文件。'
- en: '`dump_path`: the path to the converted model.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dump_path`：转换模型的路径。'
- en: For example, you can take the `cldm_v15.yaml` file from the [ControlNet](https://github.com/lllyasviel/ControlNet/tree/main/models)
    repository because the TemporalNet model is a Stable Diffusion v1.5 and ControlNet
    model.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，您可以从 [ControlNet](https://github.com/lllyasviel/ControlNet/tree/main/models)
    存储库中获取 `cldm_v15.yaml` 文件，因为 TemporalNet 模型是 Stable Diffusion v1.5 和 ControlNet
    模型。
- en: 'Now you can run the script to convert the `.ckpt` file:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您可以运行脚本来转换 `.ckpt` 文件：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once the conversion is done, upload your converted model and test out the resulting
    [pull request](https://huggingface.co/CiaraRowles/TemporalNet/discussions/13)!
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转换完成后，上传您转换的模型并测试生成的[拉取请求](https://huggingface.co/CiaraRowles/TemporalNet/discussions/13)!
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Keras .pb or .h5
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Keras .pb 或 .h5
- en: 🧪 This is an experimental feature. Only Stable Diffusion v1 checkpoints are
    supported by the Convert KerasCV Space at the moment.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 🧪 这是一个实验性功能。目前 Convert KerasCV Space 仅支持 Stable Diffusion v1 检查点。
- en: '[KerasCV](https://keras.io/keras_cv/) supports training for [Stable Diffusion](https://github.com/keras-team/keras-cv/blob/master/keras_cv/models/stable_diffusion)
    v1 and v2\. However, it offers limited support for experimenting with Stable Diffusion
    models for inference and deployment whereas 🤗 Diffusers has a more complete set
    of features for this purpose, such as different [noise schedulers](https://huggingface.co/docs/diffusers/using-diffusers/schedulers),
    [flash attention](https://huggingface.co/docs/diffusers/optimization/xformers),
    and [other optimization techniques](https://huggingface.co/docs/diffusers/optimization/fp16).'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[KerasCV](https://keras.io/keras_cv/)支持[稳定扩散](https://github.com/keras-team/keras-cv/blob/master/keras_cv/models/stable_diffusion)
    v1和v2的训练。然而，它对于实验稳定扩散模型进行推理和部署的支持有限，而🤗 Diffusers具有更完整的功能集，例如不同的[噪声调度器](https://huggingface.co/docs/diffusers/using-diffusers/schedulers)、[闪光注意力](https://huggingface.co/docs/diffusers/optimization/xformers)和[其他优化技术](https://huggingface.co/docs/diffusers/optimization/fp16)。'
- en: The [Convert KerasCV](https://huggingface.co/spaces/sayakpaul/convert-kerascv-sd-diffusers)
    Space converts `.pb` or `.h5` files to PyTorch, and then wraps them in a [StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline)
    so it is ready for inference. The converted checkpoint is stored in a repository
    on the Hugging Face Hub.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[Convert KerasCV](https://huggingface.co/spaces/sayakpaul/convert-kerascv-sd-diffusers)空间将`.pb`或`.h5`文件转换为PyTorch，然后将它们包装在[StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline)中，以便进行推理。转换后的检查点存储在Hugging
    Face Hub上的存储库中。'
- en: For this example, let’s convert the [`sayakpaul/textual-inversion-kerasio`](https://huggingface.co/sayakpaul/textual-inversion-kerasio/tree/main)
    checkpoint which was trained with Textual Inversion. It uses the special token
    `<my-funny-cat>` to personalize images with cats.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，让我们转换[`sayakpaul/textual-inversion-kerasio`](https://huggingface.co/sayakpaul/textual-inversion-kerasio/tree/main)检查点，该检查点是使用文本反转训练的。它使用特殊令牌`<my-funny-cat>`来个性化带有猫的图像。
- en: 'The Convert KerasCV Space allows you to input the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 转换KerasCV空间允许您输入以下内容：
- en: Your Hugging Face token.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的Hugging Face令牌。
- en: Paths to download the UNet and text encoder weights from. Depending on how the
    model was trained, you don’t necessarily need to provide the paths to both the
    UNet and text encoder. For example, Textual Inversion only requires the embeddings
    from the text encoder and a text-to-image model only requires the UNet weights.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从中下载UNet和文本编码器权重的路径。根据模型的训练方式，您不一定需要提供UNet和文本编码器的路径。例如，文本反转只需要文本编码器的嵌入，而文本到图像模型只需要UNet权重。
- en: Placeholder token is only applicable for textual inversion models.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 占位符令牌仅适用于文本反转模型。
- en: The `output_repo_prefix` is the name of the repository where the converted model
    is stored.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_repo_prefix`是存储转换模型的存储库的名称。'
- en: Click the **Submit** button to automatically convert the KerasCV checkpoint!
    Once the checkpoint is successfully converted, you’ll see a link to the new repository
    containing the converted checkpoint. Follow the link to the new repository, and
    you’ll see the Convert KerasCV Space generated a model card with an inference
    widget to try out the converted model.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 单击**提交**按钮自动转换KerasCV检查点！一旦检查点成功转换，您将看到一个链接，指向包含转换后检查点的新存储库。跟随链接到新存储库，您将看到Convert
    KerasCV空间生成了一个模型卡，带有一个推理小部件，以尝试转换后的模型。
- en: 'If you prefer to run inference with code, click on the **Use in Diffusers**
    button in the upper right corner of the model card to copy and paste the code
    snippet:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢使用代码进行推理，请单击模型卡的右上角的**在Diffusers中使用**按钮以复制并粘贴代码片段：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then, you can generate an image like:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以生成一张图片：
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: A1111 LoRA files
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: A1111 LoRA文件
- en: '[Automatic1111](https://github.com/AUTOMATIC1111/stable-diffusion-webui) (A1111)
    is a popular web UI for Stable Diffusion that supports model sharing platforms
    like [Civitai](https://civitai.com/). Models trained with the Low-Rank Adaptation
    (LoRA) technique are especially popular because they’re fast to train and have
    a much smaller file size than a fully finetuned model. 🤗 Diffusers supports loading
    A1111 LoRA checkpoints with [load_lora_weights()](/docs/diffusers/v0.26.3/en/api/loaders/lora#diffusers.loaders.LoraLoaderMixin.load_lora_weights):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[Automatic1111](https://github.com/AUTOMATIC1111/stable-diffusion-webui)（A1111）是一个流行的稳定扩散网络界面，支持像[Civitai](https://civitai.com/)这样的模型共享平台。使用低秩适应（LoRA）技术训练的模型特别受欢迎，因为它们训练速度快，文件大小比完全微调的模型小得多。🤗
    Diffusers支持使用[load_lora_weights()](/docs/diffusers/v0.26.3/en/api/loaders/lora#diffusers.loaders.LoraLoaderMixin.load_lora_weights)加载A1111
    LoRA检查点：'
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Download a LoRA checkpoint from Civitai; this example uses the [Blueprintify
    SD XL 1.0](https://civitai.com/models/150986/blueprintify-sd-xl-10) checkpoint,
    but feel free to try out any LoRA checkpoint!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 从Civitai下载一个LoRA检查点；此示例使用[Blueprintify SD XL 1.0](https://civitai.com/models/150986/blueprintify-sd-xl-10)检查点，但随时可以尝试任何LoRA检查点！
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Load the LoRA checkpoint into the pipeline with the [load_lora_weights()](/docs/diffusers/v0.26.3/en/api/loaders/lora#diffusers.loaders.LoraLoaderMixin.load_lora_weights)
    method:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[load_lora_weights()](/docs/diffusers/v0.26.3/en/api/loaders/lora#diffusers.loaders.LoraLoaderMixin.load_lora_weights)方法将LoRA检查点加载到管道中：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now you can use the pipeline to generate images:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以使用管道生成图像：
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/cee84d318d0e1d6c11ae7b5a6f49a8ca.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cee84d318d0e1d6c11ae7b5a6f49a8ca.png)'
