- en: Adding a Sign-In with HF button to your Space
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向您的Space添加“使用HF登录”按钮
- en: 'Original text: [https://huggingface.co/docs/hub/spaces-oauth](https://huggingface.co/docs/hub/spaces-oauth)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/hub/spaces-oauth](https://huggingface.co/docs/hub/spaces-oauth)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: You can enable a built-in sign-in flow in your Space by seamlessly creating
    and associating an [OAuth/OpenID connect](https://developer.okta.com/blog/2019/10/21/illustrated-guide-to-oauth-and-oidc)
    app so users can log in with their HF account.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过无缝创建和关联[OAuth/OpenID连接](https://developer.okta.com/blog/2019/10/21/illustrated-guide-to-oauth-and-oidc)应用程序，使用户可以使用其HF帐户登录，从而在您的Space中启用内置登录流程。
- en: This enables new use cases for your Space. For instance, when combined with
    [Persistent Storage](https://huggingface.co/docs/hub/spaces-storage), a generative
    AI Space could allow users to log in to access their previous generations, only
    accessible to them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这为您的Space提供了新的用例。例如，与[持久存储](https://huggingface.co/docs/hub/spaces-storage)结合使用时，生成式AI
    Space可以允许用户登录以访问他们以前的生成，仅对他们可见。
- en: This guide will take you through the process of integrating a *Sign-In with
    HF* button into any Space. If you’re seeking a fast and simple method to implement
    this in a **Gradio** Space, take a look at its [built-in integration](https://www.gradio.app/guides/sharing-your-app#o-auth-login-via-hugging-face).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南将带您完成将*使用HF登录*按钮集成到任何Space中的过程。如果您正在寻找一种快速简单的方法在**Gradio** Space中实现此功能，请查看其[内置集成](https://www.gradio.app/guides/sharing-your-app#o-auth-login-via-hugging-face)。
- en: You can also use the HF OAuth flow to create a “Sign in with HF” flow in any
    website or App, outside of Spaces. [Read our general OAuth page](./oauth).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用HF OAuth流程在任何网站或应用程序中创建“使用HF登录”流程，而不仅限于Spaces。[阅读我们的通用OAuth页面](./oauth)。
- en: Create an OAuth app
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个OAuth应用程序
- en: 'All you need to do is add `hf_oauth: true` to your Space’s metadata inside
    your `README.md` file.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '只需在您的`README.md`文件中的Space元数据中添加`hf_oauth: true`即可。'
- en: 'Here’s an example of metadata for a Gradio Space:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个Gradio Space的元数据示例：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can check out the [configuration reference docs](./spaces-config-reference)
    for more information.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以查看更多信息的[配置参考文档](./spaces-config-reference)。
- en: 'This will add the following [environment variables](https://huggingface.co/docs/hub/spaces-overview#helper-environment-variables)
    to your space:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这将向您的Space添加以下[环境变量](https://huggingface.co/docs/hub/spaces-overview#helper-environment-variables)：
- en: '`OAUTH_CLIENT_ID`: the client ID of your OAuth app (public)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OAUTH_CLIENT_ID`：您的OAuth应用程序的客户端ID（公共）'
- en: '`OAUTH_CLIENT_SECRET`: the client secret of your OAuth app'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OAUTH_CLIENT_SECRET`：您的OAuth应用程序的客户端密钥'
- en: '`OAUTH_SCOPES`: scopes accessible by your OAuth app.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OAUTH_SCOPES`：您的OAuth应用程序可访问的范围。'
- en: '`OPENID_PROVIDER_URL`: The URL of the OpenID provider. The OpenID metadata
    will be available at [`{OPENID_PROVIDER_URL}/.well-known/openid-configuration`](https://huggingface.co/.well-known/openid-configuration).'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OPENID_PROVIDER_URL`：OpenID提供者的URL。 OpenID元数据将在[`{OPENID_PROVIDER_URL}/.well-known/openid-configuration`](https://huggingface.co/.well-known/openid-configuration)中可用。'
- en: As for any other environment variable, you can use them in your code by using
    `os.getenv("OAUTH_CLIENT_ID")`, for example.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何其他环境变量，您可以通过使用`os.getenv("OAUTH_CLIENT_ID")`在您的代码中使用它们，例如。
- en: Redirect URLs
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重定向URL
- en: You can use any redirect URL you want, as long as it targets your Space.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用任何重定向URL，只要它指向您的Space即可。
- en: Note that `SPACE_HOST` is [available](https://huggingface.co/docs/hub/spaces-overview#helper-environment-variables)
    as an environment variable.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`SPACE_HOST`作为[环境变量](https://huggingface.co/docs/hub/spaces-overview#helper-environment-variables)可用。
- en: For example, you can use `https://{SPACE_HOST}/login/callback` as a redirect
    URI.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以使用`https://{SPACE_HOST}/login/callback`作为重定向URI。
- en: Scopes
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 范围
- en: 'The following scopes are always included for Spaces:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下范围始终包含在Spaces中：
- en: '`openid`: Get the ID token in addition to the access token.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openid`：除了访问令牌外，还获取ID令牌。'
- en: '`profile`: Get the user’s profile information (username, avatar, etc.)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`profile`：获取用户的个人资料信息（用户名、头像等）。'
- en: 'Those scopes are optional and can be added by setting `hf_oauth_scopes` in
    your Space’s metadata:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这些范围是可选的，可以通过在Space的元数据中设置`hf_oauth_scopes`来添加：
- en: '`email`: Get the user’s email address.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`email`：获取用户的电子邮件地址。'
- en: '`read-repos`: Get read access to the user’s personal repos.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`read-repos`：获取用户个人仓库的读取权限。'
- en: '`write-repos`: Get write access to the user’s personal repos. Does not grant
    read access on its own, you need to include `read-repos` as well.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`write-repos`：获取用户个人仓库的写入权限。单独不授予读取权限，您还需要包括`read-repos`。'
- en: '`manage-repos`: Get access to a repo’s settings. Also grants repo creation
    and deletion.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manage-repos`：获取对仓库设置的访问权限。还授予仓库创建和删除权限。'
- en: '`inference-api`: Get access to the [Inference API](https://huggingface.co/docs/api-inference/index),
    you will be able to make inference requests on behalf of the user.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`inference-api`：获取访问[推理API](https://huggingface.co/docs/api-inference/index)，您将能够代表用户进行推理请求。'
- en: Adding the button to your Space
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将按钮添加到您的Space
- en: You now have all the information to add a “Sign-in with HF” button to your Space.
    Some libraries ([Python](https://github.com/lepture/authlib), [NodeJS](https://github.com/panva/node-openid-client))
    can help you implement the OpenID/OAuth protocol.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在拥有所有信息，可以将“使用HF登录”按钮添加到您的Space中。一些库（[Python](https://github.com/lepture/authlib)，[NodeJS](https://github.com/panva/node-openid-client)）可以帮助您实现OpenID/OAuth协议。
- en: Gradio and hugginface.js also provide **built-in support**, making implementing
    the Sign-in with HF button a breeze; you can check out the associated guides with
    [gradio](https://www.gradio.app/guides/sharing-your-app#o-auth-login-via-hugging-face)
    and with [hugginface.js](https://huggingface.co/docs/huggingface.js/hub/README#oauth-login).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Gradio和hugginface.js还提供**内置支持**，使得实现“使用HF登录”按钮变得轻而易举；您可以查看与[gradio](https://www.gradio.app/guides/sharing-your-app#o-auth-login-via-hugging-face)和[hugginface.js](https://huggingface.co/docs/huggingface.js/hub/README#oauth-login)相关的指南。
- en: 'Basically, you need to:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，您需要：
- en: Redirect the user to `https://huggingface.co/oauth/authorize?redirect_uri={REDIRECT_URI}&scope=openid%20profile&client_id={CLIENT_ID}&state={STATE}`,
    where `STATE` is a random string that you will need to verify later.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将用户重定向到`https://huggingface.co/oauth/authorize?redirect_uri={REDIRECT_URI}&scope=openid%20profile&client_id={CLIENT_ID}&state={STATE}`，其中`STATE`是一个随机字符串，稍后您需要验证。
- en: Handle the callback on `/auth/callback` or `/login/callback` (or your own custom
    callback URL) and verify the `state` parameter.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理`/auth/callback`或`/login/callback`（或您自己的自定义回调URL）上的回调，并验证`state`参数。
- en: 'Use the `code` query parameter to get an access token and id token from `https://huggingface.co/oauth/token`
    (POST request with `client_id`, `code`, `grant_type=authorization_code` and `redirect_uri`
    as form data, and with `Authorization: Basic {base64(client_id:client_secret)}`
    as a header).'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '使用`code`查询参数从`https://huggingface.co/oauth/token`获取访问令牌和id令牌（使用`client_id`，`code`，`grant_type=authorization_code`和`redirect_uri`作为表单数据进行POST请求，并使用`Authorization:
    Basic {base64(client_id:client_secret)}`作为标头）。'
- en: You should use `target=_blank` on the button to open the sign-in page in a new
    tab, unless you run the space outside its `iframe`. Otherwise, you might encounter
    issues with cookies on some browsers.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在按钮上使用`target=_blank`，在新标签页中打开登录页面，除非您在其`iframe`之外运行空间。否则，您可能会在某些浏览器上遇到有关cookie的问题。
- en: 'Examples:'
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例：
- en: '[Gradio test app](https://huggingface.co/spaces/Wauplin/gradio-oauth-test)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Gradio测试应用程序](https://huggingface.co/spaces/Wauplin/gradio-oauth-test)'
- en: '[Hugging Chat (NodeJS/SvelteKit)](https://huggingface.co/spaces/huggingchat/chat-ui)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Hugging Chat（NodeJS/SvelteKit）](https://huggingface.co/spaces/huggingchat/chat-ui)'
- en: '[Inference Widgets (Auth.js/SvelteKit)](https://huggingface.co/spaces/huggingfacejs/inference-widgets),
    uses the `inference-api` scope to make inference requests on behalf of the user.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[推理小部件（Auth.js/SvelteKit）](https://huggingface.co/spaces/huggingfacejs/inference-widgets)，使用`inference-api`范围代表用户进行推理请求。'
- en: '[Client-Side in a Static Space (huggingface.js)](https://huggingface.co/spaces/huggingfacejs/client-side-oauth)
    - very simple JavaScript example.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[客户端在静态空间中（huggingface.js）](https://huggingface.co/spaces/huggingfacejs/client-side-oauth)
    - 非常简单的JavaScript示例。'
- en: 'JS Code example:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: JS代码示例：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
