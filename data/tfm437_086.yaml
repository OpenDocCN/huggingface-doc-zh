- en: Contribute to 🤗 Transformers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 贡献给🤗 Transformers
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/contributing](https://huggingface.co/docs/transformers/v4.37.2/en/contributing)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/docs/transformers/v4.37.2/en/contributing](https://huggingface.co/docs/transformers/v4.37.2/en/contributing)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Everyone is welcome to contribute, and we value everybody’s contribution. Code
    contributions are not the only way to help the community. Answering questions,
    helping others, and improving the documentation are also immensely valuable.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎每个人贡献，我们重视每个人的贡献。代码贡献并不是帮助社区的唯一方式。回答问题，帮助他人，改进文档也是非常有价值的。
- en: It also helps us if you spread the word! Reference the library in blog posts
    about the awesome projects it made possible, shout out on Twitter every time it
    has helped you, or simply ⭐️ the repository to say thank you.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您帮助传播消息，也会对我们有所帮助！在博客文章中提到这个令人惊叹的项目所可能实现的项目，每次它帮助您时在Twitter上大声疾呼，或者简单地⭐️这个存储库以表示感谢。
- en: However you choose to contribute, please be mindful and respect our [code of
    conduct](https://github.com/huggingface/transformers/blob/main/CODE_OF_CONDUCT.md).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您选择如何贡献，请注意并尊重我们的[行为准则](https://github.com/huggingface/transformers/blob/main/CODE_OF_CONDUCT.md)。
- en: '**This guide was heavily inspired by the awesome [scikit-learn guide to contributing](https://github.com/scikit-learn/scikit-learn/blob/main/CONTRIBUTING.md).**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**本指南受到了令人惊叹的[scikit-learn贡献指南](https://github.com/scikit-learn/scikit-learn/blob/main/CONTRIBUTING.md)的启发。**'
- en: Ways to contribute
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贡献的方式
- en: 'There are several ways you can contribute to 🤗 Transformers:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方式可以为🤗 Transformers做出贡献：
- en: Fix outstanding issues with the existing code.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复现有代码中的未解决问题。
- en: Submit issues related to bugs or desired new features.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提交与错误或期望的新功能相关的问题。
- en: Implement new models.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现新模型。
- en: Contribute to the examples or to the documentation.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为示例或文档做出贡献。
- en: If you don’t know where to start, there is a special [Good First Issue](https://github.com/huggingface/transformers/contribute)
    listing. It will give you a list of open issues that are beginner-friendly and
    help you start contributing to open-source. Just comment on the issue that you’d
    like to work on.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不知道从哪里开始，有一个特殊的[Good First Issue](https://github.com/huggingface/transformers/contribute)列表。它将为您提供一份友好的初学者的问题列表，并帮助您开始为开源项目做出贡献。只需在您想要处理的问题上发表评论即可。
- en: For something slightly more challenging, you can also take a look at the [Good
    Second Issue](https://github.com/huggingface/transformers/labels/Good%20Second%20Issue)
    list. In general though, if you feel like you know what you’re doing, go for it
    and we’ll help you get there! 🚀
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于稍微具有挑战性的事情，您还可以查看[Good Second Issue](https://github.com/huggingface/transformers/labels/Good%20Second%20Issue)列表。总的来说，如果您觉得自己知道在做什么，就去做吧，我们会帮助您实现目标！🚀
- en: All contributions are equally valuable to the community. 🥰
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 所有贡献对社区都同样有价值。🥰
- en: Fixing outstanding issues
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复未解决的问题
- en: If you notice an issue with the existing code and have a fix in mind, feel free
    to [start contributing](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md/#create-a-pull-request)
    and open a Pull Request!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您注意到现有代码中存在问题并有解决方案，请随时[开始贡献](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md/#create-a-pull-request)并打开一个拉取请求！
- en: Submitting a bug-related issue or feature request
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提交与错误相关的问题或功能请求
- en: Do your best to follow these guidelines when submitting a bug-related issue
    or a feature request. It will make it easier for us to come back to you quickly
    and with good feedback.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在提交与错误相关的问题或功能请求时，请尽力遵循这些准则。这将使我们更容易快速回复您并提供良好的反馈。
- en: Did you find a bug?
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 您发现了一个错误吗？
- en: The 🤗 Transformers library is robust and reliable thanks to users who report
    the problems they encounter.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 Transformers库之所以强大可靠，要感谢那些报告他们遇到问题的用户。
- en: Before you report an issue, we would really appreciate it if you could **make
    sure the bug was not already reported** (use the search bar on GitHub under Issues).
    Your issue should also be related to bugs in the library itself, and not your
    code. If you’re unsure whether the bug is in your code or the library, please
    ask in the [forum](https://discuss.huggingface.co/) first. This helps us respond
    quicker to fixing issues related to the library versus general questions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告问题之前，我们真的很感激您**确保错误尚未被报告**（在GitHub的问题下使用搜索栏）。您的问题也应与库本身中的错误有关，而不是您的代码。如果您不确定错误是在您的代码中还是在库中，请先在[论坛](https://discuss.huggingface.co/)中询问。这有助于我们更快地回应与库相关的问题，而不是一般问题。
- en: 'Once you’ve confirmed the bug hasn’t already been reported, please include
    the following information in your issue so we can quickly resolve it:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认错误尚未被报告，请在您的问题中包含以下信息，以便我们能够快速解决：
- en: Your **OS type and version** and **Python**, **PyTorch** and **TensorFlow**
    versions when applicable.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的**操作系统类型和版本**以及**Python**，**PyTorch**和**TensorFlow**版本（如果适用）。
- en: A short, self-contained, code snippet that allows us to reproduce the bug in
    less than 30s.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简短的、自包含的代码片段，使我们能够在不到30秒内重现错误。
- en: The *full* traceback if an exception is raised.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*完整*的异常跟踪信息。'
- en: Attach any other additional information, like screenshots, you think may help.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附加任何其他可能有助于的信息，如截图。
- en: 'To get the OS and software versions automatically, run the following command:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要自动获取操作系统和软件版本，请运行以下命令：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can also run the same command from the root of the repository:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从存储库的根目录运行相同的命令：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Do you want a new feature?
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 您想要一个新功能吗？
- en: 'If there is a new feature you’d like to see in 🤗 Transformers, please open
    an issue and describe:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望在🤗 Transformers中看到一个新功能，请打开一个问题并描述：
- en: What is the *motivation* behind this feature? Is it related to a problem or
    frustration with the library? Is it a feature related to something you need for
    a project? Is it something you worked on and think it could benefit the community?
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个功能背后的*动机*是什么？它是否与库中的问题或挫折有关？它是否与您需要的项目相关的功能？它是否是您正在开发的东西，您认为它可能有益于社区？
- en: Whatever it is, we’d love to hear about it!
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论是什么，我们都很乐意听到！
- en: Describe your requested feature in as much detail as possible. The more you
    can tell us about it, the better we’ll be able to help you.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽可能详细地描述您请求的功能。您能告诉我们的越多，我们就能更好地帮助您。
- en: Provide a *code snippet* that demonstrates the features usage.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供一个演示功能使用的*代码片段*。
- en: If the feature is related to a paper, please include a link.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果功能与论文相关，请包含链接。
- en: If your issue is well written we’re already 80% of the way there by the time
    you create it.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的问题写得很好，那么在您创建问题时我们已经完成了80%的工作。
- en: We have added [templates](https://github.com/huggingface/transformers/tree/main/templates)
    to help you get started with your issue.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经添加了[模板](https://github.com/huggingface/transformers/tree/main/templates)来帮助您开始解决问题。
- en: Do you want to implement a new model?
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您想要实现一个新模型吗？
- en: New models are constantly released and if you want to implement a new model,
    please provide the following information
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 新模型不断发布，如果您想实现新模型，请提供以下信息
- en: A short description of the model and a link to the paper.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型的简短描述和论文链接。
- en: Link to the implementation if it is open-sourced.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果实现是开源的，请提供实现的链接。
- en: Link to the model weights if they are available.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果模型权重可用，请提供模型权重的链接。
- en: If you are willing to contribute the model yourself, let us know so we can help
    you add it to 🤗 Transformers!
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您愿意贡献模型，请告诉我们，这样我们就可以帮助您将其添加到🤗 Transformers中！
- en: We have added a [detailed guide and templates](https://github.com/huggingface/transformers/tree/main/templates)
    to help you get started with adding a new model, and we also have a more technical
    guide for [how to add a model to 🤗 Transformers](https://huggingface.co/docs/transformers/add_new_model).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经添加了一个[详细指南和模板](https://github.com/huggingface/transformers/tree/main/templates)来帮助您开始添加新模型，我们还有一个更详细的指南，介绍了[如何向🤗
    Transformers添加模型](https://huggingface.co/docs/transformers/add_new_model)。
- en: Do you want to add documentation?
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您想添加文档吗？
- en: We’re always looking for improvements to the documentation that make it more
    clear and accurate. Please let us know how the documentation can be improved such
    as typos and any content that is missing, unclear or inaccurate. We’ll be happy
    to make the changes or help you make a contribution if you’re interested!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终在寻找使文档更清晰和准确的改进。请告诉我们如何改进文档，例如拼写错误和任何缺失、不清晰或不准确的内容。如果您有兴趣，我们将很乐意进行更改或帮助您做出贡献！
- en: For more details about how to generate, build, and write the documentation,
    take a look at the documentation [README](https://github.com/huggingface/transformers/tree/main/docs).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何生成、构建和编写文档的更多详细信息，请查看文档[README](https://github.com/huggingface/transformers/tree/main/docs)。
- en: Create a Pull Request
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个Pull Request
- en: Before writing any code, we strongly advise you to search through the existing
    PRs or issues to make sure nobody is already working on the same thing. If you
    are unsure, it is always a good idea to open an issue to get some feedback.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写任何代码之前，我们强烈建议您搜索现有的PR或问题，以确保没有人已经在处理相同的事情。如果您不确定，最好打开一个问题以获得一些反馈。
- en: You will need basic `git` proficiency to contribute to 🤗 Transformers. While
    `git` is not the easiest tool to use, it has the greatest manual. Type `git --help`
    in a shell and enjoy! If you prefer books, [Pro Git](https://git-scm.com/book/en/v2)
    is a very good reference.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要基本的`git`熟练技能才能为🤗 Transformers做出贡献。虽然`git`不是最容易使用的工具，但它有最详尽的手册。在shell中键入`git
    --help`并享受！如果您更喜欢书籍，[Pro Git](https://git-scm.com/book/en/v2)是一个非常好的参考。
- en: 'You’ll need **[Python 3.8]((https://github.com/huggingface/transformers/blob/main/setup.py#L426))**
    or above to contribute to 🤗 Transformers. Follow the steps below to start contributing:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要**[Python 3.8]((https://github.com/huggingface/transformers/blob/main/setup.py#L426))**或更高版本才能为🤗
    Transformers做出贡献。请按照以下步骤开始贡献：
- en: Fork the [repository](https://github.com/huggingface/transformers) by clicking
    on the **[Fork](https://github.com/huggingface/transformers/fork)** button on
    the repository’s page. This creates a copy of the code under your GitHub user
    account.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击存储库页面上的**[Fork](https://github.com/huggingface/transformers/fork)**按钮来fork
    [存储库](https://github.com/huggingface/transformers)。这将在您的GitHub用户帐户下创建代码副本。
- en: 'Clone your fork to your local disk, and add the base repository as a remote:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的fork克隆到本地磁盘，并将基本存储库添加为远程：
- en: '[PRE2]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Create a new branch to hold your development changes:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新分支来保存您的开发更改：
- en: '[PRE3]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 🚨 **Do not** work on the `main` branch!
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 🚨 **不要**在`main`分支上工作！
- en: 'Set up a development environment by running the following command in a virtual
    environment:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在虚拟环境中运行以下命令设置开发环境：
- en: '[PRE4]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If 🤗 Transformers was already installed in the virtual environment, remove it
    with `pip uninstall transformers` before reinstalling it in editable mode with
    the `-e` flag.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果🤗 Transformers已经安装在虚拟环境中，请在重新安装时使用`pip uninstall transformers`将其删除，然后使用`-e`标志以可编辑模式重新安装。
- en: 'Depending on your OS, and since the number of optional dependencies of Transformers
    is growing, you might get a failure with this command. If that’s the case make
    sure to install the Deep Learning framework you are working with (PyTorch, TensorFlow
    and/or Flax) then do:'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据您的操作系统，由于Transformers的可选依赖项数量正在增加，您可能会在此命令中遇到失败。如果是这种情况，请确保安装您正在使用的深度学习框架（PyTorch、TensorFlow和/或Flax），然后执行：
- en: '[PRE5]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: which should be enough for most use cases.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这对大多数用例来说应该足够了。
- en: Develop the features in your branch.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的分支中开发功能。
- en: 'As you work on your code, you should make sure the test suite passes. Run the
    tests impacted by your changes like this:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在编写代码时，您应确保测试套件通过。运行受您更改影响的测试如下：
- en: '[PRE6]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: For more information about tests, check out the [Testing](https://huggingface.co/docs/transformers/testing)
    guide.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关测试的更多信息，请查看[Testing](https://huggingface.co/docs/transformers/testing)指南。
- en: '🤗 Transformers relies on `black` and `ruff` to format its source code consistently.
    After you make changes, apply automatic style corrections and code verifications
    that can’t be automated in one go with:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 🤗 Transformers依赖于`black`和`ruff`来一致格式化其源代码。在进行更改后，应用自动样式更正和代码验证，这些更改无法一次性自动完成：
- en: '[PRE7]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This target is also optimized to only work with files modified by the PR you’re
    working on.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此目标还经过优化，仅适用于您正在处理的PR修改的文件。
- en: 'If you prefer to run the checks one after the other, the following command
    applies the style corrections:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您更喜欢逐个运行检查，以下命令适用于样式更正：
- en: '[PRE8]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '🤗 Transformers also uses `ruff` and a few custom scripts to check for coding
    mistakes. Quality controls are run by the CI, but you can run the same checks
    with:'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 🤗 Transformers还使用`ruff`和一些自定义脚本来检查编码错误。质量控制由CI运行，但您也可以使用相同的检查运行：
- en: '[PRE9]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, we have a lot of scripts to make sure we don’t forget to update some
    files when adding a new model. You can run these scripts with:'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，我们有很多脚本，以确保在添加新模型时不会忘记更新一些文件。您可以使用以下命令运行这些脚本：
- en: '[PRE10]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: To learn more about those checks and how to fix any issues with them, check
    out the [Checks on a Pull Request](https://huggingface.co/docs/transformers/pr_checks)
    guide.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要了解更多关于这些检查以及如何解决其中任何问题的信息，请查看[拉取请求上的检查](https://huggingface.co/docs/transformers/pr_checks)指南。
- en: 'If you’re modifying documents under the `docs/source` directory, make sure
    the documentation can still be built. This check will also run in the CI when
    you open a pull request. To run a local check make sure you install the documentation
    builder:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您修改了`docs/source`目录下的文档，请确保文档仍然可以构建。当您打开拉取请求时，此检查也将在CI中运行。要运行本地检查，请确保安装文档生成器：
- en: '[PRE11]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Run the following command from the root of the repository:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从存储库的根目录运行以下命令：
- en: '[PRE12]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This will build the documentation in the `~/tmp/test-build` folder where you
    can inspect the generated Markdown files with your favorite editor. You can also
    preview the docs on GitHub when you open a pull request.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将在`~/tmp/test-build`文件夹中构建文档，您可以使用您喜欢的编辑器检查生成的Markdown文件。您还可以在打开拉取请求时在GitHub上预览文档。
- en: 'Once you’re happy with your changes, add the changed files with `git add` and
    record your changes locally with `git commit`:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当您对更改满意时，请使用`git add`添加更改的文件，并使用`git commit`在本地记录您的更改：
- en: '[PRE13]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Please remember to write [good commit messages](https://chris.beams.io/posts/git-commit/)
    to clearly communicate the changes you made!
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请记得写[良好的提交消息](https://chris.beams.io/posts/git-commit/)，以清楚地传达您所做的更改！
- en: 'To keep your copy of the code up to date with the original repository, rebase
    your branch on `upstream/branch` *before* you open a pull request or if requested
    by a maintainer:'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了使您的代码副本与原始存储库保持最新，请在打开拉取请求之前或维护者要求时，在`upstream/branch`上对您的分支进行变基：
- en: '[PRE14]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Push your changes to your branch:'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将更改推送到您的分支：
- en: '[PRE15]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If you’ve already opened a pull request, you’ll need to force push with the
    `--force` flag. Otherwise, if the pull request hasn’t been opened yet, you can
    just push your changes normally.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您已经打开了一个拉取请求，您需要使用`--force`标志进行强制推送。否则，如果拉取请求尚未打开，您可以正常推送您的更改。
- en: Now you can go to your fork of the repository on GitHub and click on **Pull
    Request** to open a pull request. Make sure you tick off all the boxes on our
    [checklist](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md/#pull-request-checklist)
    below. When you’re ready, you can send your changes to the project maintainers
    for review.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以转到GitHub上存储库的分支，并单击**拉取请求**以打开拉取请求。确保您在下面的[检查列表](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md/#pull-request-checklist)上勾选所有框。当您准备好时，您可以将更改发送给项目维护者进行审查。
- en: It’s ok if maintainers request changes, it happens to our core contributors
    too! So everyone can see the changes in the pull request, work in your local branch
    and push the changes to your fork. They will automatically appear in the pull
    request.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果维护者要求更改，那没关系，我们的核心贡献者也会遇到这种情况！这样每个人都可以在拉取请求中看到更改，您可以在本地分支上工作并将更改推送到您的分支。它们将自动出现在拉取请求中。
- en: Pull request checklist
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拉取请求检查列表
- en: ☐ The pull request title should summarize your contribution.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: ☐ 拉取请求标题应总结您的贡献。
- en: ☐ If your pull request addresses an issue, please mention the issue number in
    the pull request description to make sure they are linked (and people viewing
    the issue know you are working on it).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: ☐ 如果您的拉取请求解决了一个问题，请在拉取请求描述中提及问题编号，以确保它们链接在一起（并且查看问题的人知道您正在处理它）。
- en: ☐ To indicate a work in progress please prefix the title with `[WIP]`. These
    are useful to avoid duplicated work, and to differentiate it from PRs ready to
    be merged.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: ☐ 要指示正在进行的工作，请在标题前加上`[WIP]`。这对于避免重复工作以及将其与准备合并的PR区分开很有用。
- en: ☐ Make sure existing tests pass.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: ☐ 确保现有测试通过。
- en: ☐ If adding a new feature, also add tests for it.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: ☐ 如果要添加新功能，请为其添加测试。
- en: If you are adding a new model, make sure you use `ModelTester.all_model_classes
    = (MyModel, MyModelWithLMHead,...)` to trigger the common tests.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要添加新模型，请确保使用`ModelTester.all_model_classes = (MyModel, MyModelWithLMHead,...)`来触发常见测试。
- en: If you are adding new `@slow` tests, make sure they pass using `RUN_SLOW=1 python
    -m pytest tests/models/my_new_model/test_my_new_model.py`.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要添加新的`@slow`测试，请确保使用`RUN_SLOW=1 python -m pytest tests/models/my_new_model/test_my_new_model.py`来运行它们。
- en: If you are adding a new tokenizer, write tests and make sure `RUN_SLOW=1 python
    -m pytest tests/models/{your_model_name}/test_tokenization_{your_model_name}.py`
    passes.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要添加新的分词器，请编写测试并确保`RUN_SLOW=1 python -m pytest tests/models/{your_model_name}/test_tokenization_{your_model_name}.py`通过。
- en: CircleCI does not run the slow tests, but GitHub Actions does every night!
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CircleCI不运行慢速测试，但GitHub Actions每晚都会运行！
- en: ☐ All public methods must have informative docstrings (see [`modeling_bert.py`](https://github.com/huggingface/transformers/blob/main/src/transformers/models/bert/modeling_bert.py)
    for an example).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: ☐ 所有公共方法必须具有信息性的文档字符串（请参阅[`modeling_bert.py`](https://github.com/huggingface/transformers/blob/main/src/transformers/models/bert/modeling_bert.py)作为示例）。
- en: '☐ Due to the rapidly growing repository, don’t add any images, videos and other
    non-text files that’ll significantly weigh down the repository. Instead, use a
    Hub repository such as [`hf-internal-testing`](https://huggingface.co/hf-internal-testing)
    to host these files and reference them by URL. We recommend placing documentation
    related images in the following repository: [huggingface/documentation-images](https://huggingface.co/datasets/huggingface/documentation-images).
    You can open a PR on this dataset repostitory and ask a Hugging Face member to
    merge it.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: ☐ 由于存储库正在迅速增长，请不要添加任何图像、视频和其他非文本文件，这些文件会显著增加存储库的大小。相反，请使用 Hub 存储库，例如 [`hf-internal-testing`](https://huggingface.co/hf-internal-testing)
    来托管这些文件，并通过 URL 引用它们。我们建议将与文档相关的图像放在以下存储库中：[huggingface/documentation-images](https://huggingface.co/datasets/huggingface/documentation-images)。您可以在此数据集存储库上打开一个
    PR，并请求 Hugging Face 成员合并它。
- en: For more information about the checks run on a pull request, take a look at
    our [Checks on a Pull Request](https://huggingface.co/docs/transformers/pr_checks)
    guide.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在拉取请求上运行的检查的更多信息，请查看我们的 [拉取请求上的检查](https://huggingface.co/docs/transformers/pr_checks)
    指南。
- en: Tests
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试
- en: An extensive test suite is included to test the library behavior and several
    examples. Library tests can be found in the [tests](https://github.com/huggingface/transformers/tree/main/tests)
    folder and examples tests in the [examples](https://github.com/huggingface/transformers/tree/main/examples)
    folder.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 包含了一个广泛的测试套件，用于测试库的行为和几个示例。库测试可以在 [tests](https://github.com/huggingface/transformers/tree/main/tests)
    文件夹中找到，示例测试可以在 [examples](https://github.com/huggingface/transformers/tree/main/examples)
    文件夹中找到。
- en: We like `pytest` and `pytest-xdist` because it’s faster. From the root of the
    repository, specify a *path to a subfolder or a test file* to run the test.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们喜欢 `pytest` 和 `pytest-xdist`，因为它更快。从存储库的根目录开始，指定一个*子文件夹路径或测试文件*来运行测试。
- en: '[PRE16]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Similarly, for the `examples` directory, specify a *path to a subfolder or
    test file* to run the test. For example, the following command tests the text
    classification subfolder in the PyTorch `examples` directory:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，对于 `examples` 目录，指定一个*子文件夹路径或测试文件*来运行测试。例如，以下命令测试 PyTorch `examples` 目录中的文本分类子文件夹：
- en: '[PRE17]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In fact, this is actually how our `make test` and `make test-examples` commands
    are implemented (not including the `pip install`)!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这就是我们实现 `make test` 和 `make test-examples` 命令的方式（不包括 `pip install`）！
- en: You can also specify a smaller set of tests in order to test only the feature
    you’re working on.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以指定一小组较小的测试，以便仅测试您正在处理的功能。
- en: By default, slow tests are skipped but you can set the `RUN_SLOW` environment
    variable to `yes` to run them. This will download many gigabytes of models so
    make sure you have enough disk space, a good internet connection or a lot of patience!
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，慢测试会被跳过，但您可以将 `RUN_SLOW` 环境变量设置为 `yes` 来运行它们。这将下载许多千兆字节的模型，因此请确保您有足够的磁盘空间、良好的互联网连接或足够的耐心！
- en: Remember to specify a *path to a subfolder or a test file* to run the test.
    Otherwise, you’ll run all the tests in the `tests` or `examples` folder, which
    will take a very long time!
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 记得指定一个*子文件夹路径或测试文件*来运行测试。否则，您将运行 `tests` 或 `examples` 文件夹中的所有测试，这将花费很长时间！
- en: '[PRE18]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Like the slow tests, there are other environment variables available which
    not enabled by default during testing:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 与慢测试类似，还有其他环境变量可用，这些环境变量在测试期间默认未启用：
- en: '`RUN_CUSTOM_TOKENIZERS`: Enables tests for custom tokenizers.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RUN_CUSTOM_TOKENIZERS`: 启用自定义分词器的测试。'
- en: '`RUN_PT_FLAX_CROSS_TESTS`: Enables tests for PyTorch + Flax integration.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RUN_PT_FLAX_CROSS_TESTS`: 启用 PyTorch + Flax 集成的测试。'
- en: '`RUN_PT_TF_CROSS_TESTS`: Enables tests for TensorFlow + PyTorch integration.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RUN_PT_TF_CROSS_TESTS`: 启用 TensorFlow + PyTorch 集成的测试。'
- en: More environment variables and additional information can be found in the [testing_utils.py](src/transformers/testing_utils.py).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 更多环境变量和其他信息可以在 [testing_utils.py](src/transformers/testing_utils.py) 中找到。
- en: 🤗 Transformers uses `pytest` as a test runner only. It doesn’t use any `pytest`-specific
    features in the test suite itself.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 Transformers 仅使用 `pytest` 作为测试运行器。它不在测试套件本身中使用任何 `pytest` 特定功能。
- en: 'This means `unittest` is fully supported. Here’s how to run tests with `unittest`:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着 `unittest` 得到了完全支持。以下是如何使用 `unittest` 运行测试的方法：
- en: '[PRE19]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Style guide
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 样式指南
- en: For documentation strings, 🤗 Transformers follows the [Google Python Style Guide](https://google.github.io/styleguide/pyguide.html).
    Check our [documentation writing guide](https://github.com/huggingface/transformers/tree/main/docs#writing-documentation---specification)
    for more information.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文档字符串，🤗 Transformers 遵循 [Google Python Style Guide](https://google.github.io/styleguide/pyguide.html)。查看我们的
    [文档编写指南](https://github.com/huggingface/transformers/tree/main/docs#writing-documentation---specification)
    获取更多信息。
- en: Develop on Windows
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Windows 上开发
- en: 'On Windows (unless you’re working in [Windows Subsystem for Linux](https://learn.microsoft.com/en-us/windows/wsl/)
    or WSL), you need to configure git to transform Windows `CRLF` line endings to
    Linux `LF` line endings:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上（除非您在 [Windows Subsystem for Linux](https://learn.microsoft.com/en-us/windows/wsl/)
    或 WSL 中工作），您需要配置 git 将 Windows 的 `CRLF` 行结束符转换为 Linux 的 `LF` 行结束符：
- en: '[PRE20]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'One way to run the `make` command on Windows is with MSYS2:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上运行 `make` 命令的一种方法是使用 MSYS2：
- en: '[Download MSYS2](https://www.msys2.org/), and we assume it’s installed in `C:\msys64`.'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[下载 MSYS2](https://www.msys2.org/)，我们假设它安装在 `C:\msys64` 中。'
- en: Open the command line `C:\msys64\msys2.exe` (it should be available from the
    **Start** menu).
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行 `C:\msys64\msys2.exe`（应该可以从**开始**菜单中找到）。
- en: 'Run in the shell: `pacman -Syu` and install `make` with `pacman -S make`.'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 shell 中运行：`pacman -Syu` 并使用 `pacman -S make` 安装 `make`。
- en: Add `C:\msys64\usr\bin` to your PATH environment variable.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `C:\msys64\usr\bin` 添加到您的 PATH 环境变量中。
- en: You can now use `make` from any terminal (Powershell, cmd.exe, etc.)! 🎉
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以从任何终端（Powershell、cmd.exe 等）使用 `make` 了！🎉
- en: Sync a forked repository with upstream main (the Hugging Face repository)
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将派生存储库与上游主存储库同步（Hugging Face 存储库）
- en: When updating the main branch of a forked repository, please follow these steps
    to avoid pinging the upstream repository which adds reference notes to each upstream
    PR, and sends unnecessary notifications to the developers involved in these PRs.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 更新分叉存储库的主分支时，请按照以下步骤操作，以避免向上游存储库发送引用注释并向参与这些拉取请求的开发人员发送不必要的通知。
- en: When possible, avoid syncing with the upstream using a branch and PR on the
    forked repository. Instead, merge directly into the forked main.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽量避免使用分支和拉取请求与上游同步。而是直接合并到分叉主分支。
- en: 'If a PR is absolutely necessary, use the following steps after checking out
    your branch:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果绝对必要，使用以下步骤在检出分支后：
- en: '[PRE21]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
