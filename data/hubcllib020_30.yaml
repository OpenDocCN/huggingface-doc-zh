- en: Downloading files
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载文件
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/package_reference/file_download](https://huggingface.co/docs/huggingface_hub/package_reference/file_download)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/huggingface_hub/package_reference/file_download](https://huggingface.co/docs/huggingface_hub/package_reference/file_download)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Download a single file
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载单个文件
- en: hf_hub_download
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: hf_hub_download
- en: '#### `huggingface_hub.hf_hub_download`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.hf_hub_download`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L993)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L993)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A user or an organization name and a repo name separated
    by a `/`.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id`（`str`）—由用户或组织名称和由“/”分隔的存储库名称。'
- en: '`filename` (`str`) — The name of the file in the repo.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filename`（`str`）—存储库中文件的名称。'
- en: '`subfolder` (`str`, *optional*) — An optional value corresponding to a folder
    inside the model repo.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subfolder`（`str`，*可选*）—与模型存储库中的文件夹对应的可选值。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if downloading
    from a dataset or space, `None` or `"model"` if downloading from a model. Default
    is `None`.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type`（`str`，*可选*）—如果从数据集或空间下载，则设置为`"dataset"`或`"space"`，如果从模型下载，则设置为`None`或`"model"`。默认为`None`。'
- en: '`revision` (`str`, *optional*) — An optional Git revision id which can be a
    branch name, a tag, or a commit hash.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision`（`str`，*可选*）—可选的Git修订ID，可以是分支名称、标签或提交哈希。'
- en: '`library_name` (`str`, *optional*) — The name of the library to which the object
    corresponds.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`library_name`（`str`，*可选*）—对象对应的库的名称。'
- en: '`library_version` (`str`, *optional*) — The version of the library.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`library_version`（`str`，*可选*）—库的版本。'
- en: '`cache_dir` (`str`, `Path`, *optional*) — Path to the folder where cached files
    are stored.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir`（`str`，`Path`，*可选*）—缓存文件存储的文件夹路径。'
- en: '`local_dir` (`str` or `Path`, *optional*) — If provided, the downloaded file
    will be placed under this directory, either as a symlink (default) or a regular
    file (see description for more details).'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_dir`（`str`或`Path`，*可选*）—如果提供，下载的文件将放置在此目录下，作为符号链接（默认）或常规文件（有关更多详细信息，请参阅描述）。'
- en: '`local_dir_use_symlinks` (`"auto"` or `bool`, defaults to `"auto"`) — To be
    used with `local_dir`. If set to “auto”, the cache directory will be used and
    the file will be either duplicated or symlinked to the local directory depending
    on its size. It set to `True`, a symlink will be created, no matter the file size.
    If set to `False`, the file will either be duplicated from cache (if already exists)
    or downloaded from the Hub and not cached. See description for more details.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_dir_use_symlinks`（`"auto"`或`bool`，默认为`"auto"`）—与`local_dir`一起使用。如果设置为“auto”，将使用缓存目录，并且文件将根据其大小在本地目录中复制或创建符号链接。如果设置为`True`，将创建符号链接，无论文件大小如何。如果设置为`False`，文件将从缓存中复制（如果已存在）或从Hub下载并且不缓存。有关更多详细信息，请参阅描述。'
- en: '`user_agent` (`dict`, `str`, *optional*) — The user-agent info in the form
    of a dictionary or a string.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user_agent`（`dict`，`str`，*可选*）—以字典或字符串形式的用户代理信息。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether the file
    should be downloaded even if it already exists in the local cache.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download`（`bool`，*可选*，默认为`False`）—是否应下载文件，即使它已经存在于本地缓存中。'
- en: '`proxies` (`dict`, *optional*) — Dictionary mapping protocol to the URL of
    the proxy passed to `requests.request`.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies`（`dict`，*可选*）—将协议映射到传递给`requests.request`的代理的URL的字典。'
- en: '`etag_timeout` (`float`, *optional*, defaults to `10`) — When fetching ETag,
    how many seconds to wait for the server to send data before giving up which is
    passed to `requests.request`.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`etag_timeout`（`float`，*可选*，默认为`10`）—在获取ETag时，等待服务器发送数据的秒数，然后放弃，传递给`requests.request`。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — If `True`, resume
    a previously interrupted download.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download`（`bool`，*可选*，默认为`False`）—如果为`True`，则恢复先前中断的下载。'
- en: '`token` (`str`, `bool`, *optional*) — A token to be used for the download.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token`（`str`，`bool`，*可选*）—用于下载的令牌。'
- en: If `True`, the token is read from the HuggingFace config folder.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为`True`，则从HuggingFace配置文件夹中读取令牌。
- en: If a string, it’s used as the authentication token.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果是字符串，则用作身份验证令牌。
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) — If `True`, avoid
    downloading the file and return the path to the local cached file if it exists.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_files_only`（`bool`，*可选*，默认为`False`）—如果为`True`，则避免下载文件并返回本地缓存文件的路径（如果存在）。'
- en: '`legacy_cache_layout` (`bool`, *optional*, defaults to `False`) — If `True`,
    uses the legacy file cache layout i.e. just call [hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url)
    then `cached_download`. This is deprecated as the new cache layout is more powerful.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`legacy_cache_layout`（`bool`，*可选*，默认为`False`）—如果为`True`，则使用传统的文件缓存布局，即只需调用[hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url)然后`cached_download`。由于新的缓存布局更强大，因此此方法已被弃用。'
- en: Download a given file if it’s not already present in the local cache.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果本地缓存中尚不存在给定文件，则下载该文件。
- en: 'The new cache file layout looks like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 新的缓存文件布局如下：
- en: The cache directory contains one subfolder per repo_id (namespaced by repo type)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存目录包含每个repo_id的一个子文件夹（由repo类型命名空间）
- en: 'inside each repo folder:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个存储库文件夹内：
- en: refs is a list of the latest known revision => commit_hash pairs
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: refs是最新已知的修订 => 提交哈希对列表
- en: blobs contains the actual file blobs (identified by their git-sha or sha256,
    depending on whether they’re LFS files or not)
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: blobs包含实际的文件blob（根据它们的git-sha或sha256标识，取决于它们是否为LFS文件）
- en: snapshots contains one subfolder per commit, each “commit” contains the subset
    of the files that have been resolved at that particular commit. Each filename
    is a symlink to the blob at that particular commit.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快照包含每个提交的一个子文件夹，每个“提交”包含在该特定提交中已解析的文件子集。每个文件名都是指向该特定提交的blob的符号链接。
- en: 'If `local_dir` is provided, the file structure from the repo will be replicated
    in this location. You can configure how you want to move those files:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了`local_dir`，则将在此位置复制来自存储库的文件结构。您可以配置如何移动这些文件：
- en: If `local_dir_use_symlinks="auto"` (default), files are downloaded and stored
    in the cache directory as blob files. Small files (<5MB) are duplicated in `local_dir`
    while a symlink is created for bigger files. The goal is to be able to manually
    edit and save small files without corrupting the cache while saving disk space
    for binary files. The 5MB threshold can be configured with the `HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`
    environment variable.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`local_dir_use_symlinks="auto"`（默认），文件将被下载并存储在缓存目录中作为blob文件。小文件（<5MB）将在`local_dir`中复制，而对于更大的文件，将创建符号链接。目标是能够手动编辑和保存小文件而不会破坏缓存，同时为二进制文件节省磁盘空间。5MB阈值可以通过`HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`环境变量进行配置。
- en: If `local_dir_use_symlinks=True`, files are downloaded, stored in the cache
    directory and symlinked in `local_dir`. This is optimal in term of disk usage
    but files must not be manually edited.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`local_dir_use_symlinks=True`，文件将被下载，存储在缓存目录中，并在`local_dir`中创建符号链接。这在磁盘使用方面是最优化的，但文件不得手动编辑。
- en: If `local_dir_use_symlinks=False` and the blob files exist in the cache directory,
    they are duplicated in the local dir. This means disk usage is not optimized.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`local_dir_use_symlinks=False`且blob文件存在于缓存目录中，则它们将在本地目录中复制。这意味着磁盘使用没有被优化。
- en: Finally, if `local_dir_use_symlinks=False` and the blob files do not exist in
    the cache directory, then the files are downloaded and directly placed under `local_dir`.
    This means if you need to download them again later, they will be re-downloaded
    entirely.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，如果`local_dir_use_symlinks=False`且blob文件不存在于缓存目录中，则文件将被下载并直接放置在`local_dir`下。这意味着如果以后需要重新下载它们，它们将被完全重新下载。
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Raises the following errors:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    if `token=True` and the token cannot be found.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    如果`token=True`且找不到令牌。'
- en: '[`OSError`](https://docs.python.org/3/library/exceptions.html#OSError) if ETag
    cannot be determined.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`OSError`](https://docs.python.org/3/library/exceptions.html#OSError) 如果无法确定ETag。'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    如果某个参数值无效'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    如果找不到要下载的存储库。这可能是因为它不存在，或者因为它被设置为`private`，而您没有访问权限。'
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    如果找不到要下载的修订版本。'
- en: '[EntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError)
    If the file to download cannot be found.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[EntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError)
    如果找不到要下载的文件。'
- en: '[LocalEntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.LocalEntryNotFoundError)
    If network is disabled or unavailable and file is not found in cache.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LocalEntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.LocalEntryNotFoundError)
    如果网络被禁用或不可用，并且在缓存中找不到文件。'
- en: hf_hub_url
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: hf_hub_url
- en: '#### `huggingface_hub.hf_hub_url`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.hf_hub_url`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L184)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L184)'
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) name and a repo name
    separated by a `/`.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id`（`str`）— 由用户或组织名称和存储库名称以`/`分隔的命名空间。'
- en: '`filename` (`str`) — The name of the file in the repo.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filename`（`str`）— 存储库中文件的名称。'
- en: '`subfolder` (`str`, *optional*) — An optional value corresponding to a folder
    inside the repo.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subfolder`（`str`，*可选*）— 与存储库内部文件夹对应的可选值。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if downloading
    from a dataset or space, `None` or `"model"` if downloading from a model. Default
    is `None`.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type`（`str`，*可选*）— 如果从数据集或空间下载，则设置为`"dataset"`或`"space"`，如果从模型下载，则设置为`None`或`"model"`。默认为`None`。'
- en: '`revision` (`str`, *optional*) — An optional Git revision id which can be a
    branch name, a tag, or a commit hash.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision`（`str`，*可选*）— 可选的Git修订ID，可以是分支名称、标签或提交哈希。'
- en: Construct the URL of a file from the given information.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 从给定信息构建文件的URL。
- en: The resolved address can either be a huggingface.co-hosted url, or a link to
    Cloudfront (a Content Delivery Network, or CDN) for large files which are more
    than a few MBs.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 解析后的地址可以是huggingface.co托管的URL，也可以是指向Cloudfront（内容传送网络或CDN）的链接，用于大于几MB的大文件。
- en: 'Example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Notes:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: Cloudfront is replicated over the globe so downloads are way faster for the
    end user (and it also lowers our bandwidth costs).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Cloudfront在全球范围内复制，因此对于最终用户来说，下载速度更快（同时也降低了我们的带宽成本）。
- en: Cloudfront aggressively caches files by default (default TTL is 24 hours), however
    this is not an issue here because we implement a git-based versioning system on
    huggingface.co, which means that we store the files on S3/Cloudfront in a content-addressable
    way (i.e., the file name is its hash). Using content-addressable filenames means
    cache can’t ever be stale.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Cloudfront默认会积极缓存文件（默认TTL为24小时），但这在这里不是问题，因为我们在huggingface.co上实现了基于git的版本控制系统，这意味着我们以内容可寻址的方式（即文件名为其哈希值）将文件存储在S3/Cloudfront上。使用内容可寻址的文件名意味着缓存永远不会过时。
- en: 'In terms of client-side caching from this library, we base our caching on the
    objects’ entity tag (`ETag`), which is an identifier of a specific version of
    a resource [1]_. An object’s ETag is: its git-sha1 if stored in git, or its sha256
    if stored in git-lfs.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个库的客户端缓存方面，我们基于对象的实体标签（`ETag`）进行缓存，这是资源特定版本的标识符[1]。对象的ETag是：如果存储在git中，则为其git-sha1，如果存储在git-lfs中，则为其sha256。
- en: 'References:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：
- en: '[1] [https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[1] [https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag)'
- en: Download a snapshot of the repo
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载存储库的快照
- en: '#### `huggingface_hub.snapshot_download`'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.snapshot_download`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_snapshot_download.py#L34)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_snapshot_download.py#L34)'
- en: '[PRE4]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A user or an organization name and a repo name separated
    by a `/`.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由用户或组织名称和存储库名称以`/`分隔的字符串。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if downloading
    from a dataset or space, `None` or `"model"` if downloading from a model. Default
    is `None`.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`，*可选*) — 如果从数据集或空间下载，则设置为`"dataset"`或`"space"`，如果从模型下载，则设置为`None`或`"model"`。默认为`None`。'
- en: '`revision` (`str`, *optional*) — An optional Git revision id which can be a
    branch name, a tag, or a commit hash.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`，*可选*) — 可选的Git修订ID，可以是分支名称、标签或提交哈希。'
- en: '`cache_dir` (`str`, `Path`, *optional*) — Path to the folder where cached files
    are stored.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`str`，`Path`，*可选*) — 存储缓存文件的文件夹的路径。'
- en: '`local_dir` (`str` or `Path`, *optional*) — If provided, the downloaded files
    will be placed under this directory, either as symlinks (default) or regular files
    (see description for more details).'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_dir` (`str`或`Path`，*可选*) — 如果提供，下载的文件将被放置在此目录下，可以是符号链接（默认）或常规文件（详细信息请参见描述）。'
- en: '`local_dir_use_symlinks` (`"auto"` or `bool`, defaults to `"auto"`) — To be
    used with `local_dir`. If set to “auto”, the cache directory will be used and
    the file will be either duplicated or symlinked to the local directory depending
    on its size. It set to `True`, a symlink will be created, no matter the file size.
    If set to `False`, the file will either be duplicated from cache (if already exists)
    or downloaded from the Hub and not cached. See description for more details.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_dir_use_symlinks` (`"auto"`或`bool`，默认为`"auto"`) — 与`local_dir`一起使用。如果设置为“auto”，将使用缓存目录，并且文件将根据其大小复制或创建符号链接到本地目录。如果设置为`True`，将创建符号链接，无论文件大小如何。如果设置为`False`，文件将从缓存中复制（如果已存在）或从Hub下载并且不缓存。详细信息请参见描述。'
- en: '`library_name` (`str`, *optional*) — The name of the library to which the object
    corresponds.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`library_name` (`str`，*可选*) — 对象对应的库的名称。'
- en: '`library_version` (`str`, *optional*) — The version of the library.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`library_version` (`str`，*可选*) — 库的版本。'
- en: '`user_agent` (`str`, `dict`, *optional*) — The user-agent info in the form
    of a dictionary or a string.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user_agent` (`str`，`dict`，*可选*) — 以字典或字符串形式的用户代理信息。'
- en: '`proxies` (`dict`, *optional*) — Dictionary mapping protocol to the URL of
    the proxy passed to `requests.request`.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`dict`，*可选*) — 将协议映射到传递给`requests.request`的代理的URL的字典。'
- en: '`etag_timeout` (`float`, *optional*, defaults to `10`) — When fetching ETag,
    how many seconds to wait for the server to send data before giving up which is
    passed to `requests.request`.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`etag_timeout` (`float`，*可选*，默认为`10`) — 在获取ETag时，等待服务器发送数据的秒数，然后放弃，这将传递给`requests.request`。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False) -- If` True`, resume
    a previously interrupted download.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`，*可选*，默认为`False`) — 如果为`True`，则恢复先前中断的下载。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether the file
    should be downloaded even if it already exists in the local cache.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`，*可选*，默认为`False`) — 是否应该下载文件，即使它已经存在于本地缓存中。'
- en: '`token` (`str`, `bool`, *optional*) — A token to be used for the download.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`，`bool`，*可选*) — 用于下载的令牌。'
- en: If `True`, the token is read from the HuggingFace config folder.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为`True`，则从HuggingFace配置文件夹中读取令牌。
- en: If a string, it’s used as the authentication token.
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果是字符串，则用作身份验证令牌。
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) — If `True`, avoid
    downloading the file and return the path to the local cached file if it exists.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_files_only` (`bool`，*可选*，默认为`False`) — 如果为`True`，避免下载文件，并返回本地缓存文件的路径（如果存在）。'
- en: '`allow_patterns` (`List[str]` or `str`, *optional*) — If provided, only files
    matching at least one pattern are downloaded.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`allow_patterns` (`List[str]`或`str`，*可选*) — 如果提供，只有匹配至少一个模式的文件才会被下载。'
- en: '`ignore_patterns` (`List[str]` or `str`, *optional*) — If provided, files matching
    any of the patterns are not downloaded.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ignore_patterns` (`List[str]`或`str`，*可选*) — 如果提供，与任何模式匹配的文件将不会被下载。'
- en: '`max_workers` (`int`, *optional*) — Number of concurrent threads to download
    files (1 thread = 1 file download). Defaults to 8.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_workers` (`int`，*可选*) — 下载文件的并发线程数（1个线程=1个文件下载）。默认为8。'
- en: '`tqdm_class` (`tqdm`, *optional*) — If provided, overwrites the default behavior
    for the progress bar. Passed argument must inherit from `tqdm.auto.tqdm` or at
    least mimic its behavior. Note that the `tqdm_class` is not passed to each individual
    download. Defaults to the custom HF progress bar that can be disabled by setting
    `HF_HUB_DISABLE_PROGRESS_BARS` environment variable.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tqdm_class` (`tqdm`，*可选*) — 如果提供，将覆盖进度条的默认行为。传递的参数必须继承自`tqdm.auto.tqdm`或至少模仿其行为。请注意，`tqdm_class`不会传递给每个单独的下载。默认为自定义HF进度条，可以通过设置`HF_HUB_DISABLE_PROGRESS_BARS`环境变量来禁用。'
- en: Download repo files.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 下载存储库文件。
- en: Download a whole snapshot of a repo’s files at the specified revision. This
    is useful when you want all files from a repo, because you don’t know which ones
    you will need a priori. All files are nested inside a folder in order to keep
    their actual filename relative to that folder. You can also filter which files
    to download using `allow_patterns` and `ignore_patterns`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定的修订版本中下载存储库文件的整个快照。当您想要从存储库获取所有文件时很有用，因为您事先不知道需要哪些文件。所有文件都嵌套在一个文件夹中，以保持它们相对于该文件夹的实际文件名。您还可以使用`allow_patterns`和`ignore_patterns`来过滤要下载的文件。
- en: 'If `local_dir` is provided, the file structure from the repo will be replicated
    in this location. You can configure how you want to move those files:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了`local_dir`，则将在此位置复制来自存储库的文件结构。您可以配置如何移动这些文件：
- en: If `local_dir_use_symlinks="auto"` (default), files are downloaded and stored
    in the cache directory as blob files. Small files (<5MB) are duplicated in `local_dir`
    while a symlink is created for bigger files. The goal is to be able to manually
    edit and save small files without corrupting the cache while saving disk space
    for binary files. The 5MB threshold can be configured with the `HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`
    environment variable.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`local_dir_use_symlinks="auto"`（默认值），文件将被下载并存储在缓存目录中作为blob文件。小文件（<5MB）将在`local_dir`中复制，而对于较大的文件，将创建符号链接。目标是能够手动编辑和保存小文件而不会破坏缓存，同时为二进制文件节省磁盘空间。5MB阈值可以通过`HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`环境变量进行配置。
- en: If `local_dir_use_symlinks=True`, files are downloaded, stored in the cache
    directory and symlinked in `local_dir`. This is optimal in term of disk usage
    but files must not be manually edited.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`local_dir_use_symlinks=True`，文件将被下载，存储在缓存目录中，并在`local_dir`中创建符号链接。这在磁盘使用方面是最优的，但文件不得手动编辑。
- en: If `local_dir_use_symlinks=False` and the blob files exist in the cache directory,
    they are duplicated in the local dir. This means disk usage is not optimized.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`local_dir_use_symlinks=False`并且blob文件存在于缓存目录中，则它们将在本地目录中复制。这意味着磁盘使用不被优化。
- en: Finally, if `local_dir_use_symlinks=False` and the blob files do not exist in
    the cache directory, then the files are downloaded and directly placed under `local_dir`.
    This means if you need to download them again later, they will be re-downloaded
    entirely.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，如果`local_dir_use_symlinks=False`并且blob文件不存在于缓存目录中，则文件将被下载并直接放置在`local_dir`下。这意味着如果以后需要重新下载它们，它们将被完全重新下载。
- en: An alternative would be to clone the repo but this requires git and git-lfs
    to be installed and properly configured. It is also not possible to filter which
    files to download when cloning a repository using git.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是克隆存储库，但这需要安装和正确配置git和git-lfs。在使用git克隆存储库时，无法过滤要下载的文件。
- en: 'Raises the following errors:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    if `token=True` and the token cannot be found.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    如果`token=True`且找不到令牌。'
- en: '[`OSError`](https://docs.python.org/3/library/exceptions.html#OSError) if ETag
    cannot be determined.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`OSError`](https://docs.python.org/3/library/exceptions.html#OSError) 如果无法确定ETag。'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    如果某个参数值无效'
- en: Get metadata about a file
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取有关文件的元数据
- en: get_hf_file_metadata
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: get_hf_file_metadata
- en: '#### `huggingface_hub.get_hf_file_metadata`'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.get_hf_file_metadata`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L1588)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L1588)'
- en: '[PRE5]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`url` (`str`) — File url, for example returned by [hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url).'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url` (`str`) — 文件url，例如由[hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url)返回。'
- en: '`token` (`str` or `bool`, *optional*) — A token to be used for the download.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`或`bool`, *optional*) — 用于下载的令牌。'
- en: If `True`, the token is read from the HuggingFace config folder.
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为`True`，则从HuggingFace配置文件夹中读取令牌。
- en: If `False` or `None`, no token is provided.
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为`False`或`None`，则不提供令牌。
- en: If a string, it’s used as the authentication token.
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果是字符串，则用作身份验证令牌。
- en: '`proxies` (`dict`, *optional*) — Dictionary mapping protocol to the URL of
    the proxy passed to `requests.request`.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`dict`, *optional*) — 将协议映射到传递给`requests.request`的代理的URL的字典。'
- en: '`timeout` (`float`, *optional*, defaults to 10) — How many seconds to wait
    for the server to send metadata before giving up.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeout` (`float`, *optional*, 默认为10) — 在放弃之前等待服务器发送元数据的秒数。'
- en: '`library_name` (`str`, *optional*) — The name of the library to which the object
    corresponds.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`library_name` (`str`, *optional*) — 对象对应的库的名称。'
- en: '`library_version` (`str`, *optional*) — The version of the library.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`library_version` (`str`, *optional*) — 库的版本。'
- en: '`user_agent` (`dict`, `str`, *optional*) — The user-agent info in the form
    of a dictionary or a string.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user_agent` (`dict`, `str`, *optional*) — 以字典或字符串形式的用户代理信息。'
- en: Fetch metadata of a file versioned on the Hub for a given url.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 获取在Hub上版本化的文件的元数据，给定一个url。
- en: HfFileMetadata
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HfFileMetadata
- en: '### `class huggingface_hub.HfFileMetadata`'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class huggingface_hub.HfFileMetadata`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L160)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/file_download.py#L160)'
- en: '[PRE6]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`commit_hash` (`str`, *optional*) — The commit_hash related to the file.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_hash` (`str`, *optional*) — 与文件相关的提交哈希值。'
- en: '`etag` (`str`, *optional*) — Etag of the file on the server.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`etag` (`str`, *optional*) — 服务器上文件的ETag。'
- en: '`location` (`str`) — Location where to download the file. Can be a Hub url
    or not (CDN).'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`location` (`str`) — 下载文件的位置。可以是Hub的url或其他位置。'
- en: '`size` (`size`) — Size of the file. In case of an LFS file, contains the size
    of the actual LFS file, not the pointer.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size` (`size`) — 文件的大小。在LFS文件的情况下，包含实际LFS文件的大小，而不是指针的大小。'
- en: Data structure containing information about a file versioned on the Hub.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 包含有关在Hub上版本化的文件的信息的数据结构。
- en: Returned by [get_hf_file_metadata()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.get_hf_file_metadata)
    based on a URL.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 基于URL由[get_hf_file_metadata()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.get_hf_file_metadata)返回。
- en: Caching
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓存
- en: The methods displayed above are designed to work with a caching system that
    prevents re-downloading files. The caching system was updated in v0.8.0 to become
    the central cache-system shared across libraries that depend on the Hub.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 上述方法旨在与防止重新下载文件的缓存系统一起使用。缓存系统在v0.8.0中进行了更新，成为依赖于Hub的库之间共享的中央缓存系统。
- en: Read the [cache-system guide](../guides/manage-cache) for a detailed presentation
    of caching at at HF.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读[缓存系统指南](../guides/manage-cache)以详细介绍HF的缓存。
