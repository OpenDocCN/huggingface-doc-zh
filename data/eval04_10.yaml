- en: Using the evaluator with custom pipelines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自定义pipelines的evaluator
- en: 'Original text: [https://huggingface.co/docs/evaluate/custom_evaluator](https://huggingface.co/docs/evaluate/custom_evaluator)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/evaluate/custom_evaluator](https://huggingface.co/docs/evaluate/custom_evaluator)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The evaluator is designed to work with `transformer` pipelines out-of-the-box.
    However, in many cases you might have a model or pipeline that’s not part of the
    `transformer` ecosystem. You can still use `evaluator` to easily compute metrics
    for them. In this guide we show how to do this for a Scikit-Learn [pipeline](https://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html#sklearn.pipeline.Pipeline)
    and a Spacy [pipeline](https://spacy.io). Let’s start with the Scikit-Learn case.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 评估器被设计为可以直接与`transformer` pipelines一起使用。然而，在许多情况下，您可能有一个不属于`transformer`生态系统的模型或pipeline。您仍然可以使用`evaluator`轻松地为它们计算指标。在本指南中，我们将展示如何为Scikit-Learn
    [pipeline](https://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html#sklearn.pipeline.Pipeline)和Spacy
    [pipeline](https://spacy.io)执行此操作。让我们从Scikit-Learn案例开始。
- en: Scikit-Learn
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Scikit-Learn
- en: 'First we need to train a model. We’ll train a simple text classifier on the
    [IMDb dataset](https://huggingface.co/datasets/imdb), so let’s start by downloading
    the dataset:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们需要训练一个模型。我们将在[IMDb数据集](https://huggingface.co/datasets/imdb)上训练一个简单的文本分类器，所以让我们从下载数据集开始：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then we can build a simple TF-IDF preprocessor and Naive Bayes classifier wrapped
    in a `Pipeline`:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以构建一个简单的TF-IDF预处理器和朴素贝叶斯分类器包装在一个`Pipeline`中：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Following the convention in the `TextClassificationPipeline` of `transformers`
    our pipeline should be callable and return a list of dictionaries. In addition
    we use the `task` attribute to check if the pipeline is compatible with the `evaluator`.
    We can write a small wrapper class for that purpose:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循`transformers`的`TextClassificationPipeline`中的约定，我们的pipeline应该是可调用的，并返回一个字典列表。此外，我们使用`task`属性来检查pipeline是否与`evaluator`兼容。我们可以为此编写一个小的包装类：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can now pass this `pipeline` to the `evaluator`:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以将这个`pipeline`传递给`evaluator`：
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Implementing that simple wrapper is all that’s needed to use any model from
    any framework with the `evaluator`. In the `__call__` you can implement all logic
    necessary for efficient forward passes through your model.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这个简单的包装器就足以使用`evaluator`中的任何框架的任何模型。在`__call__`中，您可以实现通过模型的有效前向传递所需的所有逻辑。
- en: Spacy
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Spacy
- en: 'We’ll use the `polarity` feature of the `spacytextblob` project to get a simple
    sentiment analyzer. First you’ll need to install the project and download the
    resources:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`spacytextblob`项目的`polarity`特性来获取一个简单的情感分析器。首先，您需要安装该项目并下载资源：
- en: '[PRE4]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then we can simply load the `nlp` pipeline and add the `spacytextblob` pipeline:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以简单地加载`nlp` pipeline并添加`spacytextblob` pipeline：
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This snippet shows how we can use the `polarity` feature added with `spacytextblob`
    to get the sentiment of a text:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这个片段展示了我们如何使用`spacytextblob`添加的`polarity`特性来获取文本的情感：
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now we can wrap it in a simple wrapper class like in the Scikit-Learn example
    before. It just has to return a list of dictionaries with the predicted lables.
    If the polarity is larger than 0 we’ll predict positive sentiment and negative
    otherwise:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以像在Scikit-Learn示例中那样将其包装在一个简单的包装类中。它只需要返回一个带有预测标签的字典列表。如果极性大于0，我们将预测为积极情感，否则为消极情感：
- en: '[PRE7]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'That class is compatible with the `evaluator` and we can use the same instance
    from the previous examlpe along with the IMDb test set:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 该类与`evaluator`兼容，我们可以使用与之前示例中相同的实例以及IMDb测试集：
- en: '[PRE8]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will take a little longer than the Scikit-Learn example but after roughly
    10-15min you will have the evaluation results!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这将比Scikit-Learn示例花费更长的时间，但大约在10-15分钟后，您将获得评估结果！
