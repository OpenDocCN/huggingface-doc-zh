- en: Create a dataset
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据集
- en: 'Original text: [https://huggingface.co/docs/datasets/create_dataset](https://huggingface.co/docs/datasets/create_dataset)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/datasets/create_dataset](https://huggingface.co/docs/datasets/create_dataset)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Sometimes, you may need to create a dataset if you’re working with your own
    data. Creating a dataset with 🤗 Datasets confers all the advantages of the library
    to your dataset: fast loading and processing, [stream enormous datasets](stream),
    [memory-mapping](https://huggingface.co/course/chapter5/4?fw=pt#the-magic-of-memory-mapping),
    and more. You can easily and rapidly create a dataset with 🤗 Datasets low-code
    approaches, reducing the time it takes to start training a model. In many cases,
    it is as easy as [dragging and dropping](upload_dataset#upload-with-the-hub-ui)
    your data files into a dataset repository on the Hub.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，如果您使用自己的数据，可能需要创建数据集。使用🤗数据集创建数据集将为您的数据集提供库的所有优势：快速加载和处理，[流式处理大型数据集](stream)，[内存映射](https://huggingface.co/course/chapter5/4?fw=pt#the-magic-of-memory-mapping)等。您可以使用🤗数据集的低代码方法轻松快速地创建数据集，缩短启动训练模型所需的时间。在许多情况下，只需将数据文件[拖放](upload_dataset#upload-with-the-hub-ui)到Hub上的数据集存储库中即可。
- en: 'In this tutorial, you’ll learn how to use 🤗 Datasets low-code methods for creating
    all types of datasets:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您将学习如何使用🤗数据集的低代码方法创建各种类型的数据集：
- en: Folder-based builders for quickly creating an image or audio dataset
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于快速创建图像或音频数据集的基于文件夹的构建器
- en: '`from_` methods for creating datasets from local files'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from_`方法用于从本地文件创建数据集'
- en: Folder-based builders
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于文件夹的构建器
- en: 'There are two folder-based builders, `ImageFolder` and `AudioFolder`. These
    are low-code methods for quickly creating an image or speech and audio dataset
    with several thousand examples. They are great for rapidly prototyping computer
    vision and speech models before scaling to a larger dataset. Folder-based builders
    takes your data and automatically generates the dataset’s features, splits, and
    labels. Under the hood:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种基于文件夹的构建器，`ImageFolder`和`AudioFolder`。这些是用于快速创建具有数千个示例的图像或语音和音频数据集的低代码方法。它们非常适合在扩展到更大数据集之前快速原型化计算机视觉和语音模型。基于文件夹的构建器会获取您的数据并自动生成数据集的特征、拆分和标签。在幕后：
- en: '`ImageFolder` uses the [Image](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Image)
    feature to decode an image file. Many image extension formats are supported, such
    as jpg and png, but other formats are also supported. You can check the complete
    [list](https://github.com/huggingface/datasets/blob/b5672a956d5de864e6f5550e493527d962d6ae55/src/datasets/packaged_modules/imagefolder/imagefolder.py#L39)
    of supported image extensions.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ImageFolder`使用[Image](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Image)功能来解码图像文件。支持许多图像扩展格式，如jpg和png，但也支持其他格式。您可以查看支持的图像扩展的完整[列表](https://github.com/huggingface/datasets/blob/b5672a956d5de864e6f5550e493527d962d6ae55/src/datasets/packaged_modules/imagefolder/imagefolder.py#L39)。'
- en: '`AudioFolder` uses the [Audio](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Audio)
    feature to decode an audio file. Audio extensions such as wav and mp3 are supported,
    and you can check the complete [list](https://github.com/huggingface/datasets/blob/b5672a956d5de864e6f5550e493527d962d6ae55/src/datasets/packaged_modules/audiofolder/audiofolder.py#L39)
    of supported audio extensions.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AudioFolder`使用[Audio](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Audio)功能来解码音频文件。支持音频扩展名，如wav和mp3，并且您可以查看支持的音频扩展的完整[列表](https://github.com/huggingface/datasets/blob/b5672a956d5de864e6f5550e493527d962d6ae55/src/datasets/packaged_modules/audiofolder/audiofolder.py#L39)。'
- en: The dataset splits are generated from the repository structure, and the label
    names are automatically inferred from the directory name.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集拆分是从存储库结构生成的，标签名称是从目录名称自动推断的。
- en: 'For example, if your image dataset (it is the same for an audio dataset) is
    stored like this:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您的图像数据集（音频数据集也是如此）存储如下：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then this is how the folder-based builder generates an example:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后这是基于文件夹的构建器生成示例的方式：
- en: '![](../Images/d6a5c14251bdec13daced7044c522123.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d6a5c14251bdec13daced7044c522123.png)'
- en: 'Create the image dataset by specifying `imagefolder` in [load_dataset()](/docs/datasets/v2.17.0/en/package_reference/loading_methods#datasets.load_dataset):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在[load_dataset()](/docs/datasets/v2.17.0/en/package_reference/loading_methods#datasets.load_dataset)中指定`imagefolder`来创建图像数据集：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'An audio dataset is created in the same way, except you specify `audiofolder`
    in [load_dataset()](/docs/datasets/v2.17.0/en/package_reference/loading_methods#datasets.load_dataset)
    instead:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 音频数据集的创建方式与之相同，只是您在[load_dataset()](/docs/datasets/v2.17.0/en/package_reference/loading_methods#datasets.load_dataset)中指定`audiofolder`：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Any additional information about your dataset, such as text captions or transcriptions,
    can be included with a `metadata.csv` file in the folder containing your dataset.
    The metadata file needs to have a `file_name` column that links the image or audio
    file to its corresponding metadata:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您的数据集中可以包含有关数据集的任何其他信息，例如文本标题或转录，可以在包含数据集的文件夹中使用`metadata.csv`文件包含。元数据文件需要有一个`file_name`列，将图像或音频文件与其对应的元数据链接起来：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To learn more about each of these folder-based builders, check out the and [ImageFolder](https://huggingface.co/docs/datasets/image_dataset#imagefolder)
    or [AudioFolder](https://huggingface.co/docs/datasets/audio_dataset#audiofolder)
    guides.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解每个基于文件夹的构建器的更多信息，请查看[ImageFolder](https://huggingface.co/docs/datasets/image_dataset#imagefolder)或[AudioFolder](https://huggingface.co/docs/datasets/audio_dataset#audiofolder)指南。
- en: From local files
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从本地文件
- en: 'You can also create a dataset from local files by specifying the path to the
    data files. There are two ways you can create a dataset using the `from_` methods:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过指定数据文件的路径从本地文件创建数据集。有两种使用`from_`方法创建数据集的方式：
- en: The [from_generator()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.from_generator)
    method is the most memory-efficient way to create a dataset from a [generator](https://wiki.python.org/moin/Generators)
    due to a generators iterative behavior. This is especially useful when you’re
    working with a really large dataset that may not fit in memory, since the dataset
    is generated on disk progressively and then memory-mapped.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[from_generator()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.from_generator)
    方法是从[generator](https://wiki.python.org/moin/Generators)创建数据集的最节省内存的方式，因为生成器具有迭代行为。当您处理可能无法放入内存的非常大的数据集时，这是特别有用的，因为数据集是逐步在磁盘上生成，然后进行内存映射。'
- en: '[PRE4]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'A generator-based [IterableDataset](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.IterableDataset)
    needs to be iterated over with a `for` loop for example:'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 基于生成器的[IterableDataset](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.IterableDataset)需要使用`for`循环进行迭代，例如：
- en: '[PRE5]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The [from_dict()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.from_dict)
    method is a straightforward way to create a dataset from a dictionary:'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[from_dict()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.from_dict)
    方法是从字典创建数据集的直接方式：'
- en: '[PRE6]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To create an image or audio dataset, chain the [cast_column()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.cast_column)
    method with [from_dict()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.from_dict)
    and specify the column and feature type. For example, to create an audio dataset:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要创建图像或音频数据集，请使用[cast_column()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.cast_column)方法与[from_dict()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.from_dict)链接，并指定列和特征类型。例如，要创建音频数据集：
- en: '[PRE7]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Next steps
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下一步
- en: We didn’t mention this in the tutorial, but you can also create a dataset with
    a loading script. A loading script is a more manual and code-intensive method
    for creating a dataset, but it also gives you the most flexibility and control
    over how a dataset is generated. It lets you configure additional options such
    as creating multiple configurations within a dataset, or enabling your dataset
    to be streamed.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在教程中没有提到这一点，但您也可以使用加载脚本创建数据集。加载脚本是创建数据集的一种更手动和代码密集的方法，但它也为您提供了最灵活和控制数据集生成方式的方式。它允许您配置额外选项，例如在数据集中创建多个配置，或使数据集能够流式传输。
- en: To learn more about how to write loading scripts, take a look at the [image
    loading script](https://huggingface.co/docs/datasets/main/en/image_dataset#loading-script),
    [audio loading script](https://huggingface.co/docs/datasets/main/en/audio_dataset),
    and [text loading script](https://huggingface.co/docs/datasets/main/en/dataset_script)
    guides.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于如何编写加载脚本的信息，请查看[图像加载脚本](https://huggingface.co/docs/datasets/main/en/image_dataset#loading-script)、[音频加载脚本](https://huggingface.co/docs/datasets/main/en/audio_dataset)和[文本加载脚本](https://huggingface.co/docs/datasets/main/en/dataset_script)指南。
- en: Now that you know how to create a dataset, consider sharing it on the Hub so
    the community can also benefit from your work! Go on to the next section to learn
    how to share your dataset.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何创建数据集，请考虑在Hub上共享，以便社区也可以从您的工作中受益！继续下一节，了解如何共享您的数据集。
