- en: PNDMScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PNDMScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/pndm](https://huggingface.co/docs/diffusers/api/schedulers/pndm)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/pndm](https://huggingface.co/docs/diffusers/api/schedulers/pndm)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '`PNDMScheduler`, or pseudo numerical methods for diffusion models, uses more
    advanced ODE integration techniques like the Runge-Kutta and linear multi-step
    method. The original implementation can be found at [crowsonkb/k-diffusion](https://github.com/crowsonkb/k-diffusion/blob/481677d114f6ea445aa009cf5bd7a9cdee909e47/k_diffusion/sampling.py#L181).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`PNDMScheduler`，或者用于扩散模型的伪数值方法，使用了更先进的ODE积分技术，如Runge-Kutta和线性多步方法。原始实现可以在[crowsonkb/k-diffusion](https://github.com/crowsonkb/k-diffusion/blob/481677d114f6ea445aa009cf5bd7a9cdee909e47/k_diffusion/sampling.py#L181)找到。'
- en: PNDMScheduler
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PNDMScheduler
- en: '### `class diffusers.PNDMScheduler`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.PNDMScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L72)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L72)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_train_timesteps`（`int`，默认为1000）— 训练模型的扩散步骤数。'
- en: '`beta_start` (`float`, defaults to 0.0001) — The starting `beta` value of inference.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_start`（`float`，默认为0.0001）— 推理的起始`beta`值。'
- en: '`beta_end` (`float`, defaults to 0.02) — The final `beta` value.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_end`（`float`，默认为0.02）— 最终的`beta`值。'
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`,
    `scaled_linear`, or `squaredcos_cap_v2`.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_schedule`（`str`，默认为`"linear"`）— beta调度，从beta范围映射到用于步进模型的一系列beta。可选择`linear`，`scaled_linear`或`squaredcos_cap_v2`。'
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trained_betas`（`np.ndarray`，*可选*）— 直接传递一个beta数组给构造函数，以绕过`beta_start`和`beta_end`。'
- en: '`skip_prk_steps` (`bool`, defaults to `False`) — Allows the scheduler to skip
    the Runge-Kutta steps defined in the original paper as being required before PLMS
    steps.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skip_prk_steps`（`bool`，默认为`False`）— 允许调度程序跳过原始论文中定义的需要在PLMS步骤之前运行的Runge-Kutta步骤。'
- en: '`set_alpha_to_one` (`bool`, defaults to `False`) — Each diffusion step uses
    the alphas product value at that step and at the previous one. For the final step
    there is no previous alpha. When this option is `True` the previous alpha product
    is fixed to `1`, otherwise it uses the alpha value at step 0.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`set_alpha_to_one`（`bool`，默认为`False`）— 每个扩散步骤使用该步骤和上一个步骤的alpha乘积值。对于最后一步，没有先前的alpha。当此选项为`True`时，前一个alpha乘积固定为`1`，否则使用步骤0处的alpha值。'
- en: '`prediction_type` (`str`, defaults to `epsilon`, *optional*) — Prediction type
    of the scheduler function; can be `epsilon` (predicts the noise of the diffusion
    process) or `v_prediction` (see section 2.4 of [Imagen Video](https://imagen.research.google/video/paper.pdf)
    paper).'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prediction_type`（`str`，默认为`epsilon`，*可选*）— 调度程序函数的预测类型；可以是`epsilon`（预测扩散过程的噪声）或`v_prediction`（参见[Imagen
    Video](https://imagen.research.google/video/paper.pdf)论文第2.4节）。'
- en: '`timestep_spacing` (`str`, defaults to `"leading"`) — The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep_spacing`（`str`，默认为`"leading"`）— 时间步长应该如何缩放。有关更多信息，请参阅[Common Diffusion
    Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)的表2。'
- en: '`steps_offset` (`int`, defaults to 0) — An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use step 0 for the previous alpha product like in Stable Diffusion.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`steps_offset`（`int`，默认为0）— 添加到推理步骤的偏移量。您可以使用`offset=1`和`set_alpha_to_one=False`的组合，使最后一步使用前一个alpha乘积的步骤0，就像在稳定扩散中一样。'
- en: '`PNDMScheduler` uses pseudo numerical methods for diffusion models such as
    the Runge-Kutta and linear multi-step method.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`PNDMScheduler`使用伪数值方法来处理扩散模型，例如Runge-Kutta和线性多步方法。'
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型继承自[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)和[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。查看超类文档以了解库为所有调度程序实现的通用方法，例如加载和保存。
- en: '#### `scale_model_input`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L392)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L392)'
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample`（`torch.FloatTensor`）— 输入样本。'
- en: Returns
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一个缩放的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度程序可以互换。
- en: '#### `set_timesteps`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L168)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L168)'
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_inference_steps`（`int`）— 生成使用预训练模型的样本时使用的扩散步骤数。'
- en: '`device` (`str` or `torch.device`, *optional*) — The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device`（`str`或`torch.device`，*可选*）— 应将时间步移动到的设备。如果为`None`，则不移动时间步。'
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于扩散链的离散时间步长（在推理之前运行）。
- en: '#### `step`'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L228)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L228)'
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`int`) — The current discrete timestep in the diffusion chain.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`) — 扩散链中的当前离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 由扩散过程创建的样本的当前实例。'
- en: '`return_dict` (`bool`) — Whether or not to return a [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or `tuple`.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`) — 是否返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或`tuple`。'
- en: Returns
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or `tuple`'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或`tuple`'
- en: If return_dict is `True`, [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果return_dict为`True`，则返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise), and calls [step_prk()](/docs/diffusers/v0.26.3/en/api/schedulers/pndm#diffusers.PNDMScheduler.step_prk)
    or [step_plms()](/docs/diffusers/v0.26.3/en/api/schedulers/pndm#diffusers.PNDMScheduler.step_plms)
    depending on the internal variable `counter`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE从上一个时间步预测样本。此函数从学习模型输出（通常是预测的噪声）传播扩散过程，并根据内部变量`counter`调用[step_prk()](/docs/diffusers/v0.26.3/en/api/schedulers/pndm#diffusers.PNDMScheduler.step_prk)或[step_plms()](/docs/diffusers/v0.26.3/en/api/schedulers/pndm#diffusers.PNDMScheduler.step_plms)。
- en: '#### `step_plms`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step_plms`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L321)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L321)'
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`int`) — The current discrete timestep in the diffusion chain.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`) — 扩散链中的当前离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 由扩散过程创建的样本的当前实例。'
- en: '`return_dict` (`bool`) — Whether or not to return a [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or tuple.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`) — 是否返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或元组。'
- en: Returns
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or `tuple`'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或`tuple`'
- en: If return_dict is `True`, [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果return_dict为`True`，则返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the sample with the linear multistep method. It performs one forward
    pass multiple times to approximate the solution.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE从上一个时间步预测样本。此函数使用线性多步方法传播样本。它多次执行一次前向传递以近似解决方案。
- en: '#### `step_prk`'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step_prk`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L261)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_pndm.py#L261)'
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`int`) — The current discrete timestep in the diffusion chain.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`) — 扩散链中的当前离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 由扩散过程创建的样本的当前实例。'
- en: '`return_dict` (`bool`) — Whether or not to return a [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or tuple.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`) — 是否返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或元组。'
- en: Returns
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or `tuple`'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或`tuple`'
- en: If return_dict is `True`, [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果return_dict为`True`，则返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the sample with the Runge-Kutta method. It performs four forward passes
    to approximate the solution to the differential equation.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE从上一个时间步预测样本。此函数使用Runge-Kutta方法传播样本。它执行四次前向传递以近似微分方程的解。
- en: SchedulerOutput
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SchedulerOutput
- en: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
- en: '[PRE6]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample `(x_{t-1})` of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “prev_sample”（图像的形状为“（batch_size，num_channels，height，width）的torch.FloatTensor”）-
    上一个时间步的计算样本（x_{t-1}）。在去噪循环中，应该将“prev_sample”用作下一个模型输入。
- en: Base class for the output of a scheduler’s `step` function.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 调度程序“step”函数的输出的基类。
