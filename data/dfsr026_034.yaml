- en: Control image brightness
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制图像亮度
- en: 'Original text: [https://huggingface.co/docs/diffusers/using-diffusers/control_brightness](https://huggingface.co/docs/diffusers/using-diffusers/control_brightness)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/diffusers/using-diffusers/control_brightness](https://huggingface.co/docs/diffusers/using-diffusers/control_brightness)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The Stable Diffusion pipeline is mediocre at generating images that are either
    very bright or dark as explained in the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) paper. The
    solutions proposed in the paper are currently implemented in the [DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler)
    which you can use to improve the lighting in your images.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定扩散管道在生成非常明亮或黑暗的图像方面表现平平，如[常见扩散噪声计划和样本步骤存在缺陷](https://huggingface.co/papers/2305.08891)论文中所述。论文中提出的解决方案目前已在[DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler)中实现，您可以使用它来改善图像的照明。
- en: 💡 Take a look at the paper linked above for more details about the proposed
    solutions!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 💡查看上面链接的论文，了解更多关于提出的解决方案的细节！
- en: 'One of the solutions is to train a model with *v prediction* and *v loss*.
    Add the following flag to the [`train_text_to_image.py`](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py)
    or [`train_text_to_image_lora.py`](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image_lora.py)
    scripts to enable `v_prediction`:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个解决方案是训练一个带有*v prediction*和*v loss*的模型。在[`train_text_to_image.py`](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py)或[`train_text_to_image_lora.py`](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image_lora.py)脚本中添加以下标志以启用`v_prediction`：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For example, let’s use the [`ptx0/pseudo-journey-v2`](https://huggingface.co/ptx0/pseudo-journey-v2)
    checkpoint which has been finetuned with `v_prediction`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们使用已经用`v_prediction`微调过的[`ptx0/pseudo-journey-v2`](https://huggingface.co/ptx0/pseudo-journey-v2)检查点。
- en: 'Next, configure the following parameters in the [DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在[DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler)中配置以下参数：
- en: '`rescale_betas_zero_snr=True`, rescales the noise schedule to zero terminal
    signal-to-noise ratio (SNR)'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rescale_betas_zero_snr=True`，将噪声计划重新缩放为零终端信噪比（SNR）'
- en: '`timestep_spacing="trailing"`, starts sampling from the last timestep'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`timestep_spacing="trailing"`，从最后一个时间步开始采样'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Finally, in your call to the pipeline, set `guidance_rescale` to prevent overexposure:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在调用管道时，设置`guidance_rescale`以防止过曝光：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/3870b9f500f183b40c0a88444a5b8e97.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3870b9f500f183b40c0a88444a5b8e97.png)'
