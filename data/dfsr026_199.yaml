- en: KarrasVeScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: KarrasVeScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/stochastic_karras_ve](https://huggingface.co/docs/diffusers/api/schedulers/stochastic_karras_ve)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/stochastic_karras_ve](https://huggingface.co/docs/diffusers/api/schedulers/stochastic_karras_ve)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '`KarrasVeScheduler` is a stochastic sampler tailored to variance-expanding
    (VE) models. It is based on the [Elucidating the Design Space of Diffusion-Based
    Generative Models](https://huggingface.co/papers/2206.00364) and [Score-based
    generative modeling through stochastic differential equations](https://huggingface.co/papers/2011.13456)
    papers.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`KarrasVeScheduler` 是专为方差扩展（VE）模型量身定制的随机采样器。它基于[Elucidating the Design Space
    of Diffusion-Based Generative Models](https://huggingface.co/papers/2206.00364)和[Score-based
    generative modeling through stochastic differential equations](https://huggingface.co/papers/2011.13456)论文。'
- en: KarrasVeScheduler
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KarrasVeScheduler
- en: '### `class diffusers.KarrasVeScheduler`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.KarrasVeScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L49)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L49)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sigma_min` (`float`, defaults to 0.02) — The minimum noise magnitude.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma_min` (`float`, 默认为0.02) — 最小噪声幅度。'
- en: '`sigma_max` (`float`, defaults to 100) — The maximum noise magnitude.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma_max` (`float`, 默认为100) — 最大噪声幅度。'
- en: '`s_noise` (`float`, defaults to 1.007) — The amount of additional noise to
    counteract loss of detail during sampling. A reasonable range is [1.000, 1.011].'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_noise` (`float`, 默认为1.007) — 用于抵消采样过程中细节丢失的额外噪声量。一个合理的范围是[1.000, 1.011]。'
- en: '`s_churn` (`float`, defaults to 80) — The parameter controlling the overall
    amount of stochasticity. A reasonable range is [0, 100].'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_churn` (`float`, 默认为80) — 控制整体随机性的参数。一个合理的范围是[0, 100]。'
- en: '`s_min` (`float`, defaults to 0.05) — The start value of the sigma range to
    add noise (enable stochasticity). A reasonable range is [0, 10].'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_min` (`float`, 默认为0.05) — 添加噪声的sigma范围的起始值（启用随机性）。一个合理的范围是[0, 10]。'
- en: '`s_max` (`float`, defaults to 50) — The end value of the sigma range to add
    noise. A reasonable range is [0.2, 80].'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s_max` (`float`, 默认为50) — 添加噪声的sigma范围的结束值。一个合理的范围是[0.2, 80]。'
- en: A stochastic scheduler tailored to variance-expanding models.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 针对方差扩展模型量身定制的随机调度程序。
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型继承自[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)和[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。查看超类文档以了解库为所有调度程序实现的通用方法，如加载和保存。
- en: For more details on the parameters, see [Appendix E](https://arxiv.org/abs/2206.00364).
    The grid search values used to find the optimal `{s_noise, s_churn, s_min, s_max}`
    for a specific model are described in Table 5 of the paper.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有关参数的更多详细信息，请参阅[附录E](https://arxiv.org/abs/2206.00364)。用于找到特定模型的最佳 `{s_noise,
    s_churn, s_min, s_max}` 的网格搜索值在论文的表5中描述。
- en: '#### `add_noise_to_input`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_noise_to_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L138)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L138)'
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 输入样本。'
- en: '`sigma` (`float`) —'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma` (`float`) —'
- en: '`generator` (`torch.Generator`, *optional*) — A random number generator.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generator` (`torch.Generator`, *可选*) — 随机数生成器。'
- en: Explicit Langevin-like “churn” step of adding noise to the sample according
    to a `gamma_i ≥ 0` to reach a higher noise level `sigma_hat = sigma_i + gamma_i*sigma_i`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 `gamma_i ≥ 0` 明确的类似Langevin的“搅拌”步骤，将噪声添加到样本，以达到更高的噪声水平 `sigma_hat = sigma_i
    + gamma_i*sigma_i`。
- en: '#### `scale_model_input`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L99)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L99)'
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 输入样本。'
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`, *可选*) — 扩散链中的当前时间步。'
- en: Returns
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一个缩放后的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度程序可以互换。
- en: '#### `set_timesteps`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L116)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L116)'
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_inference_steps` (`int`) — 使用预训练模型生成样本时使用的扩散步数。'
- en: '`device` (`str` or `torch.device`, *optional*) — The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`str` 或 `torch.device`, *可选*) — 应将时间步移动到的设备。如果为 `None`，则不移动时间步。'
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于扩散链的离散时间步骤（在推断之前运行）。
- en: '#### `step`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L164)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L164)'
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`sigma_hat` (`float`) —'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma_hat` (`float`) —'
- en: '`sigma_prev` (`float`) —'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma_prev` (`float`) —'
- en: '`sample_hat` (`torch.FloatTensor`) —'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample_hat` (`torch.FloatTensor`) —'
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a `~schedulers.scheduling_karras_ve.KarrasVESchedulerOutput` or `tuple`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`, *可选*, 默认为`True`) — 是否返回 `~schedulers.scheduling_karras_ve.KarrasVESchedulerOutput`
    或 `tuple`。'
- en: Returns
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`~schedulers.scheduling_karras_ve.KarrasVESchedulerOutput` or `tuple`'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`~schedulers.scheduling_karras_ve.KarrasVESchedulerOutput`或`tuple`'
- en: If return_dict is `True`, `~schedulers.scheduling_karras_ve.KarrasVESchedulerOutput`
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`return_dict`为`True`，则返回`~schedulers.scheduling_karras_ve.KarrasVESchedulerOutput`，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE预测前一个时间步的样本。此函数从学习模型输出（通常是预测的噪声）传播扩散过程。
- en: '#### `step_correct`'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step_correct`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L203)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L203)'
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output`（`torch.FloatTensor`）- 从学习扩散模型直接输出。'
- en: '`sigma_hat` (`float`) — TODO'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma_hat`（`float`）- 待办事项'
- en: '`sigma_prev` (`float`) — TODO'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sigma_prev`（`float`）- 待办事项'
- en: '`sample_hat` (`torch.FloatTensor`) — TODO'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample_hat`（`torch.FloatTensor`）- 待办事项'
- en: '`sample_prev` (`torch.FloatTensor`) — TODO'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample_prev`（`torch.FloatTensor`）- 待办事项'
- en: '`derivative` (`torch.FloatTensor`) — TODO'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`derivative`（`torch.FloatTensor`）- 待办事项'
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a [DDPMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddpm#diffusers.schedulers.scheduling_ddpm.DDPMSchedulerOutput)
    or `tuple`.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict`（`bool`，*可选*，默认为`True`）- 是否返回[DDPMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddpm#diffusers.schedulers.scheduling_ddpm.DDPMSchedulerOutput)或`tuple`。'
- en: Returns
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: prev_sample (TODO)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: prev_sample（待办事项）
- en: 'updated sample in the diffusion chain. derivative (TODO): TODO'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 扩散链中更新的样本。导数（待办事项）：待办事项
- en: Corrects the predicted sample based on the `model_output` of the network.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 根据网络的`model_output`纠正预测样本。
- en: KarrasVeOutput
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KarrasVeOutput
- en: '### `class diffusers.schedulers.deprecated.scheduling_karras_ve.KarrasVeOutput`'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.deprecated.scheduling_karras_ve.KarrasVeOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L28)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_karras_ve.py#L28)'
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample (x_{t-1}) of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prev_sample`（形状为`(batch_size, num_channels, height, width)`的`torch.FloatTensor`，用于图像）-
    上一个时间步的计算样本（x_{t-1）。`prev_sample`应该在去噪循环中作为下一个模型输入使用。'
- en: '`derivative` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Derivative of predicted original image sample (x_0).'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`derivative`（形状为`(batch_size, num_channels, height, width)`的`torch.FloatTensor`，用于图像）-
    预测原始图像样本（x_0）的导数。'
- en: '`pred_original_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels,
    height, width)` for images) — The predicted denoised sample (x_{0}) based on the
    model output from the current timestep. `pred_original_sample` can be used to
    preview progress or for guidance.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pred_original_sample`（`torch.FloatTensor`，形状为`(batch_size, num_channels, height,
    width)`，用于图像）- 基于当前时间步的模型输出预测去噪样本（x_{0}）。`pred_original_sample`可用于预览进展或指导。'
- en: Output class for the scheduler’s step function output.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 调度器步函数输出的输出类。
