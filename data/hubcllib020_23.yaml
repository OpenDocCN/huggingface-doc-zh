- en: Git vs HTTP paradigm
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Git vs HTTP 范式
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http](https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http](https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The `huggingface_hub` library is a library for interacting with the Hugging
    Face Hub, which is a collections of git-based repositories (models, datasets or
    Spaces). There are two main ways to access the Hub using `huggingface_hub`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`huggingface_hub` 库是用于与 Hugging Face Hub 交互的库，该库是一组基于 git 的仓库（模型、数据集或 Spaces）。使用
    `huggingface_hub` 访问 Hub 的两种主要方式。'
- en: The first approach, the so-called “git-based” approach, is led by the [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    class. This method uses a wrapper around the `git` command with additional functions
    specifically designed to interact with the Hub. The second option, called the
    “HTTP-based” approach, involves making HTTP requests using the [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    client. Let’s examine the pros and cons of each approach.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法，所谓的“基于 git 的”方法，由 [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    类领导。这种方法使用围绕 `git` 命令的包装器，具有专门设计用于与 Hub 交互的附加功能。第二个选项，称为“基于 HTTP 的”方法，涉及使用 [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    客户端进行 HTTP 请求。让我们来看看每种方法的优缺点。
- en: 'Repository: the historical git-based approach'
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Repository：历史悠久的基于 git 的方法
- en: At first, `huggingface_hub` was mostly built around the [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    class. It provides Python wrappers for common `git` commands such as `"git add"`,
    `"git commit"`, `"git push"`, `"git tag"`, `"git checkout"`, etc.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，`huggingface_hub` 主要围绕 [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    类构建。它提供了常见 `git` 命令的 Python 封装，如 `"git add"`, `"git commit"`, `"git push"`, `"git
    tag"`, `"git checkout"` 等。
- en: The library also helps with setting credentials and tracking large files, which
    are often used in machine learning repositories. Additionally, the library allows
    you to execute its methods in the background, making it useful for uploading data
    during training.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 该库还有助于设置凭据和跟踪大型文件，这些文件通常在机器学习仓库中使用。此外，该库允许您在后台执行其方法，这对在训练期间上传数据很有用。
- en: The main advantage of using a [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    is that it allows you to maintain a local copy of the entire repository on your
    machine. This can also be a disadvantage as it requires you to constantly update
    and maintain this local copy. This is similar to traditional software development
    where each developer maintains their own local copy and pushes changes when working
    on a feature. However, in the context of machine learning, this may not always
    be necessary as users may only need to download weights for inference or convert
    weights from one format to another without the need to clone the entire repository.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    的主要优势是可以在本地机器上维护整个仓库的本地副本。这也可能是一个缺点，因为需要您不断更新和维护这个本地副本。这类似于传统软件开发，每个开发人员都维护自己的本地副本，并在开发功能时推送更改。然而，在机器学习的背景下，这并不总是必要的，因为用户可能只需要下载权重进行推理或将权重从一种格式转换为另一种格式，而无需克隆整个仓库。
- en: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    is now deprecated in favor of the http-based alternatives. Given its large adoption
    in legacy code, the complete removal of [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    will only happen in release `v1.0`.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    现在已被弃用，推荐使用基于 HTTP 的替代方案。鉴于它在传统代码中的广泛应用，完全移除 [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    将仅在发布 `v1.0` 中发生。'
- en: 'HfApi: a flexible and convenient HTTP client'
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HfApi：灵活便捷的 HTTP 客户端
- en: The [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    class was developed to provide an alternative to local git repositories, which
    can be cumbersome to maintain, especially when dealing with large models or datasets.
    The [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    class offers the same functionality as git-based approaches, such as downloading
    and pushing files and creating branches and tags, but without the need for a local
    folder that needs to be kept in sync.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    类是为提供替代本地 git 仓库而开发的，特别是在处理大型模型或数据集时可能会很繁琐。[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    类提供了与基于 git 的方法相同的功能，例如下载和推送文件，创建分支和标签，但无需保持同步的本地文件夹。'
- en: In addition to the functionalities already provided by `git`, the [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    class offers additional features, such as the ability to manage repos, download
    files using caching for efficient reuse, search the Hub for repos and metadata,
    access community features such as discussions, PRs, and comments, and configure
    Spaces hardware and secrets.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 除了已由 `git` 提供的功能外，[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    类还提供了额外功能，例如管理仓库、使用缓存下载文件以实现高效重用、在 Hub 中搜索仓库和元数据、访问社区功能如讨论、PR 和评论，以及配置 Spaces
    硬件和秘密。
- en: What should I use ? And when ?
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我应该使用什么？以及何时使用？
- en: Overall, the **HTTP-based approach is the recommended way to use** `huggingface_hub`
    in all cases. [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    allows to pull and push changes, work with PRs, tags and branches, interact with
    discussions and much more. Since the `0.16` release, the http-based methods can
    also run in the background, which was the last major advantage of the [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    class.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，**基于HTTP的方法是在所有情况下使用`huggingface_hub`的推荐方式**。[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)允许拉取和推送更改，处理PR、标签和分支，参与讨论等等。自`0.16`版本发布以来，基于http的方法也可以在后台运行，这是[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)类的最后一个主要优势。
- en: However, not all git commands are available through [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi).
    Some may never be implemented, but we are always trying to improve and close the
    gap. If you don’t see your use case covered, please open [an issue on Github](https://github.com/huggingface/huggingface_hub)!
    We welcome feedback to help build the 🤗 ecosystem with and for our users.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，并非所有git命令都可以通过[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)使用。有些可能永远不会被实现，但我们始终在努力改进和缩小差距。如果您的使用情况没有被覆盖，请在Github上提出[问题](https://github.com/huggingface/huggingface_hub)！我们欢迎反馈，以帮助与我们的用户一起构建🤗生态系统。
- en: This preference of the http-based [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    over the git-based [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    does not mean that git versioning will disappear from the Hugging Face Hub anytime
    soon. It will always be possible to use `git` commands locally in workflows where
    it makes sense.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在Hugging Face Hub中，基于HTTP的[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)优先于基于git的[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)，但这并不意味着git版本控制会很快从Hugging
    Face Hub中消失。在有意义的工作流中，始终可以使用`git`命令。
