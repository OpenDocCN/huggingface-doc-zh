- en: Trainers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练器
- en: 'Original text: [https://huggingface.co/docs/tokenizers/api/trainers](https://huggingface.co/docs/tokenizers/api/trainers)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/tokenizers/api/trainers](https://huggingface.co/docs/tokenizers/api/trainers)
- en: PythonRustNode
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: PythonRustNode
- en: BpeTrainer
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BpeTrainer
- en: '### `class tokenizers.trainers.BpeTrainer`'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.trainers.BpeTrainer`'
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`vocab_size` (`int`, *optional*) — The size of the final vocabulary, including
    all tokens and alphabet.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vocab_size` (`int`, *可选*) — 最终词汇表的大小，包括所有标记和字母表。'
- en: '`min_frequency` (`int`, *optional*) — The minimum frequency a pair should have
    in order to be merged.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_frequency` (`int`, *可选*) — 一对应该合并的最小频率。'
- en: '`show_progress` (`bool`, *optional*) — Whether to show progress bars while
    training.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show_progress` (`bool`, *可选*) — 在训练时是否显示进度条。'
- en: '`special_tokens` (`List[Union[str, AddedToken]]`, *optional*) — A list of special
    tokens the model should know of.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`special_tokens` (`List[Union[str, AddedToken]]`, *可选*) — 模型应该知道的特殊标记列表。'
- en: '`limit_alphabet` (`int`, *optional*) — The maximum different characters to
    keep in the alphabet.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`limit_alphabet` (`int`, *可选*) — 保留在字母表中的最大不同字符数。'
- en: '`initial_alphabet` (`List[str]`, *optional*) — A list of characters to include
    in the initial alphabet, even if not seen in the training dataset. If the strings
    contain more than one character, only the first one is kept.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`initial_alphabet` (`List[str]`, *可选*) — 包含在初始字母表中的字符列表，即使在训练数据集中没有看到。如果字符串包含多个字符，则仅保留第一个字符。'
- en: '`continuing_subword_prefix` (`str`, *optional*) — A prefix to be used for every
    subword that is not a beginning-of-word.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`continuing_subword_prefix` (`str`, *可选*) — 用于每个不是单词开头的子词的前缀。'
- en: '`end_of_word_suffix` (`str`, *optional*) — A suffix to be used for every subword
    that is a end-of-word.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`end_of_word_suffix` (`str`, *可选*) — 用于每个作为单词结尾的子词的后缀。'
- en: '`max_token_length` (`int`, *optional*) — Prevents creating tokens longer than
    the specified size. This can help with reducing polluting your vocabulary with
    highly repetitive tokens like *======* for wikipedia'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_token_length` (`int`, *可选*) — 防止创建超过指定大小的标记。这有助于减少使用高度重复标记（如*======*用于维基百科）污染词汇表。'
- en: Trainer capable of training a BPE model
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 能够训练BPE模型的训练器
- en: UnigramTrainer
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: UnigramTrainer
- en: '### `class tokenizers.trainers.UnigramTrainer`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.trainers.UnigramTrainer`'
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`vocab_size` (`int`) — The size of the final vocabulary, including all tokens
    and alphabet.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vocab_size` (`int`) — 最终词汇表的大小，包括所有标记和字母表。'
- en: '`show_progress` (`bool`) — Whether to show progress bars while training.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show_progress` (`bool`) — 在训练时是否显示进度条。'
- en: '`special_tokens` (`List[Union[str, AddedToken]]`) — A list of special tokens
    the model should know of.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`special_tokens` (`List[Union[str, AddedToken]]`) — 模型应该知道的特殊标记列表。'
- en: '`initial_alphabet` (`List[str]`) — A list of characters to include in the initial
    alphabet, even if not seen in the training dataset. If the strings contain more
    than one character, only the first one is kept.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`initial_alphabet` (`List[str]`) — 包含在初始字母表中的字符列表，即使在训练数据集中没有看到。如果字符串包含多个字符，则仅保留第一个字符。'
- en: '`shrinking_factor` (`float`) — The shrinking factor used at each step of the
    training to prune the vocabulary.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shrinking_factor` (`float`) — 用于在训练的每个步骤中缩减词汇表的缩减因子。'
- en: '`unk_token` (`str`) — The token used for out-of-vocabulary tokens.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unk_token` (`str`) — 用于识别词汇表外标记的标记。'
- en: '`max_piece_length` (`int`) — The maximum length of a given token.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_piece_length` (`int`) — 给定标记的最大长度。'
- en: '`n_sub_iterations` (`int`) — The number of iterations of the EM algorithm to
    perform before pruning the vocabulary.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_sub_iterations` (`int`) — 在修剪词汇表之前执行EM算法的迭代次数。'
- en: Trainer capable of training a Unigram model
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 能够训练Unigram模型的训练器
- en: WordLevelTrainer
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WordLevelTrainer
- en: '### `class tokenizers.trainers.WordLevelTrainer`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.trainers.WordLevelTrainer`'
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`vocab_size` (`int`, *optional*) — The size of the final vocabulary, including
    all tokens and alphabet.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vocab_size` (`int`, *可选*) — 最终词汇表的大小，包括所有标记和字母表。'
- en: '`min_frequency` (`int`, *optional*) — The minimum frequency a pair should have
    in order to be merged.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_frequency` (`int`, *可选*) — 一对应该合并的最小频率。'
- en: '`show_progress` (`bool`, *optional*) — Whether to show progress bars while
    training.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show_progress` (`bool`, *可选*) — 在训练时是否显示进度条。'
- en: '`special_tokens` (`List[Union[str, AddedToken]]`) — A list of special tokens
    the model should know of.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`special_tokens` (`List[Union[str, AddedToken]]`) — 模型应该知道的特殊标记列表。'
- en: Trainer capable of training a WorldLevel model
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 能够训练WorldLevel模型的训练器
- en: WordPieceTrainer
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WordPieceTrainer
- en: '### `class tokenizers.trainers.WordPieceTrainer`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.trainers.WordPieceTrainer`'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`vocab_size` (`int`, *optional*) — The size of the final vocabulary, including
    all tokens and alphabet.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vocab_size` (`int`, *可选*) — 最终词汇表的大小，包括所有标记和字母表。'
- en: '`min_frequency` (`int`, *optional*) — The minimum frequency a pair should have
    in order to be merged.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_frequency` (`int`, *可选*) — 一对应该合并的最小频率。'
- en: '`show_progress` (`bool`, *optional*) — Whether to show progress bars while
    training.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show_progress` (`bool`, *可选*) — 在训练时是否显示进度条。'
- en: '`special_tokens` (`List[Union[str, AddedToken]]`, *optional*) — A list of special
    tokens the model should know of.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`special_tokens` (`List[Union[str, AddedToken]]`, *可选*) — 模型应该知道的特殊标记列表。'
- en: '`limit_alphabet` (`int`, *optional*) — The maximum different characters to
    keep in the alphabet.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`limit_alphabet` (`int`, *可选*) — 保留在字母表中的最大不同字符数。'
- en: '`initial_alphabet` (`List[str]`, *optional*) — A list of characters to include
    in the initial alphabet, even if not seen in the training dataset. If the strings
    contain more than one character, only the first one is kept.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`initial_alphabet` (`List[str]`, *可选*) — 包含在初始字母表中的字符列表，即使在训练数据集中没有看到。如果字符串包含多个字符，则仅保留第一个字符。'
- en: '`continuing_subword_prefix` (`str`, *optional*) — A prefix to be used for every
    subword that is not a beginning-of-word.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`continuing_subword_prefix` (`str`, *可选*) — 用于每个不是单词开头的子词的前缀。'
- en: '`end_of_word_suffix` (`str`, *optional*) — A suffix to be used for every subword
    that is a end-of-word.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`end_of_word_suffix` (`str`, *可选*) — 用于每个作为单词结尾的子词的后缀。'
- en: Trainer capable of training a WordPiece model
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 能够训练WordPiece模型的训练器
