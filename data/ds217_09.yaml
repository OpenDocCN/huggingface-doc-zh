- en: Preprocess
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预处理
- en: 'Original text: [https://huggingface.co/docs/datasets/use_dataset](https://huggingface.co/docs/datasets/use_dataset)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/datasets/use_dataset](https://huggingface.co/docs/datasets/use_dataset)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: In addition to loading datasets, 🤗 Datasets other main goal is to offer a diverse
    set of preprocessing functions to get a dataset into an appropriate format for
    training with your machine learning framework.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 除了加载数据集外，🤗 数据集的另一个主要目标是提供多样化的预处理函数，以使数据集以适合您的机器学习框架进行训练的格式。
- en: 'There are many possible ways to preprocess a dataset, and it all depends on
    your specific dataset. Sometimes you may need to rename a column, and other times
    you might need to unflatten nested fields. 🤗 Datasets provides a way to do most
    of these things. But in nearly all preprocessing cases, depending on your dataset
    modality, you’ll need to:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多可能的数据集预处理方式，这完全取决于您的具体数据集。有时您可能需要重命名列，而其他时候您可能需要展开嵌套字段。🤗 数据集提供了执行这些大部分操作的方法。但在几乎所有预处理情况下，根据您的数据集模态性，您需要：
- en: Tokenize a text dataset.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对文本数据集进行标记化。
- en: Resample an audio dataset.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新采样音频数据集。
- en: Apply transforms to an image dataset.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对图像数据集应用转换。
- en: The last preprocessing step is usually setting your dataset format to be compatible
    with your machine learning framework’s expected input format.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的预处理步骤通常是将数据集格式设置为与您的机器学习框架期望的输入格式兼容。
- en: 'In this tutorial, you’ll also need to install the 🤗 Transformers library:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您还需要安装🤗 Transformers库：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Grab a dataset of your choice and follow along!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个数据集并跟随操作！
- en: Tokenize text
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标记化文本
- en: Models cannot process raw text, so you’ll need to convert the text into numbers.
    Tokenization provides a way to do this by dividing text into individual words
    called *tokens*. Tokens are finally converted to numbers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 模型无法处理原始文本，因此您需要将文本转换为数字。通过将文本分成称为*标记*的单词，分词提供了一种方法来实现这一点。最终将标记转换为数字。
- en: Check out the [Tokenizers](https://huggingface.co/course/chapter2/4?fw=pt) section
    in Chapter 2 of the Hugging Face course to learn more about tokenization and different
    tokenization algorithms.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 查看Hugging Face课程第2章中的[Tokenizers](https://huggingface.co/course/chapter2/4?fw=pt)部分，了解有关标记化和不同标记化算法的更多信息。
- en: '**1**. Start by loading the [rotten_tomatoes](https://huggingface.co/datasets/rotten_tomatoes)
    dataset and the tokenizer corresponding to a pretrained [BERT](https://huggingface.co/bert-base-uncased)
    model. Using the same tokenizer as the pretrained model is important because you
    want to make sure the text is split in the same way.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**1**. 首先加载[rotten_tomatoes](https://huggingface.co/datasets/rotten_tomatoes)数据集和与预训练的[BERT](https://huggingface.co/bert-base-uncased)模型对应的分词器。使用与预训练模型相同的分词器很重要，因为您希望确保文本以相同的方式分割。'
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**2**. Call your tokenizer on the first row of `text` in the dataset:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**2**. 在数据集中的`text`的第一行上调用您的分词器：'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The tokenizer returns a dictionary with three items:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 分词器返回一个包含三个项目的字典：
- en: '`input_ids`: the numbers representing the tokens in the text.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_ids`: 代表文本中标记的数字。'
- en: '`token_type_ids`: indicates which sequence a token belongs to if there is more
    than one sequence.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token_type_ids`: 如果有多个序列，指示一个标记属于哪个序列。'
- en: '`attention_mask`: indicates whether a token should be masked or not.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attention_mask`: 指示标记是否应该被屏蔽。'
- en: These values are actually the model inputs.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这些值实际上是模型的输入。
- en: '**3**. The fastest way to tokenize your entire dataset is to use the [map()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.map)
    function. This function speeds up tokenization by applying the tokenizer to batches
    of examples instead of individual examples. Set the `batched` parameter to `True`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**3**. 对整个数据集进行标记化的最快方法是使用[map()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.map)函数。该函数通过将分词器应用于示例批次而不是单个示例来加快标记化速度。将`batched`参数设置为`True`：'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**4**. Set the format of your dataset to be compatible with your machine learning
    framework:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**4**. 将数据集格式设置为与您的机器学习框架兼容：'
- en: PytorchHide Pytorch content
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Pytorch隐藏Pytorch内容
- en: 'Use the [set_format()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.set_format)
    function to set the dataset format to be compatible with PyTorch:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[set_format()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.set_format)函数将数据集格式设置为与PyTorch兼容：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: TensorFlowHide TensorFlow content
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow隐藏TensorFlow内容
- en: 'Use the [to_tf_dataset()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.to_tf_dataset)
    function to set the dataset format to be compatible with TensorFlow. You’ll also
    need to import a [data collator](https://huggingface.co/docs/transformers/main_classes/data_collator#transformers.DataCollatorWithPadding)
    from 🤗 Transformers to combine the varying sequence lengths into a single batch
    of equal lengths:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[to_tf_dataset()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.to_tf_dataset)函数将数据集格式设置为与TensorFlow兼容。您还需要从🤗
    Transformers导入一个[数据收集器](https://huggingface.co/docs/transformers/main_classes/data_collator#transformers.DataCollatorWithPadding)，将不同长度的序列组合成一个相同长度的批次：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**5**. The dataset is now ready for training with your machine learning framework!'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**5**. 数据集现在已准备好与您的机器学习框架进行训练！'
- en: Resample audio signals
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重新采样音频信号
- en: Audio inputs like text datasets need to be divided into discrete data points.
    This is known as *sampling*; the sampling rate tells you how much of the speech
    signal is captured per second. It is important to make sure the sampling rate
    of your dataset matches the sampling rate of the data used to pretrain the model
    you’re using. If the sampling rates are different, the pretrained model may perform
    poorly on your dataset because it doesn’t recognize the differences in the sampling
    rate.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 像文本数据集一样，音频输入需要被划分为离散数据点。这被称为*采样*；采样率告诉您每秒捕获了多少语音信号。重要的是确保数据集的采样率与用于预训练模型的数据的采样率匹配。如果采样率不同，预训练模型可能在您的数据集上表现不佳，因为它无法识别采样率的差异。
- en: '**1**. Start by loading the [MInDS-14](https://huggingface.co/datasets/PolyAI/minds14)
    dataset, the [Audio](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Audio)
    feature, and the feature extractor corresponding to a pretrained [Wav2Vec2](https://huggingface.co/facebook/wav2vec2-base-960h)
    model:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**1**. 首先加载[MInDS-14](https://huggingface.co/datasets/PolyAI/minds14)数据集，[Audio](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Audio)特征，以及对应预训练的[Wav2Vec2](https://huggingface.co/facebook/wav2vec2-base-960h)模型的特征提取器：'
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**2**. Index into the first row of the dataset. When you call the `audio` column
    of the dataset, it is automatically decoded and resampled:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**2**. 对数据集的第一行进行索引。当您调用数据集的`audio`列时，它会被自动解码和重新采样：'
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**3**. Reading a dataset card is incredibly useful and can give you a lot of
    information about the dataset. A quick look at the MInDS-14 dataset card tells
    you the sampling rate is 8kHz. Likewise, you can get many details about a model
    from its model card. The Wav2Vec2 model card says it was sampled on 16kHz speech
    audio. This means you’ll need to upsample the MInDS-14 dataset to match the sampling
    rate of the model.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**3**. 阅读数据集卡片非常有用，可以为您提供关于数据集的许多信息。快速查看MInDS-14数据集卡片告诉您采样率为8kHz。同样，您可以从模型卡片中获取有关模型的许多细节。Wav2Vec2模型卡片显示其在16kHz语音音频上采样。这意味着您需要将MInDS-14数据集上采样以匹配模型的采样率。'
- en: 'Use the [cast_column()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.cast_column)
    function and set the `sampling_rate` parameter in the [Audio](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Audio)
    feature to upsample the audio signal. When you call the `audio` column now, it
    is decoded and resampled to 16kHz:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[cast_column()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.cast_column)函数，并在[Audio](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Audio)特征中设置`sampling_rate`参数来上采样音频信号。当您现在调用`audio`列时，它会被解码并重新采样为16kHz：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**4**. Use the [map()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.map)
    function to resample the entire dataset to 16kHz. This function speeds up resampling
    by applying the feature extractor to batches of examples instead of individual
    examples. Set the `batched` parameter to `True`:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**4**. 使用[map()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.map)函数将整个数据集重新采样为16kHz。此函数通过将特征提取器应用于批量示例而不是单个示例来加快重新采样速度。将`batched`参数设置为`True`：'
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**5**. The dataset is now ready for training with your machine learning framework!'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**5**. 现在数据集已准备好与您的机器学习框架进行训练！'
- en: Apply data augmentations
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用数据增强
- en: The most common preprocessing you’ll do with image datasets is *data augmentation*,
    a process that introduces random variations to an image without changing the meaning
    of the data. This can mean changing the color properties of an image or randomly
    cropping an image. You are free to use any data augmentation library you like,
    and 🤗 Datasets will help you apply your data augmentations to your dataset.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您将对图像数据集进行的最常见的预处理是*数据增强*，这个过程会在不改变数据含义的情况下引入图像的随机变化。这可能意味着改变图像的颜色属性或随机裁剪图像。您可以自由选择任何您喜欢的数据增强库，🤗
    Datasets将帮助您将数据增强应用到您的数据集上。
- en: '**1**. Start by loading the [Beans](https://huggingface.co/datasets/beans)
    dataset, the `Image` feature, and the feature extractor corresponding to a pretrained
    [ViT](https://huggingface.co/google/vit-base-patch16-224-in21k) model:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**1**. 首先加载[Beans](https://huggingface.co/datasets/beans)数据集，`Image`特征，以及对应预训练的[ViT](https://huggingface.co/google/vit-base-patch16-224-in21k)模型的特征提取器：'
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**2**. Index into the first row of the dataset. When you call the `image` column
    of the dataset, the underlying PIL object is automatically decoded into an image.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**2**. 对数据集的第一行进行索引。当您调用数据集的`image`列时，底层的PIL对象会自动解码为图像。'
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**3**. Now, you can apply some transforms to the image. Feel free to take a
    look at the [various transforms available](https://pytorch.org/vision/stable/auto_examples/plot_transforms.html#sphx-glr-auto-examples-plot-transforms-py)
    in torchvision and choose one you’d like to experiment with. This example applies
    a transform that randomly rotates the image:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**3**. 现在，您可以对图像应用一些变换。随意查看torchvision中提供的[各种可用变换](https://pytorch.org/vision/stable/auto_examples/plot_transforms.html#sphx-glr-auto-examples-plot-transforms-py)，并选择一个您想要尝试的变换。这个示例应用了一个随机旋转图像的变换：'
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**4**. Use the [set_transform()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.set_transform)
    function to apply the transform on-the-fly. When you index into the image `pixel_values`,
    the transform is applied, and your image gets rotated.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**4**. 使用[set_transform()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.set_transform)函数来实时应用变换。当您索引到图像的`pixel_values`时，变换会被应用，您的图像会被旋转。'
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**5**. The dataset is now ready for training with your machine learning framework!'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**5**. 现在数据集已准备好与您的机器学习框架进行训练！'
