- en: Create and manage a repository
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和管理存储库
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/guides/repository](https://huggingface.co/docs/huggingface_hub/guides/repository)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/huggingface_hub/guides/repository](https://huggingface.co/docs/huggingface_hub/guides/repository)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'The Hugging Face Hub is a collection of git repositories. [Git](https://git-scm.com/)
    is a widely used tool in software development to easily version projects when
    working collaboratively. This guide will show you how to interact with the repositories
    on the Hub, especially:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Hugging Face Hub是一组git存储库。[Git](https://git-scm.com/)是软件开发中广泛使用的工具，可在协作工作时轻松对项目进行版本控制。本指南将向您展示如何与Hub上的存储库进行交互，特别是：
- en: Create and delete a repository.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和删除存储库。
- en: Manage branches and tags.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理分支和标签。
- en: Rename your repository.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名您的存储库。
- en: Update your repository visibility.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新您的存储库可见性。
- en: Manage a local copy of your repository.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理您的存储库的本地副本。
- en: If you are used to working with platforms such as GitLab/GitHub/Bitbucket, your
    first instinct might be to use `git` CLI to clone your repo (`git clone`), commit
    changes (`git add, git commit`) and push them (`git push`). This is valid when
    using the Hugging Face Hub. However, software engineering and machine learning
    do not share the same requirements and workflows. Model repositories might maintain
    large model weight files for different frameworks and tools, so cloning the repository
    can lead to you maintaining large local folders with massive sizes. As a result,
    it may be more efficient to use our custom HTTP methods. You can read our [Git
    vs HTTP paradigm](../concepts/git_vs_http) explanation page for more details.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您习惯于使用GitLab/GitHub/Bitbucket等平台，您的第一反应可能是使用`git` CLI克隆您的存储库（`git clone`），提交更改（`git
    add, git commit`）并推送它们（`git push`）。在使用Hugging Face Hub时，这是有效的。然而，软件工程和机器学习并不具有相同的要求和工作流程。模型存储库可能会维护不同框架和工具的大型模型权重文件，因此克隆存储库可能导致您维护大型本地文件夹并具有巨大大小。因此，使用我们的自定义HTTP方法可能更有效。您可以阅读我们的[Git
    vs HTTP范式](../concepts/git_vs_http)解释页面以获取更多详细信息。
- en: If you want to create and manage a repository on the Hub, your machine must
    be logged in. If you are not, please refer to [this section](../quick-start#authentication).
    In the rest of this guide, we will assume that your machine is logged in.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想在Hub上创建和管理存储库，您的计算机必须已登录。如果没有，请参考[此部分](../quick-start#authentication)。在本指南的其余部分，我们将假设您的计算机已登录。
- en: Repo creation and deletion
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储库创建和删除
- en: The first step is to know how to create and delete repositories. You can only
    manage repositories that you own (under your username namespace) or from organizations
    in which you have write permissions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是了解如何创建和删除存储库。您只能管理您拥有的存储库（在您的用户名命名空间下）或您具有写权限的组织的存储库。
- en: Create a repository
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个存储库
- en: 'Create an empty repository with [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    and give it a name with the `repo_id` parameter. The `repo_id` is your namespace
    followed by the repository name: `username_or_org/repo_name`.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)创建一个空存储库，并使用`repo_id`参数为其命名。`repo_id`是您的命名空间，后跟存储库名称：`username_or_org/repo_name`。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'By default, [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    creates a model repository. But you can use the `repo_type` parameter to specify
    another repository type. For example, if you want to create a dataset repository:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，[create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    创建一个模型存储库。但是您可以使用`repo_type`参数来指定另一种存储库类型。例如，如果您想创建一个数据集存储库：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When you create a repository, you can set your repository visibility with the
    `private` parameter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 创建存储库时，您可以使用`private`参数设置存储库可见性。
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you want to change the repository visibility at a later time, you can use
    the [update_repo_visibility()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.update_repo_visibility)
    function.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望以后更改存储库的可见性，可以使用[update_repo_visibility()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.update_repo_visibility)函数。
- en: Delete a repository
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除存储库
- en: Delete a repository with [delete_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_repo).
    Make sure you want to delete a repository because this is an irreversible process!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[delete_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_repo)删除存储库。请确保您要删除存储库，因为这是一个不可逆的过程！
- en: 'Specify the `repo_id` of the repository you want to delete:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 指定要删除的存储库的`repo_id`：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Duplicate a repository (only for Spaces)
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复制存储库（仅适用于Spaces）
- en: In some cases, you want to copy someone else’s repo to adapt it to your use
    case. This is possible for Spaces using the [duplicate_space()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.duplicate_space)
    method. It will duplicate the whole repository. You will still need to configure
    your own settings (hardware, sleep-time, storage, variables and secrets). Check
    out our [Manage your Space](./manage-spaces) guide for more details.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能希望复制他人的存储库以适应您的用例。对于Spaces，可以使用[duplicate_space()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.duplicate_space)方法实现。它将复制整个存储库。您仍需要配置自己的设置（硬件、睡眠时间、存储、变量和秘密）。查看我们的[管理您的Space](./manage-spaces)指南以获取更多详细信息。
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Upload and download files
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上传和下载文件
- en: Now that you have created your repository, you are interested in pushing changes
    to it and downloading files from it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经创建了您的存储库，您有兴趣将更改推送到它并从中下载文件。
- en: These 2 topics deserve their own guides. Please refer to the [upload](./upload)
    and the [download](./download) guides to learn how to use your repository.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个主题值得拥有自己的指南。请参考[上传](./upload)和[下载](./download)指南，了解如何使用您的存储库。
- en: Branches and tags
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分支和标签
- en: Git repositories often make use of branches to store different versions of a
    same repository. Tags can also be used to flag a specific state of your repository,
    for example, when releasing a version. More generally, branches and tags are referred
    as [git references](https://git-scm.com/book/en/v2/Git-Internals-Git-References).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Git 存储库通常使用分支来存储同一存储库的不同版本。标签也可以用于标记存储库的特定状态，例如，在发布版本时。一般来说，分支和标签被称为[git 引用](https://git-scm.com/book/en/v2/Git-Internals-Git-References)。
- en: Create branches and tags
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建分支和标签
- en: 'You can create new branch and tags using [create_branch()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_branch)
    and [create_tag()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_tag):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 [create_branch()](/docs/huggingface_hub/v0.20.3/zh/package_reference/hf_api#huggingface_hub.HfApi.create_branch)
    和 [create_tag()](/docs/huggingface_hub/v0.20.3/zh/package_reference/hf_api#huggingface_hub.HfApi.create_tag)
    创建新的分支和标签：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can use the [delete_branch()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_branch)
    and [delete_tag()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_tag)
    functions in the same way to delete a branch or a tag.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 [delete_branch()](/docs/huggingface_hub/v0.20.3/zh/package_reference/hf_api#huggingface_hub.HfApi.delete_branch)
    和 [delete_tag()](/docs/huggingface_hub/v0.20.3/zh/package_reference/hf_api#huggingface_hub.HfApi.delete_tag)
    函数以相同的方式删除分支或标签。
- en: List all branches and tags
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列出所有分支和标签
- en: 'You can also list the existing git refs from a repository using [list_repo_refs()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_refs):'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 [list_repo_refs()](/docs/huggingface_hub/v0.20.3/zh/package_reference/hf_api#huggingface_hub.HfApi.list_repo_refs)
    列出存储库中现有的 git 引用：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Change repository settings
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改存储库设置
- en: Repositories come with some settings that you can configure. Most of the time,
    you will want to do that manually in the repo settings page in your browser. You
    must have write access to a repo to configure it (either own it or being part
    of an organization). In this section, we will see the settings that you can also
    configure programmatically using `huggingface_hub`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 存储库带有一些您可以配置的设置。大多数情况下，您将希望在浏览器中的存储库设置页面中手动进行配置。您必须对存储库具有写入访问权限才能对其进行配置（拥有它或是组织的一部分）。在本节中，我们将看到您还可以使用
    `huggingface_hub` 以编程方式配置的设置。
- en: Some settings are specific to Spaces (hardware, environment variables,…). To
    configure those, please refer to our [Manage your Spaces](../guides/manage-spaces)
    guide.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一些设置特定于 Spaces（硬件、环境变量等）。要配置这些设置，请参考我们的[管理您的 Spaces](../guides/manage-spaces)指南。
- en: Update visibility
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更新可见性
- en: 'A repository can be public or private. A private repository is only visible
    to you or members of the organization in which the repository is located. Change
    a repository to private as shown in the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 存储库可以是公共的或私有的。私有存储库只对您或存储库所在组织的成员可见。将存储库更改为私有的示例如下：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Rename your repository
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重命名您的存储库
- en: You can rename your repository on the Hub using [move_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.move_repo).
    Using this method, you can also move the repo from a user to an organization.
    When doing so, there are a [few limitations](https://hf.co/docs/hub/repositories-settings#renaming-or-transferring-a-repo)
    that you should be aware of. For example, you can’t transfer your repo to another
    user.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 [move_repo()](/docs/huggingface_hub/v0.20.3/zh/package_reference/hf_api#huggingface_hub.HfApi.move_repo)
    在 Hub 上重命名您的存储库。使用此方法，您还可以将存储库从用户移动到组织。在这样做时，有一些[限制](https://hf.co/docs/hub/repositories-settings#renaming-or-transferring-a-repo)您应该注意。例如，您无法将存储库转移到另一个用户。
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Manage a local copy of your repository
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理存储库的本地副本
- en: All the actions described above can be done using HTTP requests. However, in
    some cases you might be interested in having a local copy of your repository and
    interact with it using the Git commands you are familiar with.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 上述所有操作都可以使用 HTTP 请求完成。但是，在某些情况下，您可能有兴趣拥有存储库的本地副本，并使用您熟悉的 Git 命令与其交互。
- en: The [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    class allows you to interact with files and repositories on the Hub with functions
    similar to Git commands. It is a wrapper over Git and Git-LFS methods to use the
    Git commands you already know and love. Before starting, please make sure you
    have Git-LFS installed (see [here](https://git-lfs.github.com/) for installation
    instructions).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[Repository](/docs/huggingface_hub/v0.20.3/zh/package_reference/repository#huggingface_hub.Repository)
    类允许您与 Hub 上的文件和存储库进行交互，其功能类似于 Git 命令。它是对 Git 和 Git-LFS 方法的封装，以便您可以使用您已经熟悉和喜爱的
    Git 命令。在开始之前，请确保您已安装了 Git-LFS（请参阅[此处](https://git-lfs.github.com/)获取安装说明）。'
- en: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    is deprecated in favor of the http-based alternatives implemented in [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi).
    Given its large adoption in legacy code, the complete removal of [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    will only happen in release `v1.0`. For more details, please read [this explanation
    page](./concepts/git_vs_http).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[Repository](/docs/huggingface_hub/v0.20.3/zh/package_reference/repository#huggingface_hub.Repository)
    已被弃用，推荐使用 [HfApi](/docs/huggingface_hub/v0.20.3/zh/package_reference/hf_api#huggingface_hub.HfApi)
    中实现的基于 http 的替代方法。鉴于其在传统代码中的广泛应用，[Repository](/docs/huggingface_hub/v0.20.3/zh/package_reference/repository#huggingface_hub.Repository)
    的完全移除将仅在版本 `v1.0` 中发生。有关更多详细信息，请阅读[此解释页面](./concepts/git_vs_http)。'
- en: Use a local repository
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用本地存储库
- en: 'Instantiate a [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    object with a path to a local repository:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用指向本地存储库的路径实例化一个[Repository](/docs/huggingface_hub/v0.20.3/zh/package_reference/repository#huggingface_hub.Repository)对象：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Clone
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 克隆
- en: 'The `clone_from` parameter clones a repository from a Hugging Face repository
    ID to a local directory specified by the `local_dir` argument:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`clone_from` 参数将存储库从 Hugging Face 存储库 ID 克隆到由 `local_dir` 参数指定的本地目录：'
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`clone_from` can also clone a repository using a URL:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`clone_from`也可以使用URL克隆存储库：'
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You can combine the `clone_from` parameter with [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    to create and clone a repository:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将`clone_from`参数与[create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)结合使用来创建和克隆存储库：
- en: '[PRE12]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You can also configure a Git username and email to a cloned repository by specifying
    the `git_user` and `git_email` parameters when you clone a repository. When users
    commit to that repository, Git will be aware of the commit author.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在克隆存储库时通过指定`git_user`和`git_email`参数来配置Git用户名和电子邮件。当用户提交到该存储库时，Git将知道提交作者。
- en: '[PRE13]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Branch
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分支
- en: 'Branches are important for collaboration and experimentation without impacting
    your current files and code. Switch between branches with [git_checkout()](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository.git_checkout).
    For example, if you want to switch from `branch1` to `branch2`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 分支对于协作和实验非常重要，而不会影响您当前的文件和代码。使用[git_checkout()](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository.git_checkout)在分支之间切换。例如，如果您想从`branch1`切换到`branch2`：
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Pull
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拉取
- en: '[git_pull()](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository.git_pull)
    allows you to update a current local branch with changes from a remote repository:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[git_pull()](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository.git_pull)允许您从远程存储库更新当前本地分支的更改：'
- en: '[PRE15]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Set `rebase=True` if you want your local commits to occur after your branch
    is updated with the new commits from the remote:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望本地提交发生在您的分支更新为来自远程的新提交之后，请设置`rebase=True`：
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
