- en: Configuration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/configuration](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/configuration)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/configuration](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/configuration)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The base class [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    implements the common methods for loading/saving a configuration either from a
    local file or directory, or from a pretrained model configuration provided by
    the library (downloaded from HuggingFace’s AWS S3 repository).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 基类 [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    实现了从本地文件或目录加载/保存配置的常用方法，或者从库提供的预训练模型配置（从 HuggingFace 的 AWS S3 存储库下载）。
- en: 'Each derived config class implements model specific attributes. Common attributes
    present in all config classes are: `hidden_size`, `num_attention_heads`, and `num_hidden_layers`.
    Text models further implement: `vocab_size`.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 每个派生的配置类都实现了特定于模型的属性。所有配置类中共有的属性是：`hidden_size`、`num_attention_heads` 和 `num_hidden_layers`。文本模型进一步实现了：`vocab_size`。
- en: PretrainedConfig
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PretrainedConfig
- en: '### `class transformers.PretrainedConfig`'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.PretrainedConfig`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L49)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L49)'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`name_or_path` (`str`, *optional*, defaults to `""`) — Store the string that
    was passed to [PreTrainedModel.from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/model#transformers.PreTrainedModel.from_pretrained)
    or [TFPreTrainedModel.from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/model#transformers.TFPreTrainedModel.from_pretrained)
    as `pretrained_model_name_or_path` if the configuration was created with such
    a method.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name_or_path` (`str`, *可选*, 默认为 `""`) — 存储传递给 [PreTrainedModel.from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/model#transformers.PreTrainedModel.from_pretrained)
    或 [TFPreTrainedModel.from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/model#transformers.TFPreTrainedModel.from_pretrained)
    作为 `pretrained_model_name_or_path` 的字符串，如果配置是使用这种方法创建的。'
- en: '`output_hidden_states` (`bool`, *optional*, defaults to `False`) — Whether
    or not the model should return all hidden-states.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_hidden_states` (`bool`, *可选*, 默认为 `False`) — 模型是否应返回所有隐藏状态。'
- en: '`output_attentions` (`bool`, *optional*, defaults to `False`) — Whether or
    not the model should returns all attentions.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_attentions` (`bool`, *可选*, 默认为 `False`) — 模型是否应返回所有注意力。'
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not the
    model should return a [ModelOutput](/docs/transformers/v4.37.2/en/main_classes/output#transformers.utils.ModelOutput)
    instead of a plain tuple.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`, *可选*, 默认为 `True`) — 模型是否应返回一个 [ModelOutput](/docs/transformers/v4.37.2/en/main_classes/output#transformers.utils.ModelOutput)
    而不是一个普通元组。'
- en: '`is_encoder_decoder` (`bool`, *optional*, defaults to `False`) — Whether the
    model is used as an encoder/decoder or not.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`is_encoder_decoder` (`bool`, *可选*, 默认为 `False`) — 模型是否用作编码器/解码器。'
- en: '`is_decoder` (`bool`, *optional*, defaults to `False`) — Whether the model
    is used as decoder or not (in which case it’s used as an encoder).'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`is_decoder` (`bool`, *可选*, 默认为 `False`) — 模型是否用作解码器或不用（在这种情况下，它用作编码器）。'
- en: '`cross_attention_hidden_size**` (`bool`, *optional*) — The hidden size of the
    cross-attention layer in case the model is used as a decoder in an encoder-decoder
    setting and the cross-attention hidden dimension differs from `self.config.hidden_size`.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cross_attention_hidden_size**` (`bool`, *可选*) — 如果模型用作编码器-解码器设置中的解码器，并且交叉注意力隐藏维度与
    `self.config.hidden_size` 不同，则为交叉注意力层的隐藏大小。'
- en: '`add_cross_attention` (`bool`, *optional*, defaults to `False`) — Whether cross-attention
    layers should be added to the model. Note, this option is only relevant for models
    that can be used as decoder models within the [EncoderDecoderModel](/docs/transformers/v4.37.2/en/model_doc/encoder-decoder#transformers.EncoderDecoderModel)
    class, which consists of all models in `AUTO_MODELS_FOR_CAUSAL_LM`.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`add_cross_attention` (`bool`, *可选*, 默认为 `False`) — 是否应向模型添加交叉注意力层。请注意，此选项仅适用于可以在
    [EncoderDecoderModel](/docs/transformers/v4.37.2/en/model_doc/encoder-decoder#transformers.EncoderDecoderModel)
    类中用作解码器模型的模型，其中包括 `AUTO_MODELS_FOR_CAUSAL_LM` 中的所有模型。'
- en: '`tie_encoder_decoder` (`bool`, *optional*, defaults to `False`) — Whether all
    encoder weights should be tied to their equivalent decoder weights. This requires
    the encoder and decoder model to have the exact same parameter names.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tie_encoder_decoder` (`bool`, *可选*, 默认为 `False`) — 是否应将所有编码器权重绑定到它们对应的解码器权重。这要求编码器和解码器模型具有完全相同的参数名称。'
- en: '`prune_heads` (`Dict[int, List[int]]`, *optional*, defaults to `{}`) — Pruned
    heads of the model. The keys are the selected layer indices and the associated
    values, the list of heads to prune in said layer.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prune_heads` (`Dict[int, List[int]]`, *可选*, 默认为 `{}`) — 模型的剪枝头部。键是所选层索引，相关值是要在该层中剪枝的头部列表。'
- en: 'For instance `{1: [0, 2], 2: [2, 3]}` will prune heads 0 and 2 on layer 1 and
    heads 2 and 3 on layer 2.'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '例如 `{1: [0, 2], 2: [2, 3]}` 将在第 1 层剪枝头部 0 和 2，第 2 层剪枝头部 2 和 3。'
- en: '`chunk_size_feed_forward` (`int`, *optional*, defaults to `0`) — The chunk
    size of all feed forward layers in the residual attention blocks. A chunk size
    of `0` means that the feed forward layer is not chunked. A chunk size of n means
    that the feed forward layer processes `n` < sequence_length embeddings at a time.
    For more information on feed forward chunking, see [How does Feed Forward Chunking
    work?](../glossary.html#feed-forward-chunking).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chunk_size_feed_forward` (`int`, *可选*, 默认为 `0`) — 残差注意力块中所有前馈层的块大小。块大小为 `0`
    表示前馈层未分块。大小为 n 的块表示前馈层一次处理 `n` 个序列长度的嵌入。有关前馈分块的更多信息，请参见 [前馈分块是如何工作的？](../glossary.html#feed-forward-chunking)。'
- en: Parameters for sequence generation
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 用于序列生成的参数
- en: '`max_length` (`int`, *optional*, defaults to 20) — Maximum length that will
    be used by default in the `generate` method of the model.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_length` (`int`, *可选*, 默认为 20) — 默认情况下在模型的 `generate` 方法中将使用的最大长度。'
- en: '`min_length` (`int`, *optional*, defaults to 0) — Minimum length that will
    be used by default in the `generate` method of the model.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_length` (`int`, *optional*, 默认为0) — 在模型的`generate`方法中默认使用的最小长度。'
- en: '`do_sample` (`bool`, *optional*, defaults to `False`) — Flag that will be used
    by default in the `generate` method of the model. Whether or not to use sampling
    ; use greedy decoding otherwise.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`do_sample` (`bool`, *optional*, 默认为`False`) — 在模型的`generate`方法中默认使用的标志。是否使用采样；否则使用贪婪解码。'
- en: '`early_stopping` (`bool`, *optional*, defaults to `False`) — Flag that will
    be used by default in the `generate` method of the model. Whether to stop the
    beam search when at least `num_beams` sentences are finished per batch or not.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`early_stopping` (`bool`, *optional*, 默认为`False`) — 在模型的`generate`方法中默认使用的标志。是否在每批至少完成`num_beams`个句子时停止束搜索。'
- en: '`num_beams` (`int`, *optional*, defaults to 1) — Number of beams for beam search
    that will be used by default in the `generate` method of the model. 1 means no
    beam search.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_beams` (`int`, *optional*, 默认为1) — 在模型的`generate`方法中默认使用的束搜索数量。1表示不使用束搜索。'
- en: '`num_beam_groups` (`int`, *optional*, defaults to 1) — Number of groups to
    divide `num_beams` into in order to ensure diversity among different groups of
    beams that will be used by default in the `generate` method of the model. 1 means
    no group beam search.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_beam_groups` (`int`, *optional*, 默认为1) — 为了确保在模型的`generate`方法中默认使用的不同束组之间的多样性，将`num_beams`分成的组数。1表示不使用组束搜索。'
- en: '`diversity_penalty` (`float`, *optional*, defaults to 0.0) — Value to control
    diversity for group beam search. that will be used by default in the `generate`
    method of the model. 0 means no diversity penalty. The higher the penalty, the
    more diverse are the outputs.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`diversity_penalty` (`float`, *optional*, 默认为0.0) — 用于控制组束搜索多样性的值，将在模型的`generate`方法中默认使用。0表示没有多样性惩罚。惩罚越高，输出越多样化。'
- en: '`temperature` (`float`, *optional*, defaults to 1.0) — The value used to module
    the next token probabilities that will be used by default in the `generate` method
    of the model. Must be strictly positive.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`temperature` (`float`, *optional*, 默认为1.0) — 用于调节下一个标记概率的值，将在模型的`generate`方法中默认使用。必须严格为正数。'
- en: '`top_k` (`int`, *optional*, defaults to 50) — Number of highest probability
    vocabulary tokens to keep for top-k-filtering that will be used by default in
    the `generate` method of the model.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`top_k` (`int`, *optional*, 默认为50) — 在模型的`generate`方法中默认使用的保留最高概率词汇标记的数量，用于top-k过滤。'
- en: '`top_p` (`float`, *optional*, defaults to 1) — Value that will be used by default
    in the `generate` method of the model for `top_p`. If set to float < 1, only the
    most probable tokens with probabilities that add up to `top_p` or higher are kept
    for generation.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`top_p` (`float`, *optional*, 默认为1) — 用于`top_p`的默认值，将在模型的`generate`方法中使用。如果设置为float
    < 1，只保留概率加起来达到`top_p`或更高的最有可能的标记用于生成。'
- en: '`typical_p` (`float`, *optional*, defaults to 1) — Local typicality measures
    how similar the conditional probability of predicting a target token next is to
    the expected conditional probability of predicting a random token next, given
    the partial text already generated. If set to float < 1, the smallest set of the
    most locally typical tokens with probabilities that add up to `typical_p` or higher
    are kept for generation. See [this paper](https://arxiv.org/pdf/2202.00666.pdf)
    for more details.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`typical_p` (`float`, *optional*, 默认为1) — 本地典型性衡量了预测下一个目标标记的条件概率与预期的条件概率有多相似，给定已生成的部分文本。如果设置为float
    < 1，将保留概率加起来达到`typical_p`或更高的最具本地典型性的标记集。有关更多详细信息，请参阅[此论文](https://arxiv.org/pdf/2202.00666.pdf)。'
- en: '`repetition_penalty` (`float`, *optional*, defaults to 1) — Parameter for repetition
    penalty that will be used by default in the `generate` method of the model. 1.0
    means no penalty.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repetition_penalty` (`float`, *optional*, 默认为1) — 用于重复惩罚的参数，将在模型的`generate`方法中默认使用。1.0表示没有惩罚。'
- en: '`length_penalty` (`float`, *optional*, defaults to 1) — Exponential penalty
    to the length that is used with beam-based generation. It is applied as an exponent
    to the sequence length, which in turn is used to divide the score of the sequence.
    Since the score is the log likelihood of the sequence (i.e. negative), `length_penalty`
    > 0.0 promotes longer sequences, while `length_penalty` < 0.0 encourages shorter
    sequences.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`length_penalty` (`float`, *optional*, 默认为1) — 用于基于束的生成的长度的指数惩罚。它作为指数应用于序列长度，然后用于分割序列的分数。由于分数是序列的对数似然（即负数），`length_penalty`
    > 0.0 促进更长的序列，而`length_penalty` < 0.0 鼓励更短的序列。'
- en: '`no_repeat_ngram_size` (`int`, *optional*, defaults to 0) — Value that will
    be used by default in the — `generate` method of the model for `no_repeat_ngram_size`.
    If set to int > 0, all ngrams of that size can only occur once.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no_repeat_ngram_size` (`int`, *optional*, 默认为0) — 用于`no_repeat_ngram_size`的默认值，将在模型的`generate`方法中使用。如果设置为int
    > 0，该大小的所有ngram只能出现一次。'
- en: '`encoder_no_repeat_ngram_size` (`int`, *optional*, defaults to 0) — Value that
    will be used by — default in the `generate` method of the model for `encoder_no_repeat_ngram_size`.
    If set to int > 0, all ngrams of that size that occur in the `encoder_input_ids`
    cannot occur in the `decoder_input_ids`.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`encoder_no_repeat_ngram_size` (`int`, *optional*, 默认为0) — 用于`encoder_no_repeat_ngram_size`的默认值，将在模型的`generate`方法中使用。如果设置为int
    > 0，`encoder_input_ids`中出现的该大小的所有ngram不能出现在`decoder_input_ids`中。'
- en: '`bad_words_ids` (`List[int]`, *optional*) — List of token ids that are not
    allowed to be generated that will be used by default in the `generate` method
    of the model. In order to get the tokens of the words that should not appear in
    the generated text, use `tokenizer.encode(bad_word, add_prefix_space=True)`.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bad_words_ids` (`List[int]`, *optional*) — 不允许生成的标记id列表，将在模型的`generate`方法中默认使用。为了获取不应出现在生成文本中的单词的标记，请使用`tokenizer.encode(bad_word,
    add_prefix_space=True)`。'
- en: '`num_return_sequences` (`int`, *optional*, defaults to 1) — Number of independently
    computed returned sequences for each element in the batch that will be used by
    default in the `generate` method of the model.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_return_sequences` (`int`, *optional*, 默认为1) — 每个批次中每个元素默认在模型的`generate`方法中使用的独立计算返回序列的数量。'
- en: '`output_scores` (`bool`, *optional*, defaults to `False`) — Whether the model
    should return the logits when used for generation.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`output_scores` (`bool`, *optional*, 默认为`False`) — 当用于生成时，模型是否应返回logits。'
- en: '`return_dict_in_generate` (`bool`, *optional*, defaults to `False`) — Whether
    the model should return a [ModelOutput](/docs/transformers/v4.37.2/en/main_classes/output#transformers.utils.ModelOutput)
    instead of a `torch.LongTensor`.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict_in_generate` (`bool`, *optional*, 默认为`False`) — 模型在生成时是否应返回[ModelOutput](/docs/transformers/v4.37.2/en/main_classes/output#transformers.utils.ModelOutput)而不是`torch.LongTensor`。'
- en: '`forced_bos_token_id` (`int`, *optional*) — The id of the token to force as
    the first generated token after the `decoder_start_token_id`. Useful for multilingual
    models like [mBART](../model_doc/mbart) where the first generated token needs
    to be the target language token.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`forced_bos_token_id` (`int`, *optional*) — 在`decoder_start_token_id`之后强制作为第一个生成的标记的id。对于多语言模型（如[mBART](../model_doc/mbart)）很有用，其中第一个生成的标记需要是目标语言标记。'
- en: '`forced_eos_token_id` (`int`, *optional*) — The id of the token to force as
    the last generated token when `max_length` is reached.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`forced_eos_token_id` (`int`, *optional*) — 当达到`max_length`时，强制作为最后生成的标记的id。'
- en: '`remove_invalid_values` (`bool`, *optional*) — Whether to remove possible *nan*
    and *inf* outputs of the model to prevent the generation method to crash. Note
    that using `remove_invalid_values` can slow down generation.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remove_invalid_values` (`bool`, *optional*) — 是否删除模型可能产生的*nan*和*inf*输出，以防止生成方法崩溃。请注意，使用`remove_invalid_values`可能会减慢生成速度。'
- en: Parameters for fine-tuning tasks
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 用于微调任务的参数
- en: '`architectures` (`List[str]`, *optional*) — Model architectures that can be
    used with the model pretrained weights.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`architectures` (`List[str]`, *optional*) — 可与模型预训练权重一起使用的模型架构。'
- en: '`finetuning_task` (`str`, *optional*) — Name of the task used to fine-tune
    the model. This can be used when converting from an original (TensorFlow or PyTorch)
    checkpoint.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`finetuning_task` (`str`, *optional*) — 用于微调模型的任务名称。在从原始（TensorFlow或PyTorch）检查点转换时可以使用。'
- en: '`id2label` (`Dict[int, str]`, *optional*) — A map from index (for instance
    prediction index, or target index) to label.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id2label` (`Dict[int, str]`, *optional*) — 从索引（例如预测索引或目标索引）到标签的映射。'
- en: '`label2id` (`Dict[str, int]`, *optional*) — A map from label to index for the
    model.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label2id` (`Dict[str, int]`, *optional*) — 从标签到模型索引的映射。'
- en: '`num_labels` (`int`, *optional*) — Number of labels to use in the last layer
    added to the model, typically for a classification task.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_labels` (`int`, *optional*) — 在模型中添加的最后一层中要使用的标签数，通常用于分类任务。'
- en: '`task_specific_params` (`Dict[str, Any]`, *optional*) — Additional keyword
    arguments to store for the current task.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`task_specific_params` (`Dict[str, Any]`, *optional*) — 存储当前任务的额外关键字参数。'
- en: '`problem_type` (`str`, *optional*) — Problem type for `XxxForSequenceClassification`
    models. Can be one of `"regression"`, `"single_label_classification"` or `"multi_label_classification"`.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`problem_type` (`str`, *optional*) — `XxxForSequenceClassification`模型的问题类型。可以是`"regression"`、`"single_label_classification"`或`"multi_label_classification"`中的一个。'
- en: Parameters linked to the tokenizer
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 与分词器相关的参数
- en: '`tokenizer_class` (`str`, *optional*) — The name of the associated tokenizer
    class to use (if none is set, will use the tokenizer associated to the model by
    default).'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer_class` (`str`, *optional*) — 要使用的关联分词器类的名称（如果未设置，则默认使用与模型关联的分词器）。'
- en: '`prefix` (`str`, *optional*) — A specific prompt that should be added at the
    beginning of each text before calling the model.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prefix` (`str`, *optional*) — 每个文本前调用模型之前应添加的特定提示。'
- en: '`bos_token_id` (`int`, *optional*) — The id of the *beginning-of-stream* token.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bos_token_id` (`int`, *optional*) — *流的开始*标记的id。'
- en: '`pad_token_id` (`int`, *optional*) — The id of the *padding* token.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pad_token_id` (`int`, *optional*) — *填充*标记的id。'
- en: '`eos_token_id` (`int`, *optional*) — The id of the *end-of-stream* token.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eos_token_id` (`int`, *optional*) — *流的结束*标记的id。'
- en: '`decoder_start_token_id` (`int`, *optional*) — If an encoder-decoder model
    starts decoding with a different token than *bos*, the id of that token.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoder_start_token_id` (`int`, *optional*) — 如果编码器-解码器模型开始解码时使用与*bos*不同的标记，则该标记的id。'
- en: '`sep_token_id` (`int`, *optional*) — The id of the *separation* token.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sep_token_id` (`int`, *optional*) — *分隔*标记的id。'
- en: PyTorch specific parameters
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch特定参数
- en: '`torchscript` (`bool`, *optional*, defaults to `False`) — Whether or not the
    model should be used with Torchscript.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`torchscript` (`bool`, *optional*, 默认为`False`) — 模型是否应与Torchscript一起使用。'
- en: '`tie_word_embeddings` (`bool`, *optional*, defaults to `True`) — Whether the
    model’s input and output word embeddings should be tied. Note that this is only
    relevant if the model has a output word embedding layer.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tie_word_embeddings` (`bool`, *optional*, 默认为`True`) — 模型的输入和输出词嵌入是否应该绑定。请注意，这仅在模型具有输出词嵌入层时才相关。'
- en: '`torch_dtype` (`str`, *optional*) — The `dtype` of the weights. This attribute
    can be used to initialize the model to a non-default `dtype` (which is normally
    `float32`) and thus allow for optimal storage allocation. For example, if the
    saved model is `float16`, ideally we want to load it back using the minimal amount
    of memory needed to load `float16` weights. Since the config object is stored
    in plain text, this attribute contains just the floating type string without the
    `torch.` prefix. For example, for `torch.float16` ``torch_dtype` is the `"float16"`
    string.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`torch_dtype` (`str`, *optional*) — 权重的`dtype`。此属性可用于将模型初始化为非默认的`dtype`（通常为`float32`），从而允许进行最佳存储分配。例如，如果保存的模型是`float16`，理想情况下我们希望使用最少的内存来加载`float16`权重。由于配置对象以纯文本形式存储，因此此属性仅包含浮点类型字符串，不包含`torch.`前缀。例如，对于`torch.float16`，`torch_dtype`是`"float16"`字符串。'
- en: This attribute is currently not being used during model loading time, but this
    may change in the future versions. But we can already start preparing for the
    future by saving the dtype with save_pretrained.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此属性当前在模型加载时未被使用，但在将来的版本中可能会更改。但我们可以通过使用 save_pretrained 保存 dtype 来为未来做好准备。
- en: '`attn_implementation` (`str`, *optional*) — The attention implementation to
    use in the model. Can be any of `"eager"` (manual implementation of the attention),
    `"sdpa"` (attention using [`torch.nn.functional.scaled_dot_product_attention`](https://pytorch.org/docs/master/generated/torch.nn.functional.scaled_dot_product_attention.html)),
    or `"flash_attention_2"` (attention using [Dao-AILab/flash-attention](https://github.com/Dao-AILab/flash-attention)).
    By default, if available, SDPA will be used for torch>=2.1.1\. The default is
    otherwise the manual `"eager"` implementation.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attn_implementation` (`str`, *optional*) — 模型中要使用的注意力实现。可以是 `"eager"`（注意力的手动实现），`"sdpa"`（使用
    [`torch.nn.functional.scaled_dot_product_attention`](https://pytorch.org/docs/master/generated/torch.nn.functional.scaled_dot_product_attention.html)
    的注意力），或 `"flash_attention_2"`（使用 [Dao-AILab/flash-attention](https://github.com/Dao-AILab/flash-attention)
    的注意力）。默认情况下，如果可用，torch>=2.1.1 会使用 SDPA。否则，默认为手动的 `"eager"` 实现。'
- en: TensorFlow specific parameters
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: TensorFlow 特定参数
- en: '`use_bfloat16` (`bool`, *optional*, defaults to `False`) — Whether or not the
    model should use BFloat16 scalars (only used by some TensorFlow models).'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_bfloat16` (`bool`, *optional*, 默认为 `False`) — 模型是否应该使用 BFloat16 标量（仅由某些
    TensorFlow 模型使用）。'
- en: '`tf_legacy_loss` (`bool`, *optional*, defaults to `False`) — Whether the model
    should use legacy TensorFlow losses. Legacy losses have variable output shapes
    and may not be XLA-compatible. This option is here for backward compatibility
    and will be removed in Transformers v5.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tf_legacy_loss` (`bool`, *optional*, 默认为 `False`) — 模型是否应该使用传统的 TensorFlow
    损失。传统损失具有可变的输出形状，可能不兼容 XLA。此选项用于向后兼容，将在 Transformers v5 中删除。'
- en: Base class for all configuration classes. Handles a few parameters common to
    all models’ configurations as well as methods for loading/downloading/saving configurations.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 所有配置类的基类。处理一些所有模型配置共有的参数，以及用于加载/下载/保存配置的方法。
- en: A configuration file can be loaded and saved to disk. Loading the configuration
    file and using this file to initialize a model does **not** load the model weights.
    It only affects the model’s configuration.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 可以加载和保存配置文件到磁盘。加载配置文件并使用此文件初始化模型 **不会** 加载模型权重。它只影响模型的配置。
- en: 'Class attributes (overridden by derived classes):'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 类属性（由派生类覆盖）：
- en: '`model_type` (`str`) — An identifier for the model type, serialized into the
    JSON file, and used to recreate the correct object in [AutoConfig](/docs/transformers/v4.37.2/en/model_doc/auto#transformers.AutoConfig).'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_type` (`str`) — 模型类型的标识符，序列化到 JSON 文件中，并用于在 [AutoConfig](/docs/transformers/v4.37.2/en/model_doc/auto#transformers.AutoConfig)
    中重新创建正确的对象。'
- en: '`is_composition` (`bool`) — Whether the config class is composed of multiple
    sub-configs. In this case the config has to be initialized from two or more configs
    of type [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    like: [EncoderDecoderConfig](/docs/transformers/v4.37.2/en/model_doc/encoder-decoder#transformers.EncoderDecoderConfig)
    or [~RagConfig](/docs/transformers/v4.37.2/en/model_doc/rag#transformers.RagConfig).'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`is_composition` (`bool`) — 配置类是否由多个子配置组成。在这种情况下，配置必须从两个或更多类型为 [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    的配置初始化，如：[EncoderDecoderConfig](/docs/transformers/v4.37.2/en/model_doc/encoder-decoder#transformers.EncoderDecoderConfig)
    或 [~RagConfig](/docs/transformers/v4.37.2/en/model_doc/rag#transformers.RagConfig)。'
- en: '`keys_to_ignore_at_inference` (`List[str]`) — A list of keys to ignore by default
    when looking at dictionary outputs of the model during inference.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`keys_to_ignore_at_inference` (`List[str]`) — 推理期间查看模型字典输出时默认要忽略的键列表。'
- en: '`attribute_map` (`Dict[str, str]`) — A dict that maps model specific attribute
    names to the standardized naming of attributes.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attribute_map` (`Dict[str, str]`) — 将模型特定属性名称映射到属性的标准化命名的字典。'
- en: 'Common attributes (present in all subclasses):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 所有子类中存在的公共属性：
- en: '`vocab_size` (`int`) — The number of tokens in the vocabulary, which is also
    the first dimension of the embeddings matrix (this attribute may be missing for
    models that don’t have a text modality like ViT).'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vocab_size` (`int`) — 词汇表中的标记数，也是嵌入矩阵的第一个维度（对于没有文本模态的模型，此属性可能缺失）。'
- en: '`hidden_size` (`int`) — The hidden size of the model.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hidden_size` (`int`) — 模型的隐藏大小。'
- en: '`num_attention_heads` (`int`) — The number of attention heads used in the multi-head
    attention layers of the model.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_attention_heads` (`int`) — 模型中多头注意力层中使用的注意力头数。'
- en: '`num_hidden_layers` (`int`) — The number of blocks in the model.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_hidden_layers` (`int`) — 模型中的块数。'
- en: '#### `push_to_hub`'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `push_to_hub`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/utils/hub.py#L755)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/utils/hub.py#L755)'
- en: '[PRE1]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The name of the repository you want to push your config
    to. It should contain your organization name when pushing to a given organization.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 您要将配置推送到的存储库的名称。在推送到给定组织时，应包含您的组织名称。'
- en: '`use_temp_dir` (`bool`, *optional*) — Whether or not to use a temporary directory
    to store the files saved before they are pushed to the Hub. Will default to `True`
    if there is no directory named like `repo_id`, `False` otherwise.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_temp_dir` (`bool`, *optional*) — 是否使用临时目录存储在推送到 Hub 之前保存的文件。如果没有名为 `repo_id`
    的目录，则默认为 `True`，否则为 `False`。'
- en: '`commit_message` (`str`, *optional*) — Message to commit while pushing. Will
    default to `"Upload config"`.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`, *optional*) — 推送时要提交的消息。默认为 `"Upload config"`。'
- en: '`private` (`bool`, *optional*) — Whether or not the repository created should
    be private.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private` (`bool`, *optional*) — 是否应该创建私有存储库。'
- en: '`token` (`bool` or `str`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, will use the token generated when running `huggingface-cli
    login` (stored in `~/.huggingface`). Will default to `True` if `repo_url` is not
    specified.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`bool` 或 `str`, *可选*) — 用作远程文件的HTTP bearer授权的令牌。如果为`True`，将使用运行`huggingface-cli
    login`时生成的令牌（存储在`~/.huggingface`）。如果未指定`repo_url`，则默认为`True`。'
- en: '`max_shard_size` (`int` or `str`, *optional*, defaults to `"5GB"`) — Only applicable
    for models. The maximum size for a checkpoint before being sharded. Checkpoints
    shard will then be each of size lower than this size. If expressed as a string,
    needs to be digits followed by a unit (like `"5MB"`). We default it to `"5GB"`
    so that users can easily load models on free-tier Google Colab instances without
    any CPU OOM issues.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_shard_size` (`int` 或 `str`, *可选*, 默认为 `"5GB"`) — 仅适用于模型。在分片之前的检查点的最大大小。然后，检查点将分片为每个大小低于此大小的部分。如果表示为字符串，需要是数字后跟一个单位（如`"5MB"`）。我们将其默认为`"5GB"`，以便用户可以在免费的Google
    Colab实例上轻松加载模型，而不会出现任何CPU OOM问题。'
- en: '`create_pr` (`bool`, *optional*, defaults to `False`) — Whether or not to create
    a PR with the uploaded files or directly commit.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_pr` (`bool`, *可选*, 默认为 `False`) — 是否创建一个带有上传文件的PR或直接提交。'
- en: '`safe_serialization` (`bool`, *optional*, defaults to `True`) — Whether or
    not to convert the model weights in safetensors format for safer serialization.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe_serialization` (`bool`, *可选*, 默认为 `True`) — 是否将模型权重转换为safetensors格式以进行更安全的序列化。'
- en: '`revision` (`str`, *optional*) — Branch to push the uploaded files to.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*) — 要将上传的文件推送到的分支。'
- en: '`commit_description` (`str`, *optional*) — The description of the commit that
    will be created'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_description` (`str`, *可选*) — 将要创建的提交描述'
- en: '`tags` (`List[str]`, *optional*) — List of tags to push on the Hub.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tags` (`List[str]`, *可选*) — 要推送到Hub上的标签列表。'
- en: Upload the configuration file to the 🤗 Model Hub.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 将配置文件上传到🤗模型Hub。
- en: 'Examples:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE2]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '#### `dict_torch_dtype_to_str`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `dict_torch_dtype_to_str`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L1005)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L1005)'
- en: '[PRE3]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Checks whether the passed dictionary and its nested dicts have a *torch_dtype*
    key and if it’s not None, converts torch.dtype to a string of just the type. For
    example, `torch.float32` get converted into *“float32”* string, which can then
    be stored in the json format.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 检查传递的字典及其嵌套字典是否具有*torch_dtype*键，如果不是None，则将torch.dtype转换为仅类型的字符串。例如，`torch.float32`被转换为*“float32”*字符串，然后可以存储在json格式中。
- en: '#### `from_dict`'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L737)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L737)'
- en: '[PRE4]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`config_dict` (`Dict[str, Any]`) — Dictionary that will be used to instantiate
    the configuration object. Such a dictionary can be retrieved from a pretrained
    checkpoint by leveraging the [get_config_dict()](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig.get_config_dict)
    method.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config_dict` (`Dict[str, Any]`) — 将用于实例化配置对象的字典。可以通过利用[get_config_dict()](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig.get_config_dict)方法从预训练检查点中检索这样的字典。'
- en: '`kwargs` (`Dict[str, Any]`) — Additional parameters from which to initialize
    the configuration object.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`) — 用于初始化配置对象的其他参数。'
- en: Returns
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)'
- en: The configuration object instantiated from those parameters.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些参数实例化的配置对象。
- en: Instantiates a [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    from a Python dictionary of parameters.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 从参数字典实例化一个[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)。
- en: '#### `from_json_file`'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_json_file`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L798)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L798)'
- en: '[PRE5]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`json_file` (`str` or `os.PathLike`) — Path to the JSON file containing the
    parameters.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`json_file` (`str` 或 `os.PathLike`) — 包含参数的JSON文件的路径。'
- en: Returns
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)'
- en: The configuration object instantiated from that JSON file.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 从该JSON文件实例化的配置对象。
- en: Instantiates a [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    from the path to a JSON file of parameters.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 从参数文件的路径实例化一个[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)。
- en: '#### `from_pretrained`'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L511)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L511)'
- en: '[PRE6]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — This can be either:'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str` 或 `os.PathLike`) — 这可以是：'
- en: a string, the *model id* of a pretrained model configuration hosted inside a
    model repo on huggingface.co. Valid model ids can be located at the root-level,
    like `bert-base-uncased`, or namespaced under a user or organization name, like
    `dbmdz/bert-base-german-cased`.
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，托管在huggingface.co模型存储库中的预训练模型配置的*模型ID*。有效的模型ID可以位于根级别，如`bert-base-uncased`，或者在用户或组织名称下命名空间化，如`dbmdz/bert-base-german-cased`。
- en: a path to a *directory* containing a configuration file saved using the [save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig.save_pretrained)
    method, e.g., `./my_model_directory/`.
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*目录*的路径，其中包含使用[save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig.save_pretrained)方法保存的配置文件，例如，`./my_model_directory/`。
- en: a path or url to a saved configuration JSON *file*, e.g., `./my_model_directory/configuration.json`.
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个保存的配置JSON *文件*的路径或URL，例如，`./my_model_directory/configuration.json`。
- en: '`cache_dir` (`str` or `os.PathLike`, *optional*) — Path to a directory in which
    a downloaded pretrained model configuration should be cached if the standard cache
    should not be used.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`str` 或 `os.PathLike`, *可选*) — 下载的预训练模型配置应缓存在其中的目录路径，如果不使用标准缓存。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force to (re-)download the configuration files and override the cached versions
    if they exist.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`, *可选*, 默认为 `False`) — 是否强制（重新）下载配置文件并覆盖缓存版本（如果存在）。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to delete incompletely received file. Attempts to resume the download if such
    a file exists.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`, *可选*, 默认为 `False`) — 是否删除接收不完整的文件。如果存在这样的文件，尝试恢复下载。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, e.g., `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}.` The proxies are used on each request.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`Dict[str, str]`, *可选*) — 要使用的代理服务器字典，按协议或端点，例如，`{''http'': ''foo.bar:3128'',
    ''http://hostname'': ''foo.bar:4012''}`。代理在每个请求上使用。'
- en: '`token` (`str` or `bool`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, or not specified, will use the token generated when
    running `huggingface-cli login` (stored in `~/.huggingface`).'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str` 或 `bool`, *可选*) — 用作远程文件的HTTP bearer授权的令牌。如果为 `True`，或未指定，将使用运行`huggingface-cli
    login`时生成的令牌（存储在`~/.huggingface`）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, or a commit id, since we use a git-based
    system for storing models and other artifacts on huggingface.co, so `revision`
    can be any identifier allowed by git.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*, 默认为 `"main"`) — 要使用的特定模型版本。它可以是分支名称、标签名称或提交ID，因为我们在huggingface.co上使用基于git的系统存储模型和其他工件，所以`revision`可以是git允许的任何标识符。'
- en: To test a pull request you made on the Hub, you can pass `revision=“refs/pr/<pr_number>“.</pr_number>
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要测试您在Hub上提交的拉取请求，可以传递`revision=“refs/pr/<pr_number>“。</pr_number>
- en: '`return_unused_kwargs` (`bool`, *optional*, defaults to `False`) — If `False`,
    then this function returns just the final configuration object.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_unused_kwargs` (`bool`, *可选*, 默认为 `False`) — 如果为 `False`，则此函数仅返回最终配置对象。'
- en: 'If `True`, then this functions returns a `Tuple(config, unused_kwargs)` where
    *unused_kwargs* is a dictionary consisting of the key/value pairs whose keys are
    not configuration attributes: i.e., the part of `kwargs` which has not been used
    to update `config` and is otherwise ignored.'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果为 `True`，则此函数返回一个`Tuple(config, unused_kwargs)`，其中*unused_kwargs*是一个字典，由那些不是配置属性的键/值对组成：即，未用于更新`config`的`kwargs`部分，否则将被忽略。
- en: '`subfolder` (`str`, *optional*, defaults to `""`) — In case the relevant files
    are located inside a subfolder of the model repo on huggingface.co, you can specify
    the folder name here.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subfolder` (`str`, *可选*, 默认为 `""`) — 如果相关文件位于huggingface.co模型存储库的子文件夹中，您可以在此处指定文件夹名称。'
- en: '`kwargs` (`Dict[str, Any]`, *optional*) — The values in kwargs of any keys
    which are configuration attributes will be used to override the loaded values.
    Behavior concerning key/value pairs whose keys are *not* configuration attributes
    is controlled by the `return_unused_kwargs` keyword parameter.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`, *可选*) — 任何键的kwargs值，这些键是配置属性，将用于覆盖加载的值。关于键/值对中键不是配置属性的行为由`return_unused_kwargs`关键字参数控制。'
- en: Returns
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)'
- en: The configuration object instantiated from this pretrained model.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从此预训练模型实例化的配置对象。
- en: Instantiate a [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    (or a derived class) from a pretrained model configuration.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 从预训练模型配置实例化一个[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)（或派生类）。
- en: 'Examples:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE7]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '#### `get_config_dict`'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_config_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L614)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L614)'
- en: '[PRE8]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — The identifier of
    the pre-trained checkpoint from which we want the dictionary of parameters.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str` 或 `os.PathLike`) — 我们想要参数字典的预训练检查点的标识符。'
- en: Returns
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Tuple[Dict, Dict]`'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`Tuple[Dict, Dict]`'
- en: The dictionary(ies) that will be used to instantiate the configuration object.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 将用于实例化配置对象的字典。
- en: From a `pretrained_model_name_or_path`, resolve to a dictionary of parameters,
    to be used for instantiating a [PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)
    using `from_dict`.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 从`pretrained_model_name_or_path`解析为参数字典，用于使用`from_dict`实例化[PretrainedConfig](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig)。
- en: '#### `register_for_auto_class`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `register_for_auto_class`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L1017)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L1017)'
- en: '[PRE9]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`auto_class` (`str` or `type`, *optional*, defaults to `"AutoConfig"`) — The
    auto class to register this new configuration with.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_class` (`str` 或 `type`, *可选*, 默认为 `"AutoConfig"`) — 要将此新配置注册到的自动类。'
- en: Register this class with a given auto class. This should only be used for custom
    configurations as the ones in the library are already mapped with `AutoConfig`.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 使用给定的自动类注册此类。这仅应用于自定义配置，因为库中的配置已与`AutoConfig`映射。
- en: This API is experimental and may have some slight breaking changes in the next
    releases.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 此API是实验性的，可能在下一个版本中有一些轻微的破坏性更改。
- en: '#### `save_pretrained`'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `save_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L424)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L424)'
- en: '[PRE10]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Parameters
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`save_directory` (`str` or `os.PathLike`) — Directory where the configuration
    JSON file will be saved (will be created if it does not exist).'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save_directory` (`str` 或 `os.PathLike`) — 将保存配置JSON文件的目录（如果不存在将被创建）。'
- en: '`push_to_hub` (`bool`, *optional*, defaults to `False`) — Whether or not to
    push your model to the Hugging Face model hub after saving it. You can specify
    the repository you want to push to with `repo_id` (will default to the name of
    `save_directory` in your namespace).'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`push_to_hub` (`bool`, *可选*, 默认为 `False`) — 是否在保存后将模型推送到Hugging Face模型中心。您可以使用
    `repo_id` 指定要推送到的存储库（将默认为您的命名空间中的 `save_directory` 的名称）。'
- en: '`kwargs` (`Dict[str, Any]`, *optional*) — Additional key word arguments passed
    along to the [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    method.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`, *可选*) — 传递给 [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    方法的额外关键字参数。'
- en: Save a configuration object to the directory `save_directory`, so that it can
    be re-loaded using the [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig.from_pretrained)
    class method.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 将配置对象保存到目录 `save_directory` 中，以便可以使用 [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/configuration#transformers.PretrainedConfig.from_pretrained)
    类方法重新加载。
- en: '#### `to_dict`'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L883)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L883)'
- en: '[PRE11]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Returns
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Dict[str, Any]`'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`Dict[str, Any]`'
- en: Dictionary of all the attributes that make up this configuration instance.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配置实例的所有属性的字典。
- en: Serializes this instance to a Python dictionary.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为Python字典。
- en: '#### `to_diff_dict`'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_diff_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L826)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L826)'
- en: '[PRE12]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Returns
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Dict[str, Any]`'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`Dict[str, Any]`'
- en: Dictionary of all the attributes that make up this configuration instance,
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配置实例的所有属性的字典，
- en: Removes all attributes from config which correspond to the default config attributes
    for better readability and serializes to a Python dictionary.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 从配置中删除所有与默认配置属性对应的属性，以提高可读性并序列化为Python字典。
- en: '#### `to_json_file`'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_file`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L943)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L943)'
- en: '[PRE13]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Parameters
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`json_file_path` (`str` or `os.PathLike`) — Path to the JSON file in which
    this configuration instance’s parameters will be saved.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`json_file_path` (`str` 或 `os.PathLike`) — 此配置实例的参数将被保存在其中的JSON文件的路径。'
- en: '`use_diff` (`bool`, *optional*, defaults to `True`) — If set to `True`, only
    the difference between the config instance and the default `PretrainedConfig()`
    is serialized to JSON file.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_diff` (`bool`, *可选*, 默认为 `True`) — 如果设置为 `True`，则只将配置实例与默认 `PretrainedConfig()`
    之间的差异序列化为JSON文件。'
- en: Save this instance to a JSON file.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例保存到一个JSON文件。
- en: '#### `to_json_string`'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_string`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L925)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L925)'
- en: '[PRE14]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Parameters
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`use_diff` (`bool`, *optional*, defaults to `True`) — If set to `True`, only
    the difference between the config instance and the default `PretrainedConfig()`
    is serialized to JSON string.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_diff` (`bool`, *可选*, 默认为 `True`) — 如果设置为 `True`，则只将配置实例与默认 `PretrainedConfig()`
    之间的差异序列化为JSON字符串。'
- en: Returns
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: String containing all the attributes that make up this configuration instance
    in JSON format.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 包含此配置实例中所有属性的字符串，以JSON格式。
- en: Serializes this instance to a JSON string.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为JSON字符串。
- en: '#### `update`'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `update`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L957)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L957)'
- en: '[PRE15]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Parameters
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`config_dict` (`Dict[str, Any]`) — Dictionary of attributes that should be
    updated for this class.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config_dict` (`Dict[str, Any]`) — 应该更新此类的属性的字典。'
- en: Updates attributes of this class with attributes from `config_dict`.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`config_dict`中的属性更新此类的属性。
- en: '#### `update_from_string`'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `update_from_string`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L967)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/configuration_utils.py#L967)'
- en: '[PRE16]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Parameters
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`update_str` (`str`) — String with attributes that should be updated for this
    class.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`update_str` (`str`) — 应该更新此类的属性的字符串。'
- en: Updates attributes of this class with attributes from `update_str`.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`update_str`中的属性更新此类的属性。
- en: 'The expected format is ints, floats and strings as is, and for booleans use
    `true` or `false`. For example: “n_embd=10,resid_pdrop=0.2,scale_attn_weights=false,summary_type=cls_index”'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '预期的格式是整数、浮点数和字符串，对于布尔值，请使用 `true` 或 `false`。例如: “n_embd=10,resid_pdrop=0.2,scale_attn_weights=false,summary_type=cls_index”'
- en: The keys to change have to already exist in the config object.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改的键必须已经存在于配置对象中。
