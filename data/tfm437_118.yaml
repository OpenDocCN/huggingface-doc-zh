- en: Exporting 🤗 Transformers models to ONNX
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将🤗 Transformers模型导出到ONNX
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/onnx](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/onnx)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/onnx](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/onnx)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 🤗 Transformers provides a `transformers.onnx` package that enables you to convert
    model checkpoints to an ONNX graph by leveraging configuration objects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 Transformers提供了一个`transformers.onnx`包，通过利用配置对象，您可以将模型检查点转换为ONNX图。
- en: See the [guide](../serialization) on exporting 🤗 Transformers models for more
    details.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 查看有关导出🤗 Transformers模型的更多详细信息的[指南](../serialization)。
- en: ONNX Configurations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ONNX配置
- en: 'We provide three abstract classes that you should inherit from, depending on
    the type of model architecture you wish to export:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提供了三个抽象类，您应该根据希望导出的模型架构类型继承其中一个：
- en: Encoder-based models inherit from [OnnxConfig](/docs/transformers/v4.37.2/en/main_classes/onnx#transformers.onnx.OnnxConfig)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于编码器的模型继承自[OnnxConfig](/docs/transformers/v4.37.2/en/main_classes/onnx#transformers.onnx.OnnxConfig)
- en: Decoder-based models inherit from [OnnxConfigWithPast](/docs/transformers/v4.37.2/en/main_classes/onnx#transformers.onnx.OnnxConfigWithPast)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于解码器的模型继承自[OnnxConfigWithPast](/docs/transformers/v4.37.2/en/main_classes/onnx#transformers.onnx.OnnxConfigWithPast)
- en: Encoder-decoder models inherit from [OnnxSeq2SeqConfigWithPast](/docs/transformers/v4.37.2/en/main_classes/onnx#transformers.onnx.OnnxSeq2SeqConfigWithPast)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编码器-解码器模型继承自[OnnxSeq2SeqConfigWithPast](/docs/transformers/v4.37.2/en/main_classes/onnx#transformers.onnx.OnnxSeq2SeqConfigWithPast)
- en: OnnxConfig
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OnnxConfig
- en: '### `class transformers.onnx.OnnxConfig`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.onnx.OnnxConfig`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L68)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L68)'
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Base class for ONNX exportable model describing metadata on how to export the
    model through the ONNX format.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 用于描述通过ONNX格式导出模型的元数据的可导出模型的基类。
- en: '#### `flatten_output_collection_property`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `flatten_output_collection_property`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L424)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L424)'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Returns
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: (Dict[str, Any])
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: （Dict[str, Any])
- en: Outputs with flattened structure and key mapping this new structure.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 具有扁平结构和映射到此新结构的键的输出。
- en: Flatten any potential nested structure expanding the name of the field with
    the index of the element within the structure.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 展平任何潜在的嵌套结构，将字段的名称与结构中元素的索引扩展。
- en: '#### `from_model_config`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_model_config`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L127)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L127)'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Instantiate a OnnxConfig for a specific model
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为特定模型实例化一个OnnxConfig
- en: '#### `generate_dummy_inputs`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `generate_dummy_inputs`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L280)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L280)'
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`batch_size` (`int`, *optional*, defaults to -1) — The batch size to export
    the model for (-1 means dynamic axis).'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`batch_size` (`int`, *可选*，默认为-1) — 用于导出模型的批量大小（-1表示动态轴）。'
- en: '`num_choices` (`int`, *optional*, defaults to -1) — The number of candidate
    answers provided for multiple choice task (-1 means dynamic axis).'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_choices` (`int`, *可选*，默认为-1) — 为多选任务提供的候选答案数量（-1表示动态轴）。'
- en: '`seq_length` (`int`, *optional*, defaults to -1) — The sequence length to export
    the model for (-1 means dynamic axis).'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`seq_length` (`int`, *可选*，默认为-1) — 为导出模型指定的序列长度（-1表示动态轴）。'
- en: '`is_pair` (`bool`, *optional*, defaults to `False`) — Indicate if the input
    is a pair (sentence 1, sentence 2)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`is_pair` (`bool`, *可选*，默认为`False`) — 指示输入是否为一对（句子1，句子2）'
- en: '`framework` (`TensorType`, *optional*, defaults to `None`) — The framework
    (PyTorch or TensorFlow) that the tokenizer will generate tensors for.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`framework` (`TensorType`, *可选*，默认为`None`) — 分词器将为其生成张量的框架（PyTorch或TensorFlow）。'
- en: '`num_channels` (`int`, *optional*, defaults to 3) — The number of channels
    of the generated images.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_channels` (`int`, *可选*，默认为3) — 生成图像的通道数。'
- en: '`image_width` (`int`, *optional*, defaults to 40) — The width of the generated
    images.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image_width` (`int`, *可选*，默认为40) — 生成图像的宽度。'
- en: '`image_height` (`int`, *optional*, defaults to 40) — The height of the generated
    images.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image_height` (`int`, *可选*，默认为40) — 生成图像的高度。'
- en: '`sampling_rate` (`int`, *optional* defaults to 22050) — The sampling rate for
    audio data generation.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sampling_rate` (`int`, *可选* 默认为22050) — 用于音频数据生成的采样率。'
- en: '`time_duration` (`float`, *optional* defaults to 5.0) — Total seconds of sampling
    for audio data generation.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`time_duration` (`float`, *可选* 默认为5.0) — 用于音频数据生成的采样总秒数。'
- en: '`frequency` (`int`, *optional* defaults to 220) — The desired natural frequency
    of generated audio.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`frequency` (`int`, *可选* 默认为220) — 生成音频的期望自然频率。'
- en: Generate inputs to provide to the ONNX exporter for the specific framework
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 生成要提供给特定框架的ONNX导出器的输入
- en: '#### `generate_dummy_inputs_onnxruntime`'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `generate_dummy_inputs_onnxruntime`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L400)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L400)'
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`reference_model_inputs` ([`Mapping[str, Tensor]`) — Reference inputs for the
    model.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reference_model_inputs`（[`Mapping[str, Tensor]`）— 模型的参考输入。'
- en: Returns
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Mapping[str, Tensor]`'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`Mapping[str, Tensor]`'
- en: The mapping holding the kwargs to provide to the model’s forward function
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 保存要提供给模型前向函数的kwargs的映射
- en: Generate inputs for ONNX Runtime using the reference model inputs. Override
    this to run inference with seq2seq models which have the encoder and decoder exported
    as separate ONNX files.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用参考模型输入为ONNX Runtime生成输入。覆盖此选项以使用将编码器和解码器导出为单独的ONNX文件的seq2seq模型进行推理。
- en: '#### `use_external_data_format`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `use_external_data_format`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L241)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L241)'
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Flag indicating if the model requires using external data format
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 标志，指示模型是否需要使用外部数据格式
- en: OnnxConfigWithPast
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OnnxConfigWithPast
- en: '### `class transformers.onnx.OnnxConfigWithPast`'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.onnx.OnnxConfigWithPast`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L443)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L443)'
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '#### `fill_with_past_key_values_`'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`fill_with_past_key_values_`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L550)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L550)'
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Fill the input_or_outputs mapping with past_key_values dynamic axes considering.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑填充具有过去键值动态轴的输入或输出映射。
- en: '#### `with_past`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `with_past`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L454)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L454)'
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Instantiate a OnnxConfig with `use_past` attribute set to True
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个具有 `use_past` 属性设置为 True 的 OnnxConfig
- en: OnnxSeq2SeqConfigWithPast
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OnnxSeq2SeqConfigWithPast
- en: '### `class transformers.onnx.OnnxSeq2SeqConfigWithPast`'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.onnx.OnnxSeq2SeqConfigWithPast`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L590)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/config.py#L590)'
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: ONNX Features
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ONNX 特性
- en: Each ONNX configuration is associated with a set of *features* that enable you
    to export models for different types of topologies or tasks.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 ONNX 配置都与一组 *特性* 关联，使您能够为不同类型的拓扑或任务导出模型。
- en: FeaturesManager
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FeaturesManager
- en: '### `class transformers.onnx.FeaturesManager`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.onnx.FeaturesManager`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L85)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L85)'
- en: '[PRE10]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '#### `check_supported_model_or_raise`'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`check_supported_model_or_raise`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L711)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L711)'
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Check whether or not the model has the requested features.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 检查模型是否具有请求的特征。
- en: '#### `determine_framework`'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `determine_framework`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L628)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L628)'
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Parameters
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model` (`str`) — The name of the model to export.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model` (`str`) — 要导出的模型的名称。'
- en: '`framework` (`str`, *optional*, defaults to `None`) — The framework to use
    for the export. See above for priority if none provided.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`framework` (`str`, *可选*, 默认为 `None`) — 用于导出的框架。如果未提供，则参见上文的优先级。'
- en: Determines the framework to use for the export.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 确定用于导出的框架。
- en: 'The priority is in the following order:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级按以下顺序排列：
- en: User input via `framework`.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 `framework` 的用户输入。
- en: If local checkpoint is provided, use the same framework as the checkpoint.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果提供了本地检查点，则使用与检查点相同的框架。
- en: Available framework in environment, with priority given to PyTorch
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 环境中可用的框架，优先考虑 PyTorch。
- en: '#### `get_config`'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_config`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L736)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L736)'
- en: '[PRE13]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Parameters
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_type` (`str`) — The model type to retrieve the config for.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_type` (`str`) — 要检索配置的模型类型。'
- en: '`feature` (`str`) — The feature to retrieve the config for.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`feature` (`str`) — 要检索配置的特征。'
- en: Returns
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`OnnxConfig`'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`OnnxConfig`'
- en: config for the combination
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 用于组合的配置
- en: Gets the OnnxConfig for a model_type and feature combination.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 获取模型类型和特征组合的 OnnxConfig。
- en: '#### `get_model_class_for_feature`'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_model_class_for_feature`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L601)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L601)'
- en: '[PRE14]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Parameters
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`feature` (`str`) — The feature required.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`feature` (`str`) — 所需的特征。'
- en: '`framework` (`str`, *optional*, defaults to `"pt"`) — The framework to use
    for the export.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`framework` (`str`, *可选*, 默认为 `"pt"`) — 用于导出的框架。'
- en: Attempts to retrieve an AutoModel class from a feature name.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试从特征名称中检索 AutoModel 类。
- en: '#### `get_model_from_feature`'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_model_from_feature`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L678)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L678)'
- en: '[PRE15]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Parameters
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`feature` (`str`) — The feature required.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`feature` (`str`) — 所需的特征。'
- en: '`model` (`str`) — The name of the model to export.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model` (`str`) — 要导出的模型的名称。'
- en: '`framework` (`str`, *optional*, defaults to `None`) — The framework to use
    for the export. See `FeaturesManager.determine_framework` for the priority should
    none be provided.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`framework` (`str`, *可选*, 默认为 `None`) — 用于导出的框架。如果未提供，则参见 `FeaturesManager.determine_framework`
    的优先级。'
- en: Attempts to retrieve a model from a model’s name and the feature to be enabled.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试从模型的名称和要启用的特征中检索模型。
- en: '#### `get_supported_features_for_model_type`'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_supported_features_for_model_type`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L556)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/onnx/features.py#L556)'
- en: '[PRE16]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Parameters
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_type` (`str`) — The model type to retrieve the supported features for.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_type` (`str`) — 要检索支持特征的模型类型。'
- en: '`model_name` (`str`, *optional*) — The name attribute of the model object,
    only used for the exception message.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_name` (`str`, *可选*) — 模型对象的名称属性，仅用于异常消息。'
- en: Tries to retrieve the feature -> OnnxConfig constructor map from the model type.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试从模型类型中检索特征 -> OnnxConfig 构造函数映射。
