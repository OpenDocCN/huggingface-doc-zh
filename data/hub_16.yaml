- en: Uploading models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传模型
- en: 'Original text: [https://huggingface.co/docs/hub/models-uploading](https://huggingface.co/docs/hub/models-uploading)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/hub/models-uploading](https://huggingface.co/docs/hub/models-uploading)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: To upload models to the Hub, you’ll need to create an account at [Hugging Face](https://huggingface.co/join).
    Models on the Hub are [Git-based repositories](./repositories), which give you
    versioning, branches, discoverability and sharing features, integration with dozens
    of libraries, and more! You have control over what you want to upload to your
    repository, which could include checkpoints, configs, and any other files.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要将模型上传到Hub，您需要在[Hugging Face](https://huggingface.co/join)上创建一个帐户。Hub上的模型是[基于Git的存储库](./repositories)，为您提供版本控制、分支、可发现性和共享功能、与数十个库的集成等功能！您可以控制您想要上传到存储库的内容，包括检查点、配置文件和任何其他文件。
- en: You can link repositories with an individual user, such as [osanseviero/fashion_brands_patterns](https://huggingface.co/osanseviero/fashion_brands_patterns),
    or with an organization, such as [facebook/bart-large-xsum](https://huggingface.co/facebook/bart-large-xsum).
    Organizations can collect models related to a company, community, or library!
    If you choose an organization, the model will be featured on the organization’s
    page, and every member of the organization will have the ability to contribute
    to the repository. You can create a new organization [here](https://huggingface.co/organizations/new).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将存储库与个人用户（例如[osanseviero/fashion_brands_patterns](https://huggingface.co/osanseviero/fashion_brands_patterns)）或组织（例如[facebook/bart-large-xsum](https://huggingface.co/facebook/bart-large-xsum)）关联起来。组织可以收集与公司、社区或库相关的模型！如果选择组织，该模型将显示在组织的页面上，组织的每个成员都将有能力为存储库做出贡献。您可以在[这里](https://huggingface.co/organizations/new)创建一个新组织。
- en: There are several ways to upload models to the Hub, described below.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种上传模型到Hub的方法，如下所述。
- en: In case your model comes from a library that has [built-in support](#upload-from-a-library-with-built-in-support),
    one can use the existing methods.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的模型来自具有[内置支持](#upload-from-a-library-with-built-in-support)的库，可以使用现有的方法。
- en: In case your model is a custom PyTorch model, the recommended way is to leverage
    the [huggingface_hub](#using-the-huggingface_hub-client-library) Python library
    as it allows to add `from_pretrained`, `push_to_hub` and [automated download metrics](https://huggingface.co/docs/hub/models-download-stats)
    capabilities to your models, just like models in the Transformers, Diffusers and
    Timm libraries.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的模型是一个自定义的PyTorch模型，推荐的方式是利用[huggingface_hub](#using-the-huggingface_hub-client-library)
    Python库，因为它允许为您的模型添加`from_pretrained`、`push_to_hub`和[自动下载指标](https://huggingface.co/docs/hub/models-download-stats)功能，就像Transformers、Diffusers和Timm库中的模型一样。
- en: In addition to programmatic uploads, you can always use the [web interface](#using-the-web-interface).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了编程上传之外，您还可以使用[Web界面](#using-the-web-interface)。
- en: Once your model is uploaded, we suggest adding a [Model Card](./model-cards)
    to your repo to document your model.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的模型上传完成，我们建议在您的存储库中添加一个[模型卡片](./model-cards)来记录您的模型。
- en: Using the web interface
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Web界面
- en: 'To create a brand new model repository, visit [huggingface.co/new](http://huggingface.co/new).
    Then follow these steps:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个全新的模型存储库，请访问[huggingface.co/new](http://huggingface.co/new)。然后按照以下步骤操作：
- en: 'In the “Files and versions” tab, select “Add File” and specify “Upload File”:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“文件和版本”选项卡中，选择“添加文件”并指定“上传文件”：
- en: '![](../Images/05d067eff6f48559fd7637532aade95a.png) ![](../Images/104f4d60f50bf58e45566d4dec230f67.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/05d067eff6f48559fd7637532aade95a.png) ![](../Images/104f4d60f50bf58e45566d4dec230f67.png)'
- en: 'From there, select a file from your computer to upload and leave a helpful
    commit message to know what you are uploading:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从那里，从您的计算机中选择一个文件进行上传，并留下一个有用的提交消息，以了解您正在上传的内容：
- en: '![](../Images/a505988ee5f759007b67b08ac7401ac7.png) ![](../Images/a1cabff5b3ec730a356110dc307723d9.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a505988ee5f759007b67b08ac7401ac7.png) ![](../Images/a1cabff5b3ec730a356110dc307723d9.png)'
- en: Afterwards, click **Commit changes** to upload your model to the Hub!
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，点击**提交更改**将您的模型上传到Hub！
- en: Inspect files and history
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查文件和历史记录
- en: You can check your repository with all the recently added files!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以检查您的存储库，查看所有最近添加的文件！
- en: '![](../Images/9953cf6a131114707f2d2eedafedb1a9.png) ![](../Images/8ad3b293db30a82c311663ee674a55ce.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9953cf6a131114707f2d2eedafedb1a9.png) ![](../Images/8ad3b293db30a82c311663ee674a55ce.png)'
- en: 'The UI allows you to explore the model files and commits and to see the diff
    introduced by each commit:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该界面允许您浏览模型文件和提交，并查看每个提交引入的差异：
- en: '![](../Images/a7fa82b615cd013f4ac87f5da7165a86.png) ![](../Images/1d621a105d21b0df6db4627d4778aa28.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a7fa82b615cd013f4ac87f5da7165a86.png) ![](../Images/1d621a105d21b0df6db4627d4778aa28.png)'
- en: Add metadata
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加元数据
- en: 'You can add metadata to your model card. You can specify:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以向您的模型卡片添加元数据。您可以指定：
- en: the type of task this model is for, enabling widgets and the Inference API.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个模型是为哪种类型的任务，启用小部件和推理API。
- en: the used library (`transformers`, `spaCy`, etc.)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所使用的库（`transformers`、`spaCy`等）
- en: the language
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语言
- en: the dataset
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据集
- en: metrics
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指标
- en: license
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许可证
- en: a lot more!
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有更多！
- en: Read more about model tags [here](./model-cards#model-card-metadata).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在[model-cards#model-card-metadata](./model-cards#model-card-metadata)中阅读有关模型标签的更多信息。
- en: Add TensorBoard traces
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加TensorBoard跟踪
- en: Any repository that contains TensorBoard traces (filenames that contain `tfevents`)
    is categorized with the [`TensorBoard` tag](https://huggingface.co/models?filter=tensorboard).
    As a convention, we suggest that you save traces under the `runs/` subfolder.
    The “Training metrics” tab then makes it easy to review charts of the logged variables,
    like the loss or the accuracy.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 任何包含TensorBoard跟踪（文件名包含`tfevents`的文件）的存储库都将被归类为[`TensorBoard`标签](https://huggingface.co/models?filter=tensorboard)。作为一种惯例，我们建议您将跟踪保存在`runs/`子文件夹下。然后，“训练指标”选项卡可以轻松查看记录变量的图表，如损失或准确性。
- en: '![](../Images/66e799c113febddf3a1a51b7236afec6.png) ![](../Images/bb1f38ca6cca241c3b6e031003265435.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/66e799c113febddf3a1a51b7236afec6.png) ![](../Images/bb1f38ca6cca241c3b6e031003265435.png)'
- en: Models trained with 🤗 Transformers will generate [TensorBoard traces](https://huggingface.co/docs/transformers/main_classes/callback#transformers.integrations.TensorBoardCallback)
    by default if [`tensorboard`](https://pypi.org/project/tensorboard/) is installed.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用🤗 Transformers训练的模型将默认生成[TensorBoard traces](https://huggingface.co/docs/transformers/main_classes/callback#transformers.integrations.TensorBoardCallback)，如果安装了[`tensorboard`](https://pypi.org/project/tensorboard/)。
- en: Upload from a library with built-in support
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从具有内置支持的库上传
- en: 'First check if your model is from a library that has built-in support to push
    to/load from the Hub, like Transformers, Diffusers, Timm, Asteroid, etc.: [https://huggingface.co/docs/hub/models-libraries](https://huggingface.co/docs/hub/models-libraries).
    Below we’ll show how easy this is for a library like Transformers:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 首先检查您的模型是否来自具有内置支持以推送到/从Hub加载的库，例如Transformers、Diffusers、Timm、Asteroid等：[https://huggingface.co/docs/hub/models-libraries](https://huggingface.co/docs/hub/models-libraries)。下面我们将展示如何对于Transformers这样的库来说这是多么简单的事情：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Upload a PyTorch model using huggingface_hub
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用huggingface_hub上传PyTorch模型
- en: In case your model is a (custom) PyTorch model, you can leverage the `PyTorchModelHubMixin`
    [class](https://huggingface.co/docs/huggingface_hub/package_reference/mixins#huggingface_hub.PyTorchModelHubMixin)
    available in the [huggingface_hub](https://github.com/huggingface/huggingface_hub)
    Python library. It is a minimal class which adds `from_pretrained` and `push_to_hub`
    capabilities to any `nn.Module`, along with download metrics.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的模型是（自定义）PyTorch模型，您可以利用[huggingface_hub](https://github.com/huggingface/huggingface_hub)
    Python库中提供的`PyTorchModelHubMixin`[类](https://huggingface.co/docs/huggingface_hub/package_reference/mixins#huggingface_hub.PyTorchModelHubMixin)。这是一个最小的类，它为任何`nn.Module`添加了`from_pretrained`和`push_to_hub`功能，以及下载指标。
- en: 'Here is how to use it (assuming you have run `pip install huggingface_hub`):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何使用它（假设您已经运行了`pip install huggingface_hub`）：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As can be seen, the only thing required is to define all hyperparameters regarding
    the model architecture (such as hidden size, number of classes, dropout probability,
    etc.) in a Python dictionary often called the `config`. Next, you can define a
    class which takes the `config` as keyword argument in its init.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 正如所见，唯一需要做的是在Python字典中定义有关模型架构的所有超参数（例如隐藏大小、类数、丢失概率等）。接下来，您可以定义一个类，该类以`config`作为关键字参数在其init中。
- en: 'This comes with automated download metrics, meaning that you’ll be able to
    see how many times the model is downloaded, the same way they are available for
    models integrated natively in the Transformers, Diffusers or Timm libraries. With
    this mixin class, each separate checkpoint is stored on the Hub in a single repository
    consisting of 2 files:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这带有自动化的下载指标，这意味着您将能够看到模型被下载的次数，就像它们对于原生集成在Transformers、Diffusers或Timm库中的模型一样。使用这个混合类，每个单独的检查点都存储在Hub中的一个由2个文件组成的存储库中：
- en: a `pytorch_model.bin` or `model.safetensors` file containing the weights
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含权重的`pytorch_model.bin`或`model.safetensors`文件
- en: 'a `config.json` file which is a serialized version of the model configuration.
    This class is used for counting download metrics: everytime a user calls `from_pretrained`
    to load a `config.json`, the count goes up by one. See [this guide](https://huggingface.co/docs/hub/models-download-stats)
    regarding automated download metrics.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`config.json`文件，它是模型配置的序列化版本。此类用于计算下载指标：每当用户调用`from_pretrained`加载`config.json`时，计数会增加一次。请参阅有关自动下载指标的[此指南](https://huggingface.co/docs/hub/models-download-stats)。
- en: It’s recommended to add a model card to each checkpoint so that people can read
    what the model is about, have a link to the paper, etc.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 建议为每个检查点添加一个模型卡片，以便人们可以阅读模型的相关信息，有论文链接等。
- en: '![drawing](../Images/e398470724042db1452c69cf76e5f06e.png) Example [repository](https://huggingface.co/LiheYoung/depth_anything_vitl14)
    that leverages PyTorchModelHubMixin. Downloads are shown on the right.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![drawing](../Images/e398470724042db1452c69cf76e5f06e.png) 利用PyTorchModelHubMixin的示例[存储库](https://huggingface.co/LiheYoung/depth_anything_vitl14)。下载量显示在右侧。'
- en: Visit [the huggingface_hub’s documentation](https://huggingface.co/docs/huggingface_hub/guides/integrations)
    to learn more.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[huggingface_hub文档](https://huggingface.co/docs/huggingface_hub/guides/integrations)以了解更多信息。
- en: 'Alternatively, one can also simply programmatically upload files or folders
    to the hub: [https://huggingface.co/docs/huggingface_hub/guides/upload](https://huggingface.co/docs/huggingface_hub/guides/upload).'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，也可以简单地以编程方式将文件或文件夹上传到hub：[https://huggingface.co/docs/huggingface_hub/guides/upload](https://huggingface.co/docs/huggingface_hub/guides/upload)。
- en: Using Git
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Git
- en: Finally, since model repos are just Git repositories, you can also use Git to
    push your model files to the Hub. Follow the guide on [Getting Started with Repositories](repositories-getting-started#adding-files-to-a-repository-terminalterminal)
    to learn about using the `git` CLI to commit and push your models.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，由于模型存储库只是Git存储库，您也可以使用Git将模型文件推送到Hub。请按照[开始使用存储库](repositories-getting-started#adding-files-to-a-repository-terminalterminal)指南学习如何使用`git`
    CLI提交和推送您的模型。
