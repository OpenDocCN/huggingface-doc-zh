- en: Shap-E
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shap-E
- en: 'Original text: [https://huggingface.co/docs/diffusers/using-diffusers/shap-e](https://huggingface.co/docs/diffusers/using-diffusers/shap-e)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/diffusers/using-diffusers/shap-e](https://huggingface.co/docs/diffusers/using-diffusers/shap-e)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Shap-E is a conditional model for generating 3D assets which could be used
    for video game development, interior design, and architecture. It is trained on
    a large dataset of 3D assets, and post-processed to render more views of each
    object and produce 16K instead of 4K point clouds. The Shap-E model is trained
    in two steps:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Shap-E是用于生成3D资产的条件模型，可用于视频游戏开发、室内设计和建筑。它在大量3D资产数据集上进行训练，并进行后处理以渲染每个对象的更多视图，并生成16K而不是4K点云。Shap-E模型经过两步训练：
- en: an encoder accepts the point clouds and rendered views of a 3D asset and outputs
    the parameters of implicit functions that represent the asset
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编码器接受点云和渲染视图的3D资产，并输出表示资产的隐式函数的参数
- en: a diffusion model is trained on the latents produced by the encoder to generate
    either neural radiance fields (NeRFs) or a textured 3D mesh, making it easier
    to render and use the 3D asset in downstream applications
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩散模型在编码器产生的潜在变量上进行训练，以生成神经辐射场（NeRFs）或带纹理的3D网格，使得更容易在下游应用中渲染和使用3D资产
- en: This guide will show you how to use Shap-E to start generating your own 3D assets!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南将向您展示如何使用Shap-E开始生成您自己的3D资产！
- en: 'Before you begin, make sure you have the following libraries installed:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，请确保已安装以下库：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Text-to-3D
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本到3D
- en: To generate a gif of a 3D object, pass a text prompt to the [ShapEPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEPipeline).
    The pipeline generates a list of image frames which are used to create the 3D
    object.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成3D对象的gif，请将文本提示传递给[ShapEPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEPipeline)。该管道生成一系列图像帧，用于创建3D对象。
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now use the [export_to_gif()](/docs/diffusers/v0.26.3/en/api/utilities#diffusers.utils.export_to_gif)
    function to turn the list of image frames into a gif of the 3D object.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用[export_to_gif()](/docs/diffusers/v0.26.3/en/api/utilities#diffusers.utils.export_to_gif)函数将图像帧列表转换为3D对象的gif。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/1731548e3bafd24f5633f1aa2dbba775.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1731548e3bafd24f5633f1aa2dbba775.png)'
- en: prompt = "A firecracker"
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 提示 = "一个鞭炮"
- en: '![](../Images/0e99b86ebe2171b5eec061e465ece01d.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0e99b86ebe2171b5eec061e465ece01d.png)'
- en: prompt = "A birthday cupcake"
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 提示 = "一个生日杯子"
- en: Image-to-3D
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像到3D
- en: To generate a 3D object from another image, use the [ShapEImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEImg2ImgPipeline).
    You can use an existing image or generate an entirely new one. Let’s use the [Kandinsky
    2.1](../api/pipelines/kandinsky) model to generate a new image.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从另一幅图像生成3D对象，请使用[ShapEImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEImg2ImgPipeline)。您可以使用现有图像或生成全新的图像。让我们使用[Kandinsky
    2.1](../api/pipelines/kandinsky)模型来生成一个新图像。
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Pass the cheeseburger to the [ShapEImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEImg2ImgPipeline)
    to generate a 3D representation of it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 将奶酪汉堡传递给[ShapEImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEImg2ImgPipeline)以生成其的3D表示。
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/3bd8f6cd764240ee2dfdbf3d1d82155f.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3bd8f6cd764240ee2dfdbf3d1d82155f.png)'
- en: cheeseburger
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 奶酪汉堡包
- en: '![](../Images/13d040413cdeea82e213c9a300bb2e18.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/13d040413cdeea82e213c9a300bb2e18.png)'
- en: 3D cheeseburger
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 3D奶酪汉堡包
- en: Generate mesh
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成网格
- en: Shap-E is a flexible model that can also generate textured mesh outputs to be
    rendered for downstream applications. In this example, you’ll convert the output
    into a `glb` file because the 🤗 Datasets library supports mesh visualization of
    `glb` files which can be rendered by the [Dataset viewer](https://huggingface.co/docs/hub/datasets-viewer#dataset-preview).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Shap-E是一个灵活的模型，还可以生成纹理网格输出以供下游应用渲染。在此示例中，您将将输出转换为`glb`文件，因为🤗数据集库支持`glb`文件的网格可视化，可以由[数据集查看器](https://huggingface.co/docs/hub/datasets-viewer#dataset-preview)渲染。
- en: 'You can generate mesh outputs for both the [ShapEPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEPipeline)
    and [ShapEImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEImg2ImgPipeline)
    by specifying the `output_type` parameter as `"mesh"`:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将`output_type`参数指定为`"mesh"`来为[ShapEPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEPipeline)和[ShapEImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/shap_e#diffusers.ShapEImg2ImgPipeline)生成网格输出：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Use the `export_to_ply()` function to save the mesh output as a `ply` file:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`export_to_ply()`函数将网格输出保存为`ply`文件：
- en: You can optionally save the mesh output as an `obj` file with the `export_to_obj()`
    function. The ability to save the mesh output in a variety of formats makes it
    more flexible for downstream usage!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`export_to_obj()`函数将网格输出保存为`obj`文件。将网格输出保存为各种格式的能力使其在下游用途中更加灵活！
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then you can convert the `ply` file to a `glb` file with the trimesh library:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以使用trimesh库将`ply`文件转换为`glb`文件：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'By default, the mesh output is focused from the bottom viewpoint but you can
    change the default viewpoint by applying a rotation transform:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，网格输出是从底部视角聚焦的，但您可以通过应用旋转变换来更改默认视角：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Upload the mesh file to your dataset repository to visualize it with the Dataset
    viewer!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 将网格文件上传到数据集存储库以使用数据集查看器进行可视化！
- en: '![](../Images/0289665c1f710f01cb60d1ad8a76f38c.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0289665c1f710f01cb60d1ad8a76f38c.png)'
