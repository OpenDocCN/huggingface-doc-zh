- en: Download files from the Hub
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Hub 下载文件
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/guides/download](https://huggingface.co/docs/huggingface_hub/guides/download)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/docs/huggingface_hub/guides/download](https://huggingface.co/docs/huggingface_hub/guides/download)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'The `huggingface_hub` library provides functions to download files from the
    repositories stored on the Hub. You can use these functions independently or integrate
    them into your own library, making it more convenient for your users to interact
    with the Hub. This guide will show you how to:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`huggingface_hub` 库提供了从存储在 Hub 上的存储库下载文件的函数。您可以独立使用这些函数，也可以将它们集成到您自己的库中，使用户更方便地与
    Hub 交互。本指南将向您展示如何：'
- en: Download and cache a single file.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并缓存单个文件。
- en: Download and cache an entire repository.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并缓存整个存储库。
- en: Download files to a local folder.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载文件到本地文件夹。
- en: Download a single file
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载单个文件
- en: The [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    function is the main function for downloading files from the Hub. It downloads
    the remote file, caches it on disk (in a version-aware way), and returns its local
    file path.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    函数是从 Hub 下载文件的主要函数。它下载远程文件，在磁盘上缓存它（以版本感知方式），并返回其本地文件路径。'
- en: The returned filepath is a pointer to the HF local cache. Therefore, it is important
    to not modify the file to avoid having a corrupted cache. If you are interested
    in getting to know more about how files are cached, please refer to our [caching
    guide](./manage-cache).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的文件路径是指向 HF 本地缓存的指针。因此，重要的是不要修改文件以避免缓存损坏。如果您想了解有关文件如何被缓存的更多信息，请参考我们的 [缓存指南](./manage-cache)。
- en: From latest version
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从最新版本开始
- en: Select the file to download using the `repo_id`, `repo_type` and `filename`
    parameters. By default, the file will be considered as being part of a `model`
    repo.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `repo_id`、`repo_type` 和 `filename` 参数选择要下载的文件。默认情况下，该文件将被视为 `model` 存储库的一部分。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: From specific version
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从特定版本开始
- en: 'By default, the latest version from the `main` branch is downloaded. However,
    in some cases you want to download a file at a particular version (e.g. from a
    specific branch, a PR, a tag or a commit hash). To do so, use the `revision` parameter:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，从 `main` 分支下载最新版本。但是，在某些情况下，您可能希望下载特定版本的文件（例如，从特定分支、PR、标签或提交哈希）。为此，请使用
    `revision` 参数：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Note:** When using the commit hash, it must be the full-length hash instead
    of a 7-character commit hash.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 当使用提交哈希时，必须使用完整长度的哈希而不是 7 个字符的提交哈希。'
- en: Construct a download URL
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建下载 URL
- en: In case you want to construct the URL used to download a file from a repo, you
    can use [hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url)
    which returns a URL. Note that it is used internally by [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想构建用于从存储库下载文件的 URL，可以使用 [hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url)
    返回一个 URL。请注意，它在内部被 [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    使用。
- en: Download an entire repository
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载整个存储库
- en: '[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    downloads an entire repository at a given revision. It uses internally [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    which means all downloaded files are also cached on your local disk. Downloads
    are made concurrently to speed-up the process.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    在给定的修订版本下载整个存储库。它内部使用 [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)，这意味着所有下载的文件也会被缓存在本地磁盘上。下载是并发进行的以加快进程速度。'
- en: 'To download a whole repository, just pass the `repo_id` and `repo_type`:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载整个存储库，只需传递 `repo_id` 和 `repo_type`：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    downloads the latest revision by default. If you want a specific repository revision,
    use the `revision` parameter:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    默认下载最新的修订版本。如果您想要特定的存储库修订版本，请使用 `revision` 参数：'
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Filter files to download
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 筛选要下载的文件
- en: '[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    provides an easy way to download a repository. However, you don’t always want
    to download the entire content of a repository. For example, you might want to
    prevent downloading all `.bin` files if you know you’ll only use the `.safetensors`
    weights. You can do that using `allow_patterns` and `ignore_patterns` parameters.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    提供了一个简单的方法来下载存储库。但是，并不总是希望下载整个存储库的内容。例如，如果您知道只会使用 `.safetensors` 权重而不是所有 `.bin`
    文件，则可能希望阻止下载所有 `.bin` 文件。您可以使用 `allow_patterns` 和 `ignore_patterns` 参数来实现这一点。'
- en: These parameters accept either a single pattern or a list of patterns. Patterns
    are Standard Wildcards (globbing patterns) as documented [here](https://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm).
    The pattern matching is based on [`fnmatch`](https://docs.python.org/3/library/fnmatch.html).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数接受单个模式或模式列表。模式是标准通配符（globbing patterns），如此处所述 [here](https://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm)。模式匹配基于
    [`fnmatch`](https://docs.python.org/3/library/fnmatch.html)。
- en: 'For example, you can use `allow_patterns` to only download JSON configuration
    files:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以使用 `allow_patterns` 仅下载 JSON 配置文件：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'On the other hand, `ignore_patterns` can exclude certain files from being downloaded.
    The following example ignores the `.msgpack` and `.h5` file extensions:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，`ignore_patterns` 可以排除某些文件不被下载。以下示例忽略了 `.msgpack` 和 `.h5` 文件扩展名：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Finally, you can combine both to precisely filter your download. Here is an
    example to download all json and markdown files except `vocab.json`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您可以结合两者来精确过滤您的下载。以下是一个示例，用于下载所有json和markdown文件，除了`vocab.json`。
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Download file(s) to local folder
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载文件到本地文件夹
- en: The recommended (and default) way to download files from the Hub is to use the
    [cache-system](./manage-cache). You can define your cache location by setting
    `cache_dir` parameter (both in [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    and [snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从Hub下载文件的推荐（也是默认）方式是使用[缓存系统](./manage-cache)。您可以通过设置`cache_dir`参数（在[hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)和[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)中）来定义缓存位置。
- en: 'However, in some cases you want to download files and move them to a specific
    folder. This is useful to get a workflow closer to what `git` commands offer.
    You can do that using the `local_dir` and `local_dir_use_symlinks` parameters:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在某些情况下，您可能希望下载文件并将它们移动到特定文件夹。这对于获得与`git`命令提供的工作流程更接近的工作流程是有用的。您可以使用`local_dir`和`local_dir_use_symlinks`参数来实现这一点：
- en: '`local_dir` must be a path to a folder on your system. The downloaded files
    will keep the same file structure as in the repo. For example if `filename="data/train.csv"`
    and `local_dir="path/to/folder"`, then the returned filepath will be `"path/to/folder/data/train.csv"`.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_dir`必须是系统上文件夹的路径。下载的文件将保持与存储库中相同的文件结构。例如，如果`filename="data/train.csv"`和`local_dir="path/to/folder"`，那么返回的文件路径将是`"path/to/folder/data/train.csv"`。'
- en: '`local_dir_use_symlinks` defines how the file must be saved in your local folder.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_dir_use_symlinks`定义了文件在本地文件夹中如何保存。'
- en: The default behavior (`"auto"`) is to duplicate small files (<5MB) and use symlinks
    for bigger files. Symlinks allow to optimize both bandwidth and disk usage. However
    manually editing a symlinked file might corrupt the cache, hence the duplication
    for small files. The 5MB threshold can be configured with the `HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`
    environment variable.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认行为(`"auto"`)是复制小文件(<5MB)并对较大文件使用符号链接。符号链接可以优化带宽和磁盘使用。但是手动编辑符号链接文件可能会损坏缓存，因此对于小文件会进行复制。5MB的阈值可以通过`HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`环境变量进行配置。
- en: If `local_dir_use_symlinks=True` is set, all files are symlinked for an optimal
    disk space optimization. This is for example useful when downloading a huge dataset
    with thousands of small files.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设置了`local_dir_use_symlinks=True`，则所有文件都将链接为最佳磁盘空间优化。例如，在下载包含成千上万个小文件的大型数据集时，这是非常有用的。
- en: Finally, if you don’t want symlinks at all you can disable them (`local_dir_use_symlinks=False`).
    The cache directory will still be used to check wether the file is already cached
    or not. If already cached, the file is **duplicated** from the cache (i.e. saves
    bandwidth but increases disk usage). If the file is not already cached, it will
    be downloaded and moved directly to the local dir. This means that if you need
    to reuse it somewhere else later, it will be **re-downloaded**.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，如果您根本不想要符号链接，可以禁用它们(`local_dir_use_symlinks=False`)。缓存目录仍将用于检查文件是否已缓存。如果已经缓存，文件将从缓存中**复制**（即节省带宽但增加磁盘使用）。如果文件尚未缓存，它将被直接下载并移动到本地目录。这意味着如果以后需要在其他地方重用它，它将被**重新下载**。
- en: Here is a table that summarizes the different options to help you choose the
    parameters that best suit your use case.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个总结不同选项的表格，以帮助您选择最适合您用例的参数。
- en: '| Parameters | File already cached | Returned path | Can read path? | Can save
    to path? | Optimized bandwidth | Optimized disk usage |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 文件已缓存 | 返回的路径 | 可读取路径？ | 可保存到路径？ | 优化带宽 | 优化磁盘使用 |'
- en: '| --- | :-: | :-: | :-: | :-: | :-: | :-: |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| --- | :-: | :-: | :-: | :-: | :-: | :-: |'
- en: '| `local_dir=None` |  | symlink in cache | ✅ | ❌ *(save would corrupt the cache)*
    | ✅ | ✅ |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `local_dir=None` |  | 缓存中的符号链接 | ✅ | ❌ *(保存会损坏缓存)* | ✅ | ✅ |'
- en: '| `local_dir="path/to/folder"` `local_dir_use_symlinks="auto"` |  | file or
    symlink in folder | ✅ | ✅ *(for small files)* ⚠️ *(for big files do not resolve
    path before saving)* | ✅ | ✅ |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `local_dir="path/to/folder"` `local_dir_use_symlinks="auto"` |  | 文件或符号链接在文件夹中
    | ✅ | ✅ *(对于小文件)* ⚠️ *(对于大文件在保存前不要解析路径)* | ✅ | ✅ |'
- en: '| `local_dir="path/to/folder"` `local_dir_use_symlinks=True` |  | symlink in
    folder | ✅ | ⚠️ *(do not resolve path before saving)* | ✅ | ✅ |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `local_dir="path/to/folder"` `local_dir_use_symlinks=True` |  | 文件夹中的符号链接
    | ✅ | ⚠️ *(保存前不要解析路径)* | ✅ | ✅ |'
- en: '| `local_dir="path/to/folder"` `local_dir_use_symlinks=False` | No | file in
    folder | ✅ | ✅ | ❌ *(if re-run, file is re-downloaded)* | ⚠️ (multiple copies
    if ran in multiple folders) |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `local_dir="path/to/folder"` `local_dir_use_symlinks=False` | 否 | 文件在文件夹中
    | ✅ | ✅ | ❌ *(重新运行时，文件将被重新下载)* | ⚠️ (如果在多个文件夹中运行，则会有多个副本) |'
- en: '| `local_dir="path/to/folder"` `local_dir_use_symlinks=False` | Yes | file
    in folder | ✅ | ✅ | ⚠️ *(file has to be cached first)* | ❌ *(file is duplicated)*
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `local_dir="path/to/folder"` `local_dir_use_symlinks=False` | 是 | 文件在文件夹中
    | ✅ | ✅ | ⚠️ *(文件必须先缓存)* | ❌ *(文件会重复)* |'
- en: '**Note:** if you are on a Windows machine, you need to enable developer mode
    or run `huggingface_hub` as admin to enable symlinks. Check out the [cache limitations](../guides/manage-cache#limitations)
    section for more details.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**如果您使用的是Windows机器，您需要启用开发者模式或以管理员身份运行`huggingface_hub`以启用符号链接。查看[缓存限制](../guides/manage-cache#limitations)部分以获取更多详细信息。'
- en: Download from the CLI
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从CLI下载
- en: You can use the `huggingface-cli download` command from the terminal to directly
    download files from the Hub. Internally, it uses the same [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    and [snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    helpers described above and prints the returned path to the terminal.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用终端中的`huggingface-cli download`命令直接从Hub下载文件。在内部，它使用相同的[hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)和[snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)助手描述的方法，并将返回的路径打印到终端。
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can download multiple files at once which displays a progress bar and returns
    the snapshot path in which the files are located:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以同时下载多个文件，显示进度条并返回文件所在的快照路径：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: For more details about the CLI download command, please refer to the [CLI guide](./cli#huggingface-cli-download).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有关CLI下载命令的更多详细信息，请参考[CLI指南](./cli#huggingface-cli-download)。
- en: Faster downloads
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更快的下载速度
- en: If you are running on a machine with high bandwidth, you can increase your download
    speed with [`hf_transfer`](https://github.com/huggingface/hf_transfer), a Rust-based
    library developed to speed up file transfers with the Hub. To enable it, install
    the package (`pip install hf_transfer`) and set `HF_HUB_ENABLE_HF_TRANSFER=1`
    as an environment variable.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在带宽较高的机器上运行，您可以通过[`hf_transfer`](https://github.com/huggingface/hf_transfer)增加下载速度，这是一个基于Rust开发的库，用于加快与Hub的文件传输。要启用它，请安装该软件包（`pip
    install hf_transfer`）并将`HF_HUB_ENABLE_HF_TRANSFER=1`设置为环境变量。
- en: Progress bars are supported in `hf_transfer` starting from version `0.1.4`.
    Consider upgrading (`pip install -U hf-transfer`) if you plan to enable faster
    downloads.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 进度条在`hf_transfer`版本`0.1.4`开始支持。如果您打算启用更快的下载，请考虑升级（`pip install -U hf-transfer`）。
- en: '`hf_transfer` is a power user tool! It is tested and production-ready, but
    it lacks user-friendly features like advanced error handling or proxies. For more
    details, please take a look at this [section](https://huggingface.co/docs/huggingface_hub/hf_transfer).'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`hf_transfer`是一款强大的用户工具！经过测试并已准备投入生产使用，但缺乏像高级错误处理或代理等用户友好功能。有关更多详细信息，请查看此[部分](https://huggingface.co/docs/huggingface_hub/hf_transfer)。'
