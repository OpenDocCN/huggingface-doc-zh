- en: Evaluator
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估器
- en: 'Original text: [https://huggingface.co/docs/evaluate/package_reference/evaluator_classes](https://huggingface.co/docs/evaluate/package_reference/evaluator_classes)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://huggingface.co/docs/evaluate/package_reference/evaluator_classes](https://huggingface.co/docs/evaluate/package_reference/evaluator_classes)'
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The evaluator classes for automatic evaluation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于自动评估的评估器类。
- en: Evaluator classes
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评估器类
- en: 'The main entry point for using the evaluator:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用评估器的主要入口点：
- en: '#### `evaluate.evaluator`'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `evaluate.evaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/__init__.py#L108)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/__init__.py#L108)'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`task` (`str`) — The task defining which evaluator will be returned. Currently
    accepted tasks are:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`task` (`str`) — 定义将返回哪个评估器的任务。当前接受的任务有：'
- en: '`"image-classification"`: will return a [ImageClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.ImageClassificationEvaluator).'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"image-classification"`：将返回一个[ImageClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.ImageClassificationEvaluator)。'
- en: '`"question-answering"`: will return a [QuestionAnsweringEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.QuestionAnsweringEvaluator).'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"question-answering"`：将返回一个[QuestionAnsweringEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.QuestionAnsweringEvaluator)。'
- en: '`"text-classification"` (alias `"sentiment-analysis"` available): will return
    a [TextClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TextClassificationEvaluator).'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"text-classification"`（别名为`"sentiment-analysis"`可用）：将返回一个[TextClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TextClassificationEvaluator)。'
- en: '`"token-classification"`: will return a [TokenClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TokenClassificationEvaluator).'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"token-classification"`：将返回一个[TokenClassificationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.TokenClassificationEvaluator)。'
- en: Returns
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[Evaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.Evaluator)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[Evaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.Evaluator)'
- en: An evaluator suitable for the task.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 适用于该任务的评估器。
- en: Utility factory method to build an [Evaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.Evaluator).
    Evaluators encapsulate a task and a default metric name. They leverage `pipeline`
    functionalify from `transformers` to simplify the evaluation of multiple combinations
    of models, datasets and metrics for a given task.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 实用工厂方法，用于构建一个[Evaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.Evaluator)。评估器封装了一个任务和一个默认的度量名称。它们利用`transformers`中的`pipeline`功能来简化对给定任务的多种模型、数据集和度量的评估。
- en: 'Examples:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The base class for all evaluator classes:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 所有评估器类的基类：
- en: '### `class evaluate.Evaluator`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.Evaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L102)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L102)'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Evaluator class is the class from which all evaluators inherit. Refer to
    this class for methods shared across different evaluators. Base class implementing
    evaluator operations.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 评估器类是所有评估器继承的类。请参考此类以获取不同评估器共享的方法。实现评估器操作的基类。
- en: '#### `check_required_columns`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `check_required_columns`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L295)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L295)'
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`data` (`str` or `Dataset`) — Specifies the dataset we will run evaluation
    on.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str`或`Dataset`) — 指定我们将在其上运行评估的数据集。'
- en: '`columns_names` (`List[str]`) —'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns_names` (`List[str]`) —'
- en: '`List` of column names to check in the dataset. The keys are the arguments
    to the compute() method, —'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在数据集中检查的列名列表。键是传递给compute()方法的参数，—
- en: '`while` the values are the column names to check. —'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当值是要检查的列名时。—
- en: Ensure the columns required for the evaluation are present in the dataset.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 确保数据集中存在用于评估的所需列。
- en: '#### `compute_metric`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute_metric`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L457)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L457)'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Compute and return metrics.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 计算并返回度量。
- en: '#### `get_dataset_split`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_dataset_split`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L312)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L312)'
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`data` (`str`) — Name of dataset'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str`) — 数据集名称'
- en: '`subset` (`str`) — Name of config for datasets with multiple configurations
    (e.g. ‘glue/cola’)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`) — 具有多个配置的数据集的配置名称（例如''glue/cola''）'
- en: '`split` (`str`, defaults to None) — Split to use'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`，默认为None）— 要使用的拆分'
- en: Returns
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`split`'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`split`'
- en: '`str` containing which split to use'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 包含要使用的拆分的`str`
- en: Infers which split to use if None is given.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未给出None，则推断要使用的拆分。
- en: '#### `load_data`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `load_data`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L329)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L329)'
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`data` (`Dataset` or `str`, defaults to None) — Specifies the dataset we will
    run evaluation on. If it is of'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data`（`Dataset`或`str`，默认为None）— 指定我们将在其上运行评估的数据集。如果它是'
- en: '`type` `str`, we treat it as the dataset name, and load it. Otherwise we assume
    it represents a pre-loaded dataset. —'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type` `str`，我们将其视为数据集名称，并加载它。否则，我们假设它表示一个预加载的数据集。—'
- en: '`subset` (`str`, defaults to None) — Specifies dataset subset to be passed
    to `name` in `load_dataset`. To be used with datasets with several configurations
    (e.g. glue/sst2).'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`，默认为None）— 指定要传递给`load_dataset`中的`name`的数据集子集。用于具有多个配置的数据集（例如glue/sst2）。'
- en: '`split` (`str`, defaults to None) — User-defined dataset split by name (e.g.
    train, validation, test). Supports slice-split (test[:n]). If not defined and
    data is a `str` type, will automatically select the best one via `choose_split()`.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`，默认为None）— 用户定义的数据集拆分名称（例如train，validation，test）。支持切片拆分（test[:n]）。如果未定义且数据为`str`类型，则将通过`choose_split()`自动选择最佳拆分。'
- en: Returns
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: data (`Dataset`)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 数据（`Dataset`）
- en: Loaded dataset which will be used for evaluation.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 将用于评估的加载的数据集。
- en: Load dataset with given subset and split.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用给定的子集和拆分加载数据集。
- en: '#### `predictions_processor`'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `predictions_processor`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L211)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L211)'
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: A core method of the `Evaluator` class, which processes the pipeline outputs
    for compatibility with the metric.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`Evaluator`类的核心方法，用于处理与度量兼容的管道输出。'
- en: '#### `prepare_data`'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `prepare_data`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L356)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L356)'
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`data` (`Dataset`) — Specifies the dataset we will run evaluation on.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`Dataset`) — 指定我们将在其上运行评估的数据集。'
- en: '`input_column` (`str`, defaults to `"text"`) — the name of the column containing
    the text feature in the dataset specified by `data`.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_column` (`str`，默认为`"text"`) — 数据集中包含文本特征的列的名称，由`data`指定。'
- en: '`label_column` (`str`, defaults to `"label"`) — the name of the column containing
    the labels in the dataset specified by `data`.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_column` (`str`，默认为`"label"`) — 数据集中包含标签的列的名称，由`data`指定。'
- en: Returns
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`dict`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`dict`'
- en: 'metric inputs. `list`: pipeline inputs.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 度量输入。`list`：管道输入。
- en: Prepare data.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 准备数据。
- en: '#### `prepare_metric`'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `prepare_metric`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L427)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L427)'
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric` (`str`或`EvaluationModule`，默认为`None`) — 指定我们在评估器中使用的度量。如果是`str`类型，则将其视为度量名称，并加载它。否则，我们假设它表示预加载的度量。'
- en: Prepare metric.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 准备度量。
- en: '#### `prepare_pipeline`'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `prepare_pipeline`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L375)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L375)'
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Parameters
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, —'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline` (`str`或`Pipeline`或`Callable`或`PreTrainedModel`或`TFPreTrainedModel`，—'
- en: '`defaults` to `None`) — If the argument in not specified, we initialize the
    default pipeline for the task. If the argument is of the type `str` or is a model
    instance, we use it to initialize a new `Pipeline` with the given model. Otherwise
    we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`defaults`为`None`) — 如果未指定参数，则我们为任务初始化默认管道。如果参数是`str`类型或是模型实例，则我们使用它来初始化具有给定模型的新`Pipeline`。否则，我们假设参数指定了一个预初始化的管道。'
- en: '`preprocessor` (`PreTrainedTokenizerBase` or `FeatureExtractionMixin`, *optional*,
    defaults to `None`) — Argument can be used to overwrite a default preprocessor
    if `model_or_pipeline` represents a model for which we build a pipeline. If `model_or_pipeline`
    is `None` or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`preprocessor` (`PreTrainedTokenizerBase`或`FeatureExtractionMixin`，*可选*，默认为`None`)
    — 如果`model_or_pipeline`表示我们构建管道的模型，则可以使用该参数来覆盖默认的预处理器。如果`model_or_pipeline`为`None`或预初始化的管道，则忽略此参数。'
- en: Prepare pipeline.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 准备管道。
- en: The task specific evaluators
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 任务特定的评估器
- en: ImageClassificationEvaluator
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像分类评估器
- en: '### `class evaluate.ImageClassificationEvaluator`'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.ImageClassificationEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/image_classification.py#L45)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/image_classification.py#L45)'
- en: '[PRE11]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Image classification evaluator. This image classification evaluator can currently
    be loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `image-classification`. Methods in this class assume
    a data format compatible with the `ImageClassificationPipeline`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分类评估器。此图像分类评估器目前可以从[evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)中使用默认任务名称`image-classification`加载。此类中的方法假定数据格式与`ImageClassificationPipeline`兼容。
- en: '#### `compute`'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/image_classification.py#L64)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/image_classification.py#L64)'
- en: '[PRE12]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Parameters
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline` (`str`或`Pipeline`或`Callable`或`PreTrainedModel`或`TFPreTrainedModel`，默认为`None`)
    — 如果未指定参数，则我们为任务初始化默认管道（在本例中为`text-classification`或其别名 - `sentiment-analysis`）。如果参数是`str`类型或是模型实例，则我们使用它来初始化具有给定模型的新`Pipeline`。否则，我们假设参数指定了一个预初始化的管道。'
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str`或`Dataset`，默认为`None`) — 指定我们将在其上运行评估的数据集。如果是`str`类型，则将其视为数据集名称，并加载它。否则，我们假设它表示预加载的数据集。'
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`，默认为`None`) — 定义要加载的数据集子集。如果传递`None`，则加载默认子集。'
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`，默认为`None`) — 定义要加载的数据集拆分。如果传递`None`，则根据`choose_split`函数推断。'
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric` (`str`或`EvaluationModule`，默认为`None`) — 指定我们在评估器中使用的度量。如果是`str`类型，则将其视为度量名称，并加载它。否则，我们假设它表示预加载的度量。'
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tokenizer（`str`或`PreTrainedTokenizer`，*可选*，默认为`None`）—如果`model_or_pipeline`表示我们构建pipeline的模型，则可以使用此参数来覆盖默认的分词器。如果`model_or_pipeline`为`None`或预初始化的pipeline，则我们忽略此参数。
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: strategy（`Literal["simple", "bootstrap"]`，默认为“simple”）—指定评估策略。可能的值为：
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: “简单” - 我们评估指标并返回分数。
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: “bootstrap” - 除了计算指标分数外，我们还使用`scipy`的`bootstrap`方法为返回的每个指标键计算置信区间[https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)。
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: confidence_level（`float`，默认为`0.95`）—如果选择了“bootstrap”策略，则传递给`bootstrap`的`confidence_level`值。
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: n_resamples（`int`，默认为`9999`）—如果选择了“bootstrap”策略，则传递给`bootstrap`的`n_resamples`值。
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: device（`int`，默认为`None`）—用于CPU/GPU支持的设备序号。将其设置为-1将利用CPU，正整数将在关联的CUDA设备ID上运行模型。如果提供了`None`，它将被推断，并且如果可用，则使用CUDA:0，否则使用CPU。
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: random_state（`int`，*可选*，默认为`None`）—如果选择了“bootstrap”策略，则传递给`bootstrap`的`random_state`值。用于调试。
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定pipeline和数据集组合的指标。
- en: 'Examples:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE13]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: QuestionAnsweringEvaluator
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: QuestionAnsweringEvaluator
- en: '### `class evaluate.QuestionAnsweringEvaluator`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.QuestionAnsweringEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/question_answering.py#L74)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/question_answering.py#L74)'
- en: '[PRE14]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Question answering evaluator. This evaluator handles [**extractive** question
    answering](https://huggingface.co/docs/transformers/task_summary#extractive-question-answering),
    where the answer to the question is extracted from a context.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 问答评估器。此评估器处理[**提取式**问答](https://huggingface.co/docs/transformers/task_summary#extractive-question-answering)，其中问题的答案从上下文中提取出来。
- en: This question answering evaluator can currently be loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `question-answering`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 此问答评估器目前可以从[evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)中使用默认任务名称`question-answering`加载。
- en: Methods in this class assume a data format compatible with the [`QuestionAnsweringPipeline`](https://huggingface.co/docs/transformers/en/main_classes/pipelines#transformers.QuestionAnsweringPipeline).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此类中的方法假定数据格式与[`QuestionAnsweringPipeline`](https://huggingface.co/docs/transformers/en/main_classes/pipelines#transformers.QuestionAnsweringPipeline)兼容。
- en: '#### `compute`'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/question_answering.py#L143)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/question_answering.py#L143)'
- en: '[PRE15]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Parameters
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: model_or_pipeline（`str`或`Pipeline`或`Callable`或`PreTrainedModel`或`TFPreTrainedModel`，默认为`None`）—如果未指定参数，则我们会为任务初始化默认的pipeline（在本例中为`text-classification`或其别名
    - `sentiment-analysis`）。如果参数是`str`类型或是模型实例，则我们将使用它来初始化一个新的具有给定模型的`Pipeline`。否则，我们假设参数指定了一个预初始化的pipeline。
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: data（`str`或`Dataset`，默认为`None`）—指定我们将在其上运行评估的数据集。如果是`str`类型，我们将其视为数据集名称，并加载它。否则，我们假设它表示预加载的数据集。
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: subset（`str`，默认为`None`）—定义要加载的数据集子集。如果传递了`None`，则加载默认子集。
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: split（`str`，默认为`None`）—定义要加载的数据集拆分。如果传递了`None`，则根据`choose_split`函数进行推断。
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: metric（`str`或`EvaluationModule`，默认为`None`）—指定评估器中使用的指标。如果是`str`类型，我们将其视为指标名称，并加载它。否则，我们假设它表示预加载的指标。
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer`（`str`或`PreTrainedTokenizer`，*可选*，默认为`None`）— 如果`model_or_pipeline`表示我们构建管道的模型，则可以使用此参数来覆盖默认的分词器。如果`model_or_pipeline`为`None`或预初始化的管道，则忽略此参数。'
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strategy`（`Literal["simple", "bootstrap"]`，默认为“simple”）— 指定评估策略。可能的值为：'
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"simple"` - 我们评估度量标准并返回分数。'
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bootstrap"` - 在计算度量分数的基础上，我们使用`scipy`的`bootstrap`方法计算每个返回的度量键的置信区间[https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)。'
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confidence_level`（`float`，默认为`0.95`）— 如果选择了`"bootstrap"`策略，则传递给`bootstrap`的`confidence_level`值。'
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_resamples`（`int`，默认为`9999`）— 如果选择了`"bootstrap"`策略，则传递给`bootstrap`的`n_resamples`值。'
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device`（`int`，默认为`None`）— 用于CPU/GPU支持的设备序数。将其设置为-1将利用CPU，正整数将在关联的CUDA设备ID上运行模型。如果提供`None`，它将被推断，如果可用，则使用CUDA:0，否则使用CPU。'
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`random_state`（`int`，*可选*，默认为`None`）— 如果选择了`"bootstrap"`策略，则传递给`bootstrap`的`random_state`值。用于调试。'
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 为给定的管道和数据集组合计算度量标准。
- en: 'Examples:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE16]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Datasets where the answer may be missing in the context are supported, for example
    SQuAD v2 dataset. In this case, it is safer to pass `squad_v2_format=True` to
    the compute() call.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 支持答案可能在上下文中缺失的数据集，例如SQuAD v2数据集。在这种情况下，最好在`compute()`调用中传递`squad_v2_format=True`。
- en: '[PRE17]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: TextClassificationEvaluator
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextClassificationEvaluator
- en: '### `class evaluate.TextClassificationEvaluator`'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.TextClassificationEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text_classification.py#L47)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text_classification.py#L47)'
- en: '[PRE18]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Text classification evaluator. This text classification evaluator can currently
    be loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `text-classification` or with a `"sentiment-analysis"`
    alias. Methods in this class assume a data format compatible with the `TextClassificationPipeline`
    - a single textual feature as input and a categorical label as output.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 文本分类评估器。这个文本分类评估器目前可以从[evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)中加载，默认任务名称为`text-classification`或使用`"sentiment-analysis"`别名。该类中的方法假定数据格式与`TextClassificationPipeline`兼容
    - 一个文本特征作为输入，一个分类标签作为输出。
- en: '#### `compute`'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text_classification.py#L85)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text_classification.py#L85)'
- en: '[PRE19]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Parameters
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline`（`str`或`Pipeline`或`Callable`或`PreTrainedModel`或`TFPreTrainedModel`，默认为`None`）—
    如果未指定参数，则我们为任务初始化默认管道（在本例中为`text-classification`或其别名 - `sentiment-analysis`）。如果参数是`str`类型或是模型实例，则我们使用它来使用给定模型初始化新的`Pipeline`。否则，我们假定参数指定了一个预初始化的管道。'
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data`（`str`或`Dataset`，默认为`None`）— 指定我们将在其上运行评估的数据集。如果是`str`类型，我们将其视为数据集名称，并加载它。否则，我们假定它表示一个预加载的数据集。'
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset`（`str`，默认为`None`）— 定义要加载的数据集子集。如果传递`None`，则加载默认子集。'
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split`（`str`，默认为`None`）— 定义要加载的数据集拆分。如果传递`None`，则根据`choose_split`函数推断。'
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric`（`str`或`EvaluationModule`，默认为`None`）— 指定评估器中使用的度量标准。如果是`str`类型，我们将其视为度量标准名称，并加载它。否则，我们假定它表示一个预加载的度量标准。'
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer` (`str` 或 `PreTrainedTokenizer`, *可选*, 默认为 `None`) — 如果 `model_or_pipeline`
    表示我们构建 pipeline 的模型，则可以使用该参数来覆盖默认的 tokenizer。如果 `model_or_pipeline` 是 `None` 或预初始化的
    pipeline，则忽略此参数。'
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strategy` (`Literal["simple", "bootstrap"]`, 默认为 “simple”) — 指定评估策略。可能的值为：'
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"simple"` - 我们评估指标并返回分数。'
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bootstrap"` - 除了计算指标分数外，我们还使用 `scipy` 的 `bootstrap` 方法计算每个返回的指标键的置信区间 [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)。'
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confidence_level` (`float`, 默认为 `0.95`) — 如果选择了“bootstrap”策略，则传递给 `bootstrap`
    的 `confidence_level` 值。'
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_resamples` (`int`, 默认为 `9999`) — 如果选择了“bootstrap”策略，则传递给 `bootstrap` 的 `n_resamples`
    值。'
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`int`, 默认为 `None`) — 用于 CPU/GPU 支持的设备序数。将其设置为 -1 将利用 CPU，正整数将在关联的
    CUDA 设备 ID 上运行模型。如果提供了 `None`，则将被推断并在可用时使用 CUDA:0，否则使用 CPU。'
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`random_state` (`int`, *可选*, 默认为 `None`) — 如果选择了“bootstrap”策略，则传递给 `bootstrap`
    的 `random_state` 值。用于调试。'
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 为给定的 pipeline 和数据集组合计算指标。
- en: 'Examples:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE20]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: TokenClassificationEvaluator
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TokenClassificationEvaluator
- en: '### `class evaluate.TokenClassificationEvaluator`'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.TokenClassificationEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/token_classification.py#L86)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/token_classification.py#L86)'
- en: '[PRE21]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Token classification evaluator.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 标记分类评估器。
- en: This token classification evaluator can currently be loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `token-classification`.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这个标记分类评估器目前可以通过 [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    使用默认任务名称 `token-classification` 进行加载。
- en: Methods in this class assume a data format compatible with the `TokenClassificationPipeline`.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类中的方法假定数据格式与 `TokenClassificationPipeline` 兼容。
- en: '#### `compute`'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/token_classification.py#L209)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/token_classification.py#L209)'
- en: '[PRE22]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Parameters
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline` (`str` 或 `Pipeline` 或 `Callable` 或 `PreTrainedModel` 或
    `TFPreTrainedModel`, 默认为 `None`) — 如果未指定参数，则我们为任务初始化默认的 pipeline（在本例中为 `text-classification`
    或其别名 - `sentiment-analysis`）。如果参数是 `str` 类型或是模型实例，则我们使用它来初始化具有给定模型的新 `Pipeline`。否则，我们假定参数指定了一个预初始化的
    pipeline。'
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str` 或 `Dataset`, 默认为 `None`) — 指定我们将在其上运行评估的数据集。如果它是 `str` 类型，我们将其视为数据集名称，并加载它。否则，我们假定它表示一个预加载的数据集。'
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`, 默认为 `None`) — 定义要加载的数据集子集。如果传递了 `None`，则加载默认子集。'
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`, 默认为 `None`) — 定义要加载的数据集拆分。如果传递了 `None`，则根据 `choose_split` 函数进行推断。'
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric` (`str` 或 `EvaluationModule`, 默认为 `None`) — 指定评估器中使用的指标。如果它是 `str`
    类型，我们将其视为指标名称，并加载它。否则，我们假定它表示一个预加载的指标。'
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer` (`str` 或 `PreTrainedTokenizer`, *可选*, 默认为 `None`) — 如果 `model_or_pipeline`
    表示我们构建 pipeline 的模型，则可以使用该参数来覆盖默认的 tokenizer。如果 `model_or_pipeline` 是 `None` 或预初始化的
    pipeline，则忽略此参数。'
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strategy` (`Literal["simple", "bootstrap"]`, 默认为 “simple”) — 指定评估策略。可能的值为：'
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"simple"` - 我们评估指标并返回分数。'
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bootstrap"` - 除了计算指标分数外，我们还使用 `scipy` 的 `bootstrap` 方法为返回的每个指标键计算置信区间 [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)。'
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confidence_level` (`float`, 默认为 `0.95`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `confidence_level` 值。'
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_resamples` (`int`, 默认为 `9999`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `n_resamples` 值。'
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`int`, 默认为 `None`) — 流水线的 CPU/GPU 支持设备序数。将其设置为 -1 将利用 CPU，正整数将在关联的
    CUDA 设备 ID 上运行模型。如果提供了 `None`，则将推断并在可用时使用 CUDA:0，否则使用 CPU。'
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`random_state` (`int`, *可选*, 默认为 `None`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `random_state` 值。用于调试。'
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定流水线和数据集组合的指标。
- en: The dataset input and label columns are expected to be formatted as a list of
    words and a list of labels respectively, following [conll2003 dataset](https://huggingface.co/datasets/conll2003).
    Datasets whose inputs are single strings, and labels are a list of offset are
    not supported.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 预期数据集输入和标签列格式为单词列表和标签列表，分别遵循 [conll2003 数据集](https://huggingface.co/datasets/conll2003)。不支持输入为单个字符串，标签为偏移列表的数据集。
- en: 'Examples:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE23]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'For example, the following dataset format is accepted by the evaluator:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，评估器接受以下数据集格式：
- en: '[PRE24]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'For example, the following dataset format is **not** accepted by the evaluator:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，评估器不接受以下数据集格式：
- en: '[PRE25]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: TextGenerationEvaluator
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextGenerationEvaluator
- en: '### `class evaluate.TextGenerationEvaluator`'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.TextGenerationEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text_generation.py#L31)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text_generation.py#L31)'
- en: '[PRE26]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Text generation evaluator. This Text generation evaluator can currently be loaded
    from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `text-generation`. Methods in this class assume a
    data format compatible with the `TextGenerationPipeline`.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 文本生成评估器。此文本生成评估器目前可以从 [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    使用默认任务名称 `text-generation` 加载。此类中的方法假定数据格式与 `TextGenerationPipeline` 兼容。
- en: '#### `compute`'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L218)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/base.py#L218)'
- en: '[PRE27]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Text2TextGenerationEvaluator
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本生成评估器
- en: '### `class evaluate.Text2TextGenerationEvaluator`'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.Text2TextGenerationEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L35)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L35)'
- en: '[PRE28]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Text2Text generation evaluator. This Text2Text generation evaluator can currently
    be loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `text2text-generation`. Methods in this class assume
    a data format compatible with the `Text2TextGenerationPipeline`.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 文本到文本生成评估器。此文本到文本生成评估器目前可以从 [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    使用默认任务名称 `text2text-generation` 加载。此类中的方法假定数据格式与 `Text2TextGenerationPipeline`
    兼容。
- en: '#### `compute`'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L52)'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L52)'
- en: '[PRE29]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Parameters
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline` (`str` 或 `Pipeline` 或 `Callable` 或 `PreTrainedModel` 或
    `TFPreTrainedModel`, 默认为 `None`) — 如果未指定参数，则初始化任务的默认流水线（在本例中为 `text-classification`
    或其别名 - `sentiment-analysis`）。如果参数是 `str` 类型或是模型实例，则使用它来初始化具有给定模型的新 `Pipeline`。否则，我们假定参数指定了一个预初始化的流水线。'
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str` 或 `Dataset`, 默认为 `None`) — 指定我们将在其上运行评估的数据集。如果它是 `str` 类型，则将其视为数据集名称，并加载它。否则，我们假定它表示一个预加载的数据集。'
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`, 默认为 `None`) — 定义要加载的数据集子集。如果传递了 `None`，则加载默认子集。'
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`, 默认为 `None`) — 定义要加载的数据集拆分。如果传递了 `None`，则根据 `choose_split` 函数推断。'
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric` (`str` 或 `EvaluationModule`, 默认为 `None`) — 指定评估器中使用的度量。如果它是 `str`
    类型，则将其视为度量名称，并加载它。否则，我们假定它表示一个预加载的度量。'
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer` (`str` 或 `PreTrainedTokenizer`, *可选*, 默认为 `None`) — 如果 `model_or_pipeline`
    表示我们构建管道的模型，则可以使用该参数来覆盖默认的分词器。如果 `model_or_pipeline` 为 `None` 或预初始化的管道，则忽略此参数。'
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strategy` (`Literal["simple", "bootstrap"]`, 默认为 “simple”) — 指定评估策略。可能的值为:'
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"simple"` - 我们评估度量并返回分数。'
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bootstrap"` - 在计算度量分数的基础上，我们使用 `scipy` 的 `bootstrap` 方法计算每个返回的度量键的置信区间 [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)。'
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confidence_level` (`float`, 默认为 `0.95`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `confidence_level` 值。'
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_resamples` (`int`, 默认为 `9999`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `n_resamples` 值。'
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`int`, 默认为 `None`) — 用于 CPU/GPU 支持的设备序数。将其设置为 -1 将利用 CPU，正整数将在关联的
    CUDA 设备 ID 上运行模型。如果提供 `None`，则将进行推断，如果可用，则使用 CUDA:0，否则使用 CPU。'
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`random_state` (`int`, *可选*, 默认为 `None`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `random_state` 值。用于调试。'
- en: '`input_column` (`str`, defaults to `"text"`) — the name of the column containing
    the input text in the dataset specified by `data`.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_column` (`str`, 默认为 `"text"`) — 数据集中包含输入文本的列的名称，由 `data` 指定。'
- en: '`label_column` (`str`, defaults to `"label"`) — the name of the column containing
    the labels in the dataset specified by `data`.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_column` (`str`, 默认为 `"label"`) — 数据集中包含标签的列的名称，由 `data` 指定。'
- en: '`generation_kwargs` (`Dict`, *optional*, defaults to `None`) — The generation
    kwargs are passed to the pipeline and set the text generation strategy.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generation_kwargs` (`Dict`, *可选*, 默认为 `None`) — 生成 kwargs 传递给管道，并设置文本生成策略。'
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定管道和数据集组合的度量。
- en: SummarizationEvaluator
  id: totrans-237
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SummarizationEvaluator
- en: '### `class evaluate.SummarizationEvaluator`'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.SummarizationEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L113)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L113)'
- en: '[PRE30]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Text summarization evaluator. This text summarization evaluator can currently
    be loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `summarization`. Methods in this class assume a data
    format compatible with the [SummarizationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.SummarizationEvaluator).
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 文本摘要评估器。此文本摘要评估器目前可以从 [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    使用默认任务名称 `summarization` 加载。此类中的方法假定数据格式与 [SummarizationEvaluator](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.SummarizationEvaluator)
    兼容。
- en: '#### `compute`'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L127)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L127)'
- en: '[PRE31]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Parameters
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline` (`str` 或 `Pipeline` 或 `Callable` 或 `PreTrainedModel` 或
    `TFPreTrainedModel`, 默认为 `None`) — 如果未指定参数，则为任务初始化默认管道（在本例中为 `text-classification`
    或其别名 - `sentiment-analysis`）。如果参数是 `str` 类型或是模型实例，则使用它来初始化具有给定模型的新 `Pipeline`。否则，我们假定参数指定了一个预初始化的管道。'
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str` 或 `Dataset`, 默认为 `None`) — 指定我们将在其上运行评估的数据集。如果它是 `str` 类型，则将其视为数据集名称，并加载它。否则，我们假定它表示一个预加载的数据集。'
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`, 默认为 `None`) — 定义要加载的数据集子集。如果传递 `None`，则加载默认子集。'
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`, 默认为 `None`) — 定义要加载的数据集拆分。如果传递 `None`，则根据 `choose_split` 函数进行推断。'
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric` (`str` 或 `EvaluationModule`, 默认为 `None`) — 指定评估器中使用的度量。如果是 `str` 类型，我们将其视为度量名称，并加载它。否则，我们假设它表示预加载的度量。'
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer` (`str` 或 `PreTrainedTokenizer`, *optional*, 默认为 `None`) — 如果 `model_or_pipeline`
    表示我们构建管道的模型，则可以使用此参数来覆盖默认的分词器。如果 `model_or_pipeline` 为 `None` 或预初始化的管道，则忽略此参数。'
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strategy` (`Literal["simple", "bootstrap"]`, 默认为 “simple”) — 指定评估策略。可能的值为：'
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"simple"` - 我们评估度量并返回分数。'
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bootstrap"` - 除了计算度量分数外，我们还使用 `scipy` 的 `bootstrap` 方法为返回的每个度量键计算置信区间 [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)。'
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confidence_level` (`float`, 默认为 `0.95`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `confidence_level` 值。'
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_resamples` (`int`, 默认为 `9999`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `n_resamples` 值。'
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`int`, 默认为 `None`) — 用于支持 CPU/GPU 的管道的设备序数。将其设置为 -1 将利用 CPU，正整数将在关联的
    CUDA 设备 ID 上运行模型。如果提供 `None`，它将被推断，并在可用时使用 CUDA:0，否则使用 CPU。'
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`random_state` (`int`, *optional*, 默认为 `None`) — 如果选择了 `"bootstrap"` 策略，则传递给
    `bootstrap` 的 `random_state` 值。用于调试。'
- en: '`input_column` (`str`, defaults to `"text"`) — the name of the column containing
    the input text in the dataset specified by `data`.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_column` (`str`, 默认为 `"text"`) — 数据集中包含输入文本的列的名称，由 `data` 指定。'
- en: '`label_column` (`str`, defaults to `"label"`) — the name of the column containing
    the labels in the dataset specified by `data`.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_column` (`str`, 默认为 `"label"`) — 数据集中包含标签的列的名称，由 `data` 指定。'
- en: '`generation_kwargs` (`Dict`, *optional*, defaults to `None`) — The generation
    kwargs are passed to the pipeline and set the text generation strategy.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generation_kwargs` (`Dict`, *optional*, 默认为 `None`) — 生成 kwargs 传递给管道，并设置文本生成策略。'
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定管道和数据集组合的度量。
- en: TranslationEvaluator
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TranslationEvaluator
- en: '### `class evaluate.TranslationEvaluator`'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.TranslationEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L184)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L184)'
- en: '[PRE32]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Translation evaluator. This translation generation evaluator can currently be
    loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `translation`. Methods in this class assume a data
    format compatible with the `TranslationPipeline`.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译评估器。此翻译生成评估器目前可以从 [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    中使用默认任务名称 `translation` 加载。此类中的方法假定数据格式与 `TranslationPipeline` 兼容。
- en: '#### `compute`'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L198)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/text2text_generation.py#L198)'
- en: '[PRE33]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Parameters
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline` (`str` 或 `Pipeline` 或 `Callable` 或 `PreTrainedModel` 或
    `TFPreTrainedModel`, 默认为 `None`) — 如果未指定参数，则我们将为任务初始化默认管道（在本例中为 `text-classification`
    或其别名 - `sentiment-analysis`）。如果参数是 `str` 类型或是模型实例，则使用它来初始化具有给定模型的新 `Pipeline`。否则，我们假设参数指定了预初始化的管道。'
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str` 或 `Dataset`, 默认为 `None`) — 指定我们将在其上运行评估的数据集。如果是 `str` 类型，我们将其视为数据集名称，并加载它。否则，我们假设它表示预加载的数据集。'
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`, 默认为 `None`) — 定义要加载的数据集子集。如果传递了 `None`，则加载默认子集。'
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`, 默认为 `None`) — 定义要加载的数据集拆分。如果传递了 `None`，则根据 `choose_split` 函数进行推断。'
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric` (`str`或`EvaluationModule`，默认为`None`) — 指定评估器中使用的度量。如果它是`str`类型，我们将其视为度量名称，并加载它。否则，我们假定它表示预加载的度量。'
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer` (`str`或`PreTrainedTokenizer`，*可选*，默认为`None`) — 如果`model_or_pipeline`表示我们构建管道的模型，则可以使用该参数来覆盖默认的分词器。如果`model_or_pipeline`为`None`或预初始化的管道，则忽略此参数。'
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strategy` (`Literal["simple", "bootstrap"]`，默认为“simple”) — 指定评估策略。可能的值为：'
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"simple"` - 我们评估度量并返回分数。'
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bootstrap"` - 除了计算度量分数外，我们还使用`scipy`的`bootstrap`方法[https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)为返回的每个度量键计算置信区间。'
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confidence_level` (`float`，默认为`0.95`) — 如果选择了`"bootstrap"`策略，则将`confidence_level`值传递给`bootstrap`。'
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_resamples` (`int`，默认为`9999`) — 如果选择了`"bootstrap"`策略，则将`n_resamples`值传递给`bootstrap`。'
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`int`, 默认为`None`) — 用于CPU/GPU支持的设备序数。将其设置为-1将利用CPU，正整数将在关联的CUDA设备ID上运行模型。如果提供`None`，则将推断并在可用时使用CUDA:0，否则使用CPU。'
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`random_state` (`int`，*可选*，默认为`None`) — 如果选择了`"bootstrap"`策略，则将`random_state`值传递给`bootstrap`。用于调试。'
- en: '`input_column` (`str`, defaults to `"text"`) — the name of the column containing
    the input text in the dataset specified by `data`.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_column` (`str`, 默认为`"text"`) — 包含输入文本的列的名称，在由`data`指定的数据集中。'
- en: '`label_column` (`str`, defaults to `"label"`) — the name of the column containing
    the labels in the dataset specified by `data`.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label_column` (`str`，默认为`"label"`) — 包含标签的列的名称，在由`data`指定的数据集中。'
- en: '`generation_kwargs` (`Dict`, *optional*, defaults to `None`) — The generation
    kwargs are passed to the pipeline and set the text generation strategy.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generation_kwargs` (`Dict`，*可选*，默认为`None`) — 生成kwargs传递给管道，并设置文本生成策略。'
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 为给定的管道和数据集组合计算度量。
- en: AutomaticSpeechRecognitionEvaluator
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AutomaticSpeechRecognitionEvaluator
- en: '### `class evaluate.AutomaticSpeechRecognitionEvaluator`'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class evaluate.AutomaticSpeechRecognitionEvaluator`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/automatic_speech_recognition.py#L43)'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/automatic_speech_recognition.py#L43)'
- en: '[PRE34]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Automatic speech recognition evaluator. This automatic speech recognition evaluator
    can currently be loaded from [evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)
    using the default task name `automatic-speech-recognition`. Methods in this class
    assume a data format compatible with the `AutomaticSpeechRecognitionPipeline`.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 自动语音识别评估器。此自动语音识别评估器目前可以从[evaluator()](/docs/evaluate/v0.4.0/en/package_reference/evaluator_classes#evaluate.evaluator)使用默认任务名称`automatic-speech-recognition`加载。此类中的方法假定数据格式与`AutomaticSpeechRecognitionPipeline`兼容。
- en: '#### `compute`'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `compute`'
- en: '[< source >](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/automatic_speech_recognition.py#L59)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/evaluate/blob/v0.4.0/src/evaluate/evaluator/automatic_speech_recognition.py#L59)'
- en: '[PRE35]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Parameters
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_or_pipeline` (`str` or `Pipeline` or `Callable` or `PreTrainedModel`
    or `TFPreTrainedModel`, defaults to `None`) — If the argument in not specified,
    we initialize the default pipeline for the task (in this case `text-classification`
    or its alias - `sentiment-analysis`). If the argument is of the type `str` or
    is a model instance, we use it to initialize a new `Pipeline` with the given model.
    Otherwise we assume the argument specifies a pre-initialized pipeline.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_or_pipeline` (`str`或`Pipeline`或`Callable`或`PreTrainedModel`或`TFPreTrainedModel`，默认为`None`)
    — 如果未指定参数，则为任务初始化默认管道（在本例中为`text-classification`或其别名 - `sentiment-analysis`）。如果参数是`str`类型或是模型实例，则使用它来初始化具有给定模型的新`Pipeline`。否则，我们假定参数指定了预初始化的管道。'
- en: '`data` (`str` or `Dataset`, defaults to `None`) — Specifies the dataset we
    will run evaluation on. If it is of type `str`, we treat it as the dataset name,
    and load it. Otherwise we assume it represents a pre-loaded dataset.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data` (`str`或`Dataset`，默认为`None`) — 指定我们将在其上运行评估的数据集。如果它是`str`类型，我们将其视为数据集名称，并加载它。否则，我们假定它表示预加载的数据集。'
- en: '`subset` (`str`, defaults to `None`) — Defines which dataset subset to load.
    If `None` is passed the default subset is loaded.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subset` (`str`，默认为`None`) — 定义要加载的数据集子集。如果传递`None`，则加载默认子集。'
- en: '`split` (`str`, defaults to `None`) — Defines which dataset split to load.
    If `None` is passed, infers based on the `choose_split` function.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`split` (`str`，默认为`None`) — 定义要加载的数据集拆分。如果传递`None`，则根据`choose_split`函数推断。'
- en: '`metric` (`str` or `EvaluationModule`, defaults to `None`) — Specifies the
    metric we use in evaluator. If it is of type `str`, we treat it as the metric
    name, and load it. Otherwise we assume it represents a pre-loaded metric.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metric` (`str` 或 `EvaluationModule`，默认为 `None`) — 指定评估器中使用的度量标准。如果是 `str`
    类型，我们将其视为度量名称，并加载它。否则，我们假设它表示预加载的度量标准。'
- en: '`tokenizer` (`str` or `PreTrainedTokenizer`, *optional*, defaults to `None`)
    — Argument can be used to overwrite a default tokenizer if `model_or_pipeline`
    represents a model for which we build a pipeline. If `model_or_pipeline` is `None`
    or a pre-initialized pipeline, we ignore this argument.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tokenizer` (`str` 或 `PreTrainedTokenizer`，*可选*，默认为 `None`) — 如果 `model_or_pipeline`
    表示我们构建管道的模型，则可以使用该参数来覆盖默认的分词器。如果 `model_or_pipeline` 为 `None` 或预初始化的管道，则忽略此参数。'
- en: '`strategy` (`Literal["simple", "bootstrap"]`, defaults to “simple”) — specifies
    the evaluation strategy. Possible values are:'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strategy` (`Literal["simple", "bootstrap"]`，默认为 “simple”) — 指定评估策略。可能的值为：'
- en: '`"simple"` - we evaluate the metric and return the scores.'
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"simple"` - 我们评估度量标准并返回分数。'
- en: '`"bootstrap"` - on top of computing the metric scores, we calculate the confidence
    interval for each of the returned metric keys, using `scipy`’s `bootstrap` method
    [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html).'
  id: totrans-306
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"bootstrap"` - 在计算度量分数的基础上，我们使用 `scipy` 的 `bootstrap` 方法计算每个返回的度量键的置信区间 [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.bootstrap.html)。'
- en: '`confidence_level` (`float`, defaults to `0.95`) — The `confidence_level` value
    passed to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confidence_level` (`float`，默认为 `0.95`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `confidence_level` 值。'
- en: '`n_resamples` (`int`, defaults to `9999`) — The `n_resamples` value passed
    to `bootstrap` if `"bootstrap"` strategy is chosen.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_resamples` (`int`，默认为 `9999`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `n_resamples` 值。'
- en: '`device` (`int`, defaults to `None`) — Device ordinal for CPU/GPU support of
    the pipeline. Setting this to -1 will leverage CPU, a positive integer will run
    the model on the associated CUDA device ID. If `None` is provided it will be inferred
    and CUDA:0 used if available, CPU otherwise.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`int`，默认为 `None`) — 用于支持管道的 CPU/GPU 设备序数。将其设置为 -1 将利用 CPU，正整数将在关联的
    CUDA 设备 ID 上运行模型。如果提供 `None`，它将被推断，并在可用时使用 CUDA:0，否则使用 CPU。'
- en: '`random_state` (`int`, *optional*, defaults to `None`) — The `random_state`
    value passed to `bootstrap` if `"bootstrap"` strategy is chosen. Useful for debugging.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`random_state` (`int`，*可选*，默认为 `None`) — 如果选择了 `"bootstrap"` 策略，则传递给 `bootstrap`
    的 `random_state` 值。用于调试。'
- en: Compute the metric for a given pipeline and dataset combination.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定管道和数据集组合的度量标准。
- en: 'Examples:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE36]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
