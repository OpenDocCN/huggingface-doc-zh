- en: ControlNet
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ControlNet
- en: 'Original text: [https://huggingface.co/docs/diffusers/training/controlnet](https://huggingface.co/docs/diffusers/training/controlnet)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/diffusers/training/controlnet](https://huggingface.co/docs/diffusers/training/controlnet)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '[ControlNet](https://hf.co/papers/2302.05543) models are adapters trained on
    top of another pretrained model. It allows for a greater degree of control over
    image generation by conditioning the model with an additional input image. The
    input image can be a canny edge, depth map, human pose, and many more.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[ControlNet](https://hf.co/papers/2302.05543)模型是在另一个预训练模型之上训练的适配器。它通过使用额外的输入图像对模型进行条件化，从而允许更大程度上控制图像生成。输入图像可以是canny边缘、深度图、人体姿势等。'
- en: If you’re training on a GPU with limited vRAM, you should try enabling the `gradient_checkpointing`,
    `gradient_accumulation_steps`, and `mixed_precision` parameters in the training
    command. You can also reduce your memory footprint by using memory-efficient attention
    with [xFormers](../optimization/xformers). JAX/Flax training is also supported
    for efficient training on TPUs and GPUs, but it doesn’t support gradient checkpointing
    or xFormers. You should have a GPU with >30GB of memory if you want to train faster
    with Flax.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在具有有限vRAM的GPU上进行训练，您应该尝试在训练命令中启用`gradient_checkpointing`、`gradient_accumulation_steps`和`mixed_precision`参数。您还可以通过使用[xFormers](../optimization/xformers)中的内存高效注意力来减少内存占用。JAX/Flax训练也支持在TPU和GPU上进行高效训练，但不支持梯度检查点或xFormers。如果您想要使用Flax更快地进行训练，您应该拥有大于30GB内存的GPU。
- en: This guide will explore the [train_controlnet.py](https://github.com/huggingface/diffusers/blob/main/examples/controlnet/train_controlnet.py)
    training script to help you become familiar with it, and how you can adapt it
    for your own use-case.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南将探讨[train_controlnet.py](https://github.com/huggingface/diffusers/blob/main/examples/controlnet/train_controlnet.py)训练脚本，以帮助您熟悉它，以及如何为您自己的用例进行调整。
- en: 'Before running the script, make sure you install the library from source:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行脚本之前，请确保您从源代码安装库：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then navigate to the example folder containing the training script and install
    the required dependencies for the script you’re using:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然后转到包含训练脚本的示例文件夹，并安装您正在使用的脚本所需的依赖项：
- en: PyTorchFlax
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorchFlax
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 🤗 Accelerate is a library for helping you train on multiple GPUs/TPUs or with
    mixed-precision. It’ll automatically configure your training setup based on your
    hardware and environment. Take a look at the 🤗 Accelerate [Quick tour](https://huggingface.co/docs/accelerate/quicktour)
    to learn more.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 Accelerate是一个帮助您在多个GPU/TPU上训练或使用混合精度的库。它将根据您的硬件和环境自动配置您的训练设置。查看🤗 Accelerate
    [快速入门](https://huggingface.co/docs/accelerate/quicktour)以了解更多信息。
- en: 'Initialize an 🤗 Accelerate environment:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化🤗 Accelerate环境：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To setup a default 🤗 Accelerate environment without choosing any configurations:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在不选择任何配置的情况下设置默认的🤗 Accelerate环境：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Or if your environment doesn’t support an interactive shell, like a notebook,
    you can use:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果您的环境不支持交互式shell，比如笔记本，您可以使用：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Lastly, if you want to train a model on your own dataset, take a look at the
    [Create a dataset for training](create_dataset) guide to learn how to create a
    dataset that works with the training script.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果您想在自己的数据集上训练模型，请查看[创建用于训练的数据集](create_dataset)指南，了解如何创建适用于训练脚本的数据集。
- en: The following sections highlight parts of the training script that are important
    for understanding how to modify it, but it doesn’t cover every aspect of the script
    in detail. If you’re interested in learning more, feel free to read through the
    [script](https://github.com/huggingface/diffusers/blob/main/examples/controlnet/train_controlnet.py)
    and let us know if you have any questions or concerns.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分突出了训练脚本的重要部分，以便了解如何修改它，但并未详细涵盖脚本的每个方面。如果您有兴趣了解更多，请随时阅读[脚本](https://github.com/huggingface/diffusers/blob/main/examples/controlnet/train_controlnet.py)，如果您有任何问题或疑虑，请告诉我们。
- en: Script parameters
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚本参数
- en: The training script provides many parameters to help you customize your training
    run. All of the parameters and their descriptions are found in the [`parse_args()`](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L231)
    function. This function provides default values for each parameter, such as the
    training batch size and learning rate, but you can also set your own values in
    the training command if you’d like.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 训练脚本提供了许多参数，帮助您自定义训练运行。所有参数及其描述都可以在[`parse_args()`](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L231)函数中找到。该函数为每个参数提供了默认值，如训练批量大小和学习率，但如果您愿意，也可以在训练命令中设置自己的值。
- en: 'For example, to speedup training with mixed precision using the fp16 format,
    add the `--mixed_precision` parameter to the training command:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，为了加快使用fp16格式的混合精度进行训练，请在训练命令中添加`--mixed_precision`参数：
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Many of the basic and important parameters are described in the [Text-to-image](text2image#script-parameters)
    training guide, so this guide just focuses on the relevant parameters for ControlNet:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 许多基本和重要参数在[文本到图像](text2image#script-parameters)训练指南中有描述，因此本指南只关注ControlNet的相关参数：
- en: '`--max_train_samples`: the number of training samples; this can be lowered
    for faster training, but if you want to stream really large datasets, you’ll need
    to include this parameter and the `--streaming` parameter in your training command'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--max_train_samples`：训练样本的数量；这可以降低以加快训练速度，但如果您想要流式传输非常大的数据集，您需要在训练命令中包含此参数和`--streaming`参数'
- en: '`--gradient_accumulation_steps`: number of update steps to accumulate before
    the backward pass; this allows you to train with a bigger batch size than your
    GPU memory can typically handle'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--gradient_accumulation_steps`：在向后传递之前累积的更新步骤数；这使您可以使用比GPU内存通常处理的更大批量大小进行训练'
- en: Min-SNR weighting
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Min-SNR加权
- en: The [Min-SNR](https://huggingface.co/papers/2303.09556) weighting strategy can
    help with training by rebalancing the loss to achieve faster convergence. The
    training script supports predicting `epsilon` (noise) or `v_prediction`, but Min-SNR
    is compatible with both prediction types. This weighting strategy is only supported
    by PyTorch and is unavailable in the Flax training script.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[Min-SNR](https://huggingface.co/papers/2303.09556)加权策略可以通过重新平衡损失来帮助训练，以实现更快的收敛。训练脚本支持预测`epsilon`（噪音）或`v_prediction`，但Min-SNR与两种预测类型兼容。此加权策略仅受PyTorch支持，在Flax训练脚本中不可用。'
- en: 'Add the `--snr_gamma` parameter and set it to the recommended value of 5.0:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 添加`--snr_gamma`参数，并将其设置为推荐值5.0：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Training script
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练脚本
- en: As with the script parameters, a general walkthrough of the training script
    is provided in the [Text-to-image](text2image#training-script) training guide.
    Instead, this guide takes a look at the relevant parts of the ControlNet script.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 与脚本参数一样，[文本到图像](text2image#training-script)训练指南中提供了对训练脚本的整体介绍。而本指南则着眼于ControlNet脚本的相关部分。
- en: The training script has a [`make_train_dataset`](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L582)
    function for preprocessing the dataset with image transforms and caption tokenization.
    You’ll see that in addition to the usual caption tokenization and image transforms,
    the script also includes transforms for the conditioning image.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 训练脚本有一个[`make_train_dataset`](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L582)函数，用于对数据集进行预处理，包括图像转换和标题标记化。您将看到，除了通常的标题标记化和图像转换之外，脚本还包括用于条件图像的转换。
- en: If you’re streaming a dataset on a TPU, performance may be bottlenecked by the
    🤗 Datasets library which is not optimized for images. To ensure maximum throughput,
    you’re encouraged to explore other dataset formats like [WebDataset](https://webdataset.github.io/webdataset/),
    [TorchData](https://github.com/pytorch/data), and [TensorFlow Datasets](https://www.tensorflow.org/datasets/tfless_tfds).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在TPU上流式传输数据集，性能可能会受到🤗数据集库的限制，该库未针对图像进行优化。为了确保最大吞吐量，建议您探索其他数据集格式，如[WebDataset](https://webdataset.github.io/webdataset/)、[TorchData](https://github.com/pytorch/data)和[TensorFlow数据集](https://www.tensorflow.org/datasets/tfless_tfds)。
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Within the [`main()`](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L713)
    function, you’ll find the code for loading the tokenizer, text encoder, scheduler
    and models. This is also where the ControlNet model is loaded either from existing
    weights or randomly initialized from a UNet:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`main()`](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L713)函数中，您将找到用于加载分词器、文本编码器、调度器和模型的代码。这也是ControlNet模型加载的地方，可以从现有权重加载，也可以从UNet随机初始化：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The [optimizer](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L871)
    is set up to update the ControlNet parameters:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[优化器](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L871)已设置为更新ControlNet参数：'
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, in the [training loop](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L943),
    the conditioning text embeddings and image are passed to the down and mid-blocks
    of the ControlNet model:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在[训练循环](https://github.com/huggingface/diffusers/blob/64603389da01082055a901f2883c4810d1144edb/examples/controlnet/train_controlnet.py#L943)中，将条件文本嵌入和图像传递给ControlNet模型的下游和中间块：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If you want to learn more about how the training loop works, check out the [Understanding
    pipelines, models and schedulers](../using-diffusers/write_own_pipeline) tutorial
    which breaks down the basic pattern of the denoising process.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解训练循环的工作原理，请查看[理解管道、模型和调度器](../using-diffusers/write_own_pipeline)教程，该教程解释了去噪过程的基本模式。
- en: Launch the script
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动脚本
- en: Now you’re ready to launch the training script! 🚀
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经准备好启动训练脚本了！🚀
- en: This guide uses the [fusing/fill50k](https://huggingface.co/datasets/fusing/fill50k)
    dataset, but remember, you can create and use your own dataset if you want (see
    the [Create a dataset for training](create_dataset) guide).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南使用[fusing/fill50k](https://huggingface.co/datasets/fusing/fill50k)数据集，但请记住，如果需要，您可以创建并使用自己的数据集（请参阅[创建用于训练的数据集](create_dataset)指南）。
- en: Set the environment variable `MODEL_NAME` to a model id on the Hub or a path
    to a local model and `OUTPUT_DIR` to where you want to save the model.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 将环境变量`MODEL_NAME`设置为Hub上的模型ID或本地模型的路径，将`OUTPUT_DIR`设置为要保存模型的位置。
- en: 'Download the following images to condition your training with:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下载以下图像以进行训练条件：
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: One more thing before you launch the script! Depending on the GPU you have,
    you may need to enable certain optimizations to train a ControlNet. The default
    configuration in this script requires ~38GB of vRAM. If you’re training on more
    than one GPU, add the `--multi_gpu` parameter to the `accelerate launch` command.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动脚本之前还有一件事！根据您拥有的GPU，您可能需要启用某些优化来训练ControlNet。此脚本中的默认配置需要约38GB的vRAM。如果您要在多个GPU上进行训练，请在`accelerate
    launch`命令中添加`--multi_gpu`参数。
- en: 16GB12GB8GB
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 16GB12GB8GB
- en: 'On a 16GB GPU, you can use bitsandbytes 8-bit optimizer and gradient checkpointing
    to optimize your training run. Install bitsandbytes:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在16GB GPU上，您可以使用bitsandbytes 8位优化器和梯度检查点来优化您的训练运行。安装bitsandbytes：
- en: '[PRE12]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, add the following parameter to your training command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在训练命令中添加以下参数：
- en: '[PRE13]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: PyTorchFlax
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorchFlax
- en: '[PRE14]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Once training is complete, you can use your newly trained model for inference!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 训练完成后，您可以使用新训练的模型进行推断！
- en: '[PRE15]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Stable Diffusion XL
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 稳定扩散XL
- en: Stable Diffusion XL (SDXL) is a powerful text-to-image model that generates
    high-resolution images, and it adds a second text-encoder to its architecture.
    Use the [`train_controlnet_sdxl.py`](https://github.com/huggingface/diffusers/blob/main/examples/controlnet/train_controlnet_sdxl.py)
    script to train a ControlNet adapter for the SDXL model.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定扩散XL（SDXL）是一个强大的文本到图像模型，可以生成高分辨率图像，并在其架构中添加了第二个文本编码器。使用[`train_controlnet_sdxl.py`](https://github.com/huggingface/diffusers/blob/main/examples/controlnet/train_controlnet_sdxl.py)脚本来训练SDXL模型的ControlNet适配器。
- en: The SDXL training script is discussed in more detail in the [SDXL training](sdxl)
    guide.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 有关SDXL训练脚本的详细讨论，请参阅[SDXL训练](sdxl)指南。
- en: Next steps
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下一步
- en: 'Congratulations on training your own ControlNet! To learn more about how to
    use your new model, the following guides may be helpful:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜您成功训练了自己的ControlNet！要了解如何使用您的新模型，以下指南可能会有所帮助：
- en: Learn how to [use a ControlNet](../using-diffusers/controlnet) for inference
    on a variety of tasks.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何在各种任务中使用ControlNet进行推断。
