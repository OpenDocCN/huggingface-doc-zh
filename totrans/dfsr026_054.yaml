- en: Create a dataset for training
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/diffusers/training/create_dataset](https://huggingface.co/docs/diffusers/training/create_dataset)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: There are many datasets on the [Hub](https://huggingface.co/datasets?task_categories=task_categories:text-to-image&sort=downloads)
    to train a model on, but if you canâ€™t find one youâ€™re interested in or want to
    use your own, you can create a dataset with the ðŸ¤— [Datasets](hf.co/docs/datasets)
    library. The dataset structure depends on the task you want to train your model
    on. The most basic dataset structure is a directory of images for tasks like unconditional
    image generation. Another dataset structure may be a directory of images and a
    text file containing their corresponding text captions for tasks like text-to-image
    generation.
  prefs: []
  type: TYPE_NORMAL
- en: 'This guide will show you two ways to create a dataset to finetune on:'
  prefs: []
  type: TYPE_NORMAL
- en: provide a folder of images to the `--train_data_dir` argument
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: upload a dataset to the Hub and pass the dataset repository id to the `--dataset_name`
    argument
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ðŸ’¡ Learn more about how to create an image dataset for training in the [Create
    an image dataset](https://huggingface.co/docs/datasets/image_dataset) guide.
  prefs: []
  type: TYPE_NORMAL
- en: Provide a dataset as a folder
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For unconditional generation, you can provide your own dataset as a folder
    of images. The training script uses the [`ImageFolder`](https://huggingface.co/docs/datasets/en/image_dataset#imagefolder)
    builder from ðŸ¤— Datasets to automatically build a dataset from the folder. Your
    directory structure should look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Pass the path to the dataset directory to the `--train_data_dir` argument,
    and then you can start training:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Upload your data to the Hub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ðŸ’¡ For more details and context about creating and uploading a dataset to the
    Hub, take a look at the [Image search with ðŸ¤— Datasets](https://huggingface.co/blog/image-search-datasets)
    post.
  prefs: []
  type: TYPE_NORMAL
- en: Start by creating a dataset with the [`ImageFolder`](https://huggingface.co/docs/datasets/image_load#imagefolder)
    feature, which creates an `image` column containing the PIL-encoded images.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the `data_dir` or `data_files` parameters to specify the location
    of the dataset. The `data_files` parameter supports mapping specific files to
    dataset splits like `train` or `test`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Then use the [push_to_hub](https://huggingface.co/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.push_to_hub)
    method to upload the dataset to the Hub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the dataset is available for training by passing the dataset name to the
    `--dataset_name` argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Next steps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that youâ€™ve created a dataset, you can plug it into the `train_data_dir`
    (if your dataset is local) or `dataset_name` (if your dataset is on the Hub) arguments
    of a training script.
  prefs: []
  type: TYPE_NORMAL
- en: For your next steps, feel free to try and use your dataset to train a model
    for [unconditional generation](unconditional_training) or [text-to-image generation](text2image)!
  prefs: []
  type: TYPE_NORMAL
