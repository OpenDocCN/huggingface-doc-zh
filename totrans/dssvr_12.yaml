- en: Filter rows in a dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/datasets-server/filter](https://huggingface.co/docs/datasets-server/filter)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/datasets-server/main/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/entry/start.72deb59f.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/scheduler.db6b1edd.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/singletons.08f900c0.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/index.badce0ed.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/paths.8205e2a2.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/entry/app.9c9f50af.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/index.ef84021a.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/nodes/0.895e992d.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/nodes/7.3c4bf71d.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/Tip.67451c24.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/CodeBlock.786162a6.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/InferenceApi.4a0db4d5.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/Heading.87f70b00.js">
  prefs: []
  type: TYPE_NORMAL
- en: Datasets Server provides a `/filter` endpoint for filtering rows in a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Currently, only [datasets with Parquet exports](./parquet) are supported so
    Datasets Server can index the contents and run the filter query without downloading
    the whole dataset.
  prefs: []
  type: TYPE_NORMAL
- en: This guide shows you how to use Datasets Server’s `/filter` endpoint to filter
    rows based on a query string. Feel free to also try it out with [ReDoc](https://redocly.github.io/redoc/?url=https://datasets-server.huggingface.co/openapi.json#operation/filterRows).
  prefs: []
  type: TYPE_NORMAL
- en: 'The `/filter` endpoint accepts the following query parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '`dataset`: the dataset name, for example `glue` or `mozilla-foundation/common_voice_10_0`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config`: the configuration name, for example `cola`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`split`: the split name, for example `train`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`where`: the filter condition'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offset`: the offset of the slice, for example `150`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`length`: the length of the slice, for example `10` (maximum: `100`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `where` parameter must be expressed as a comparison predicate, which can
    be:'
  prefs: []
  type: TYPE_NORMAL
- en: a simple predicate composed of a column name, a comparison operator, and a value
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'the comparison operators are: `=`, `<>`, `>`, `>=`, `<`, `<=`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: a composite predicate composed of two or more simple predicates (optionally
    grouped with parentheses to indicate the order of evaluation), combined with logical
    operators
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'the logical operators are: `AND`, `OR`, `NOT`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, the following `where` parameter value
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: will filter the data to select only those rows where the float “age” column
    is larger than 30 and, either the string “name” column is equal to ‘Simone’ or
    the integer “children” column is equal to 0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that, following SQL syntax, string values in comparison predicates must
    be enclosed in single quotes, for example: `''Scarlett''`. Additionally, if the
    string value contains a single quote, it must be escaped with another single quote,
    for example: `''O''''Hara''`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, let’s filter those rows with no_answer=false in the `train` split
    of the `SelfRC` configuration of the `ibm/duorc` dataset restricting the results
    to the slice 150-151:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The endpoint response is a JSON containing two keys (same format as [`/rows`](./rows)):'
  prefs: []
  type: TYPE_NORMAL
- en: The [`features`](https://huggingface.co/docs/datasets/about_dataset_features)
    of a dataset, including the column’s name and data type.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The slice of `rows` of a dataset and the content contained in each column of
    a specific row.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The rows are ordered by the row index.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, here are the `features` and the slice 150-151 of matching `rows`
    of the `ibm.duorc`/`SelfRC` train split for the `where` condition `no_answer=true`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If the result has `partial: true` it means that the filtering couldn’t be run
    on the full dataset because it’s too big.'
  prefs: []
  type: TYPE_NORMAL
- en: Indeed, the indexing for `/filter` can be partial if the dataset is bigger than
    5GB. In that case, it only uses the first 5GB.
  prefs: []
  type: TYPE_NORMAL
