- en: Command Line Interface (CLI)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/guides/cli](https://huggingface.co/docs/huggingface_hub/guides/cli)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The `huggingface_hub` Python package comes with a built-in CLI called `huggingface-cli`.
    This tool allows you to interact with the Hugging Face Hub directly from a terminal.
    For example, you can login to your account, create a repository, upload and download
    files, etc. It also comes with handy features to configure your machine or manage
    your cache. In this guide, we will have a look at the main features of the CLI
    and how to use them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Getting started
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First of all, let’s install the CLI:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the snippet above, we also installed the `[cli]` extra dependencies to make
    the user experience better, especially when using the `delete-cache` command.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Once installed, you can check that the CLI is correctly setup:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If the CLI is correctly installed, you should see a list of all the options
    available in the CLI. If you get an error message such as `command not found:
    huggingface-cli`, please refer to the [Installation](../installation) guide.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: The `--help` option is very convenient for getting more details about a command.
    You can use it anytime to list all available options and their details. For example,
    `huggingface-cli upload --help` provides more information on how to upload files
    using the CLI.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli login
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In many cases, you must be logged in to a Hugging Face account to interact with
    the Hub (download private repos, upload files, create PRs, etc.). To do so, you
    need a [User Access Token](https://huggingface.co/docs/hub/security-tokens) from
    your [Settings page](https://huggingface.co/settings/tokens). The User Access
    Token is used to authenticate your identity to the Hub. Make sure to set a token
    with write access if you want to upload or modify content.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have your token, run the following command in your terminal:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This command will prompt you for a token. Copy-paste yours and press *Enter*.
    Then you’ll be asked if the token should also be saved as a git credential. Press
    *Enter* again (default to yes) if you plan to use `git` locally. Finally, it will
    call the Hub to check that your token is valid and save it locally.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Alternatively, if you want to log-in without being prompted, you can pass the
    token directly from the command line. To be more secure, we recommend passing
    your token as an environment variable to avoid pasting it in your command history.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For more details about authentication, check out [this section](../quick-start#authentication).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli whoami
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you want to know if you are logged in, you can use `huggingface-cli whoami`.
    This command doesn’t have any options and simply prints your username and the
    organizations you are a part of on the Hub:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you are not logged in, an error message will be printed.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli logout
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This commands logs you out. In practice, it will delete the token saved on your
    machine.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: This command will not log you out if you are logged in using the `HF_TOKEN`
    environment variable (see [reference](../package_reference/environment_variables#hftoken)).
    If that is the case, you must unset the environment variable in your machine configuration.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli download
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the `huggingface-cli download` command to download files from the Hub directly.
    Internally, it uses the same [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    and [snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    helpers described in the [Download](./download) guide and prints the returned
    path to the terminal. In the examples below, we will walk through the most common
    use cases. For a full list of available options, you can run:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Download a single file
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To download a single file from a repo, simply provide the repo_id and filename
    as follow:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The command will always print on the last line the path to the file on your
    local machine.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Download an entire repository
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In some cases, you just want to download all the files from a repository. This
    can be done by just specifying the repo id:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Download multiple files
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also download a subset of the files from a repository with a single
    command. This can be done in two ways. If you already have a precise list of the
    files you want to download, you can simply provide them sequentially:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The other approach is to provide patterns to filter which files you want to
    download using `--include` and `--exclude`. For example, if you want to download
    all safetensors files from [stabilityai/stable-diffusion-xl-base-1.0](https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0),
    except the files in FP16 precision:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Download a dataset or a Space
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The examples above show how to download from a model repository. To download
    a dataset or a Space, use the `--repo-type` option:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Download a specific revision
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The examples above show how to download from the latest commit on the main
    branch. To download from a specific revision (commit hash, branch name or tag),
    use the `--revision` option:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Download to a local folder
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The recommended (and default) way to download files from the Hub is to use the
    cache-system. However, in some cases you want to download files and move them
    to a specific folder. This is useful to get a workflow closer to what git commands
    offer. You can do that using the `--local_dir` option.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Downloading to a local directory comes with some downsides. Please check out
    the limitations in the [Download](./download#download-files-to-local-folder) guide
    before using `--local-dir`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Specify cache directory
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By default, all files will be download to the cache directory defined by the
    `HF_HOME` [environment variable](../package_reference/environment_variables#hfhome).
    You can also specify a custom cache using `--cache-dir`:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Specify a token
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To access private or gated repositories, you must use a token. By default,
    the token saved locally (using `huggingface-cli login`) will be used. If you want
    to authenticate explicitly, use the `--token` option:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Quiet mode
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By default, the `huggingface-cli download` command will be verbose. It will
    print details such as warning messages, information about the downloaded files,
    and progress bars. If you want to silence all of this, use the `--quiet` option.
    Only the last line (i.e. the path to the downloaded files) is printed. This can
    prove useful if you want to pass the output to another command in a script.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: huggingface-cli upload
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the `huggingface-cli upload` command to upload files to the Hub directly.
    Internally, it uses the same [upload_file()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file)
    and [upload_folder()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder)
    helpers described in the [Upload](./upload) guide. In the examples below, we will
    walk through the most common use cases. For a full list of available options,
    you can run:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Upload an entire folder
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The default usage for this command is:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To upload the current directory at the root of the repo, use:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: If the repo doesn’t exist yet, it will be created automatically.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also upload a specific folder:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Finally, you can upload a folder to a specific destination on the repo:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Upload a single file
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also upload a single file by setting `local_path` to point to a file
    on your machine. If that’s the case, `path_in_repo` is optional and will default
    to the name of your local file:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'If you want to upload a single file to a specific directory, set `path_in_repo`
    accordingly:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Upload multiple files
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To upload multiple files from a folder at once without uploading the entire
    folder, use the `--include` and `--exclude` patterns. It can also be combined
    with the `--delete` option to delete files on the repo while uploading new ones.
    In the example below, we sync the local Space by deleting remote files and uploading
    all files except the ones in `/logs`:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要一次上传文件夹中的多个文件而不上传整个文件夹，可以使用`--include`和`--exclude`模式。还可以与`--delete`选项结合使用，在上传新文件的同时删除存储库中的文件。在下面的示例中，我们通过删除远程文件并上传除`/logs`中的文件之外的所有文件来同步本地
    Space：
- en: '[PRE24]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Upload to a dataset or Space
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传到数据集或 Space
- en: 'To upload to a dataset or a Space, use the `--repo-type` option:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传到数据集或 Space，请使用`--repo-type`选项：
- en: '[PRE25]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Upload to an organization
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传到组织
- en: 'To upload content to a repo owned by an organization instead of a personal
    repo, you must explicitly specify it in the `repo_id`:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要将内容上传到组织拥有的存储库而不是个人存储库，必须在`repo_id`中明确指定：
- en: '[PRE26]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Upload to a specific revision
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传到特定修订版
- en: 'By default, files are uploaded to the `main` branch. If you want to upload
    files to another branch or reference, use the `--revision` option:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，文件将上传到`main`分支。如果要将文件上传到另一个分支或引用，请使用`--revision`选项：
- en: '[PRE27]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '**Note:** if `revision` does not exist and `--create-pr` is not set, a branch
    will be created automatically from the `main` branch.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**如果`revision`不存在且未设置`--create-pr`，则将自动从`main`分支创建分支。'
- en: Upload and create a PR
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上传并创建 PR
- en: 'If you don’t have the permission to push to a repo, you must open a PR and
    let the authors know about the changes you want to make. This can be done by setting
    the `--create-pr` option:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有推送到存储库的权限，则必须打开 PR 并让作者知道您想要进行的更改。这可以通过设置`--create-pr`选项来完成：
- en: '[PRE28]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Upload at regular intervals
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定期间隔上传
- en: 'In some cases, you might want to push regular updates to a repo. For example,
    this is useful if you’re training a model and you want to upload the logs folder
    every 10 minutes. You can do this using the `--every` option:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能希望定期更新存储库。例如，如果您正在训练模型并希望每隔10分钟上传日志文件夹，则可以使用`--every`选项：
- en: '[PRE29]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Specify a commit message
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 指定提交消息
- en: Use the `--commit-message` and `--commit-description` to set a custom message
    and description for your commit instead of the default one
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`--commit-message`和`--commit-description`设置自定义消息和描述以替代默认消息
- en: '[PRE30]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Specify a token
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 指定令牌
- en: 'To upload files, you must use a token. By default, the token saved locally
    (using `huggingface-cli login`) will be used. If you want to authenticate explicitly,
    use the `--token` option:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传文件，必须使用令牌。默认情况下，将使用本地保存的令牌（使用`huggingface-cli login`）。如果要明确进行身份验证，请使用`--token`选项：
- en: '[PRE31]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Quiet mode
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安静模式
- en: By default, the `huggingface-cli upload` command will be verbose. It will print
    details such as warning messages, information about the uploaded files, and progress
    bars. If you want to silence all of this, use the `--quiet` option. Only the last
    line (i.e. the URL to the uploaded files) is printed. This can prove useful if
    you want to pass the output to another command in a script.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`huggingface-cli upload`命令将是冗长的。它将打印警告消息、有关上传文件的信息和进度条等详细信息。如果要将所有这些信息静音，请使用`--quiet`选项。只会打印最后一行（即上传文件的
    URL）。如果您希望将输出传递给脚本中的另一个命令，则这可能会很有用。
- en: '[PRE32]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: huggingface-cli scan-cache
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: huggingface-cli 扫描缓存
- en: 'Scanning your cache directory is useful if you want to know which repos you
    have downloaded and how much space it takes on your disk. You can do that by running
    `huggingface-cli scan-cache`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描您的缓存目录是有用的，如果您想知道您已下载的存储库以及它在磁盘上占用了多少空间。您可以通过运行`huggingface-cli scan-cache`来实现：
- en: '[PRE33]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: For more details about how to scan your cache directory, please refer to the
    [Manage your cache](./manage-cache#scan-cache-from-the-terminal) guide.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何扫描缓存目录的更多详细信息，请参考[管理您的缓存](./manage-cache#scan-cache-from-the-terminal)指南。
- en: huggingface-cli delete-cache
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: huggingface-cli 删除缓存
- en: '`huggingface-cli delete-cache` is a tool that helps you delete parts of your
    cache that you don’t use anymore. This is useful for saving and freeing disk space.
    To learn more about using this command, please refer to the [Manage your cache](./manage-cache#clean-cache-from-the-terminal)
    guide.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`huggingface-cli delete-cache`是一个帮助您删除不再使用的缓存部分的工具。这对于节省和释放磁盘空间很有用。要了解有关使用此命令的更多信息，请参考[管理您的缓存](./manage-cache#clean-cache-from-the-terminal)指南。'
- en: huggingface-cli env
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: huggingface-cli 环境
- en: The `huggingface-cli env` command prints details about your machine setup. This
    is useful when you open an issue on [GitHub](https://github.com/huggingface/huggingface_hub)
    to help the maintainers investigate your problem.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`huggingface-cli env`命令打印有关您的机器设置的详细信息。当您在[GitHub](https://github.com/huggingface/huggingface_hub)上提出问题以帮助维护人员调查您的问题时，这将非常有用。'
- en: '[PRE34]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
