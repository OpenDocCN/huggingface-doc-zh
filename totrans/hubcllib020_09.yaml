- en: Command Line Interface (CLI)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/huggingface_hub/guides/cli](https://huggingface.co/docs/huggingface_hub/guides/cli)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/entry/start.81f0ceaa.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/scheduler.6062bdaf.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/singletons.3c2729d2.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/paths.566d2d8a.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/entry/app.77e31cee.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/index.4bca734e.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/nodes/0.d6dfa8c0.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/nodes/3.eaefa309.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Tip.b9ac1f03.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/CodeBlock.fa01571c.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Heading.723dceba.js">
  prefs: []
  type: TYPE_NORMAL
- en: The `huggingface_hub` Python package comes with a built-in CLI called `huggingface-cli`.
    This tool allows you to interact with the Hugging Face Hub directly from a terminal.
    For example, you can login to your account, create a repository, upload and download
    files, etc. It also comes with handy features to configure your machine or manage
    your cache. In this guide, we will have a look at the main features of the CLI
    and how to use them.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First of all, let’s install the CLI:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the snippet above, we also installed the `[cli]` extra dependencies to make
    the user experience better, especially when using the `delete-cache` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once installed, you can check that the CLI is correctly setup:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If the CLI is correctly installed, you should see a list of all the options
    available in the CLI. If you get an error message such as `command not found:
    huggingface-cli`, please refer to the [Installation](../installation) guide.'
  prefs: []
  type: TYPE_NORMAL
- en: The `--help` option is very convenient for getting more details about a command.
    You can use it anytime to list all available options and their details. For example,
    `huggingface-cli upload --help` provides more information on how to upload files
    using the CLI.
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli login
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In many cases, you must be logged in to a Hugging Face account to interact with
    the Hub (download private repos, upload files, create PRs, etc.). To do so, you
    need a [User Access Token](https://huggingface.co/docs/hub/security-tokens) from
    your [Settings page](https://huggingface.co/settings/tokens). The User Access
    Token is used to authenticate your identity to the Hub. Make sure to set a token
    with write access if you want to upload or modify content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have your token, run the following command in your terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This command will prompt you for a token. Copy-paste yours and press *Enter*.
    Then you’ll be asked if the token should also be saved as a git credential. Press
    *Enter* again (default to yes) if you plan to use `git` locally. Finally, it will
    call the Hub to check that your token is valid and save it locally.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, if you want to log-in without being prompted, you can pass the
    token directly from the command line. To be more secure, we recommend passing
    your token as an environment variable to avoid pasting it in your command history.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: For more details about authentication, check out [this section](../quick-start#authentication).
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli whoami
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you want to know if you are logged in, you can use `huggingface-cli whoami`.
    This command doesn’t have any options and simply prints your username and the
    organizations you are a part of on the Hub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: If you are not logged in, an error message will be printed.
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli logout
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This commands logs you out. In practice, it will delete the token saved on your
    machine.
  prefs: []
  type: TYPE_NORMAL
- en: This command will not log you out if you are logged in using the `HF_TOKEN`
    environment variable (see [reference](../package_reference/environment_variables#hftoken)).
    If that is the case, you must unset the environment variable in your machine configuration.
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli download
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the `huggingface-cli download` command to download files from the Hub directly.
    Internally, it uses the same [hf_hub_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_download)
    and [snapshot_download()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.snapshot_download)
    helpers described in the [Download](./download) guide and prints the returned
    path to the terminal. In the examples below, we will walk through the most common
    use cases. For a full list of available options, you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Download a single file
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To download a single file from a repo, simply provide the repo_id and filename
    as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The command will always print on the last line the path to the file on your
    local machine.
  prefs: []
  type: TYPE_NORMAL
- en: Download an entire repository
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In some cases, you just want to download all the files from a repository. This
    can be done by just specifying the repo id:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Download multiple files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also download a subset of the files from a repository with a single
    command. This can be done in two ways. If you already have a precise list of the
    files you want to download, you can simply provide them sequentially:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The other approach is to provide patterns to filter which files you want to
    download using `--include` and `--exclude`. For example, if you want to download
    all safetensors files from [stabilityai/stable-diffusion-xl-base-1.0](https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0),
    except the files in FP16 precision:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Download a dataset or a Space
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The examples above show how to download from a model repository. To download
    a dataset or a Space, use the `--repo-type` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Download a specific revision
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The examples above show how to download from the latest commit on the main
    branch. To download from a specific revision (commit hash, branch name or tag),
    use the `--revision` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Download to a local folder
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The recommended (and default) way to download files from the Hub is to use the
    cache-system. However, in some cases you want to download files and move them
    to a specific folder. This is useful to get a workflow closer to what git commands
    offer. You can do that using the `--local_dir` option.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading to a local directory comes with some downsides. Please check out
    the limitations in the [Download](./download#download-files-to-local-folder) guide
    before using `--local-dir`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Specify cache directory
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By default, all files will be download to the cache directory defined by the
    `HF_HOME` [environment variable](../package_reference/environment_variables#hfhome).
    You can also specify a custom cache using `--cache-dir`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Specify a token
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To access private or gated repositories, you must use a token. By default,
    the token saved locally (using `huggingface-cli login`) will be used. If you want
    to authenticate explicitly, use the `--token` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Quiet mode
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By default, the `huggingface-cli download` command will be verbose. It will
    print details such as warning messages, information about the downloaded files,
    and progress bars. If you want to silence all of this, use the `--quiet` option.
    Only the last line (i.e. the path to the downloaded files) is printed. This can
    prove useful if you want to pass the output to another command in a script.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: huggingface-cli upload
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the `huggingface-cli upload` command to upload files to the Hub directly.
    Internally, it uses the same [upload_file()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file)
    and [upload_folder()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder)
    helpers described in the [Upload](./upload) guide. In the examples below, we will
    walk through the most common use cases. For a full list of available options,
    you can run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Upload an entire folder
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The default usage for this command is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'To upload the current directory at the root of the repo, use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: If the repo doesn’t exist yet, it will be created automatically.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also upload a specific folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, you can upload a folder to a specific destination on the repo:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Upload a single file
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also upload a single file by setting `local_path` to point to a file
    on your machine. If that’s the case, `path_in_repo` is optional and will default
    to the name of your local file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to upload a single file to a specific directory, set `path_in_repo`
    accordingly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Upload multiple files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To upload multiple files from a folder at once without uploading the entire
    folder, use the `--include` and `--exclude` patterns. It can also be combined
    with the `--delete` option to delete files on the repo while uploading new ones.
    In the example below, we sync the local Space by deleting remote files and uploading
    all files except the ones in `/logs`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Upload to a dataset or Space
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To upload to a dataset or a Space, use the `--repo-type` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Upload to an organization
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To upload content to a repo owned by an organization instead of a personal
    repo, you must explicitly specify it in the `repo_id`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Upload to a specific revision
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By default, files are uploaded to the `main` branch. If you want to upload
    files to another branch or reference, use the `--revision` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '**Note:** if `revision` does not exist and `--create-pr` is not set, a branch
    will be created automatically from the `main` branch.'
  prefs: []
  type: TYPE_NORMAL
- en: Upload and create a PR
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you don’t have the permission to push to a repo, you must open a PR and
    let the authors know about the changes you want to make. This can be done by setting
    the `--create-pr` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Upload at regular intervals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In some cases, you might want to push regular updates to a repo. For example,
    this is useful if you’re training a model and you want to upload the logs folder
    every 10 minutes. You can do this using the `--every` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Specify a commit message
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use the `--commit-message` and `--commit-description` to set a custom message
    and description for your commit instead of the default one
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Specify a token
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To upload files, you must use a token. By default, the token saved locally
    (using `huggingface-cli login`) will be used. If you want to authenticate explicitly,
    use the `--token` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Quiet mode
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By default, the `huggingface-cli upload` command will be verbose. It will print
    details such as warning messages, information about the uploaded files, and progress
    bars. If you want to silence all of this, use the `--quiet` option. Only the last
    line (i.e. the URL to the uploaded files) is printed. This can prove useful if
    you want to pass the output to another command in a script.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: huggingface-cli scan-cache
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Scanning your cache directory is useful if you want to know which repos you
    have downloaded and how much space it takes on your disk. You can do that by running
    `huggingface-cli scan-cache`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: For more details about how to scan your cache directory, please refer to the
    [Manage your cache](./manage-cache#scan-cache-from-the-terminal) guide.
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli delete-cache
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`huggingface-cli delete-cache` is a tool that helps you delete parts of your
    cache that you don’t use anymore. This is useful for saving and freeing disk space.
    To learn more about using this command, please refer to the [Manage your cache](./manage-cache#clean-cache-from-the-terminal)
    guide.'
  prefs: []
  type: TYPE_NORMAL
- en: huggingface-cli env
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `huggingface-cli env` command prints details about your machine setup. This
    is useful when you open an issue on [GitHub](https://github.com/huggingface/huggingface_hub)
    to help the maintainers investigate your problem.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
