- en: Download slices of rows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/datasets-server/rows](https://huggingface.co/docs/datasets-server/rows)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/datasets-server/main/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/entry/start.72deb59f.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/scheduler.db6b1edd.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/singletons.08f900c0.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/index.badce0ed.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/paths.8205e2a2.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/entry/app.9c9f50af.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/index.ef84021a.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/nodes/0.895e992d.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/nodes/16.ce45e2d1.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/Tip.67451c24.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/CodeBlock.786162a6.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/InferenceApi.4a0db4d5.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/Heading.87f70b00.js">
  prefs: []
  type: TYPE_NORMAL
- en: Datasets Server provides a `/rows` endpoint for visualizing any slice of rows
    of a dataset. This will let you walk-through and inspect the data contained in
    a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/817acecac0ec0079c57229725f548f41.png) ![](../Images/8b90f071ee1cd7eb9c519d9f3cd7eb7f.png)Currently,
    only [datasets with parquet exports](./parquet) are supported so Datasets Server
    can extract any slice of rows without downloading the whole dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: This guide shows you how to use Datasets Server’s `/rows` endpoint to download
    slices of a dataset. Feel free to also try it out with [Postman](https://www.postman.com/huggingface/workspace/hugging-face-apis/request/23242779-32d6a8be-b800-446a-8cee-f6b5ca1710df),
    [RapidAPI](https://rapidapi.com/hugging-face-hugging-face-default/api/hugging-face-datasets-api),
    or [ReDoc](https://redocly.github.io/redoc/?url=https://datasets-server.huggingface.co/openapi.json#operation/listFirstRows).
  prefs: []
  type: TYPE_NORMAL
- en: 'The `/rows` endpoint accepts five query parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '`dataset`: the dataset name, for example `glue` or `mozilla-foundation/common_voice_10_0`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config`: the configuration name, for example `cola`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`split`: the split name, for example `train`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offset`: the offset of the slice, for example `150`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`length`: the length of the slice, for example `10` (maximum: `100`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The endpoint response is a JSON containing two keys:'
  prefs: []
  type: TYPE_NORMAL
- en: The [`features`](https://huggingface.co/docs/datasets/about_dataset_features)
    of a dataset, including the column’s name and data type.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The slice of `rows` of a dataset and the content contained in each column of
    a specific row.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, here are the `features` and the slice of `rows` of the `ibm/duorc`/`SelfRC`
    train split from 150 to 151:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Image and audio samples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Image and audio are represented by a URL that points to the file.
  prefs: []
  type: TYPE_NORMAL
- en: Images
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Images are represented as a JSON object with three fields:'
  prefs: []
  type: TYPE_NORMAL
- en: '`src`: URL to the image file'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`height`: height (in pixels) of the image'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`width`: width (in pixels) of the image'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is an example of image, from the first row of the cifar100 dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If the result has `partial: true` it means that the slices couldn’t be run
    on the full dataset because it’s too big.'
  prefs: []
  type: TYPE_NORMAL
- en: Caching
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The images and audio samples are cached by the datasets server temporarily.
    Internally we empty the cached assets of certain datasets from time to time based
    on usage.
  prefs: []
  type: TYPE_NORMAL
- en: If a certain asset is not available, you may have to call `/rows` again.
  prefs: []
  type: TYPE_NORMAL
- en: Truncated responses
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unlike `/first-rows`, there is currently no truncation in `/rows`. The `truncated_cells`
    field is still there but is always empty.
  prefs: []
  type: TYPE_NORMAL
