- en: Hands-on
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践
- en: 'Original text: [https://huggingface.co/learn/deep-rl-course/unit3/hands-on](https://huggingface.co/learn/deep-rl-course/unit3/hands-on)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/learn/deep-rl-course/unit3/hands-on](https://huggingface.co/learn/deep-rl-course/unit3/hands-on)
- en: '[![Ask a Question](../Images/255e59f8542cbd6d3f1c72646b2fff13.png)](http://hf.co/join/discord)
    [![Open In Colab](../Images/7e2db436150c38a00650f96925aa5581.png)](https://colab.research.google.com/github/huggingface/deep-rl-class/blob/main/notebooks/unit3/unit3.ipynb)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[![提问](../Images/255e59f8542cbd6d3f1c72646b2fff13.png)](http://hf.co/join/discord)
    [![在 Colab 中打开](../Images/7e2db436150c38a00650f96925aa5581.png)](https://colab.research.google.com/github/huggingface/deep-rl-class/blob/main/notebooks/unit3/unit3.ipynb)'
- en: Now that you’ve studied the theory behind Deep Q-Learning, **you’re ready to
    train your Deep Q-Learning agent to play Atari Games**. We’ll start with Space
    Invaders, but you’ll be able to use any Atari game you want 🔥
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经学习了深度 Q 学习背后的理论，**您已经准备好训练您的深度 Q 学习代理玩 Atari 游戏**。我们将从 Space Invaders 开始，但您可以使用任何您想要的
    Atari 游戏🔥
- en: '![Environments](../Images/bf441b005cda192d0dc86eb42475aeb3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![环境](../Images/bf441b005cda192d0dc86eb42475aeb3.png)'
- en: We’re using the [RL-Baselines-3 Zoo integration](https://github.com/DLR-RM/rl-baselines3-zoo),
    a vanilla version of Deep Q-Learning with no extensions such as Double-DQN, Dueling-DQN,
    or Prioritized Experience Replay.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的是[RL-Baselines-3 Zoo 集成](https://github.com/DLR-RM/rl-baselines3-zoo)，这是一个没有
    Double-DQN、Dueling-DQN 或 Prioritized Experience Replay 等扩展的深度 Q 学习的基本版本。
- en: 'Also, **if you want to learn to implement Deep Q-Learning by yourself after
    this hands-on**, you definitely should look at the CleanRL implementation: [https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py](https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，**如果您想在此实践之后自己学习实现深度 Q 学习**，您绝对应该查看 CleanRL 实现：[https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py](https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py)
- en: To validate this hands-on for the certification process, you need to push your
    trained model to the Hub and **get a result of >= 200**.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证此实践以进行认证过程，您需要将训练好的模型推送到 Hub 并**获得 >= 200 的结果**。
- en: To find your result, go to the leaderboard and find your model, **the result
    = mean_reward - std of reward**
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到您的结果，请转到排行榜并找到您的模型，**结果 = 平均奖励 - 奖励的标准差**
- en: '**If you don’t find your model, go to the bottom of the page and click on the
    refresh button.**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果找不到您的模型，请转到页面底部并点击刷新按钮。**'
- en: For more information about the certification process, check this section 👉 [https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process](https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有关认证过程的更多信息，请查看此部分👉[https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process](https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process)
- en: And you can check your progress here 👉 [https://huggingface.co/spaces/ThomasSimonini/Check-my-progress-Deep-RL-Course](https://huggingface.co/spaces/ThomasSimonini/Check-my-progress-Deep-RL-Course)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在这里检查您的进度👉[https://huggingface.co/spaces/ThomasSimonini/Check-my-progress-Deep-RL-Course](https://huggingface.co/spaces/ThomasSimonini/Check-my-progress-Deep-RL-Course)
- en: '**To start the hands-on click on Open In Colab button** 👇 :'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**要开始实践，请点击“在 Colab 中打开”按钮**👇：'
- en: '[![Open In Colab](../Images/7e2db436150c38a00650f96925aa5581.png)](https://colab.research.google.com/github/huggingface/deep-rl-class/blob/master/notebooks/unit3/unit3.ipynb)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[![在 Colab 中打开](../Images/7e2db436150c38a00650f96925aa5581.png)](https://colab.research.google.com/github/huggingface/deep-rl-class/blob/master/notebooks/unit3/unit3.ipynb)'
- en: 'Unit 3: Deep Q-Learning with Atari Games 👾 using RL Baselines3 Zoo'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三单元：使用 RL Baselines3 Zoo 进行 Atari 游戏的深度 Q 学习 👾
- en: '![Unit 3 Thumbnail](../Images/e8420d1d9f22aa4095ae8b961c412a91.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![第三单元缩略图](../Images/e8420d1d9f22aa4095ae8b961c412a91.png)'
- en: In this hands-on, **you’ll train a Deep Q-Learning agent** playing Space Invaders
    using [RL Baselines3 Zoo](https://github.com/DLR-RM/rl-baselines3-zoo), a training
    framework based on [Stable-Baselines3](https://stable-baselines3.readthedocs.io/en/master/)
    that provides scripts for training, evaluating agents, tuning hyperparameters,
    plotting results and recording videos.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实践中，**您将训练一个深度 Q 学习代理**来玩 Space Invaders，使用的是基于[Stable-Baselines3](https://stable-baselines3.readthedocs.io/en/master/)的训练框架[RL
    Baselines3 Zoo](https://github.com/DLR-RM/rl-baselines3-zoo)，该框架提供了用于训练、评估代理、调整超参数、绘制结果和录制视频的脚本。
- en: We’re using the [RL-Baselines-3 Zoo integration, a vanilla version of Deep Q-Learning](https://stable-baselines3.readthedocs.io/en/master/modules/dqn.html)
    with no extensions such as Double-DQN, Dueling-DQN, and Prioritized Experience
    Replay.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的是[RL-Baselines-3 Zoo 集成，一个基本版本的深度 Q 学习](https://stable-baselines3.readthedocs.io/en/master/modules/dqn.html)，没有
    Double-DQN、Dueling-DQN 和 Prioritized Experience Replay 等扩展。
- en: '🎮 Environments:'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '🎮 环境:'
- en: '[SpacesInvadersNoFrameskip-v4](https://gymnasium.farama.org/environments/atari/space_invaders/)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SpacesInvadersNoFrameskip-v4](https://gymnasium.farama.org/environments/atari/space_invaders/)'
- en: You can see the difference between Space Invaders versions here 👉 [https://gymnasium.farama.org/environments/atari/space_invaders/#variants](https://gymnasium.farama.org/environments/atari/space_invaders/#variants)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在这里查看 Space Invaders 版本之间的差异👉[https://gymnasium.farama.org/environments/atari/space_invaders/#variants](https://gymnasium.farama.org/environments/atari/space_invaders/#variants)
- en: '📚 RL-Library:'
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '📚 RL-Library:'
- en: '[RL-Baselines3-Zoo](https://github.com/DLR-RM/rl-baselines3-zoo)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RL-Baselines3-Zoo](https://github.com/DLR-RM/rl-baselines3-zoo)'
- en: Objectives of this hands-on 🏆
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 此实践的目标 🏆
- en: 'At the end of the hands-on, you will:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践结束时，您将：
- en: Be able to understand deeper **how RL Baselines3 Zoo works**.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够更深入地理解**RL Baselines3 Zoo 的工作原理**。
- en: Be able to **push your trained agent and the code to the Hub** with a nice video
    replay and an evaluation score 🔥.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够**将训练好的代理和代码推送到 Hub**，并附带一个漂亮的视频回放和评估分数🔥。
- en: Prerequisites 🏗️
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先决条件 🏗️
- en: 'Before diving into the hands-on, you need to:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入实践之前，您需要：
- en: 🔲 📚 **[Study Deep Q-Learning by reading Unit 3](https://huggingface.co/deep-rl-course/unit3/introduction)**
    🤗
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 🔲 📚 **[通过阅读第三单元学习深度 Q 学习](https://huggingface.co/deep-rl-course/unit3/introduction)**
    🤗
- en: We’re constantly trying to improve our tutorials, so **if you find some issues
    in this hands-on**, please [open an issue on the Github Repo](https://github.com/huggingface/deep-rl-class/issues).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不断努力改进我们的教程，所以**如果您在这个实践中发现了一些问题**，请[在 Github Repo 上提出问题](https://github.com/huggingface/deep-rl-class/issues)。
- en: Let’s train a Deep Q-Learning agent playing Atari’ Space Invaders 👾 and upload
    it to the Hub.
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们训练一个玩 Atari 太空侵略者的深度 Q 学习智能体👾 并将其上传到 Hub。
- en: We strongly recommend students **to use Google Colab for the hands-on exercises
    instead of running them on their personal computers**.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议学生**使用 Google Colab 进行实践练习，而不是在个人计算机上运行它们**。
- en: By using Google Colab, **you can focus on learning and experimenting without
    worrying about the technical aspects of setting up your environments**.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 Google Colab，**您可以专注于学习和实验，而不必担心设置环境的技术细节**。
- en: To validate this hands-on for the certification process, you need to push your
    trained model to the Hub and **get a result of >= 200**.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证这个实践过程的认证，您需要将训练好的模型推送到 Hub 并**获得 >= 200 的结果**。
- en: To find your result, go to the leaderboard and find your model, **the result
    = mean_reward - std of reward**
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到您的结果，请转到排行榜并找到您的模型，**结果 = 平均奖励 - 奖励的标准差**
- en: For more information about the certification process, check this section 👉 [https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process](https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有关认证流程的更多信息，请查看此部分👉 [https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process](https://huggingface.co/deep-rl-course/en/unit0/introduction#certification-process)
- en: Set the GPU 💪
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 GPU 💪
- en: To **accelerate the agent’s training, we’ll use a GPU**. To do that, go to `Runtime
    > Change Runtime type`
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了**加速智能体的训练，我们将使用 GPU**。要做到这一点，转到`Runtime > Change Runtime type`
- en: '![GPU Step 1](../Images/5378127c314cdd92729aa31b7e11ca44.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![GPU 步骤 1](../Images/5378127c314cdd92729aa31b7e11ca44.png)'
- en: '`Hardware Accelerator > GPU`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`硬件加速器 > GPU`'
- en: '![GPU Step 2](../Images/e0fec252447f98378386ccca8e57a80a.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![GPU 步骤 2](../Images/e0fec252447f98378386ccca8e57a80a.png)'
- en: Install RL-Baselines3 Zoo and its dependencies 📚
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 RL-Baselines3 Zoo 及其依赖项📚
- en: 'If you see `ERROR: pip''s dependency resolver does not currently take into
    account all the packages that are installed.` **this is normal and it’s not a
    critical error** there’s a conflict of version. But the packages we need are installed.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你看到`ERROR: pip''s dependency resolver does not currently take into account
    all the packages that are installed.` **这是正常的，不是关键错误** 这是版本冲突。但我们需要的包已经安装好了。'
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: IF AND ONLY IF THE VERSION ABOVE DOES NOT EXIST ANYMORE. UNCOMMENT AND INSTALL
    THE ONE BELOW
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果上面的版本不再存在。取消注释并安装下面的版本
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To be able to use Atari games in Gymnasium we need to install atari package.
    And accept-rom-license to download the rom files (games files).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够在 Gymnasium 中使用 Atari 游戏，我们需要安装 atari 包。并接受 rom 许可证以下载 rom 文件（游戏文件）。
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Create a virtual display 🔽
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个虚拟显示🔽
- en: During the hands-on, we’ll need to generate a replay video. To do so, if you
    train it on a headless machine, **we need to have a virtual screen to be able
    to render the environment** (and thus record the frames).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践过程中，我们需要生成一个重播视频。为了做到这一点，如果您在无头机器上训练它，**我们需要有一个虚拟屏幕来能够渲染环境**（从而记录帧）。
- en: Hence the following cell will install the librairies and create and run a virtual
    screen 🖥
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，以下单元格将安装库并创建并运行一个虚拟屏幕🖥
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Train our Deep Q-Learning Agent to Play Space Invaders 👾
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练我们的深度 Q 学习智能体玩太空侵略者 👾
- en: 'To train an agent with RL-Baselines3-Zoo, we just need to do two things:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 RL-Baselines3-Zoo 训练一个智能体，我们只需要做两件事：
- en: Create a hyperparameter config file that will contain our training hyperparameters
    called `dqn.yml`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含我们训练超参数的超参数配置文件，名为`dqn.yml`。
- en: 'This is a template example:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个模板示例：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here we see that:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我们看到：
- en: We use the `Atari Wrapper` that preprocess the input (Frame reduction ,grayscale,
    stack 4 frames)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用`Atari Wrapper`对输入进行预处理（帧缩减，灰度化，堆叠 4 帧）
- en: We use `CnnPolicy`, since we use Convolutional layers to process the frames
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用`CnnPolicy`，因为我们使用卷积层来处理帧
- en: We train it for 10 million `n_timesteps`
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们为 1000 万个`n_timesteps`进行训练
- en: Memory (Experience Replay) size is 100000, aka the amount of experience steps
    you saved to train again your agent with.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存（经验重放）大小为 100000，即您保存的经验步数，用于再次训练您的智能体。
- en: '💡 My advice is to **reduce the training timesteps to 1M,** which will take
    about 90 minutes on a P100\. `!nvidia-smi` will tell you what GPU you’re using.
    At 10 million steps, this will take about 9 hours. I recommend running this on
    your local computer (or somewhere else). Just click on: `File>Download`.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 我的建议是**将训练步骤减少到 1M**，这将在 P100 上花费约 90 分钟。`!nvidia-smi`会告诉您正在使用的 GPU。在 1000
    万步骤中，这将花费约 9 小时。我建议在您的本地计算机上运行此操作（或其他地方）。只需点击：`File>Download`。
- en: 'In terms of hyperparameters optimization, my advice is to focus on these 3
    hyperparameters:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在超参数优化方面，我的建议是专注于这 3 个超参数：
- en: '`learning_rate`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`learning_rate`'
- en: '`buffer_size (Experience Memory size)`'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`buffer_size (经验记忆大小)`'
- en: '`batch_size`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`batch_size`'
- en: 'As a good practice, you need to **check the documentation to understand what
    each hyperparameters does**: [https://stable-baselines3.readthedocs.io/en/master/modules/dqn.html#parameters](https://stable-baselines3.readthedocs.io/en/master/modules/dqn.html#parameters)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个良好的实践，您需要**查看文档以了解每个超参数的作用**：[https://stable-baselines3.readthedocs.io/en/master/modules/dqn.html#parameters](https://stable-baselines3.readthedocs.io/en/master/modules/dqn.html#parameters)
- en: We start the training and save the models on `logs` folder 📁
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们开始训练并将模型保存在`logs`文件夹📁
- en: Define the algorithm after `--algo`, where we save the model after `-f` and
    where the hyperparameter config is after `-c`.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`--algo`之后定义算法，在`-f`之后保存模型，在`-c`之后是超参数配置。
- en: '[PRE7]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Solution
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 解决方案
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Let’s evaluate our agent 👀
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 让我们评估我们的智能体👀
- en: RL-Baselines3-Zoo provides `enjoy.py`, a python script to evaluate our agent.
    In most RL libraries, we call the evaluation script `enjoy.py`.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RL-Baselines3-Zoo 提供了`enjoy.py`，一个用于评估我们智能体的 Python 脚本。在大多数 RL 库中，我们将评估脚本称为`enjoy.py`。
- en: Let’s evaluate it for 5000 timesteps 🔥
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们对其进行 5000 个时间步的评估🔥
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Solution
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 解决方案
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Publish our trained model on the Hub 🚀
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Hub 上发布我们训练好的模型🚀
- en: Now that we saw we got good results after the training, we can publish our trained
    model on the hub 🤗 with one line of code.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们看到训练后获得了良好的结果，我们可以用一行代码将我们训练好的模型发布到 Hub 🤗。
- en: '![Space Invaders model](../Images/8ae15c5c6ac1a3242637770ca390f7e1.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![太空侵略者模型](../Images/8ae15c5c6ac1a3242637770ca390f7e1.png)'
- en: By using `rl_zoo3.push_to_hub` **you evaluate, record a replay, generate a model
    card of your agent and push it to the hub**.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`rl_zoo3.push_to_hub` **您可以评估、记录重播、生成您的代理的模型卡并将其推送到hub**。
- en: 'This way:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这样：
- en: You can **showcase our work** 🔥
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以展示我们的工作🔥
- en: You can **visualize your agent playing** 👀
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以**观看您的代理玩**👀
- en: You can **share with the community an agent that others can use** 💾
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以**与社区分享其他人可以使用的代理**💾
- en: You can **access a leaderboard 🏆 to see how well your agent is performing compared
    to your classmates** 👉 [https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard](https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard)
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以**访问排行榜🏆，查看您的代理与同学相比表现如何**👉 [https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard](https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard)
- en: 'To be able to share your model with the community there are three more steps
    to follow:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够与社区分享您的模型，还有三个步骤要遵循：
- en: 1️⃣ (If it’s not already done) create an account to HF ➡ [https://huggingface.co/join](https://huggingface.co/join)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 1️⃣（如果尚未完成）创建一个HF账户 ➡ [https://huggingface.co/join](https://huggingface.co/join)
- en: 2️⃣ Sign in and then, you need to store your authentication token from the Hugging
    Face website.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 2️⃣登录，然后，您需要从Hugging Face网站存储您的身份验证令牌。
- en: Create a new token ([https://huggingface.co/settings/tokens](https://huggingface.co/settings/tokens))
    **with write role**
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个新的令牌（[https://huggingface.co/settings/tokens](https://huggingface.co/settings/tokens)）**具有写入角色**
- en: '![Create HF Token](../Images/d21a97c736edaab9119d2d1c1da9deac.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![创建HF令牌](../Images/d21a97c736edaab9119d2d1c1da9deac.png)'
- en: Copy the token
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制令牌
- en: Run the cell below and past the token
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行下面的单元格并粘贴令牌
- en: '[PRE11]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If you don’t want to use a Google Colab or a Jupyter Notebook, you need to
    use this command instead: `huggingface-cli login`'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想使用Google Colab或Jupyter Notebook，您需要使用这个命令：`huggingface-cli login`
- en: 3️⃣ We’re now ready to push our trained agent to the 🤗 Hub 🔥
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 3️⃣我们现在准备将我们训练的代理推送到🤗 Hub🔥
- en: Let’s run push_to_hub.py file to upload our trained agent to the Hub.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行push_to_hub.py文件将我们训练的代理上传到Hub。
- en: '`--repo-name` : The name of the repo'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`--repo-name`：存储库的名称'
- en: '`-orga`: Your Hugging Face username'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`-orga`：您的Hugging Face用户名'
- en: '`-f`: Where the trained model folder is (in our case `logs`)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`-f`：训练模型文件夹所在位置（在我们的情况下为`logs`）'
- en: '![Select Id](../Images/6f04c3f40368af928c98d0979b5abbe5.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![选择ID](../Images/6f04c3f40368af928c98d0979b5abbe5.png)'
- en: '[PRE12]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Solution
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 解决方案
- en: '[PRE13]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '###.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '###。'
- en: 'Congrats 🥳 you’ve just trained and uploaded your first Deep Q-Learning agent
    using RL-Baselines-3 Zoo. The script above should have displayed a link to a model
    repository such as [https://huggingface.co/ThomasSimonini/dqn-SpaceInvadersNoFrameskip-v4](https://huggingface.co/ThomasSimonini/dqn-SpaceInvadersNoFrameskip-v4).
    When you go to this link, you can:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜🥳您刚刚使用RL-Baselines-3 Zoo训练和上传了您的第一个Deep Q-Learning代理。上面的脚本应该显示了一个指向模型存储库的链接，例如[https://huggingface.co/ThomasSimonini/dqn-SpaceInvadersNoFrameskip-v4](https://huggingface.co/ThomasSimonini/dqn-SpaceInvadersNoFrameskip-v4)。当您访问此链接时，您可以：
- en: See a **video preview of your agent** at the right.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在右侧查看**代理的视频预览**。
- en: Click “Files and versions” to see all the files in the repository.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击“文件和版本”查看存储库中的所有文件。
- en: Click “Use in stable-baselines3” to get a code snippet that shows how to load
    the model.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击“在stable-baselines3中使用”获取显示如何加载模型的代码片段。
- en: A model card (`README.md` file) which gives a description of the model and the
    hyperparameters you used.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个模型卡（`README.md`文件），其中包含对模型和您使用的超参数的描述。
- en: Under the hood, the Hub uses git-based repositories (don’t worry if you don’t
    know what git is), which means you can update the model with new versions as you
    experiment and improve your agent.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，Hub使用基于git的存储库（如果您不知道git是什么，不用担心），这意味着您可以随着实验和改进您的代理更新模型的新版本。
- en: '**Compare the results of your agents with your classmates** using the [leaderboard](https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard)
    🏆'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用[排行榜](https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard)与同学比较您的代理的结果**🏆'
- en: Load a powerful trained model 🔥
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载一个强大的训练模型🔥
- en: The Stable-Baselines3 team uploaded **more than 150 trained Deep Reinforcement
    Learning agents on the Hub**.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stable-Baselines3团队在Hub上上传了**超过150个训练有素的深度强化学习代理**。
- en: 'You can find them here: 👉 [https://huggingface.co/sb3](https://huggingface.co/sb3)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在这里找到它们：👉 [https://huggingface.co/sb3](https://huggingface.co/sb3)
- en: 'Some examples:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一些示例：
- en: 'Asteroids: [https://huggingface.co/sb3/dqn-AsteroidsNoFrameskip-v4](https://huggingface.co/sb3/dqn-AsteroidsNoFrameskip-v4)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Asteroids: [https://huggingface.co/sb3/dqn-AsteroidsNoFrameskip-v4](https://huggingface.co/sb3/dqn-AsteroidsNoFrameskip-v4)'
- en: 'Beam Rider: [https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4](https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Beam Rider: [https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4](https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4)'
- en: 'Breakout: [https://huggingface.co/sb3/dqn-BreakoutNoFrameskip-v4](https://huggingface.co/sb3/dqn-BreakoutNoFrameskip-v4)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Breakout: [https://huggingface.co/sb3/dqn-BreakoutNoFrameskip-v4](https://huggingface.co/sb3/dqn-BreakoutNoFrameskip-v4)'
- en: 'Road Runner: [https://huggingface.co/sb3/dqn-RoadRunnerNoFrameskip-v4](https://huggingface.co/sb3/dqn-RoadRunnerNoFrameskip-v4)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Road Runner: [https://huggingface.co/sb3/dqn-RoadRunnerNoFrameskip-v4](https://huggingface.co/sb3/dqn-RoadRunnerNoFrameskip-v4)'
- en: 'Let’s load an agent playing Beam Rider: [https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4](https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载一个玩Beam Rider的代理：[https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4](https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4)
- en: We download the model using `rl_zoo3.load_from_hub`, and place it in a new folder
    that we can call `rl_trained`
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用`rl_zoo3.load_from_hub`下载模型，并将其放在一个新文件夹中，我们可以称之为`rl_trained`
- en: '[PRE14]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Let’s evaluate if for 5000 timesteps
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们评估5000个时间步长
- en: '[PRE15]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Why not trying to train your own **Deep Q-Learning Agent playing BeamRiderNoFrameskip-v4?
    🏆.**
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不尝试训练您自己的**Deep Q-Learning代理玩BeamRiderNoFrameskip-v4？🏆。**
- en: If you want to try, check [https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4#hyperparameters](https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4#hyperparameters)
    **in the model card, you have the hyperparameters of the trained agent.**
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想尝试，请查看[https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4#hyperparameters](https://huggingface.co/sb3/dqn-BeamRiderNoFrameskip-v4#hyperparameters)
    **在模型卡中，您可以看到训练代理的超参数。**
- en: But finding hyperparameters can be a daunting task. Fortunately, we’ll see in
    the next Unit, how we can **use Optuna for optimizing the Hyperparameters 🔥.**
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 但是找到超参数可能是一项艰巨的任务。幸运的是，我们将在下一个单元中看到如何**使用Optuna来优化超参数🔥。**
- en: Some additional challenges 🏆
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一些额外的挑战🏆
- en: The best way to learn **is to try things by your own**!
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 学习的最佳方式是**自己尝试**！
- en: In the [Leaderboard](https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard)
    you will find your agents. Can you get to the top?
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在[排行榜](https://huggingface.co/spaces/huggingface-projects/Deep-Reinforcement-Learning-Leaderboard)中，您将找到您的代理。您能登顶吗？
- en: 'Here’s a list of environments you can try to train your agent with:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您可以尝试训练代理的环境列表：
- en: BeamRiderNoFrameskip-v4
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BeamRiderNoFrameskip-v4
- en: BreakoutNoFrameskip-v4
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BreakoutNoFrameskip-v4
- en: EnduroNoFrameskip-v4
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EnduroNoFrameskip-v4
- en: PongNoFrameskip-v4
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PongNoFrameskip-v4
- en: 'Also, **if you want to learn to implement Deep Q-Learning by yourself**, you
    definitely should look at CleanRL implementation: [https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py](https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，**如果您想自己学习实现深度Q学习**，您绝对应该查看CleanRL的实现：[https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py](https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/dqn_atari.py)
- en: '![Environments](../Images/bf441b005cda192d0dc86eb42475aeb3.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![环境](../Images/bf441b005cda192d0dc86eb42475aeb3.png)'
- en: '* * *'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Congrats on finishing this chapter!
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜您完成了本章！
- en: If you’re still feel confused with all these elements…it’s totally normal! **This
    was the same for me and for all people who studied RL.**
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您仍然对所有这些元素感到困惑...这是完全正常的！**对我和所有学习RL的人来说都是如此。**
- en: Take time to really **grasp the material before continuing and try the additional
    challenges**. It’s important to master these elements and having a solid foundations.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前花时间真正**掌握材料并尝试额外的挑战**。掌握这些元素并建立坚实的基础非常重要。
- en: In the next unit, **we’re going to learn about [Optuna](https://optuna.org/)**.
    One of the most critical task in Deep Reinforcement Learning is to find a good
    set of training hyperparameters. And Optuna is a library that helps you to automate
    the search.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个单元中，**我们将学习有关[Optuna](https://optuna.org/)的内容**。在深度强化学习中，找到一组良好的训练超参数是最关键的任务之一。Optuna是一个帮助您自动化搜索的库。
- en: This is a course built with you 👷🏿‍♀️
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这是一个与您共同构建的课程👷🏿‍♀️
- en: Finally, we want to improve and update the course iteratively with your feedback.
    If you have some, please fill this form 👉 [https://forms.gle/3HgA7bEHwAmmLfwh9](https://forms.gle/3HgA7bEHwAmmLfwh9)
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们希望根据您的反馈逐步改进和更新课程。如果您有意见，请填写此表格👉 [https://forms.gle/3HgA7bEHwAmmLfwh9](https://forms.gle/3HgA7bEHwAmmLfwh9)
- en: We’re constantly trying to improve our tutorials, so **if you find some issues
    in this notebook**, please [open an issue on the Github Repo](https://github.com/huggingface/deep-rl-class/issues).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不断努力改进我们的教程，所以**如果您在本笔记本中发现问题**，请[在Github Repo上提出问题](https://github.com/huggingface/deep-rl-class/issues)。
- en: See you on Bonus unit 2! 🔥
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在奖励单元2见！🔥
- en: Keep Learning, Stay Awesome 🤗
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 继续学习，保持精彩🤗
