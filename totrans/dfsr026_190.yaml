- en: DEISMultistepScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DEISMultistepScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/deis](https://huggingface.co/docs/diffusers/api/schedulers/deis)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/deis](https://huggingface.co/docs/diffusers/api/schedulers/deis)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Diffusion Exponential Integrator Sampler (DEIS) is proposed in [Fast Sampling
    of Diffusion Models with Exponential Integrator](https://huggingface.co/papers/2204.13902)
    by Qinsheng Zhang and Yongxin Chen. `DEISMultistepScheduler` is a fast high order
    solver for diffusion ordinary differential equations (ODEs).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 扩散指数积分器采样器（DEIS）由Qinsheng Zhang和Yongxin Chen在[使用指数积分器快速采样扩散模型](https://huggingface.co/papers/2204.13902)中提出。`DEISMultistepScheduler`是扩散常微分方程（ODEs）的快速高阶求解器。
- en: This implementation modifies the polynomial fitting formula in log-rho space
    instead of the original linear `t` space in the DEIS paper. The modification enjoys
    closed-form coefficients for exponential multistep update instead of replying
    on the numerical solver.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实现修改了DEIS论文中原始线性`t`空间的多项式拟合公式，改为在log-rho空间中。这种修改享有指数多步更新的封闭形式系数，而不是依赖于数值求解器。
- en: 'The abstract from the paper is:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 论文摘要如下：
- en: '*The past few years have witnessed the great success of Diffusion models~(DMs)
    in generating high-fidelity samples in generative modeling tasks. A major limitation
    of the DM is its notoriously slow sampling procedure which normally requires hundreds
    to thousands of time discretization steps of the learned diffusion process to
    reach the desired accuracy. Our goal is to develop a fast sampling method for
    DMs with a much less number of steps while retaining high sample quality. To this
    end, we systematically analyze the sampling procedure in DMs and identify key
    factors that affect the sample quality, among which the method of discretization
    is most crucial. By carefully examining the learned diffusion process, we propose
    Diffusion Exponential Integrator Sampler~(DEIS). It is based on the Exponential
    Integrator designed for discretizing ordinary differential equations (ODEs) and
    leverages a semilinear structure of the learned diffusion process to reduce the
    discretization error. The proposed method can be applied to any DMs and can generate
    high-fidelity samples in as few as 10 steps. In our experiments, it takes about
    3 minutes on one A6000 GPU to generate 50k images from CIFAR10\. Moreover, by
    directly using pre-trained DMs, we achieve the state-of-art sampling performance
    when the number of score function evaluation~(NFE) is limited, e.g., 4.17 FID
    with 10 NFEs, 3.37 FID, and 9.74 IS with only 15 NFEs on CIFAR10\. Code is available
    at [this https URL](https://github.com/qsh-zh/deis).*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*过去几年见证了扩散模型（DMs）在生成生成建模任务中高保真样本方面取得的巨大成功。 DM的一个主要限制是其臭名昭著的缓慢采样过程，通常需要数百到数千个时间离散化步骤来达到所需的精度。我们的目标是为DMs开发一种快速采样方法，步数要少得多，同时保持高样本质量。为此，我们系统地分析了DMs中的采样过程，并确定了影响样本质量的关键因素，其中离散化方法最为关键。通过仔细检查学习到的扩散过程，我们提出了扩散指数积分器采样器（DEIS）。它基于为离散化常微分方程（ODEs）设计的指数积分器，并利用学习到的扩散过程的半线性结构来减少离散化误差。该方法可以应用于任何DMs，并且可以在仅10步的情况下生成高保真样本。在我们的实验中，使用一个A6000
    GPU从CIFAR10生成50k图像大约需要3分钟。此外，通过直接使用预训练的DMs，我们在评分函数评估次数有限的情况下实现了最先进的采样性能，例如，在CIFAR10上仅使用15个评分函数评估次数时，FID为4.17，FID为3.37，IS为9.74。代码可在[this
    https URL](https://github.com/qsh-zh/deis)上找到。*'
- en: Tips
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提示
- en: It is recommended to set `solver_order` to 2 or 3, while `solver_order=1` is
    equivalent to [DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 建议将`solver_order`设置为2或3，而`solver_order=1`等同于[DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler)。
- en: Dynamic thresholding from [Imagen](https://huggingface.co/papers/2205.11487)
    is supported, and for pixel-space diffusion models, you can set `thresholding=True`
    to use the dynamic thresholding.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 支持来自[Imagen](https://huggingface.co/papers/2205.11487)的动态阈值，对于像素空间扩散模型，您可以设置`thresholding=True`来使用动态阈值。
- en: DEISMultistepScheduler
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DEISMultistepScheduler
- en: '### `class diffusers.DEISMultistepScheduler`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.DEISMultistepScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L74)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L74)'
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_train_timesteps` (`int`, 默认为1000) — 训练模型的扩散步数。'
- en: '`beta_start` (`float`, defaults to 0.0001) — The starting `beta` value of inference.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_start` (`float`, 默认为0.0001) — 推断的起始`beta`值。'
- en: '`beta_end` (`float`, defaults to 0.02) — The final `beta` value.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_end` (`float`, 默认为0.02) — 最终的`beta`值。'
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`,
    `scaled_linear`, or `squaredcos_cap_v2`.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_schedule` (`str`, 默认为`"linear"`) — beta调度，从beta范围到用于步进模型的一系列beta的映射。选择`linear`、`scaled_linear`或`squaredcos_cap_v2`。'
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trained_betas` (`np.ndarray`, *optional*) — 传递一个beta数组直接给构造函数，以绕过`beta_start`和`beta_end`。'
- en: '`solver_order` (`int`, defaults to 2) — The DEIS order which can be `1` or
    `2` or `3`. It is recommended to use `solver_order=2` for guided sampling, and
    `solver_order=3` for unconditional sampling.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`solver_order` (`int`, 默认为2) — DEIS阶数，可以是`1`或`2`或`3`。建议对于引导采样使用`solver_order=2`，对于无条件采样使用`solver_order=3`。'
- en: '`prediction_type` (`str`, defaults to `epsilon`) — Prediction type of the scheduler
    function; can be `epsilon` (predicts the noise of the diffusion process), `sample`
    (directly predicts the noisy sample`) or` v_prediction` (see section 2.4 of [Imagen
    Video](https://imagen.research.google/video/paper.pdf) paper).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prediction_type` (`str`, 默认为`epsilon`) — 调度函数的预测类型；可以是`epsilon`（预测扩散过程的噪声），`sample`（直接预测有噪声的样本）或`v_prediction`（参见[Imagen
    Video](https://imagen.research.google/video/paper.pdf)论文第2.4节）。'
- en: '`thresholding` (`bool`, defaults to `False`) — Whether to use the “dynamic
    thresholding” method. This is unsuitable for latent-space diffusion models such
    as Stable Diffusion.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`thresholding` (`bool`, 默认为`False`) — 是否使用“动态阈值”方法。这不适用于Latent-space扩散模型，如Stable
    Diffusion。'
- en: '`dynamic_thresholding_ratio` (`float`, defaults to 0.995) — The ratio for the
    dynamic thresholding method. Valid only when `thresholding=True`.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dynamic_thresholding_ratio` (`float`, 默认为0.995) — 动态阈值方法的比率。仅在`thresholding=True`时有效。'
- en: '`sample_max_value` (`float`, defaults to 1.0) — The threshold value for dynamic
    thresholding. Valid only when `thresholding=True`.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample_max_value` (`float`, 默认为1.0) — 动态阈值的阈值值。仅在`thresholding=True`时有效。'
- en: '`algorithm_type` (`str`, defaults to `deis`) — The algorithm type for the solver.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`algorithm_type` (`str`, 默认为`deis`) — 求解器的算法类型。'
- en: '`lower_order_final` (`bool`, defaults to `True`) — Whether to use lower-order
    solvers in the final steps. Only valid for < 15 inference steps.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lower_order_final` (`bool`, 默认为`True`) — 是否在最后步骤中使用低阶求解器。仅对<15个推断步骤有效。'
- en: '`use_karras_sigmas` (`bool`, *optional*, defaults to `False`) — Whether to
    use Karras sigmas for step sizes in the noise schedule during the sampling process.
    If `True`, the sigmas are determined according to a sequence of noise levels {σi}.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_karras_sigmas` (`bool`, *可选*, 默认为`False`) — 在采样过程中是否使用Karras sigmas作为噪声计划中的步长。如果为`True`，则根据噪声级别序列{σi}确定sigmas。'
- en: '`timestep_spacing` (`str`, defaults to `"linspace"`) — The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep_spacing` (`str`, 默认为`"linspace"`) — 时间步长应如何缩放。有关更多信息，请参考[Common Diffusion
    Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)的表2。'
- en: '`steps_offset` (`int`, defaults to 0) — An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use step 0 for the previous alpha product like in Stable Diffusion.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`steps_offset` (`int`, 默认为0) — 添加到推断步骤的偏移量。您可以使用`offset=1`和`set_alpha_to_one=False`的组合，使最后一步使用步骤0来计算先前alpha乘积，就像在Stable
    Diffusion中一样。'
- en: '`DEISMultistepScheduler` is a fast high order solver for diffusion ordinary
    differential equations (ODEs).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`DEISMultistepScheduler`是扩散常微分方程（ODEs）的快速高阶求解器。'
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型继承自[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)和[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。查看超类文档以了解库为所有调度程序实现的通用方法，如加载和保存。
- en: '#### `convert_model_output`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `convert_model_output`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L351)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L351)'
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from the learned diffusion
    model.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`int`) — The current discrete timestep in the diffusion chain.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`) — 扩散链中的当前离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 扩散过程创建的样本的当前实例。'
- en: Returns
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: The converted model output.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 转换后的模型输出。
- en: Convert the model output to the corresponding type the DEIS algorithm needs.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 将模型输出转换为DEIS算法所需的相应类型。
- en: '#### `deis_first_order_update`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `deis_first_order_update`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L408)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L408)'
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from the learned diffusion
    model.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`int`) — The current discrete timestep in the diffusion chain.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`) — 扩散链中的当前离散时间步。'
- en: '`prev_timestep` (`int`) — The previous discrete timestep in the diffusion chain.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prev_timestep` (`int`) — 扩散链中的上一个离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 扩散过程创建的样本的当前实例。'
- en: Returns
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: The sample tensor at the previous timestep.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个时间步的样本张量。
- en: One step for the first-order DEIS (equivalent to DDIM).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第一阶DEIS的一步（相当于DDIM）。
- en: '#### `multistep_deis_second_order_update`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `multistep_deis_second_order_update`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L466)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L466)'
- en: '[PRE3]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output_list` (`List[torch.FloatTensor]`) — The direct outputs from learned
    diffusion model at current and latter timesteps.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output_list` (`List[torch.FloatTensor]`) — 当前和后续时间步的学习扩散模型的直接输出。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 扩散过程创建的样本的当前实例。'
- en: Returns
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: The sample tensor at the previous timestep.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个时间步的样本张量。
- en: One step for the second-order multistep DEIS.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 第二阶多步DEIS的一步。
- en: '#### `multistep_deis_third_order_update`'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `multistep_deis_third_order_update`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L535)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L535)'
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output_list` (`List[torch.FloatTensor]`) — The direct outputs from learned
    diffusion model at current and latter timesteps.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output_list` (`List[torch.FloatTensor]`) — 当前和后续时间步的学习扩散模型的直接输出。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    diffusion process.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 扩散过程创建的样本的当前实例。'
- en: Returns
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: The sample tensor at the previous timestep.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个时间步的样本张量。
- en: One step for the third-order multistep DEIS.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 第三阶多步DEIS的一步。
- en: '#### `scale_model_input`'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L707)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L707)'
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 输入样本。'
- en: Returns
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '`torch.FloatTensor`'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经过缩放的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度器可互换。
- en: '#### `set_timesteps`'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L199)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L199)'
- en: '[PRE6]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_inference_steps` (`int`) — 使用预训练模型生成样本时使用的扩散步骤数。'
- en: '`device` (`str` or `torch.device`, *optional*) — The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`str` 或 `torch.device`，*可选*) — 时间步应移动到的设备。如果为`None`，则不移动时间步。'
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于扩散链的离散时间步骤（在推断之前运行）。
- en: '#### `step`'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L642)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_deis_multistep.py#L642)'
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`float`) — The current discrete timestep in the diffusion chain.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`float`) — 扩散链中的当前离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 由扩散过程创建的样本的当前实例。'
- en: '`return_dict` (`bool`) — Whether or not to return a [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or `tuple`.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`) — 是否返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或`tuple`。'
- en: Returns
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or `tuple`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    或 `tuple`'
- en: If return_dict is `True`, [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`return_dict`为`True`，则返回[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the sample with the multistep DEIS.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE从前一个时间步预测样本。此函数使用多步DEIS传播样本。
- en: SchedulerOutput
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SchedulerOutput
- en: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
- en: '[PRE8]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample `(x_{t-1})` of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prev_sample` (`torch.FloatTensor`，对于图像为形状为`(batch_size, num_channels, height,
    width)`的张量) — 前一个时间步的计算样本`(x_{t-1})`。`prev_sample`应在去噪循环中作为下一个模型输入使用。'
- en: Base class for the output of a scheduler’s `step` function.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 调度器`step`函数的输出的基类。
