["```py\n>>> from transformers import ViTMSNModel, ViTMSNConfig\n\n>>> # Initializing a ViT MSN vit-msn-base style configuration\n>>> configuration = ViTConfig()\n\n>>> # Initializing a model from the vit-msn-base style configuration\n>>> model = ViTMSNModel(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from transformers import AutoImageProcessor, ViTMSNModel\n>>> import torch\n>>> from PIL import Image\n>>> import requests\n\n>>> url = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> image_processor = AutoImageProcessor.from_pretrained(\"facebook/vit-msn-small\")\n>>> model = ViTMSNModel.from_pretrained(\"facebook/vit-msn-small\")\n>>> inputs = image_processor(images=image, return_tensors=\"pt\")\n>>> with torch.no_grad():\n...     outputs = model(**inputs)\n>>> last_hidden_states = outputs.last_hidden_state\n```", "```py\n>>> from transformers import AutoImageProcessor, ViTMSNForImageClassification\n>>> import torch\n>>> from PIL import Image\n>>> import requests\n\n>>> torch.manual_seed(2)\n>>> url = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> image_processor = AutoImageProcessor.from_pretrained(\"facebook/vit-msn-small\")\n>>> model = ViTMSNForImageClassification.from_pretrained(\"facebook/vit-msn-small\")\n\n>>> inputs = image_processor(images=image, return_tensors=\"pt\")\n>>> with torch.no_grad():\n...     logits = model(**inputs).logits\n>>> # model predicts one of the 1000 ImageNet classes\n>>> predicted_label = logits.argmax(-1).item()\n>>> print(model.config.id2label[predicted_label])\nKerry blue terrier\n```"]