["```py\n{\n    \"adapter-transformers\": {\n        filter: [\n            {\n                term: { path: \"adapter_config.json\" },\n            },\n        ],\n    },\n    \"asteroid\": {\n        filter: [\n            {\n                term: { path: \"pytorch_model.bin\" },\n            },\n        ],\n    },\n    \"flair\": {\n        filter: [\n            {\n                term: { path: \"pytorch_model.bin\" },\n            },\n        ],\n    },\n    \"keras\": {\n        filter: [\n            {\n                term: { path: \"saved_model.pb\" },\n            },\n        ],\n    },\n    \"ml-agents\": {\n        filter: [\n            {\n                wildcard: { path: \"*.onnx\" },\n            },\n        ],\n    },\n    \"nemo\": {\n        filter: [\n            {\n                wildcard: { path: \"*.nemo\" },\n            },\n        ],\n    },\n    \"open_clip\": {\n        filter: [\n            {\n                wildcard: { path: \"*pytorch_model.bin\" },\n            },\n        ],\n    },\n    \"sample-factory\": {\n        filter: [\n            {\n                term: { path: \"cfg.json\" },\n            },\n        ],\n    },\n    \"paddlenlp\": {\n        filter: [\n            {\n                term: { path: \"model_config.json\" },\n            },\n        ],\n    },\n    \"speechbrain\": {\n        filter: [\n            {\n                term: { path: \"hyperparams.yaml\" },\n            },\n        ],\n    },\n    \"sklearn\": {\n        filter: [\n            {\n                term: { path: \"sklearn_model.joblib\" },\n            },\n        ],\n    },\n    \"spacy\": {\n        filter: [\n            {\n                wildcard: { path: \"*.whl\" },\n            },\n        ],\n    },\n    \"stanza\": {\n        filter: [\n            {\n                term: { path: \"models/default.zip\" },\n            },\n        ],\n    },\n    \"stable-baselines3\": {\n        filter: [\n            {\n                wildcard: { path: \"*.zip\" },\n            },\n        ],\n    },\n    \"timm\": {\n        filter: [\n            {\n                terms: { path: [\"pytorch_model.bin\", \"model.safetensors\"] },\n            },\n        ],\n    },\n    \"diffusers\": {\n        /// Filter out nested safetensors and pickle weights to avoid double counting downloads from the diffusers lib\n        must_not: [\n            {\n                wildcard: { path: \"*/*.safetensors\" },\n            },\n            {\n                wildcard: { path: \"*/*.bin\" },\n            },\n        ],\n        /// Include documents that match at least one of the following rules\n        should: [\n            /// Downloaded from diffusers lib\n            {\n                term: { path: \"model_index.json\" },\n            },\n            /// Direct downloads (LoRa, Auto1111 and others)\n            {\n                wildcard: { path: \"*.safetensors\" },\n            },\n            {\n                wildcard: { path: \"*.ckpt\" },\n            },\n            {\n                wildcard: { path: \"*.bin\" },\n            },\n        ],\n        minimum_should_match: 1,\n    },\n    \"peft\": {\n        filter: [\n            {\n                term: { path: \"adapter_config.json\" },\n            },\n        ],\n    }\n}\n```"]