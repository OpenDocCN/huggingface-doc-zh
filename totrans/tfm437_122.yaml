- en: Processors
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理器
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/processors](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/processors)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/processors](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/processors)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Processors can mean two different things in the Transformers library:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Transformers 库中，处理器可以有两种不同的含义：
- en: the objects that pre-process inputs for multi-modal models such as [Wav2Vec2](../model_doc/wav2vec2)
    (speech and text) or [CLIP](../model_doc/clip) (text and vision)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为多模态模型预处理输入的对象，如[Wav2Vec2](../model_doc/wav2vec2)（语音和文本）或[CLIP](../model_doc/clip)（文本和视觉）
- en: deprecated objects that were used in older versions of the library to preprocess
    data for GLUE or SQUAD.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在库的旧版本中用于预处理 GLUE 或 SQUAD 数据的已弃用对象。
- en: Multi-modal processors
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多模态处理器
- en: Any multi-modal model will require an object to encode or decode the data that
    groups several modalities (among text, vision and audio). This is handled by objects
    called processors, which group together two or more processing objects such as
    tokenizers (for the text modality), image processors (for vision) and feature
    extractors (for audio).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 任何多模态模型都需要一个对象来编码或解码将多个模态（文本、视觉和音频）组合在一起的数据。这由称为处理器的对象处理，这些对象将多个处理对象（如文本模态的分词器、视觉的图像处理器和音频的特征提取器）组合在一起。
- en: 'Those processors inherit from the following base class that implements the
    saving and loading functionality:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些处理器继承自实现保存和加载功能的以下基类：
- en: '### `class transformers.ProcessorMixin`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.ProcessorMixin`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L56)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L56)'
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is a mixin used to provide saving/loading functionality for all processor
    classes.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个混合类，用于为所有处理器类提供保存/加载功能。
- en: '#### `from_args_and_dict`'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_args_and_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L365)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L365)'
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`processor_dict` (`Dict[str, Any]`) — Dictionary that will be used to instantiate
    the processor object. Such a dictionary can be retrieved from a pretrained checkpoint
    by leveraging the `~processing_utils.ProcessingMixin.to_dict` method.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`processor_dict` (`Dict[str, Any]`) — 将用于实例化处理器对象的字典。可以通过利用`~processing_utils.ProcessingMixin.to_dict`方法从预训练检查点中检索这样的字典。'
- en: '`kwargs` (`Dict[str, Any]`) — Additional parameters from which to initialize
    the processor object.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`) — 用于初始化处理器对象的其他参数。'
- en: Returns
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`~processing_utils.ProcessingMixin`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`~processing_utils.ProcessingMixin`'
- en: The processor object instantiated from those parameters.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些参数实例化的处理器对象。
- en: Instantiates a type of `~processing_utils.ProcessingMixin` from a Python dictionary
    of parameters.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Python 参数字典中实例化`~processing_utils.ProcessingMixin`类型。
- en: '#### `from_pretrained`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L406)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L406)'
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — This can be either:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str`或`os.PathLike`) — 这可以是：'
- en: a string, the *model id* of a pretrained feature_extractor hosted inside a model
    repo on huggingface.co. Valid model ids can be located at the root-level, like
    `bert-base-uncased`, or namespaced under a user or organization name, like `dbmdz/bert-base-german-cased`.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练特征提取器的*模型标识*，托管在 huggingface.co 上的模型仓库内。有效的模型标识可以位于根级别，如`bert-base-uncased`，或者在用户或组织名称下命名空间化，如`dbmdz/bert-base-german-cased`。
- en: a path to a *directory* containing a feature extractor file saved using the
    [save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.save_pretrained)
    method, e.g., `./my_model_directory/`.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*目录*的路径，其中包含使用[save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.save_pretrained)方法保存的特征提取器文件，例如，`./my_model_directory/`。
- en: a path or url to a saved feature extractor JSON *file*, e.g., `./my_model_directory/preprocessor_config.json`.
    **kwargs — Additional keyword arguments passed along to both [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.from_pretrained)
    and `~tokenization_utils_base.PreTrainedTokenizer.from_pretrained`.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存的特征提取器 JSON *文件*的路径或 URL，例如，`./my_model_directory/preprocessor_config.json`。**kwargs
    — 传递给[from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.from_pretrained)和`~tokenization_utils_base.PreTrainedTokenizer.from_pretrained`的其他关键字参数。
- en: Instantiate a processor associated with a pretrained model.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化与预训练模型相关联的处理器。
- en: This class method is simply calling the feature extractor [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.from_pretrained),
    image processor [ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)
    and the tokenizer `~tokenization_utils_base.PreTrainedTokenizer.from_pretrained`
    methods. Please refer to the docstrings of the methods above for more information.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类方法只是调用特征提取器[from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.from_pretrained)、图像处理器[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)和分词器`~tokenization_utils_base.PreTrainedTokenizer.from_pretrained`方法。请参考上述方法的文档字符串以获取更多信息。
- en: '#### `get_processor_dict`'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_processor_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L256)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L256)'
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — The identifier of
    the pre-trained checkpoint from which we want the dictionary of parameters.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str`或`os.PathLike`) — 我们想要参数字典的预训练检查点的标识符。'
- en: '`subfolder` (`str`, *optional*, defaults to `""`) — In case the relevant files
    are located inside a subfolder of the model repo on huggingface.co, you can specify
    the folder name here.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subfolder` (`str`，*可选*，默认为 `""`) — 如果相关文件位于 huggingface.co 上模型存储库的子文件夹中，可以在此处指定文件夹名称。'
- en: Returns
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Tuple[Dict, Dict]`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`Tuple[Dict, Dict]`'
- en: The dictionary(ies) that will be used to instantiate the processor object.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 将用于实例化处理器对象的字典。
- en: From a `pretrained_model_name_or_path`, resolve to a dictionary of parameters,
    to be used for instantiating a processor of type `~processing_utils.ProcessingMixin`
    using `from_args_and_dict`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `pretrained_model_name_or_path`，解析为参数字典，用于使用 `from_args_and_dict` 实例化类型为 `~processing_utils.ProcessingMixin`
    的处理器。
- en: '#### `push_to_hub`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `push_to_hub`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/utils/hub.py#L755)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/utils/hub.py#L755)'
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The name of the repository you want to push your processor
    to. It should contain your organization name when pushing to a given organization.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要将处理器推送到的存储库的名称。在推送到给定组织时，应包含您的组织名称。'
- en: '`use_temp_dir` (`bool`, *optional*) — Whether or not to use a temporary directory
    to store the files saved before they are pushed to the Hub. Will default to `True`
    if there is no directory named like `repo_id`, `False` otherwise.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_temp_dir` (`bool`，*可选*) — 是否使用临时目录来存储在推送到 Hub 之前保存的文件。如果没有名为 `repo_id`
    的目录，则默认为 `True`，否则为 `False`。'
- en: '`commit_message` (`str`, *optional*) — Message to commit while pushing. Will
    default to `"Upload processor"`.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`，*可选*) — 推送时要提交的消息。默认为 `"Upload processor"`。'
- en: '`private` (`bool`, *optional*) — Whether or not the repository created should
    be private.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private` (`bool`，*可选*) — 是否应该创建的存储库是私有的。'
- en: '`token` (`bool` or `str`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, will use the token generated when running `huggingface-cli
    login` (stored in `~/.huggingface`). Will default to `True` if `repo_url` is not
    specified.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`bool` 或 `str`，*可选*) — 用作远程文件的 HTTP bearer 授权的令牌。如果为 `True`，将使用运行
    `huggingface-cli login` 时生成的令牌（存储在 `~/.huggingface`）。如果未指定 `repo_url`，则默认为 `True`。'
- en: '`max_shard_size` (`int` or `str`, *optional*, defaults to `"5GB"`) — Only applicable
    for models. The maximum size for a checkpoint before being sharded. Checkpoints
    shard will then be each of size lower than this size. If expressed as a string,
    needs to be digits followed by a unit (like `"5MB"`). We default it to `"5GB"`
    so that users can easily load models on free-tier Google Colab instances without
    any CPU OOM issues.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_shard_size` (`int` 或 `str`，*可选*，默认为 `"5GB"`) — 仅适用于模型。在分片之前的检查点的最大大小。然后，检查点分片的大小将小于此大小。如果表示为字符串，需要是数字后跟一个单位（如
    `"5MB"`）。我们将其默认为 `"5GB"`，以便用户可以在免费的 Google Colab 实例上轻松加载模型，而不会出现任何 CPU OOM 问题。'
- en: '`create_pr` (`bool`, *optional*, defaults to `False`) — Whether or not to create
    a PR with the uploaded files or directly commit.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_pr` (`bool`，*可选*，默认为 `False`) — 是否创建一个包含上传文件的 PR 或直接提交。'
- en: '`safe_serialization` (`bool`, *optional*, defaults to `True`) — Whether or
    not to convert the model weights in safetensors format for safer serialization.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe_serialization` (`bool`，*可选*，默认为 `True`) — 是否将模型权重转换为 safetensors 格式以进行更安全的序列化。'
- en: '`revision` (`str`, *optional*) — Branch to push the uploaded files to.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`，*可选*) — 要将上传的文件推送到的分支。'
- en: '`commit_description` (`str`, *optional*) — The description of the commit that
    will be created'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_description` (`str`，*可选*) — 将创建的提交的描述'
- en: '`tags` (`List[str]`, *optional*) — List of tags to push on the Hub.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tags` (`List[str]`，*可选*) — 要推送到 Hub 上的标签列表。'
- en: Upload the processor files to the 🤗 Model Hub.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 将处理器文件上传到 🤗 模型中心。
- en: 'Examples:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '#### `register_for_auto_class`'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `register_for_auto_class`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L471)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L471)'
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`auto_class` (`str` or `type`, *optional*, defaults to `"AutoProcessor"`) —
    The auto class to register this new feature extractor with.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_class` (`str` 或 `type`，*可选*，默认为 `"AutoProcessor"`) — 要将此新特征提取器注册到的自动类。'
- en: Register this class with a given auto class. This should only be used for custom
    feature extractors as the ones in the library are already mapped with `AutoProcessor`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 将此类注册到给定的自动类中。这应该仅用于自定义特征提取器，因为库中的特征提取器已经与 `AutoProcessor` 映射。
- en: This API is experimental and may have some slight breaking changes in the next
    releases.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 此 API 是实验性的，可能在下一个版本中有一些轻微的破坏性更改。
- en: '#### `save_pretrained`'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `save_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L167)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L167)'
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`save_directory` (`str` or `os.PathLike`) — Directory where the feature extractor
    JSON file and the tokenizer files will be saved (directory will be created if
    it does not exist).'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save_directory` (`str` 或 `os.PathLike`) — 将保存特征提取器 JSON 文件和分词器文件的目录（如果目录不存在，则将创建该目录）。'
- en: '`push_to_hub` (`bool`, *optional*, defaults to `False`) — Whether or not to
    push your model to the Hugging Face model hub after saving it. You can specify
    the repository you want to push to with `repo_id` (will default to the name of
    `save_directory` in your namespace).'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`push_to_hub` (`bool`，*可选*，默认为 `False`) — 保存模型后是否将模型推送到 Hugging Face 模型中心。您可以使用
    `repo_id` 指定要推送到的存储库（将默认为您的命名空间中的 `save_directory` 的名称）。'
- en: '`kwargs` (`Dict[str, Any]`, *optional*) — Additional key word arguments passed
    along to the [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    method.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`，*可选*) — 传递给 [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    方法的其他关键字参数。'
- en: Saves the attributes of this processor (feature extractor, tokenizer…) in the
    specified directory so that it can be reloaded using the [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.ProcessorMixin.from_pretrained)
    method.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 保存此处理器的属性（特征提取器、分词器等）到指定目录，以便可以使用 [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.ProcessorMixin.from_pretrained)
    方法重新加载。
- en: This class method is simply calling [save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.save_pretrained)
    and [save_pretrained()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.save_pretrained).
    Please refer to the docstrings of the methods above for more information.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类方法只是调用 [save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.save_pretrained)
    和 [save_pretrained()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.save_pretrained)。请参考上述方法的文档字符串以获取更多信息。
- en: '#### `to_dict`'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L102)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L102)'
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Returns
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '`Dict[str, Any]`'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`Dict[str, Any]`'
- en: Dictionary of all the attributes that make up this processor instance.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 包含构成此处理器实例的所有属性的字典。
- en: Serializes this instance to a Python dictionary.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为 Python 字典。
- en: '#### `to_json_file`'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_file`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L151)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L151)'
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`json_file_path` (`str` or `os.PathLike`) — Path to the JSON file in which
    this processor instance’s parameters will be saved.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`json_file_path` (`str` 或 `os.PathLike`) — 保存此处理器实例参数的 JSON 文件路径。'
- en: Save this instance to a JSON file.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例保存到 JSON 文件中。
- en: '#### `to_json_string`'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_string`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L140)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/processing_utils.py#L140)'
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Returns
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '`str`'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: String containing all the attributes that make up this feature_extractor instance
    in JSON format.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以 JSON 格式包含构成此 feature_extractor 实例的所有属性的字符串。
- en: Serializes this instance to a JSON string.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为 JSON 字符串。
- en: Deprecated processors
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 已弃用的处理器
- en: All processors follow the same architecture which is that of the [DataProcessor](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.DataProcessor).
    The processor returns a list of [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample).
    These [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)
    can be converted to [InputFeatures](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputFeatures)
    in order to be fed to the model.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 所有处理器都遵循相同的架构，即 [DataProcessor](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.DataProcessor)
    的架构。处理器返回一个 [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)
    列表。这些 [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)
    可以转换为 [InputFeatures](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputFeatures)，以便馈送到模型中。
- en: '### `class transformers.DataProcessor`'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.DataProcessor`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L80)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L80)'
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Base class for data converters for sequence classification data sets.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 用于序列分类数据集的数据转换器的基类。
- en: '#### `get_dev_examples`'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_dev_examples`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L97)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L97)'
- en: '[PRE12]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Gets a collection of [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)
    for the dev set.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为开发集获取一组 [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)。
- en: '#### `get_example_from_tensor_dict`'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_example_from_tensor_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L83)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L83)'
- en: '[PRE13]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Gets an example from a dict with tensorflow tensors.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 从带有 tensorflow 张量的字典中获取一个示例。
- en: '#### `get_labels`'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_labels`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L105)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L105)'
- en: '[PRE14]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Gets the list of labels for this data set.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 获取此数据集的标签列表。
- en: '#### `get_test_examples`'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_test_examples`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L101)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L101)'
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Gets a collection of [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)
    for the test set.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 为测试集获取一组 [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)。
- en: '#### `get_train_examples`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_train_examples`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L93)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L93)'
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Gets a collection of [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)
    for the train set.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为训练集获取一组 [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)。
- en: '#### `tfds_map`'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `tfds_map`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L109)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L109)'
- en: '[PRE17]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Some tensorflow_datasets datasets are not formatted the same way the GLUE datasets
    are. This method converts examples to the correct format.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 某些 tensorflow_datasets 数据集的格式与 GLUE 数据集不同。此方法将示例转换为正确的格式。
- en: '### `class transformers.InputExample`'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.InputExample`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L29)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L29)'
- en: '[PRE18]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: A single training/test example for simple sequence classification.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 用于简单序列分类的单个训练/测试示例。
- en: '#### `to_json_string`'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_string`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L49)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L49)'
- en: '[PRE19]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Serializes this instance to a JSON string.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为JSON字符串。
- en: '### `class transformers.InputFeatures`'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.InputFeatures`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L54)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L54)'
- en: '[PRE20]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: A single set of features of data. Property names are the same names as the corresponding
    inputs to a model.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的一组特征。属性名称与模型的相应输入名称相同。
- en: '#### `to_json_string`'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_string`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L75)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/utils.py#L75)'
- en: '[PRE21]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Serializes this instance to a JSON string.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为JSON字符串。
- en: GLUE
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GLUE
- en: '[General Language Understanding Evaluation (GLUE)](https://gluebenchmark.com/)
    is a benchmark that evaluates the performance of models across a diverse set of
    existing NLU tasks. It was released together with the paper [GLUE: A multi-task
    benchmark and analysis platform for natural language understanding](https://openreview.net/pdf?id=rJ4km2R5t7)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[通用语言理解评估（GLUE）](https://gluebenchmark.com/)是一个基准，评估模型在各种现有NLU任务上的表现。它与论文[GLUE：自然语言理解的多任务基准和分析平台](https://openreview.net/pdf?id=rJ4km2R5t7)一起发布'
- en: 'This library hosts a total of 10 processors for the following tasks: MRPC,
    MNLI, MNLI (mismatched), CoLA, SST2, STSB, QQP, QNLI, RTE and WNLI.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库为以下任务提供了总共10个处理器：MRPC，MNLI，MNLI（不匹配），CoLA，SST2，STSB，QQP，QNLI，RTE和WNLI。
- en: 'Those processors are:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这些处理器是：
- en: '`~data.processors.utils.MrpcProcessor`'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.MrpcProcessor`'
- en: '`~data.processors.utils.MnliProcessor`'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.MnliProcessor`'
- en: '`~data.processors.utils.MnliMismatchedProcessor`'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.MnliMismatchedProcessor`'
- en: '`~data.processors.utils.Sst2Processor`'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.Sst2Processor`'
- en: '`~data.processors.utils.StsbProcessor`'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.StsbProcessor`'
- en: '`~data.processors.utils.QqpProcessor`'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.QqpProcessor`'
- en: '`~data.processors.utils.QnliProcessor`'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.QnliProcessor`'
- en: '`~data.processors.utils.RteProcessor`'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.RteProcessor`'
- en: '`~data.processors.utils.WnliProcessor`'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.WnliProcessor`'
- en: Additionally, the following method can be used to load values from a data file
    and convert them to a list of [InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以下方法可用于从数据文件加载值并将其转换为[InputExample](/docs/transformers/v4.37.2/en/main_classes/processors#transformers.InputExample)列表。
- en: '#### `transformers.glue_convert_examples_to_features`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.glue_convert_examples_to_features`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/glue.py#L41)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/glue.py#L41)'
- en: '[PRE22]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Loads a data file into a list of `InputFeatures`
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据文件加载到`InputFeatures`列表中
- en: XNLI
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XNLI
- en: '[The Cross-Lingual NLI Corpus (XNLI)](https://www.nyu.edu/projects/bowman/xnli/)
    is a benchmark that evaluates the quality of cross-lingual text representations.
    XNLI is crowd-sourced dataset based on [*MultiNLI*](http://www.nyu.edu/projects/bowman/multinli/):
    pairs of text are labeled with textual entailment annotations for 15 different
    languages (including both high-resource language such as English and low-resource
    languages such as Swahili).'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[跨语言NLI语料库（XNLI）](https://www.nyu.edu/projects/bowman/xnli/)是一个基准，评估跨语言文本表示的质量。XNLI是基于[*MultiNLI*](http://www.nyu.edu/projects/bowman/multinli/)的众包数据集：文本对使用15种不同语言（包括高资源语言如英语和低资源语言如斯瓦希里语）进行文本蕴涵注释。'
- en: 'It was released together with the paper [XNLI: Evaluating Cross-lingual Sentence
    Representations](https://arxiv.org/abs/1809.05053)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 它与论文[XNLI：评估跨语言句子表示](https://arxiv.org/abs/1809.05053)一起发布
- en: 'This library hosts the processor to load the XNLI data:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库提供了加载XNLI数据的处理器：
- en: '`~data.processors.utils.XnliProcessor`'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.XnliProcessor`'
- en: Please note that since the gold labels are available on the test set, evaluation
    is performed on the test set.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于测试集上有金标签，评估是在测试集上进行的。
- en: An example using these processors is given in the [run_xnli.py](https://github.com/huggingface/transformers/tree/main/examples/pytorch/text-classification/run_xnli.py)
    script.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在[run_xnli.py](https://github.com/huggingface/transformers/tree/main/examples/pytorch/text-classification/run_xnli.py)脚本中提供了使用这些处理器的示例。
- en: SQuAD
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQuAD
- en: '[The Stanford Question Answering Dataset (SQuAD)](https://rajpurkar.github.io/SQuAD-explorer//)
    is a benchmark that evaluates the performance of models on question answering.
    Two versions are available, v1.1 and v2.0\. The first version (v1.1) was released
    together with the paper [SQuAD: 100,000+ Questions for Machine Comprehension of
    Text](https://arxiv.org/abs/1606.05250). The second version (v2.0) was released
    alongside the paper [Know What You Don’t Know: Unanswerable Questions for SQuAD](https://arxiv.org/abs/1806.03822).'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[斯坦福问答数据集（SQuAD）](https://rajpurkar.github.io/SQuAD-explorer//)是一个基准，评估模型在问答上的表现。有两个版本可用，v1.1和v2.0。第一个版本（v1.1）与论文[SQuAD：文本机器理解的10万+问题](https://arxiv.org/abs/1606.05250)一起发布。第二个版本（v2.0）与论文[知道你不知道的：SQuAD的无法回答问题](https://arxiv.org/abs/1806.03822)一起发布。'
- en: 'This library hosts a processor for each of the two versions:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库为两个版本中的每个版本提供了处理器：
- en: Processors
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理器
- en: 'Those processors are:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这些处理器是：
- en: '`~data.processors.utils.SquadV1Processor`'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.SquadV1Processor`'
- en: '`~data.processors.utils.SquadV2Processor`'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~data.processors.utils.SquadV2Processor`'
- en: They both inherit from the abstract class `~data.processors.utils.SquadProcessor`
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 它们都继承自抽象类`~data.processors.utils.SquadProcessor`
- en: '### `class transformers.data.processors.squad.SquadProcessor`'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.data.processors.squad.SquadProcessor`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L541)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L541)'
- en: '[PRE23]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Processor for the SQuAD data set. overridden by SquadV1Processor and SquadV2Processor,
    used by the version 1.1 and version 2.0 of SQuAD, respectively.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: SQuAD数据集的处理器。被SquadV1Processor和SquadV2Processor覆盖，分别由SQuAD的版本1.1和版本2.0使用。
- en: '#### `get_dev_examples`'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_dev_examples`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L629)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L629)'
- en: '[PRE24]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Returns the evaluation example from the data directory.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据目录返回评估示例。
- en: '#### `get_examples_from_dataset`'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_examples_from_dataset`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L574)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L574)'
- en: '[PRE25]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Creates a list of `SquadExample` using a TFDS dataset.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 使用TFDS数据集创建`SquadExample`列表。
- en: 'Examples:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE26]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '#### `get_train_examples`'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_train_examples`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L607)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L607)'
- en: '[PRE27]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Returns the training examples from the data directory.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据目录返回训练示例。
- en: Additionally, the following method can be used to convert SQuAD examples into
    `~data.processors.utils.SquadFeatures` that can be used as model inputs.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以下方法可用于将SQuAD示例转换为可用作模型输入的`~data.processors.utils.SquadFeatures`。
- en: '#### `transformers.squad_convert_examples_to_features`'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.squad_convert_examples_to_features`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L316)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/data/processors/squad.py#L316)'
- en: '[PRE28]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Converts a list of examples into a list of features that can be directly given
    as input to a model. It is model-dependant and takes advantage of many of the
    tokenizer’s features to create the model’s inputs.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 将示例列表转换为可以直接作为模型输入的特征列表。它取决于模型，并利用许多分词器的特性来创建模型的输入。
- en: 'Example:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: '[PRE29]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: These processors as well as the aforementioned method can be used with files
    containing the data as well as with the *tensorflow_datasets* package. Examples
    are given below.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这些处理器以及前述方法可以与包含数据的文件以及*tensorflow_datasets*包一起使用。下面给出了示例。
- en: Example usage
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例用法
- en: 'Here is an example using the processors as well as the conversion method using
    data files:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个示例，使用处理器以及使用数据文件的转换方法：
- en: '[PRE30]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Using *tensorflow_datasets* is as easy as using a data file:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 使用*tensorflow_datasets*就像使用数据文件一样简单：
- en: '[PRE31]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Another example using these processors is given in the [run_squad.py](https://github.com/huggingface/transformers/tree/main/examples/legacy/question-answering/run_squad.py)
    script.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个使用这些处理器的示例在[run_squad.py](https://github.com/huggingface/transformers/tree/main/examples/legacy/question-answering/run_squad.py)脚本中给出。
