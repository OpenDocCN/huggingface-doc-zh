- en: ScoreSdeVpScheduler
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/score_sde_vp](https://huggingface.co/docs/diffusers/api/schedulers/score_sde_vp)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: '`ScoreSdeVpScheduler` is a variance preserving stochastic differential equation
    (SDE) scheduler. It was introduced in the [Score-Based Generative Modeling through
    Stochastic Differential Equations](https://huggingface.co/papers/2011.13456) paper
    by Yang Song, Jascha Sohl-Dickstein, Diederik P. Kingma, Abhishek Kumar, Stefano
    Ermon, Ben Poole.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The abstract from the paper is:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Creating noise from data is easy; creating data from noise is generative modeling.
    We present a stochastic differential equation (SDE) that smoothly transforms a
    complex data distribution to a known prior distribution by slowly injecting noise,
    and a corresponding reverse-time SDE that transforms the prior distribution back
    into the data distribution by slowly removing the noise. Crucially, the reverse-time
    SDE depends only on the time-dependent gradient field (\aka, score) of the perturbed
    data distribution. By leveraging advances in score-based generative modeling,
    we can accurately estimate these scores with neural networks, and use numerical
    SDE solvers to generate samples. We show that this framework encapsulates previous
    approaches in score-based generative modeling and diffusion probabilistic modeling,
    allowing for new sampling procedures and new modeling capabilities. In particular,
    we introduce a predictor-corrector framework to correct errors in the evolution
    of the discretized reverse-time SDE. We also derive an equivalent neural ODE that
    samples from the same distribution as the SDE, but additionally enables exact
    likelihood computation, and improved sampling efficiency. In addition, we provide
    a new way to solve inverse problems with score-based models, as demonstrated with
    experiments on class-conditional generation, image inpainting, and colorization.
    Combined with multiple architectural improvements, we achieve record-breaking
    performance for unconditional image generation on CIFAR-10 with an Inception score
    of 9.89 and FID of 2.20, a competitive likelihood of 2.99 bits/dim, and demonstrate
    high fidelity generation of 1024 x 1024 images for the first time from a score-based
    generative model.*'
  prefs: []
  type: TYPE_NORMAL
- en: ðŸš§ This scheduler is under construction!
  prefs: []
  type: TYPE_NORMAL
- en: ScoreSdeVpScheduler
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.schedulers.ScoreSdeVpScheduler`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_sde_vp.py#L27)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`num_train_timesteps` (`int`, defaults to 2000) â€” The number of diffusion steps
    to train the model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_min` (`int`, defaults to 0.1) â€”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_max` (`int`, defaults to 20) â€”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sampling_eps` (`int`, defaults to 1e-3) â€” The end value of sampling where
    timesteps decrease progressively from 1 to epsilon.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ScoreSdeVpScheduler` is a variance preserving stochastic differential equation
    (SDE) scheduler.'
  prefs: []
  type: TYPE_NORMAL
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `set_timesteps`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_sde_vp.py#L51)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`num_inference_steps` (`int`) â€” The number of diffusion steps used when generating
    samples with a pre-trained model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`device` (`str` or `torch.device`, *optional*) â€” The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sets the continuous timesteps used for the diffusion chain (to be run before
    inference).
  prefs: []
  type: TYPE_NORMAL
- en: '#### `step_pred`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/deprecated/scheduling_sde_vp.py#L63)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`score` () â€”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`x` () â€”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`t` () â€”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`generator` (`torch.Generator`, *optional*) â€” A random number generator.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  prefs: []
  type: TYPE_NORMAL
