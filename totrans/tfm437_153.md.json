["```py\n>>> from transformers import CpmAntModel, CpmAntConfig\n\n>>> # Initializing a CPMAnt cpm-ant-10b style configuration\n>>> configuration = CpmAntConfig()\n\n>>> # Initializing a model from the cpm-ant-10b style configuration\n>>> model = CpmAntModel(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from transformers import AutoTokenizer, CpmAntModel\n>>> import torch\n\n>>> tokenizer = AutoTokenizer.from_pretrained(\"openbmb/cpm-ant-10b\")\n>>> model = CpmAntModel.from_pretrained(\"openbmb/cpm-ant-10b\")\n\n>>> inputs = tokenizer(\"Hello, my dog is cute\", return_tensors=\"pt\")\n>>> outputs = model(**inputs)\n\n>>> last_hidden_states = outputs.last_hidden_state\n```", "```py\n>>> import torch\n>>> from transformers import AutoTokenizer, CpmAntForCausalLM\n\n>>> tokenizer = AutoTokenizer.from_pretrained(\"openbmb/cpm-ant-10b\")\n>>> model = CpmAntForCausalLM.from_pretrained(\"openbmb/cpm-ant-10b\")\n\n>>> inputs = tokenizer(\"Hello, my dog is cute\", return_tensors=\"pt\")\n>>> outputs = model(**inputs, labels=inputs[\"input_ids\"])\n>>> loss = outputs.loss\n>>> logits = outputs.logits\n```"]