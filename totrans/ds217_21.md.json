["```py\n>>> from datasets import Dataset\n>>> data = [[1, 2], [3, 4]]\n>>> ds = Dataset.from_dict({\"data\": data})\n>>> ds = ds.with_format(\"jax\")\n>>> ds[0]\n{'data': DeviceArray([1, 2], dtype=int32)}\n>>> ds[:2]\n{'data': DeviceArray([\n    [1, 2],\n    [3, 4]], dtype=int32)}\n```", "```py\n>>> from datasets import DatasetDict\n>>> data = {\"train\": {\"data\": [[1, 2], [3, 4]]}, \"test\": {\"data\": [[5, 6], [7, 8]]}}\n>>> dds = DatasetDict.from_dict(data)\n>>> dds = dds.with_format(\"jax\")\n>>> dds[\"train\"][:2]\n{'data': DeviceArray([\n    [1, 2],\n    [3, 4]], dtype=int32)}\n```", "```py\n>>> import jax\n>>> from datasets import Dataset\n>>> data = [[1, 2], [3, 4]]\n>>> ds = Dataset.from_dict({\"data\": data})\n>>> device = str(jax.devices()[0])  # Not casting to `str` before passing it to `with_format` will raise a `ValueError`\n>>> ds = ds.with_format(\"jax\", device=device)\n>>> ds[0]\n{'data': DeviceArray([1, 2], dtype=int32)}\n>>> ds[0][\"data\"].device()\nTFRT_CPU_0\n>>> assert ds[0][\"data\"].device() == jax.devices()[0]\nTrue\n```", "```py\n>>> from datasets import Dataset\n>>> data = [[[1, 2],[3, 4]], [[5, 6],[7, 8]]]\n>>> ds = Dataset.from_dict({\"data\": data})\n>>> ds = ds.with_format(\"jax\")\n>>> ds[0]\n{'data': DeviceArray([[1, 2],\n             [3, 4]], dtype=int32)}\n```", "```py\n>>> from datasets import Dataset, Features, ClassLabel\n>>> labels = [0, 0, 1]\n>>> features = Features({\"label\": ClassLabel(names=[\"negative\", \"positive\"])})\n>>> ds = Dataset.from_dict({\"label\": labels}, features=features)\n>>> ds = ds.with_format(\"jax\")\n>>> ds[:3]\n{'label': DeviceArray([0, 0, 1], dtype=int32)}\n```", "```py\n>>> from datasets import Dataset, Features, Image\n>>> images = [\"path/to/image.png\"] * 10\n>>> features = Features({\"image\": Image()})\n>>> ds = Dataset.from_dict({\"image\": images}, features=features)\n>>> ds = ds.with_format(\"jax\")\n>>> ds[0][\"image\"].shape\n(512, 512, 3)\n>>> ds[0]\n{'image': DeviceArray([[[ 255, 255, 255],\n              [ 255, 255, 255],\n              ...,\n              [ 255, 255, 255],\n              [ 255, 255, 255]]], dtype=uint8)}\n>>> ds[:2][\"image\"].shape\n(2, 512, 512, 3)\n>>> ds[:2]\n{'image': DeviceArray([[[[ 255, 255, 255],\n              [ 255, 255, 255],\n              ...,\n              [ 255, 255, 255],\n              [ 255, 255, 255]]]], dtype=uint8)}\n```", "```py\n>>> from datasets import Dataset, Features, Audio\n>>> audio = [\"path/to/audio.wav\"] * 10\n>>> features = Features({\"audio\": Audio()})\n>>> ds = Dataset.from_dict({\"audio\": audio}, features=features)\n>>> ds = ds.with_format(\"jax\")\n>>> ds[0][\"audio\"][\"array\"]\nDeviceArray([-0.059021  , -0.03894043, -0.00735474, ...,  0.0133667 ,\n              0.01809692,  0.00268555], dtype=float32)\n>>> ds[0][\"audio\"][\"sampling_rate\"]\nDeviceArray(44100, dtype=int32, weak_type=True)\n```", "```py\n>>> from datasets import load_dataset\n>>> ds = load_dataset(\"mnist\")\n>>> ds = ds.with_format(\"jax\")\n>>> ds[\"train\"][0]\n{'image': DeviceArray([[  0,   0,   0, ...],\n                       [  0,   0,   0, ...],\n                       ...,\n                       [  0,   0,   0, ...],\n                       [  0,   0,   0, ...]], dtype=uint8),\n 'label': DeviceArray(5, dtype=int32)}\n```", "```py\n>>> for epoch in range(epochs):\n...     for batch in ds[\"train\"].iter(batch_size=32):\n...         x, y = batch[\"image\"], batch[\"label\"]\n...         ...\n```"]