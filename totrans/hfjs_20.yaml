- en: 'Interface: Options'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/huggingface.js/inference/interfaces/Options](https://huggingface.co/docs/huggingface.js/inference/interfaces/Options)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: Properties
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: dont _ load _ model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `dont_load_model`: `boolean`'
  prefs: []
  type: TYPE_NORMAL
- en: '(Default: false). Boolean. Do not load the model if it’s not already available.'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:15](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L15)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: fetch
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `fetch`: (`input`: `RequestInfo` | `URL`, `init?`: `RequestInit`)
    => `Promise`<`Response`>'
  prefs: []
  type: TYPE_NORMAL
- en: Type declaration
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '▸ (`input`, `init?`): `Promise`<`Response`>'
  prefs: []
  type: TYPE_NORMAL
- en: Custom fetch function to use instead of the default one, for example to use
    a proxy or edit headers.
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `input` | `RequestInfo` &#124; `URL` |'
  prefs: []
  type: TYPE_TB
- en: '| `init?` | `RequestInit` |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '`Promise`<`Response`>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:28](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L28)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: includeCredentials
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `includeCredentials`: `string` | `boolean`'
  prefs: []
  type: TYPE_NORMAL
- en: '(Default: “same-origin”). String | Boolean. Credentials to use for the request.
    If this is a string, it will be passed straight on. If it’s a boolean, true will
    be “include” and false will not send credentials at all.'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:37](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L37)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: retry _ on _ error
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `retry_on_error`: `boolean`'
  prefs: []
  type: TYPE_NORMAL
- en: '(Default: true) Boolean. If a request 503s and wait_for_model is set to false,
    the request will be retried with the same parameters but with wait_for_model set
    to true.'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:7](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L7)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: signal
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `signal`: `AbortSignal`'
  prefs: []
  type: TYPE_NORMAL
- en: Abort Controller signal to use for request interruption.
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:32](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L32)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: use _ cache
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `use_cache`: `boolean`'
  prefs: []
  type: TYPE_NORMAL
- en: '(Default: true). Boolean. There is a cache layer on Inference Endpoints (serverless)
    to speedup requests we have already seen. Most models can use those results as
    is as models are deterministic (meaning the results will be the same anyway).
    However if you use a non deterministic model, you can set this parameter to prevent
    the caching mechanism from being used resulting in a real new query.'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:11](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L11)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: use _ gpu
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `use_gpu`: `boolean`'
  prefs: []
  type: TYPE_NORMAL
- en: '(Default: false). Boolean to use GPU instead of CPU for inference (requires
    Startup plan at least).'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L19)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: wait _ for _ model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '• `Optional` `wait_for_model`: `boolean`'
  prefs: []
  type: TYPE_NORMAL
- en: '(Default: false) Boolean. If the model is not ready, wait for it instead of
    receiving 503\. It limits the number of requests required to get your inference
    done. It is advised to only set this flag to true after receiving a 503 error
    as it will limit hanging in your application to known places.'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[inference/src/types.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L24)'
  prefs: []
  type: TYPE_NORMAL
