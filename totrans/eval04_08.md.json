["```py\npip install evaluate[template]\n```", "```py\nhuggingface-cli login\n```", "```py\nevaluate-cli create \"My Metric\" --module_type \"metric\"\n```", "```py\ndef _download_and_prepare(self, dl_manager):\n    model_path = dl_manager.download_and_extract(CHECKPOINT_URLS[self.config_name])\n    self.scorer = score.BleurtScorer(os.path.join(model_path, self.config_name))\n```", "```py\ndef _download_and_prepare(self, dl_manager):\n    import nltk\n    nltk.download(\"punkt\")\n```", "```py\ndef _compute(self, references, predictions):\n    em = sum([r==p for r, p in zip(references, predictions)])/len(references)\n    return {\"exact_match\": em}\n```", "```py\nimport evaluate\nfrom evaluate.utils import launch_gradio_widget\n\nmodule = evaluate.load(\"lvwerra/element_count\")\nlaunch_gradio_widget(module)\n```", "```py\ncd PATH_TO_MODULE\ngit add .\ngit commit -m \"Add my new, shiny module.\"\ngit push\n```"]