["```py\n>>> from PIL import Image\n>>> import requests\n>>> from transformers import AutoProcessor, Kosmos2ForConditionalGeneration\n\n>>> model = Kosmos2ForConditionalGeneration.from_pretrained(\"microsoft/kosmos-2-patch14-224\")\n>>> processor = AutoProcessor.from_pretrained(\"microsoft/kosmos-2-patch14-224\")\n\n>>> url = \"https://huggingface.co/microsoft/kosmos-2-patch14-224/resolve/main/snowman.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> prompt = \"<grounding> An image of\"\n\n>>> inputs = processor(text=prompt, images=image, return_tensors=\"pt\")\n\n>>> generated_ids = model.generate(\n...     pixel_values=inputs[\"pixel_values\"],\n...     input_ids=inputs[\"input_ids\"],\n...     attention_mask=inputs[\"attention_mask\"],\n...     image_embeds=None,\n...     image_embeds_position_mask=inputs[\"image_embeds_position_mask\"],\n...     use_cache=True,\n...     max_new_tokens=64,\n... )\n>>> generated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]\n>>> processed_text = processor.post_process_generation(generated_text, cleanup_and_extract=False)\n>>> processed_text\n'<grounding> An image of<phrase> a snowman</phrase><object><patch_index_0044><patch_index_0863></object> warming himself by<phrase> a fire</phrase><object><patch_index_0005><patch_index_0911></object>.'\n\n>>> caption, entities = processor.post_process_generation(generated_text)\n>>> caption\n'An image of a snowman warming himself by a fire.'\n\n>>> entities\n[('a snowman', (12, 21), [(0.390625, 0.046875, 0.984375, 0.828125)]), ('a fire', (41, 47), [(0.171875, 0.015625, 0.484375, 0.890625)])]\n```", "```py\n>>> from transformers import Kosmos2Config, Kosmos2Model\n\n>>> # Initializing a Kosmos-2 kosmos-2-patch14-224 style configuration\n>>> configuration = Kosmos2Config()\n\n>>> # Initializing a model (with random weights) from the kosmos-2-patch14-224 style configuration\n>>> model = Kosmos2Model(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from PIL import Image\n>>> import requests\n>>> from transformers import AutoProcessor, Kosmos2Model\n\n>>> model = Kosmos2Model.from_pretrained(\"microsoft/kosmos-2-patch14-224\")\n>>> processor = AutoProcessor.from_pretrained(\"microsoft/kosmos-2-patch14-224\")\n\n>>> url = \"https://huggingface.co/microsoft/kosmos-2-patch14-224/resolve/main/snowman.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> text = (\n...     \"<grounding> An image of<phrase> a snowman</phrase><object><patch_index_0044><patch_index_0863>\"\n...     \"</object> warming himself by<phrase> a fire</phrase><object><patch_index_0005><patch_index_0911>\"\n...     \"</object>\"\n... )\n\n>>> inputs = processor(text=text, images=image, return_tensors=\"pt\", add_eos_token=True)\n\n>>> last_hidden_state = model(\n...     pixel_values=inputs[\"pixel_values\"],\n...     input_ids=inputs[\"input_ids\"],\n...     attention_mask=inputs[\"attention_mask\"],\n...     image_embeds_position_mask=inputs[\"image_embeds_position_mask\"],\n... ).last_hidden_state\n>>> list(last_hidden_state.shape)\n[1, 91, 2048]\n```", "```py\n>>> from PIL import Image\n>>> import requests\n>>> from transformers import AutoProcessor, Kosmos2ForConditionalGeneration\n\n>>> model = Kosmos2ForConditionalGeneration.from_pretrained(\"microsoft/kosmos-2-patch14-224\")\n>>> processor = AutoProcessor.from_pretrained(\"microsoft/kosmos-2-patch14-224\")\n\n>>> url = \"https://huggingface.co/microsoft/kosmos-2-patch14-224/resolve/main/snowman.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> prompt = \"<grounding> An image of\"\n\n>>> inputs = processor(text=prompt, images=image, return_tensors=\"pt\")\n\n>>> generated_ids = model.generate(\n...     pixel_values=inputs[\"pixel_values\"],\n...     input_ids=inputs[\"input_ids\"],\n...     attention_mask=inputs[\"attention_mask\"],\n...     image_embeds=None,\n...     image_embeds_position_mask=inputs[\"image_embeds_position_mask\"],\n...     use_cache=True,\n...     max_new_tokens=64,\n... )\n>>> generated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]\n>>> processed_text = processor.post_process_generation(generated_text, cleanup_and_extract=False)\n>>> processed_text\n'<grounding> An image of<phrase> a snowman</phrase><object><patch_index_0044><patch_index_0863></object> warming himself by<phrase> a fire</phrase><object><patch_index_0005><patch_index_0911></object>.'\n\n>>> caption, entities = processor.post_process_generation(generated_text)\n>>> caption\n'An image of a snowman warming himself by a fire.'\n\n>>> entities\n[('a snowman', (12, 21), [(0.390625, 0.046875, 0.984375, 0.828125)]), ('a fire', (41, 47), [(0.171875, 0.015625, 0.484375, 0.890625)])]\n```"]