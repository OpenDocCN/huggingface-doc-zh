- en: Create and share Model Cards
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和分享模型卡
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/guides/model-cards](https://huggingface.co/docs/huggingface_hub/guides/model-cards)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/huggingface_hub/guides/model-cards](https://huggingface.co/docs/huggingface_hub/guides/model-cards)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The `huggingface_hub` library provides a Python interface to create, share,
    and update Model Cards. Visit [the dedicated documentation page](https://huggingface.co/docs/hub/models-cards)
    for a deeper view of what Model Cards on the Hub are, and how they work under
    the hood.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`huggingface_hub`库提供了一个Python接口，用于创建、分享和更新模型卡。访问[专门的文档页面](https://huggingface.co/docs/hub/models-cards)以深入了解Hub上的模型卡是什么，以及它们在幕后是如何工作的。'
- en: '[New (beta)! Try our experimental Model Card Creator App](https://huggingface.co/spaces/huggingface/Model_Cards_Writing_Tool)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[新（测试版）！尝试我们的实验性模型卡创建应用](https://huggingface.co/spaces/huggingface/Model_Cards_Writing_Tool)'
- en: Load a Model Card from the Hub
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Hub加载一个模型卡
- en: To load an existing card from the Hub, you can use the [ModelCard.load()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard.load)
    function. Here, we’ll load the card from [`nateraw/vit-base-beans`](https://huggingface.co/nateraw/vit-base-beans).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Hub加载现有卡片，您可以使用[ModelCard.load()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard.load)函数。在这里，我们将从[`nateraw/vit-base-beans`](https://huggingface.co/nateraw/vit-base-beans)加载卡片。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This card has some helpful attributes that you may want to access/leverage:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这张卡片有一些有用的属性，您可能希望访问/利用：
- en: '`card.data`: Returns a [ModelCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCardData)
    instance with the model card’s metadata. Call `.to_dict()` on this instance to
    get the representation as a dictionary.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`card.data`：返回一个[ModelCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCardData)实例，其中包含模型卡的元数据。在此实例上调用`.to_dict()`以获得表示为字典的表示。'
- en: '`card.text`: Returns the text of the card, *excluding the metadata header*.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`card.text`：返回卡片的文本，*不包括元数据头*。'
- en: '`card.content`: Returns the text content of the card, *including the metadata
    header*.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`card.content`：返回卡片的文本内容，*包括元数据头*。'
- en: Create Model Cards
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建模型卡
- en: From Text
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从文本
- en: To initialize a Model Card from text, just pass the text content of the card
    to the `ModelCard` on init.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文本初始化一个模型卡，只需将卡片的文本内容传递给`ModelCard`的init。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Another way you might want to do this is with f-strings. In the following example,
    we:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能想要以f-strings的方式来做这件事。在以下示例中，我们：
- en: Use [ModelCardData.to_yaml()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.CardData.to_yaml)
    to convert metadata we defined to YAML so we can use it to insert the YAML block
    in the model card.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[ModelCardData.to_yaml()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.CardData.to_yaml)将我们定义的元数据转换为YAML，以便我们可以将其用于在模型卡中插入YAML块。
- en: Show how you might use a template variable via Python f-strings.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展示了如何通过Python f-strings使用模板变量。
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The above example would leave us with a card that looks like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的示例会让我们得到一个看起来像这样的卡片：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: From a Jinja Template
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从Jinja模板
- en: 'If you have `Jinja2` installed, you can create Model Cards from a jinja template
    file. Let’s see a basic example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已安装`Jinja2`，您可以从一个Jinja模板文件创建模型卡。让我们看一个基本示例：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The resulting card’s markdown looks like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的卡片的markdown如下：
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you update any card.data, it’ll reflect in the card itself.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更新任何card.data，它将反映在卡片本身上。
- en: '[PRE6]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, as you can see, the metadata header has been updated:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以看到元数据头已更新：
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you update the card data, you can validate the card is still valid against
    the Hub by calling [ModelCard.validate()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard.validate).
    This ensures that the card passes any validation rules set up on the Hugging Face
    Hub.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当您更新卡片数据时，您可以通过调用[ModelCard.validate()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard.validate)来验证卡片仍然有效，并且符合在Hugging
    Face Hub上设置的任何验证规则。
- en: From the Default Template
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从默认模板
- en: Instead of using your own template, you can also use the [default template](https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md),
    which is a fully featured model card with tons of sections you may want to fill
    out. Under the hood, it uses [Jinja2](https://jinja.palletsprojects.com/en/3.1.x/)
    to fill out a template file.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是使用您自己的模板，您也可以使用[默认模板](https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md)，这是一个功能齐全的模型卡，有很多部分您可能想要填写。在幕后，它使用[Jinja2](https://jinja.palletsprojects.com/en/3.1.x/)来填写模板文件。
- en: Note that you will have to have Jinja2 installed to use `from_template`. You
    can do so with `pip install Jinja2`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您必须安装Jinja2才能使用`from_template`。您可以使用`pip install Jinja2`来安装。
- en: '[PRE8]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Share Model Cards
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分享模型卡
- en: If you’re authenticated with the Hugging Face Hub (either by using `huggingface-cli
    login` or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    you can push cards to the Hub by simply calling [ModelCard.push_to_hub()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard.push_to_hub).
    Let’s take a look at how to do that…
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经通过`huggingface-cli login`或[login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)进行了Hugging
    Face Hub的身份验证，您可以通过简单调用[ModelCard.push_to_hub()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard.push_to_hub)将卡片推送到Hub。让我们看看如何做到这一点...
- en: 'First, we’ll create a new repo called ‘hf-hub-modelcards-pr-test’ under the
    authenticated user’s namespace:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将在经过身份验证的用户命名空间下创建一个名为‘hf-hub-modelcards-pr-test’的新存储库：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, we’ll create a card from the default template (same as the one defined
    in the section above):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将从默认模板创建一个卡片（与上面定义的相同）：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Finally, we’ll push that up to the hub
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将把它推送到hub
- en: '[PRE11]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can check out the resulting card [here](https://huggingface.co/nateraw/hf-hub-modelcards-pr-test/blob/main/README.md).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[这里](https://huggingface.co/nateraw/hf-hub-modelcards-pr-test/blob/main/README.md)查看生成的卡片。
- en: 'If you instead wanted to push a card as a pull request, you can just say `create_pr=True`
    when calling `push_to_hub`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望将卡片作为拉取请求推送，只需在调用`push_to_hub`时说`create_pr=True`：
- en: '[PRE12]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: A resulting PR created from this command can be seen [here](https://huggingface.co/nateraw/hf-hub-modelcards-pr-test/discussions/3).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从此命令创建的结果PR可以在[这里](https://huggingface.co/nateraw/hf-hub-modelcards-pr-test/discussions/3)看到。
- en: Update metadata
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新元数据
- en: In this section we will see what metadata are in repo cards and how to update
    them.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到存储库卡片中的元数据以及如何更新它们。
- en: '`metadata` refers to a hash map (or key value) context that provides some high-level
    information about a model, dataset or Space. That information can include details
    such as the model’s `pipeline type`, `model_id` or `model_description`. For more
    detail you can take a look to these guides: [Model Card](https://huggingface.co/docs/hub/model-cards#model-card-metadata),
    [Dataset Card](https://huggingface.co/docs/hub/datasets-cards#dataset-card-metadata)
    and [Spaces Settings](https://huggingface.co/docs/hub/spaces-settings#spaces-settings).
    Now lets see some examples on how to update those metadata.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`metadata`指的是一个哈希映射（或键值）上下文，提供有关模型、数据集或空间的一些高级信息。这些信息可以包括模型的`pipeline类型`、`model_id`或`model_description`等详细信息。有关更多详细信息，您可以查看这些指南：[模型卡片](https://huggingface.co/docs/hub/model-cards#model-card-metadata)、[数据集卡片](https://huggingface.co/docs/hub/datasets-cards#dataset-card-metadata)和[空间设置](https://huggingface.co/docs/hub/spaces-settings#spaces-settings)。现在让我们看一些关于如何更新这些元数据的示例。'
- en: 'Let’s start with a first example:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从第一个示例开始：
- en: '[PRE13]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: With these two lines of code you will update the metadata to set a new `pipeline_tag`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两行代码，您将更新元数据以设置一个新的`pipeline_tag`。
- en: 'By default, you cannot update a key that is already existing on the card. If
    you want to do so, you must pass `overwrite=True` explicitly:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，您不能更新卡片上已经存在的键。如果要这样做，必须显式传递`overwrite=True`：
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: It often happen that you want to suggest some changes to a repository on which
    you don’t have write permission. You can do that by creating a PR on that repo
    which will allow the owners to review and merge your suggestions.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 经常发生的情况是，您想要对一个您没有写入权限的存储库提出一些更改建议。您可以通过在该存储库上创建一个PR来实现这一点，这将允许所有者审查并合并您的建议。
- en: '[PRE15]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Include Evaluation Results
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包括评估结果
- en: To include evaluation results in the metadata `model-index`, you can pass an
    [EvalResult](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.EvalResult)
    or a list of `EvalResult` with your associated evaluation results. Under the hood
    it’ll create the `model-index` when you call `card.data.to_dict()`. For more information
    on how this works, you can check out [this section of the Hub docs](https://huggingface.co/docs/hub/models-cards#evaluation-results).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要在元数据`model-index`中包含评估结果，可以传递一个[EvalResult](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.EvalResult)或一个带有相关评估结果的`EvalResult`列表。在调用`card.data.to_dict()`时，它将创建`model-index`。有关此操作原理的更多信息，请查看[Hub文档的此部分](https://huggingface.co/docs/hub/models-cards#evaluation-results)。
- en: Note that using this function requires you to include the `model_name` attribute
    in [ModelCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCardData).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用此函数需要在[ModelCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCardData)中包含`model_name`属性。
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The resulting `card.data` should look like this:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的`card.data`应该如下所示：
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If you have more than one evaluation result you’d like to share, just pass
    a list of `EvalResult`:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有多个评估结果想要共享，只需传递一个`EvalResult`列表：
- en: '[PRE18]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Which should leave you with the following `card.data`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使您得到以下`card.data`：
- en: '[PRE19]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
