["```py\nfrom diffusers import DiffusionPipeline\n\npipe = DiffusionPipeline.from_pretrained(\n    \"CompVis/stable-diffusion-v1-4\", custom_pipeline=\"filename_in_the_community_folder\", use_safetensors=True\n)\n```", "```py\nimport torch\nfrom diffusers import DiffusionPipeline\nfrom diffusers.utils import make_image_grid\nfrom transformers import (\n    pipeline,\n    MBart50TokenizerFast,\n    MBartForConditionalGeneration,\n)\n\ndevice = \"cuda\" if torch.cuda.is_available() else \"cpu\"\ndevice_dict = {\"cuda\": 0, \"cpu\": -1}\n\n# add language detection pipeline\nlanguage_detection_model_ckpt = \"papluca/xlm-roberta-base-language-detection\"\nlanguage_detection_pipeline = pipeline(\"text-classification\",\n                                       model=language_detection_model_ckpt,\n                                       device=device_dict[device])\n\n# add model for language translation\ntranslation_tokenizer = MBart50TokenizerFast.from_pretrained(\"facebook/mbart-large-50-many-to-one-mmt\")\ntranslation_model = MBartForConditionalGeneration.from_pretrained(\"facebook/mbart-large-50-many-to-one-mmt\").to(device)\n\ndiffuser_pipeline = DiffusionPipeline.from_pretrained(\n    \"CompVis/stable-diffusion-v1-4\",\n    custom_pipeline=\"multilingual_stable_diffusion\",\n    detection_pipeline=language_detection_pipeline,\n    translation_model=translation_model,\n    translation_tokenizer=translation_tokenizer,\n    torch_dtype=torch.float16,\n)\n\ndiffuser_pipeline.enable_attention_slicing()\ndiffuser_pipeline = diffuser_pipeline.to(device)\n\nprompt = [\"a photograph of an astronaut riding a horse\",\n          \"Una casa en la playa\",\n          \"Ein Hund, der Orange isst\",\n          \"Un restaurant parisien\"]\n\nimages = diffuser_pipeline(prompt).images\nmake_image_grid(images, rows=2, cols=2)\n```", "```py\nfrom diffusers import DiffusionPipeline, DDIMScheduler\nfrom diffusers.utils import load_image, make_image_grid\n\npipeline = DiffusionPipeline.from_pretrained(\n    \"CompVis/stable-diffusion-v1-4\",\n    custom_pipeline=\"magic_mix\",\n    scheduler=DDIMScheduler.from_pretrained(\"CompVis/stable-diffusion-v1-4\", subfolder=\"scheduler\"),\n).to('cuda')\n\nimg = load_image(\"https://user-images.githubusercontent.com/59410571/209578593-141467c7-d831-4792-8b9a-b17dc5e47816.jpg\")\nmix_img = pipeline(img, prompt=\"bed\", kmin=0.3, kmax=0.5, mix_factor=0.5)\nmake_image_grid([img, mix_img], rows=1, cols=2)\n```"]