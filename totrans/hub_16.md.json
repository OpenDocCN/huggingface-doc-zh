["```py\nfrom transformers import BertConfig, BertModel\n\nconfig = BertConfig()\nmodel = BertModel(config)\n\nmodel.push_to_hub(\"nielsr/my-awesome-bert-model\")\n\n# reload\nmodel = BertModel.from_pretrained(\"nielsr/my-awesome-bert-model\")\n```", "```py\nimport torch\nimport torch.nn as nn\nfrom huggingface_hub import PyTorchModelHubMixin\n\nclass MyModel(nn.Module, PyTorchModelHubMixin):\n    def __init__(self, config: dict):\n        super().__init__()\n        self.param = nn.Parameter(torch.rand(config[\"num_channels\"], config[\"hidden_size\"]))\n        self.linear = nn.Linear(config[\"hidden_size\"], config[\"num_classes\"])\n\n    def forward(self, x):\n        return self.linear(x + self.param)\n\n# create model\nconfig = {\"num_channels\": 3, \"hidden_size\": 32, \"num_classes\": 10}\nmodel = MyModel(config=config)\n\n# save locally\nmodel.save_pretrained(\"my-awesome-model\", config=config)\n\n# push to the hub\nmodel.push_to_hub(\"my-awesome-model\", config=config)\n\n# reload\nmodel = MyModel.from_pretrained(\"username/my-awesome-model\")\n```"]