["```py\n( unet scheduler )\n```", "```py\n( batch_size: int = 1 generator: Union = None eta: float = 0.0 num_inference_steps: int = 50 use_clipped_model_output: Optional = None output_type: Optional = 'pil' return_dict: bool = True ) \u2192 export const metadata = 'undefined';ImagePipelineOutput or tuple\n```", "```py\n>>> from diffusers import DDIMPipeline\n>>> import PIL.Image\n>>> import numpy as np\n\n>>> # load model and scheduler\n>>> pipe = DDIMPipeline.from_pretrained(\"fusing/ddim-lsun-bedroom\")\n\n>>> # run pipeline in inference (sample random noise and denoise)\n>>> image = pipe(eta=0.0, num_inference_steps=50)\n\n>>> # process image to PIL\n>>> image_processed = image.cpu().permute(0, 2, 3, 1)\n>>> image_processed = (image_processed + 1.0) * 127.5\n>>> image_processed = image_processed.numpy().astype(np.uint8)\n>>> image_pil = PIL.Image.fromarray(image_processed[0])\n\n>>> # save image\n>>> image_pil.save(\"test.png\")\n```", "```py\n( images: Union )\n```"]