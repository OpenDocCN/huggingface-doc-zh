- en: Search text in a dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/datasets-server/search](https://huggingface.co/docs/datasets-server/search)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: Datasets Server provides a `/search` endpoint for searching words in a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Currently, only [datasets with Parquet exports](./parquet) are supported so
    Datasets Server can index the contents and run the search without downloading
    the whole dataset.
  prefs: []
  type: TYPE_NORMAL
- en: This guide shows you how to use Datasets Server’s `/search` endpoint to search
    for a query string. Feel free to also try it out with [ReDoc](https://redocly.github.io/redoc/?url=https://datasets-server.huggingface.co/openapi.json#operation/searchRows).
  prefs: []
  type: TYPE_NORMAL
- en: The text is searched in the columns of type `string`, even if the values are
    nested in a dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `/search` endpoint accepts five query parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '`dataset`: the dataset name, for example `glue` or `mozilla-foundation/common_voice_10_0`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config`: the configuration name, for example `cola`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`split`: the split name, for example `train`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`query`: the text to search'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offset`: the offset of the slice, for example `150`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`length`: the length of the slice, for example `10` (maximum: `100`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, let’s search for the text `"dog"` in the `train` split of the
    `SelfRC` configuration of the `ibm/duorc` dataset, restricting the results to
    the slice 150-151:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The endpoint response is a JSON containing two keys (same format as [`/rows`](./rows)):'
  prefs: []
  type: TYPE_NORMAL
- en: The [`features`](https://huggingface.co/docs/datasets/about_dataset_features)
    of a dataset, including the column’s name and data type.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The slice of `rows` of a dataset and the content contained in each column of
    a specific row.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The rows are ordered by the row index, and the text strings matching the query
    are not highlighted.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, here are the `features` and the slice 150-151 of matching `rows`
    of the `duorc`/`SelfRC` train split for the query `dog`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If the result has `partial: true` it means that the search couldn’t be run
    on the full dataset because it’s too big.'
  prefs: []
  type: TYPE_NORMAL
- en: Indeed, the indexing for `/search` can be partial if the dataset is bigger than
    5GB. In that case, it only uses the first 5GB.
  prefs: []
  type: TYPE_NORMAL
- en: Truncated responses
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unlike `/first-rows`, there is currently no truncation in `/search`. The `truncated_cells`
    field is still there but is always empty.
  prefs: []
  type: TYPE_NORMAL
