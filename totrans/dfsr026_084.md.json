["```py\n# uncomment to install the necessary libraries in Colab\n#!pip install -q jax==0.3.25 jaxlib==0.3.25 flax transformers ftfy\n#!pip install -q diffusers\n```", "```py\nimport jax\nimport jax.tools.colab_tpu\njax.tools.colab_tpu.setup_tpu()\n\nnum_devices = jax.device_count()\ndevice_type = jax.devices()[0].device_kind\n\nprint(f\"Found {num_devices} JAX devices of type {device_type}.\")\nassert (\n    \"TPU\" in device_type,\n    \"Available device is not a TPU, please select TPU from Runtime > Change runtime type > Hardware accelerator\"\n)\n# Found 8 JAX devices of type Cloud TPU.\n```", "```py\nimport jax.numpy as jnp\nfrom jax import pmap\nfrom flax.jax_utils import replicate\nfrom flax.training.common_utils import shard\n\nfrom diffusers import FlaxStableDiffusionPipeline\n```", "```py\ndtype = jnp.bfloat16\npipeline, params = FlaxStableDiffusionPipeline.from_pretrained(\n    \"CompVis/stable-diffusion-v1-4\",\n    revision=\"bf16\",\n    dtype=dtype,\n)\n```", "```py\nprompt = \"A cinematic film still of Morgan Freeman starring as Jimi Hendrix, portrait, 40mm lens, shallow depth of field, close up, split lighting, cinematic\"\nprompt = [prompt] * jax.device_count()\nprompt_ids = pipeline.prepare_inputs(prompt)\nprompt_ids.shape\n# (8, 77)\n```", "```py\n# parameters\np_params = replicate(params)\n\n# arrays\nprompt_ids = shard(prompt_ids)\nprompt_ids.shape\n# (8, 1, 77)\n```", "```py\ndef create_key(seed=0):\n    return jax.random.PRNGKey(seed)\n```", "```py\nrng = create_key(0)\nrng = jax.random.split(rng, jax.device_count())\n```", "```py\n%%time\nimages = pipeline(prompt_ids, p_params, rng, jit=True)[0]\n\n# CPU times: user 56.2 s, sys: 42.5 s, total: 1min 38s\n# Wall time: 1min 29s\n```", "```py\nfrom diffusers.utils import make_image_grid\n\nimages = images.reshape((images.shape[0] * images.shape[1],) + images.shape[-3:])\nimages = pipeline.numpy_to_pil(images)\nmake_image_grid(images, rows=2, cols=4)\n```", "```py\nprompts = [\n    \"Labrador in the style of Hokusai\",\n    \"Painting of a squirrel skating in New York\",\n    \"HAL-9000 in the style of Van Gogh\",\n    \"Times Square under water, with fish and a dolphin swimming around\",\n    \"Ancient Roman fresco showing a man working on his laptop\",\n    \"Close-up photograph of young black woman against urban background, high quality, bokeh\",\n    \"Armchair in the shape of an avocado\",\n    \"Clown astronaut in space, with Earth in the background\",\n]\n\nprompt_ids = pipeline.prepare_inputs(prompts)\nprompt_ids = shard(prompt_ids)\n\nimages = pipeline(prompt_ids, p_params, rng, jit=True).images\nimages = images.reshape((images.shape[0] * images.shape[1],) + images.shape[-3:])\nimages = pipeline.numpy_to_pil(images)\n\nmake_image_grid(images, 2, 4)\n```", "```py\np_generate = pmap(pipeline._generate)\n```", "```py\n%%time\nimages = p_generate(prompt_ids, p_params, rng)\nimages = images.block_until_ready()\n\n# CPU times: user 1min 15s, sys: 18.2 s, total: 1min 34s\n# Wall time: 1min 15s\n```", "```py\nimages.shape\n# (8, 1, 512, 512, 3)\n```"]