- en: DDIMScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DDIMScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/ddim](https://huggingface.co/docs/diffusers/api/schedulers/ddim)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/ddim](https://huggingface.co/docs/diffusers/api/schedulers/ddim)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '[Denoising Diffusion Implicit Models](https://huggingface.co/papers/2010.02502)
    (DDIM) by Jiaming Song, Chenlin Meng and Stefano Ermon.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[Jiaming Song、Chenlin Meng 和 Stefano Ermon 撰写的 [去噪扩散隐式模型](https://huggingface.co/papers/2010.02502)（DDIM）。'
- en: 'The abstract from the paper is:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 论文摘要如下：
- en: '*Denoising diffusion probabilistic models (DDPMs) have achieved high quality
    image generation without adversarial training, yet they require simulating a Markov
    chain for many steps to produce a sample. To accelerate sampling, we present denoising
    diffusion implicit models (DDIMs), a more efficient class of iterative implicit
    probabilistic models with the same training procedure as DDPMs. In DDPMs, the
    generative process is defined as the reverse of a Markovian diffusion process.
    We construct a class of non-Markovian diffusion processes that lead to the same
    training objective, but whose reverse process can be much faster to sample from.
    We empirically demonstrate that DDIMs can produce high quality samples 10× to
    50× faster in terms of wall-clock time compared to DDPMs, allow us to trade off
    computation for sample quality, and can perform semantically meaningful image
    interpolation directly in the latent space.*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*去噪扩散概率模型（DDPMs）在没有对抗训练的情况下实现了高质量的图像生成，但它们需要模拟许多步骤的马尔可夫链才能生成样本。为了加速采样，我们提出了去噪扩散隐式模型（DDIMs），这是一种更高效的迭代隐式概率模型类，具有与
    DDPMs 相同的训练过程。在 DDPMs 中，生成过程被定义为马尔可夫扩散过程的反向。我们构建了一类非马尔可夫扩散过程，这些过程导致相同的训练目标，但其反向过程可以更快地从中采样。我们在实证中证明，与
    DDPMs 相比，DDIMs 可以在墙钟时间方面以 10× 到 50× 的速度产生高质量样本，使我们能够在计算和样本质量之间进行权衡，并且可以直接在潜在空间中执行语义上有意义的图像插值。*'
- en: The original codebase of this paper can be found at [ermongroup/ddim](https://github.com/ermongroup/ddim),
    and you can contact the author on [tsong.me](https://tsong.me/).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的原始代码可以在 [ermongroup/ddim](https://github.com/ermongroup/ddim) 找到，您可以在 [tsong.me](https://tsong.me/)
    上联系作者。
- en: Tips
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提示
- en: 'The paper [Common Diffusion Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)
    claims that a mismatch between the training and inference settings leads to suboptimal
    inference generation results for Stable Diffusion. To fix this, the authors propose:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 论文 [Common Diffusion Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)
    声称训练和推断设置之间的不匹配导致了稳定扩散的推断生成结果不佳。为了解决这个问题，作者提出：
- en: 🧪 This is an experimental feature!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 🧪 这是一个实验性功能！
- en: rescale the noise schedule to enforce zero terminal signal-to-noise ratio (SNR)
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新调整噪声计划以强制零终端信噪比（SNR）
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: train a model with `v_prediction` (add the following argument to the [train_text_to_image.py](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py)
    or [train_text_to_image_lora.py](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image_lora.py)
    scripts)
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `v_prediction` 训练模型（将以下参数添加到 [train_text_to_image.py](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py)
    或 [train_text_to_image_lora.py](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image_lora.py)
    脚本中）
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: change the sampler to always start from the last timestep
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改采样器以始终从最后一个时间步开始
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: rescale classifier-free guidance to prevent over-exposure
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新调整无分类器指导以防止过度曝光
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'For example:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: DDIMScheduler
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DDIMScheduler
- en: '### `class diffusers.DDIMScheduler`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.DDIMScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L131)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L131)'
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_train_timesteps` (`int`, 默认为 1000) — 训练模型的扩散步骤数。'
- en: '`beta_start` (`float`, defaults to 0.0001) — The starting `beta` value of inference.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_start` (`float`, 默认为 0.0001) — 推断的起始 `beta` 值。'
- en: '`beta_end` (`float`, defaults to 0.02) — The final `beta` value.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_end` (`float`, 默认为 0.02) — 最终的 `beta` 值。'
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`,
    `scaled_linear`, or `squaredcos_cap_v2`.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_schedule` (`str`, 默认为 `"linear"`) — beta 计划，从 beta 范围到用于模型步进的 beta 序列的映射。可选择
    `linear`、`scaled_linear` 或 `squaredcos_cap_v2`。'
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trained_betas` (`np.ndarray`, *可选*) — 直接传递一个 beta 数组给构造函数，以绕过 `beta_start`
    和 `beta_end`。'
- en: '`clip_sample` (`bool`, defaults to `True`) — Clip the predicted sample for
    numerical stability.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clip_sample` (`bool`, 默认为 `True`) — 为了数值稳定性而裁剪预测样本。'
- en: '`clip_sample_range` (`float`, defaults to 1.0) — The maximum magnitude for
    sample clipping. Valid only when `clip_sample=True`.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clip_sample_range` (`float`, 默认为 1.0) — 采样裁剪的最大幅度。仅当 `clip_sample=True` 时有效。'
- en: '`set_alpha_to_one` (`bool`, defaults to `True`) — Each diffusion step uses
    the alphas product value at that step and at the previous one. For the final step
    there is no previous alpha. When this option is `True` the previous alpha product
    is fixed to `1`, otherwise it uses the alpha value at step 0.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`set_alpha_to_one` (`bool`, 默认为 `True`) — 每个扩散步骤使用该步骤和上一个步骤的 alphas 乘积值。对于最后一步，没有上一个
    alpha。当此选项为 `True` 时，前一个 alpha 乘积被固定为 `1`，否则使用步骤 0 的 alpha 值。'
- en: '`steps_offset` (`int`, defaults to 0) — An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use step 0 for the previous alpha product like in Stable Diffusion.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`steps_offset` (`int`, 默认为 0) — 添加到推断步骤的偏移量。您可以使用 `offset=1` 和 `set_alpha_to_one=False`
    的组合，使最后一步使用步骤 0 作为上一个 alpha 乘积，就像在 Stable Diffusion 中一样。'
- en: '`prediction_type` (`str`, defaults to `epsilon`, *optional*) — Prediction type
    of the scheduler function; can be `epsilon` (predicts the noise of the diffusion
    process), `sample` (directly predicts the noisy sample`) or` v_prediction` (see
    section 2.4 of [Imagen Video](https://imagen.research.google/video/paper.pdf)
    paper).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prediction_type`（`str`，默认为`epsilon`，*可选*）— 调度函数的预测类型；可以是`epsilon`（预测扩散过程的噪声），`sample`（直接预测有噪声的样本）或`v_prediction`（参见[Imagen
    Video](https://imagen.research.google/video/paper.pdf)论文的第2.4节）。'
- en: '`thresholding` (`bool`, defaults to `False`) — Whether to use the “dynamic
    thresholding” method. This is unsuitable for latent-space diffusion models such
    as Stable Diffusion.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`thresholding`（`bool`，默认为`False`）— 是否使用“动态阈值”方法。这对于稳定扩散等潜在空间扩散模型不适用。'
- en: '`dynamic_thresholding_ratio` (`float`, defaults to 0.995) — The ratio for the
    dynamic thresholding method. Valid only when `thresholding=True`.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dynamic_thresholding_ratio`（`float`，默认为0.995）— 动态阈值方法的比率。仅在`thresholding=True`时有效。'
- en: '`sample_max_value` (`float`, defaults to 1.0) — The threshold value for dynamic
    thresholding. Valid only when `thresholding=True`.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample_max_value`（`float`，默认为1.0）— 动态阈值的阈值值。仅在`thresholding=True`时有效。'
- en: '`timestep_spacing` (`str`, defaults to `"leading"`) — The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep_spacing`（`str`，默认为`"leading"`）— 时间步应该如何缩放。有关更多信息，请参阅[Common Diffusion
    Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)的表2。'
- en: '`rescale_betas_zero_snr` (`bool`, defaults to `False`) — Whether to rescale
    the betas to have zero terminal SNR. This enables the model to generate very bright
    and dark samples instead of limiting it to samples with medium brightness. Loosely
    related to [`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rescale_betas_zero_snr`（`bool`，默认为`False`）— 是否重新缩放beta以使终端SNR为零。这使模型能够生成非常明亮和暗的样本，而不是将其限制为具有中等亮度的样本。与[`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506)
    loosely相关。'
- en: '`DDIMScheduler` extends the denoising procedure introduced in denoising diffusion
    probabilistic models (DDPMs) with non-Markovian guidance.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`DDIMScheduler`扩展了引入非马尔可夫引导的去噪扩散概率模型（DDPMs）的过程。'
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型继承自[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)和[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。检查超类文档，了解库为所有调度程序实现的通用方法，如加载和保存。
- en: '#### `scale_model_input`'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L238)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L238)'
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample`（`torch.FloatTensor`）— 输入样本。'
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep`（`int`，*可选*）— 扩散链中的当前时间步。'
- en: Returns
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经过缩放的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度程序可以互换。
- en: '#### `set_timesteps`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L299)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L299)'
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_inference_steps`（`int`）— 使用预训练模型生成样本时使用的扩散步数。'
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于扩散链的离散时间步（在推断之前运行）。
- en: '#### `step`'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `步骤`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L344)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L344)'
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output`（`torch.FloatTensor`）— 从学习的扩散模型直接输出。'
- en: '`timestep` (`float`) — The current discrete timestep in the diffusion chain.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep`（`float`）— 扩散链中的当前离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample`（`torch.FloatTensor`）— 扩散过程中创建的样本的当前实例。'
- en: '`eta` (`float`) — The weight of noise for added noise in diffusion step.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eta`（`float`）— 扩散步骤中添加噪声的噪声权重。'
- en: '`use_clipped_model_output` (`bool`, defaults to `False`) — If `True`, computes
    “corrected” `model_output` from the clipped predicted original sample. Necessary
    because predicted original sample is clipped to [-1, 1] when `self.config.clip_sample`
    is `True`. If no clipping has happened, “corrected” `model_output` would coincide
    with the one provided as input and `use_clipped_model_output` has no effect.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_clipped_model_output`（`bool`，默认为`False`）— 如果为`True`，则从剪切预测的原始样本计算“校正”的`model_output`。当`self.config.clip_sample`为`True`时，必要，因为预测的原始样本被剪切为[-1,
    1]。如果没有发生剪切，“校正”的`model_output`将与提供的输入一致，`use_clipped_model_output`不起作用。'
- en: '`generator` (`torch.Generator`, *optional*) — A random number generator.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generator`（`torch.Generator`，*可选*）— 随机数生成器。'
- en: '`variance_noise` (`torch.FloatTensor`) — Alternative to generating noise with
    `generator` by directly providing the noise for the variance itself. Useful for
    methods such as `CycleDiffusion`.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variance_noise`（`torch.FloatTensor`）— 通过直接提供方差本身的噪声来替代使用`generator`生成噪声。对于`CycleDiffusion`等方法非常有用。'
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a [DDIMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.schedulers.scheduling_ddim.DDIMSchedulerOutput)
    or `tuple`.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`，*可选*，默认为`True`) — 是否返回[DDIMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.schedulers.scheduling_ddim.DDIMSchedulerOutput)或`tuple`。'
- en: Returns
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '`~schedulers.scheduling_utils.DDIMSchedulerOutput` or `tuple`'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`~schedulers.scheduling_utils.DDIMSchedulerOutput`或`tuple`'
- en: If return_dict is `True`, [DDIMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.schedulers.scheduling_ddim.DDIMSchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`return_dict`为`True`，则返回[DDIMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.schedulers.scheduling_ddim.DDIMSchedulerOutput)，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE来预测上一个时间步的样本。此函数从学习模型输出（通常是预测的噪声）中传播扩散过程。
- en: DDIMSchedulerOutput
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DDIMSchedulerOutput
- en: '### `class diffusers.schedulers.scheduling_ddim.DDIMSchedulerOutput`'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.scheduling_ddim.DDIMSchedulerOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L31)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim.py#L31)'
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample `(x_{t-1})` of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prev_sample`（对于图像形状为`(batch_size, num_channels, height, width)`的`torch.FloatTensor`）
    — 上一个时间步的计算样本`(x_{t-1})`。`prev_sample`应该在去噪循环中作为下一个模型输入使用。'
- en: '`pred_original_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels,
    height, width)` for images) — The predicted denoised sample `(x_{0})` based on
    the model output from the current timestep. `pred_original_sample` can be used
    to preview progress or for guidance.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pred_original_sample`（对于图像形状为`(batch_size, num_channels, height, width)`的`torch.FloatTensor`）
    — 基于当前时间步的模型输出预测的去噪样本`(x_{0})`。`pred_original_sample`可用于预览进展或指导。'
- en: Output class for the scheduler’s `step` function output.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 调度程序的`step`函数输出的输出类。
