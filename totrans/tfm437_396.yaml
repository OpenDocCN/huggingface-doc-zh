- en: Utilities for Image Processors
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像处理器的实用工具
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/internal/image_processing_utils](https://huggingface.co/docs/transformers/v4.37.2/en/internal/image_processing_utils)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/docs/transformers/v4.37.2/en/internal/image_processing_utils](https://huggingface.co/docs/transformers/v4.37.2/en/internal/image_processing_utils)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: This page lists all the utility functions used by the image processors, mainly
    the functional transformations used to process the images.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面列出了图像处理器使用的所有实用函数，主要是用于处理图像的功能转换。
- en: Most of those are only useful if you are studying the code of the image processors
    in the library.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，这些只有在您研究库中图像处理器的代码时才有用。
- en: Image Transformations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像转换
- en: '#### `transformers.image_transforms.center_crop`'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.center_crop`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L407)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L407)'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — The image to crop.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`np.ndarray`）—要裁剪的图像。'
- en: '`size` (`Tuple[int, int]`) — The target size for the cropped image.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（`Tuple[int, int]`）—裁剪图像的目标尺寸。'
- en: '`data_format` (`str` or `ChannelDimension`, *optional*) — The channel dimension
    format for the output image. Can be one of:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format`（`str`或`ChannelDimension`，*可选*）—输出图像的通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"`或`ChannelDimension.FIRST`：图像以（num_channels，height，width）格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format. If unset, will use the inferred format of the input image.'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"`或`ChannelDimension.LAST`：图像以（height，width，num_channels）格式。如果未设置，将使用输入图像的推断格式。'
- en: '`input_data_format` (`str` or `ChannelDimension`, *optional*) — The channel
    dimension format for the input image. Can be one of:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format`（`str`或`ChannelDimension`，*可选*）—输入图像的通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"`或`ChannelDimension.FIRST`：图像以（num_channels，height，width）格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format. If unset, will use the inferred format of the input image.'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"`或`ChannelDimension.LAST`：图像以（height，width，num_channels）格式。如果未设置，将使用输入图像的推断格式。'
- en: '`return_numpy` (`bool`, *optional*) — Whether or not to return the cropped
    image as a numpy array. Used for backwards compatibility with the previous ImageFeatureExtractionMixin
    method.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_numpy`（`bool`，*可选*）—是否将裁剪后的图像作为numpy数组返回。用于与先前的ImageFeatureExtractionMixin方法向后兼容。'
- en: 'Unset: will return the same type as the input image.'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未设置：将返回与输入图像相同类型。
- en: '`True`: will return a numpy array.'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`True`：将返回一个numpy数组。'
- en: '`False`: will return a `PIL.Image.Image` object.'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`False`：将返回一个`PIL.Image.Image`对象。'
- en: Returns
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`np.ndarray`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.ndarray`'
- en: The cropped image.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 裁剪后的图像。
- en: Crops the `image` to the specified `size` using a center crop. Note that if
    the image is too small to be cropped to the size given, it will be padded (so
    the returned result will always be of size `size`).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用中心裁剪将`image`裁剪到指定的`size`。请注意，如果图像太小而无法裁剪到给定的尺寸，将进行填充（因此返回的结果始终为`size`的大小）。
- en: '#### `transformers.image_transforms.center_to_corners_format`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.center_to_corners_format`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L537)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L537)'
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Converts bounding boxes from center format to corners format.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将边界框从中心格式转换为角落格式。
- en: 'center format: contains the coordinate for the center of the box and its width,
    height dimensions (center_x, center_y, width, height) corners format: contains
    the coodinates for the top-left and bottom-right corners of the box (top_left_x,
    top_left_y, bottom_right_x, bottom_right_y)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 中心格式：包含框的中心坐标及其宽度、高度尺寸（center_x，center_y，width，height）角落格式：包含框的左上角和右下角的坐标（top_left_x，top_left_y，bottom_right_x，bottom_right_y）
- en: '#### `transformers.image_transforms.corners_to_center_format`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.corners_to_center_format`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L597)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L597)'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Converts bounding boxes from corners format to center format.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 将边界框从角落格式转换为中心格式。
- en: 'corners format: contains the coordinates for the top-left and bottom-right
    corners of the box (top_left_x, top_left_y, bottom_right_x, bottom_right_y) center
    format: contains the coordinate for the center of the box and its the width, height
    dimensions (center_x, center_y, width, height)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 角落格式：包含框的左上角和右下角的坐标（top_left_x，top_left_y，bottom_right_x，bottom_right_y）中心格式：包含框的中心坐标及其宽度、高度尺寸（center_x，center_y，width，height）
- en: '#### `transformers.image_transforms.id_to_rgb`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.id_to_rgb`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L631)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L631)'
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Converts unique ID to RGB color.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 将唯一ID转换为RGB颜色。
- en: '#### `transformers.image_transforms.normalize`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.normalize`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L347)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L347)'
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — The image to normalize.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`np.ndarray`）—要归一化的图像。'
- en: '`mean` (`float` or `Iterable[float]`) — The mean to use for normalization.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mean`（`float`或`Iterable[float]`）—用于归一化的均值。'
- en: '`std` (`float` or `Iterable[float]`) — The standard deviation to use for normalization.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std`（`float`或`Iterable[float]`）—用于归一化的标准差。'
- en: '`data_format` (`ChannelDimension`, *optional*) — The channel dimension format
    of the output image. If unset, will use the inferred format from the input.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format`（`ChannelDimension`，*可选*）—输出图像的通道维度格式。如果未设置，将使用从输入推断的格式。'
- en: '`input_data_format` (`ChannelDimension`, *optional*) — The channel dimension
    format of the input image. If unset, will use the inferred format from the input.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format`（`ChannelDimension`，*可选*）— 输入图像的通道维度格式。如果未设置，将使用从输入中推断的格式。'
- en: Normalizes `image` using the mean and standard deviation specified by `mean`
    and `std`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用由`mean`和`std`指定的均值和标准差对`image`进行归一化。
- en: image = (image - mean) / std
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图像=（图像-平均值）/标准差
- en: '#### `transformers.image_transforms.pad`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.pad`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L661)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L661)'
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — The image to pad.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`np.ndarray`）— 要填充的图像。'
- en: '`padding` (`int` or `Tuple[int, int]` or `Iterable[Tuple[int, int]]`) — Padding
    to apply to the edges of the height, width axes. Can be one of three formats:'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`padding`（`int`或`Tuple[int, int]`或`Iterable[Tuple[int, int]]`）— 要应用到高度、宽度轴边缘的填充。可以是以下三种格式之一：'
- en: '`((before_height, after_height), (before_width, after_width))` unique pad widths
    for each axis.'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`（（before_height，after_height），（before_width，after_width））`每个轴的唯一填充宽度。'
- en: '`((before, after),)` yields same before and after pad for height and width.'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`（（before，after），）`产生相同的高度和宽度的前后填充。'
- en: '`(pad,)` or int is a shortcut for before = after = pad width for all axes.'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`（填充，）`或int是所有轴的宽度的快捷方式为before = after = pad。'
- en: '`mode` (`PaddingMode`) — The padding mode to use. Can be one of:'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mode`（`PaddingMode`）— 要使用的填充模式。可以是以下之一：'
- en: '`"constant"`: pads with a constant value.'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“常数”`：用常数值填充。'
- en: '`"reflect"`: pads with the reflection of the vector mirrored on the first and
    last values of the vector along each axis.'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“反射”`：用沿每个轴的向量的第一个和最后一个值的镜像填充。'
- en: '`"replicate"`: pads with the replication of the last value on the edge of the
    array along each axis.'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“复制”`：用沿每个轴的数组边缘的最后一个值的复制填充。'
- en: '`"symmetric"`: pads with the reflection of the vector mirrored along the edge
    of the array.'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“对称”`：用沿数组边缘镜像的向量的反射填充。'
- en: '`constant_values` (`float` or `Iterable[float]`, *optional*) — The value to
    use for the padding if `mode` is `"constant"`.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`constant_values`（`float`或`Iterable[float]`，*可选*）— 如果`mode`为`“constant”`，则用于填充的值。'
- en: '`data_format` (`str` or `ChannelDimension`, *optional*) — The channel dimension
    format for the output image. Can be one of:'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format`（`str`或`ChannelDimension`，*可选*）— 输出图像的通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“channels_first”`或`ChannelDimension.FIRST`：图像以（通道数，高度，宽度）格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format. If unset, will use same as the input image.'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“channels_last”`或`ChannelDimension.LAST`：图像以（高度，宽度，通道数）格式。如果未设置，将使用与输入图像相同的格式。'
- en: '`input_data_format` (`str` or `ChannelDimension`, *optional*) — The channel
    dimension format for the input image. Can be one of:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format`（`str`或`ChannelDimension`，*可选*）— 输入图像的通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“channels_first”`或`ChannelDimension.FIRST`：图像以（通道数，高度，宽度）格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format. If unset, will use the inferred format of the input image.'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`“channels_last”`或`ChannelDimension.LAST`：图像以（高度，宽度，通道数）格式。如果未设置，将使用从输入图像推断的格式。'
- en: Returns
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`np.ndarray`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.ndarray`'
- en: The padded image.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 填充后的图像。
- en: Pads the `image` with the specified (height, width) `padding` and `mode`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 用指定的（高度，宽度）`填充`和`模式`填充`图像`。
- en: '#### `transformers.image_transforms.rgb_to_id`'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.rgb_to_id`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L620)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L620)'
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Converts RGB color to unique ID.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 将RGB颜色转换为唯一ID。
- en: '#### `transformers.image_transforms.rescale`'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.rescale`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L92)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L92)'
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — The image to rescale.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`np.ndarray`）— 要重新缩放的图像。'
- en: '`scale` (`float`) — The scale to use for rescaling the image.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scale`（`float`）— 用于重新缩放图像的比例。'
- en: '`data_format` (`ChannelDimension`, *optional*) — The channel dimension format
    of the image. If not provided, it will be the same as the input image.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format`（`ChannelDimension`，*可选*）— 图像的通道维度格式。如果未提供，将与输入图像相同。'
- en: '`dtype` (`np.dtype`, *optional*, defaults to `np.float32`) — The dtype of the
    output image. Defaults to `np.float32`. Used for backwards compatibility with
    feature extractors.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dtype`（`np.dtype`，*可选*，默认为`np.float32`）— 输出图像的数据类型。默认为`np.float32`。用于与特征提取器的向后兼容性。'
- en: '`input_data_format` (`ChannelDimension`, *optional*) — The channel dimension
    format of the input image. If not provided, it will be inferred from the input
    image.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format`（`ChannelDimension`，*可选*）— 输入图像的通道维度格式。如果未提供，将从输入图像中推断。'
- en: Returns
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`np.ndarray`'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.ndarray`'
- en: The rescaled image.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 重新缩放后的图像。
- en: Rescales `image` by `scale`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`scale`重新缩放`图像`。
- en: '#### `transformers.image_transforms.resize`'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.resize`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L276)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L276)'
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — The image to resize.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`np.ndarray`）— 要调整大小的图像。'
- en: '`size` (`Tuple[int, int]`) — The size to use for resizing the image.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（`Tuple[int, int]`）— 用于调整图像大小的尺寸。'
- en: '`resample` (`int`, *optional*, defaults to `PILImageResampling.BILINEAR`) —
    The filter to user for resampling.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resample`（`int`，*可选*，默认为`PILImageResampling.BILINEAR`）— 用于重采样的滤波器。'
- en: '`reducing_gap` (`int`, *optional*) — Apply optimization by resizing the image
    in two steps. The bigger `reducing_gap`, the closer the result to the fair resampling.
    See corresponding Pillow documentation for more details.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reducing_gap`（`int`，*可选*）— 通过在两个步骤中调整图像大小来应用优化。`reducing_gap`越大，结果越接近公平重采样。有关更多详细信息，请参阅相应的Pillow文档。'
- en: '`data_format` (`ChannelDimension`, *optional*) — The channel dimension format
    of the output image. If unset, will use the inferred format from the input.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format` (`ChannelDimension`, *可选*) — 输出图像的通道维度格式。如果未设置，将使用从输入推断出的格式。'
- en: '`return_numpy` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return the resized image as a numpy array. If False a `PIL.Image.Image` object
    is returned.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_numpy` (`bool`, *可选*, 默认为`True`) — 是否将调整大小后的图像作为numpy数组返回。如果为False，则返回一个`PIL.Image.Image`对象。'
- en: '`input_data_format` (`ChannelDimension`, *optional*) — The channel dimension
    format of the input image. If unset, will use the inferred format from the input.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format` (`ChannelDimension`, *可选*) — 输入图像的通道维度格式。如果未设置，将使用从输入推断出的格式。'
- en: Returns
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`np.ndarray`'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.ndarray`'
- en: The resized image.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 调整大小后的图像。
- en: Resizes `image` to `(height, width)` specified by `size` using the PIL library.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PIL库将`image`调整为由`size`指定的`(height, width)`大小。
- en: '#### `transformers.image_transforms.to_pil_image`'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `transformers.image_transforms.to_pil_image`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L157)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_transforms.py#L157)'
- en: '[PRE9]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `numpy.ndarray` or `torch.Tensor` or `tf.Tensor`)
    — The image to convert to the `PIL.Image` format.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image` (`PIL.Image.Image`或`numpy.ndarray`或`torch.Tensor`或`tf.Tensor`) — 要转换为`PIL.Image`格式的图像。'
- en: '`do_rescale` (`bool`, *optional*) — Whether or not to apply the scaling factor
    (to make pixel values integers between 0 and 255). Will default to `True` if the
    image type is a floating type and casting to `int` would result in a loss of precision,
    and `False` otherwise.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`do_rescale` (`bool`, *可选*) — 是否应用缩放因子（使像素值在0和255之间为整数）。如果图像类型是浮点类型，并且转换为`int`会导致精度损失，则默认为`True`，否则为`False`。'
- en: '`input_data_format` (`ChannelDimension`, *optional*) — The channel dimension
    format of the input image. If unset, will use the inferred format from the input.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format` (`ChannelDimension`, *可选*) — 输入图像的通道维度格式。如果未设置，将使用从输入推断出的格式。'
- en: Returns
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`PIL.Image.Image`'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`PIL.Image.Image`'
- en: The converted image.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 转换后的图像。
- en: Converts `image` to a PIL Image. Optionally rescales it and puts the channel
    dimension back as the last axis if needed.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 将`image`转换为PIL图像。可选地重新缩放它，并在需要时将通道维度放回作为最后一个轴。
- en: ImageProcessingMixin
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ImageProcessingMixin
- en: '### `class transformers.ImageProcessingMixin`'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.ImageProcessingMixin`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L68)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L68)'
- en: '[PRE10]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is an image processor mixin used to provide saving/loading functionality
    for sequential and image feature extractors.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用于为顺序和图像特征提取器提供保存/加载功能的图像处理器mixin。
- en: '#### `fetch_images`'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `fetch_images`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L523)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L523)'
- en: '[PRE11]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Convert a single or a list of urls into the corresponding `PIL.Image` objects.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 将单个或一组url转换为相应的`PIL.Image`对象。
- en: If a single url is passed, the return value will be a single object. If a list
    is passed a list of objects is returned.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递单个url，则返回值将是单个对象。如果传递列表，则返回对象列表。
- en: '#### `from_dict`'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L386)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L386)'
- en: '[PRE12]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Parameters
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image_processor_dict` (`Dict[str, Any]`) — Dictionary that will be used to
    instantiate the image processor object. Such a dictionary can be retrieved from
    a pretrained checkpoint by leveraging the [to_dict()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.to_dict)
    method.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image_processor_dict` (`Dict[str, Any]`) — 将用于实例化图像处理器对象的字典。可以通过利用[ to_dict()
    ](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.to_dict)方法从预训练检查点中检索这样的字典。'
- en: '`kwargs` (`Dict[str, Any]`) — Additional parameters from which to initialize
    the image processor object.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`) — 用于初始化图像处理器对象的其他参数。'
- en: Returns
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)'
- en: The image processor object instantiated from those parameters.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些参数实例化的图像处理器对象。
- en: Instantiates a type of [ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)
    from a Python dictionary of parameters.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 从Python参数字典中实例化一种类型的[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)。
- en: '#### `from_json_file`'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_json_file`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L443)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L443)'
- en: '[PRE13]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Parameters
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`json_file` (`str` or `os.PathLike`) — Path to the JSON file containing the
    parameters.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`json_file` (`str`或`os.PathLike`) — 包含参数的JSON文件的路径。'
- en: Returns
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: A image processor of type [ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 类型为[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)的图像处理器。
- en: The image_processor object instantiated from that JSON file.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 从该JSON文件实例化的图像处理器对象。
- en: Instantiates a image processor of type [ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)
    from the path to a JSON file of parameters.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 从参数JSON文件的路径实例化类型为[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)的图像处理器。
- en: '#### `from_pretrained`'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L95)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L95)'
- en: '[PRE14]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Parameters
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — This can be either:'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str`或`os.PathLike`) — 这可以是：'
- en: a string, the *model id* of a pretrained image_processor hosted inside a model
    repo on huggingface.co. Valid model ids can be located at the root-level, like
    `bert-base-uncased`, or namespaced under a user or organization name, like `dbmdz/bert-base-german-cased`.
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练图像处理器的*模型ID*，托管在huggingface.co上的模型存储库内。有效的模型ID可以位于根级别，如`bert-base-uncased`，或者在用户或组织名称下命名空间化，如`dbmdz/bert-base-german-cased`。
- en: a path to a *directory* containing a image processor file saved using the [save_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.save_pretrained)
    method, e.g., `./my_model_directory/`.
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个包含使用[save_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.save_pretrained)方法保存的图像处理器文件的*目录*路径，例如，`./my_model_directory/`。
- en: a path or url to a saved image processor JSON *file*, e.g., `./my_model_directory/preprocessor_config.json`.
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存的图像处理器JSON *文件*的路径或URL，例如，`./my_model_directory/preprocessor_config.json`。
- en: '`cache_dir` (`str` or `os.PathLike`, *optional*) — Path to a directory in which
    a downloaded pretrained model image processor should be cached if the standard
    cache should not be used.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir`（`str`或`os.PathLike`，*可选*）— 如果不应使用标准缓存，则应将下载的预训练模型图像处理器缓存在其中的目录路径。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force to (re-)download the image processor files and override the cached versions
    if they exist.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download`（`bool`，*可选*，默认为`False`）— 是否强制（重新）下载图像处理器文件并覆盖缓存版本（如果存在）。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to delete incompletely received file. Attempts to resume the download if such
    a file exists.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download`（`bool`，*可选*，默认为`False`）— 是否删除接收不完整的文件。如果存在这样的文件，尝试恢复下载。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, e.g., `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}.` The proxies are used on each request.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies`（`Dict[str, str]`，*可选*）— 要使用的代理服务器字典，按协议或端点分类，例如，`{''http'': ''foo.bar:3128'',
    ''http://hostname'': ''foo.bar:4012''}`。代理将在每个请求上使用。'
- en: '`token` (`str` or `bool`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, or not specified, will use the token generated when
    running `huggingface-cli login` (stored in `~/.huggingface`).'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token`（`str`或`bool`，*可选*）— 用作远程文件的HTTP bearer授权的令牌。如果为`True`，或未指定，将使用运行`huggingface-cli
    login`时生成的令牌（存储在`~/.huggingface`）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, or a commit id, since we use a git-based
    system for storing models and other artifacts on huggingface.co, so `revision`
    can be any identifier allowed by git.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision`（`str`，*可选*，默认为`"main"`）— 要使用的特定模型版本。它可以是分支名称、标签名称或提交ID，因为我们在huggingface.co上使用基于git的系统存储模型和其他工件，所以`revision`可以是git允许的任何标识符。'
- en: Instantiate a type of [ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)
    from an image processor.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 从图像处理器实例化类型[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)。
- en: 'Examples:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE15]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '#### `get_image_processor_dict`'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_image_processor_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L271)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L271)'
- en: '[PRE16]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Parameters
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — The identifier of
    the pre-trained checkpoint from which we want the dictionary of parameters.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path`（`str`或`os.PathLike`）— 我们想要参数字典的预训练检查点的标识符。'
- en: '`subfolder` (`str`, *optional*, defaults to `""`) — In case the relevant files
    are located inside a subfolder of the model repo on huggingface.co, you can specify
    the folder name here.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subfolder`（`str`，*可选*，默认为`""`）— 如果相关文件位于huggingface.co上模型存储库的子文件夹中，您可以在此处指定文件夹名称。'
- en: Returns
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Tuple[Dict, Dict]`'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`Tuple[Dict, Dict]`'
- en: The dictionary(ies) that will be used to instantiate the image processor object.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 将用于实例化图像处理器对象的字典。
- en: From a `pretrained_model_name_or_path`, resolve to a dictionary of parameters,
    to be used for instantiating a image processor of type `~image_processor_utils.ImageProcessingMixin`
    using `from_dict`.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 从`pretrained_model_name_or_path`解析为参数字典，用于实例化类型为`~image_processor_utils.ImageProcessingMixin`的图像处理器，使用`from_dict`。
- en: '#### `push_to_hub`'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `push_to_hub`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/utils/hub.py#L755)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/utils/hub.py#L755)'
- en: '[PRE17]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Parameters
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The name of the repository you want to push your image
    processor to. It should contain your organization name when pushing to a given
    organization.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id`（`str`）— 您要推送图像处理器的存储库名称。在推送到给定组织时，应包含您的组织名称。'
- en: '`use_temp_dir` (`bool`, *optional*) — Whether or not to use a temporary directory
    to store the files saved before they are pushed to the Hub. Will default to `True`
    if there is no directory named like `repo_id`, `False` otherwise.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_temp_dir`（`bool`，*可选*）— 是否使用临时目录来存储在推送到Hub之前保存的文件。如果没有名为`repo_id`的目录，则默认为`True`，否则为`False`。'
- en: '`commit_message` (`str`, *optional*) — Message to commit while pushing. Will
    default to `"Upload image processor"`.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message`（`str`，*可选*）— 推送时要提交的消息。默认为`"Upload image processor"`。'
- en: '`private` (`bool`, *optional*) — Whether or not the repository created should
    be private.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private`（`bool`，*可选*）— 创建的存储库是否应为私有。'
- en: '`token` (`bool` or `str`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, will use the token generated when running `huggingface-cli
    login` (stored in `~/.huggingface`). Will default to `True` if `repo_url` is not
    specified.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token`（`bool`或`str`，*可选*）— 用作远程文件的HTTP bearer授权的令牌。如果`repo_url`未指定，将默认为`True`。'
- en: '`max_shard_size` (`int` or `str`, *optional*, defaults to `"5GB"`) — Only applicable
    for models. The maximum size for a checkpoint before being sharded. Checkpoints
    shard will then be each of size lower than this size. If expressed as a string,
    needs to be digits followed by a unit (like `"5MB"`). We default it to `"5GB"`
    so that users can easily load models on free-tier Google Colab instances without
    any CPU OOM issues.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_shard_size`（`int`或`str`，*可选*，默认为`"5GB"`）— 仅适用于模型。在分片之前的检查点的最大大小。然后，检查点将分片，每个分片的大小都小于此大小。如果表示为字符串，需要是数字后跟一个单位（如`"5MB"`）。我们将其默认设置为`"5GB"`，以便用户可以在免费的Google
    Colab实例上轻松加载模型，而不会出现CPU OOM问题。'
- en: '`create_pr` (`bool`, *optional*, defaults to `False`) — Whether or not to create
    a PR with the uploaded files or directly commit.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_pr`（`bool`，*可选*，默认为`False`）— 是否创建一个带有上传文件的PR或直接提交。'
- en: '`safe_serialization` (`bool`, *optional*, defaults to `True`) — Whether or
    not to convert the model weights in safetensors format for safer serialization.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe_serialization`（`bool`，*可选*，默认为`True`）— 是否将模型权重转换为safetensors格式以进行更安全的序列化。'
- en: '`revision` (`str`, *optional*) — Branch to push the uploaded files to.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision`（`str`，*可选*）— 要推送上传文件的分支。'
- en: '`commit_description` (`str`, *optional*) — The description of the commit that
    will be created'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_description`（`str`，*可选*）— 将要创建的提交的描述'
- en: '`tags` (`List[str]`, *optional*) — List of tags to push on the Hub.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tags`（`List[str]`，*可选*）— 要在Hub上推送的标签列表。'
- en: Upload the image processor file to the 🤗 Model Hub.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像处理器文件上传到🤗模型中心。
- en: 'Examples:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE18]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '#### `register_for_auto_class`'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `register_for_auto_class`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L497)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L497)'
- en: '[PRE19]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Parameters
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`auto_class` (`str` or `type`, *optional*, defaults to `"AutoImageProcessor
    "`) — The auto class to register this new image processor with.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_class`（`str`或`type`，*可选*，默认为`"AutoImageProcessor" `）— 要将此新图像处理器注册到的自动类。'
- en: Register this class with a given auto class. This should only be used for custom
    image processors as the ones in the library are already mapped with `AutoImageProcessor`
    .
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 将此类注册到给定的auto类。这仅应用于自定义图像处理器，因为库中的处理器已经与`AutoImageProcessor`映射。
- en: This API is experimental and may have some slight breaking changes in the next
    releases.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 此API是实验性的，可能在下一个版本中有一些轻微的破坏性更改。
- en: '#### `save_pretrained`'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `save_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L210)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L210)'
- en: '[PRE20]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Parameters
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`save_directory` (`str` or `os.PathLike`) — Directory where the image processor
    JSON file will be saved (will be created if it does not exist).'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save_directory`（`str`或`os.PathLike`）— 将保存图像处理器JSON文件的目录（如果不存在，将创建）。'
- en: '`push_to_hub` (`bool`, *optional*, defaults to `False`) — Whether or not to
    push your model to the Hugging Face model hub after saving it. You can specify
    the repository you want to push to with `repo_id` (will default to the name of
    `save_directory` in your namespace).'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`push_to_hub`（`bool`，*可选*，默认为`False`）— 是否在保存后将模型推送到Hugging Face模型中心。您可以使用`repo_id`指定要推送到的存储库（将默认为您的命名空间中`save_directory`的名称）。'
- en: '`kwargs` (`Dict[str, Any]`, *optional*) — Additional key word arguments passed
    along to the [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    method.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs`（`Dict[str, Any]`，*可选*）— 传递给[push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)方法的额外关键字参数。'
- en: Save an image processor object to the directory `save_directory`, so that it
    can be re-loaded using the [from_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.from_pretrained)
    class method.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像处理器对象保存到目录`save_directory`中，以便可以使用[from_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.from_pretrained)类方法重新加载。
- en: '#### `to_dict`'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_dict`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L431)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L431)'
- en: '[PRE21]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Returns
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Dict[str, Any]`'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`Dict[str, Any]`'
- en: Dictionary of all the attributes that make up this image processor instance.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 包含此图像处理器实例的所有属性的字典。
- en: Serializes this instance to a Python dictionary.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为Python字典。
- en: '#### `to_json_file`'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_file`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L483)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L483)'
- en: '[PRE22]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Parameters
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`json_file_path` (`str` or `os.PathLike`) — Path to the JSON file in which
    this image_processor instance’s parameters will be saved.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`json_file_path`（`str`或`os.PathLike`）— 保存此image_processor实例参数的JSON文件路径。'
- en: Save this instance to a JSON file.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例保存到JSON文件中。
- en: '#### `to_json_string`'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_json_string`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L462)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L462)'
- en: '[PRE23]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Returns
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: String containing all the attributes that make up this feature_extractor instance
    in JSON format.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 包含构成此feature_extractor实例的所有属性的字符串，以JSON格式呈现。
- en: Serializes this instance to a JSON string.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实例序列化为JSON字符串。
