- en: 🤗 Transformers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/index#contents](https://huggingface.co/docs/transformers/v4.37.2/en/index#contents)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: State-of-the-art Machine Learning for [PyTorch](https://pytorch.org/), [TensorFlow](https://www.tensorflow.org/),
    and [JAX](https://jax.readthedocs.io/en/latest/).
  prefs: []
  type: TYPE_NORMAL
- en: '🤗 Transformers provides APIs and tools to easily download and train state-of-the-art
    pretrained models. Using pretrained models can reduce your compute costs, carbon
    footprint, and save you the time and resources required to train a model from
    scratch. These models support common tasks in different modalities, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '📝 **Natural Language Processing**: text classification, named entity recognition,
    question answering, language modeling, summarization, translation, multiple choice,
    and text generation.'
  prefs: []
  type: TYPE_NORMAL
- en: '🖼️ **Computer Vision**: image classification, object detection, and segmentation.'
  prefs: []
  type: TYPE_NORMAL
- en: '🗣️ **Audio**: automatic speech recognition and audio classification.'
  prefs: []
  type: TYPE_NORMAL
- en: '🐙 **Multimodal**: table question answering, optical character recognition,
    information extraction from scanned documents, video classification, and visual
    question answering.'
  prefs: []
  type: TYPE_NORMAL
- en: 🤗 Transformers support framework interoperability between PyTorch, TensorFlow,
    and JAX. This provides the flexibility to use a different framework at each stage
    of a model’s life; train a model in three lines of code in one framework, and
    load it for inference in another. Models can also be exported to a format like
    ONNX and TorchScript for deployment in production environments.
  prefs: []
  type: TYPE_NORMAL
- en: Join the growing community on the [Hub](https://huggingface.co/models), [forum](https://discuss.huggingface.co/),
    or [Discord](https://discord.com/invite/JfAtkvEtRb) today!
  prefs: []
  type: TYPE_NORMAL
- en: If you are looking for custom support from the Hugging Face team
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[![HuggingFace Expert Acceleration Program](../Images/4e3f8848a914f36cc180b9e654070ef1.png)](https://huggingface.co/support)'
  prefs: []
  type: TYPE_NORMAL
- en: Contents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The documentation is organized into five sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '**GET STARTED** provides a quick tour of the library and installation instructions
    to get up and running.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TUTORIALS** are a great place to start if you’re a beginner. This section
    will help you gain the basic skills you need to start using the library.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HOW-TO GUIDES** show you how to achieve a specific goal, like finetuning
    a pretrained model for language modeling or how to write and share a custom model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CONCEPTUAL GUIDES** offers more discussion and explanation of the underlying
    concepts and ideas behind models, tasks, and the design philosophy of 🤗 Transformers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**API** describes all classes and functions:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MAIN CLASSES** details the most important classes like configuration, model,
    tokenizer, and pipeline.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MODELS** details the classes and functions related to each model implemented
    in the library.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**INTERNAL HELPERS** details utility classes and functions used internally.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Supported models and frameworks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The table below represents the current support in the library for each of those
    models, whether they have a Python tokenizer (called “slow”). A “fast” tokenizer
    backed by the 🤗 Tokenizers library, whether they have support in Jax (via Flax),
    PyTorch, and/or TensorFlow.
  prefs: []
  type: TYPE_NORMAL
- en: '| Model | PyTorch support | TensorFlow support | Flax Support |'
  prefs: []
  type: TYPE_TB
- en: '| :-: | :-: | :-: | :-: |'
  prefs: []
  type: TYPE_TB
- en: '| [ALBERT](model_doc/albert) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [ALIGN](model_doc/align) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [AltCLIP](model_doc/altclip) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Audio Spectrogram Transformer](model_doc/audio-spectrogram-transformer)
    | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Autoformer](model_doc/autoformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Bark](model_doc/bark) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [BART](model_doc/bart) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BARThez](model_doc/barthez) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BARTpho](model_doc/bartpho) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BEiT](model_doc/beit) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BERT](model_doc/bert) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Bert Generation](model_doc/bert-generation) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [BertJapanese](model_doc/bert-japanese) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BERTweet](model_doc/bertweet) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BigBird](model_doc/big_bird) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BigBird-Pegasus](model_doc/bigbird_pegasus) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [BioGpt](model_doc/biogpt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [BiT](model_doc/bit) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Blenderbot](model_doc/blenderbot) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BlenderbotSmall](model_doc/blenderbot-small) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BLIP](model_doc/blip) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [BLIP-2](model_doc/blip-2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [BLOOM](model_doc/bloom) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BORT](model_doc/bort) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [BridgeTower](model_doc/bridgetower) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [BROS](model_doc/bros) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ByT5](model_doc/byt5) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [CamemBERT](model_doc/camembert) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CANINE](model_doc/canine) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Chinese-CLIP](model_doc/chinese_clip) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CLAP](model_doc/clap) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CLIP](model_doc/clip) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [CLIPSeg](model_doc/clipseg) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CLVP](model_doc/clvp) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CodeGen](model_doc/codegen) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CodeLlama](model_doc/code_llama) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Conditional DETR](model_doc/conditional_detr) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ConvBERT](model_doc/convbert) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ConvNeXT](model_doc/convnext) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ConvNeXTV2](model_doc/convnextv2) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CPM](model_doc/cpm) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [CPM-Ant](model_doc/cpmant) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CTRL](model_doc/ctrl) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [CvT](model_doc/cvt) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Data2VecAudio](model_doc/data2vec) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Data2VecText](model_doc/data2vec) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Data2VecVision](model_doc/data2vec) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DeBERTa](model_doc/deberta) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DeBERTa-v2](model_doc/deberta-v2) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Decision Transformer](model_doc/decision_transformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Deformable DETR](model_doc/deformable_detr) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DeiT](model_doc/deit) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DePlot](model_doc/deplot) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DETA](model_doc/deta) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DETR](model_doc/detr) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DialoGPT](model_doc/dialogpt) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [DiNAT](model_doc/dinat) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DINOv2](model_doc/dinov2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DistilBERT](model_doc/distilbert) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [DiT](model_doc/dit) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [DonutSwin](model_doc/donut) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DPR](model_doc/dpr) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [DPT](model_doc/dpt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [EfficientFormer](model_doc/efficientformer) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [EfficientNet](model_doc/efficientnet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ELECTRA](model_doc/electra) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [EnCodec](model_doc/encodec) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Encoder decoder](model_doc/encoder-decoder) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [ERNIE](model_doc/ernie) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ErnieM](model_doc/ernie_m) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ESM](model_doc/esm) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [FairSeq Machine-Translation](model_doc/fsmt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Falcon](model_doc/falcon) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [FastSpeech2Conformer](model_doc/fastspeech2_conformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [FLAN-T5](model_doc/flan-t5) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [FLAN-UL2](model_doc/flan-ul2) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [FlauBERT](model_doc/flaubert) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [FLAVA](model_doc/flava) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [FNet](model_doc/fnet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [FocalNet](model_doc/focalnet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Funnel Transformer](model_doc/funnel) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Fuyu](model_doc/fuyu) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [GIT](model_doc/git) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [GLPN](model_doc/glpn) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [GPT Neo](model_doc/gpt_neo) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [GPT NeoX](model_doc/gpt_neox) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [GPT NeoX Japanese](model_doc/gpt_neox_japanese) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [GPT-J](model_doc/gptj) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [GPT-Sw3](model_doc/gpt-sw3) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [GPTBigCode](model_doc/gpt_bigcode) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [GPTSAN-japanese](model_doc/gptsan-japanese) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Graphormer](model_doc/graphormer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [GroupViT](model_doc/groupvit) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [HerBERT](model_doc/herbert) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Hubert](model_doc/hubert) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [I-BERT](model_doc/ibert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [IDEFICS](model_doc/idefics) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ImageGPT](model_doc/imagegpt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Informer](model_doc/informer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [InstructBLIP](model_doc/instructblip) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Jukebox](model_doc/jukebox) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [KOSMOS-2](model_doc/kosmos-2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LayoutLM](model_doc/layoutlm) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LayoutLMv2](model_doc/layoutlmv2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LayoutLMv3](model_doc/layoutlmv3) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LayoutXLM](model_doc/layoutxlm) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LED](model_doc/led) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LeViT](model_doc/levit) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LiLT](model_doc/lilt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LLaMA](model_doc/llama) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Llama2](model_doc/llama2) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [LLaVa](model_doc/llava) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Longformer](model_doc/longformer) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LongT5](model_doc/longt5) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [LUKE](model_doc/luke) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [LXMERT](model_doc/lxmert) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [M-CTC-T](model_doc/mctct) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [M2M100](model_doc/m2m_100) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MADLAD-400](model_doc/madlad-400) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Marian](model_doc/marian) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [MarkupLM](model_doc/markuplm) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Mask2Former](model_doc/mask2former) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MaskFormer](model_doc/maskformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MatCha](model_doc/matcha) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [mBART](model_doc/mbart) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [mBART-50](model_doc/mbart50) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [MEGA](model_doc/mega) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Megatron-BERT](model_doc/megatron-bert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Megatron-GPT2](model_doc/megatron_gpt2) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [MGP-STR](model_doc/mgp-str) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Mistral](model_doc/mistral) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Mixtral](model_doc/mixtral) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [mLUKE](model_doc/mluke) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MMS](model_doc/mms) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [MobileBERT](model_doc/mobilebert) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MobileNetV1](model_doc/mobilenet_v1) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MobileNetV2](model_doc/mobilenet_v2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MobileViT](model_doc/mobilevit) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MobileViTV2](model_doc/mobilevitv2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MPNet](model_doc/mpnet) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MPT](model_doc/mpt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MRA](model_doc/mra) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MT5](model_doc/mt5) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [MusicGen](model_doc/musicgen) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [MVP](model_doc/mvp) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [NAT](model_doc/nat) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Nezha](model_doc/nezha) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [NLLB](model_doc/nllb) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [NLLB-MOE](model_doc/nllb-moe) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Nougat](model_doc/nougat) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Nyströmformer](model_doc/nystromformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [OneFormer](model_doc/oneformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [OpenAI GPT](model_doc/openai-gpt) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [OpenAI GPT-2](model_doc/gpt2) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [OpenLlama](model_doc/open-llama) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [OPT](model_doc/opt) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [OWL-ViT](model_doc/owlvit) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [OWLv2](model_doc/owlv2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [PatchTSMixer](model_doc/patchtsmixer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [PatchTST](model_doc/patchtst) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Pegasus](model_doc/pegasus) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [PEGASUS-X](model_doc/pegasus_x) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Perceiver](model_doc/perceiver) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Persimmon](model_doc/persimmon) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Phi](model_doc/phi) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [PhoBERT](model_doc/phobert) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Pix2Struct](model_doc/pix2struct) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [PLBart](model_doc/plbart) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [PoolFormer](model_doc/poolformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Pop2Piano](model_doc/pop2piano) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ProphetNet](model_doc/prophetnet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [PVT](model_doc/pvt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [QDQBert](model_doc/qdqbert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Qwen2](model_doc/qwen2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [RAG](model_doc/rag) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [REALM](model_doc/realm) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Reformer](model_doc/reformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [RegNet](model_doc/regnet) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [RemBERT](model_doc/rembert) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ResNet](model_doc/resnet) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [RetriBERT](model_doc/retribert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [RoBERTa](model_doc/roberta) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [RoBERTa-PreLayerNorm](model_doc/roberta-prelayernorm) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [RoCBert](model_doc/roc_bert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [RoFormer](model_doc/roformer) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [RWKV](model_doc/rwkv) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SAM](model_doc/sam) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SeamlessM4T](model_doc/seamless_m4t) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SeamlessM4Tv2](model_doc/seamless_m4t_v2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SegFormer](model_doc/segformer) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SEW](model_doc/sew) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SEW-D](model_doc/sew-d) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SigLIP](model_doc/siglip) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Speech Encoder decoder](model_doc/speech-encoder-decoder) | ✅ | ❌ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Speech2Text](model_doc/speech_to_text) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SpeechT5](model_doc/speecht5) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Splinter](model_doc/splinter) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SqueezeBERT](model_doc/squeezebert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SwiftFormer](model_doc/swiftformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Swin Transformer](model_doc/swin) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Swin Transformer V2](model_doc/swinv2) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Swin2SR](model_doc/swin2sr) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [SwitchTransformers](model_doc/switch_transformers) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [T5](model_doc/t5) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [T5v1.1](model_doc/t5v1.1) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Table Transformer](model_doc/table-transformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [TAPAS](model_doc/tapas) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [TAPEX](model_doc/tapex) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Time Series Transformer](model_doc/time_series_transformer) | ✅ | ❌ | ❌
    |'
  prefs: []
  type: TYPE_TB
- en: '| [TimeSformer](model_doc/timesformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Trajectory Transformer](model_doc/trajectory_transformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Transformer-XL](model_doc/transfo-xl) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [TrOCR](model_doc/trocr) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [TVLT](model_doc/tvlt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [TVP](model_doc/tvp) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [UL2](model_doc/ul2) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [UMT5](model_doc/umt5) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [UniSpeech](model_doc/unispeech) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [UniSpeechSat](model_doc/unispeech-sat) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [UnivNet](model_doc/univnet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [UPerNet](model_doc/upernet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [VAN](model_doc/van) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [VideoMAE](model_doc/videomae) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ViLT](model_doc/vilt) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [VipLlava](model_doc/vipllava) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Vision Encoder decoder](model_doc/vision-encoder-decoder) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [VisionTextDualEncoder](model_doc/vision-text-dual-encoder) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [VisualBERT](model_doc/visual_bert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ViT](model_doc/vit) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [ViT Hybrid](model_doc/vit_hybrid) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [VitDet](model_doc/vitdet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ViTMAE](model_doc/vit_mae) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ViTMatte](model_doc/vitmatte) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ViTMSN](model_doc/vit_msn) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [VITS](model_doc/vits) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [ViViT](model_doc/vivit) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Wav2Vec2](model_doc/wav2vec2) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [Wav2Vec2-BERT](model_doc/wav2vec2-bert) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Wav2Vec2-Conformer](model_doc/wav2vec2-conformer) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Wav2Vec2Phoneme](model_doc/wav2vec2_phoneme) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [WavLM](model_doc/wavlm) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [Whisper](model_doc/whisper) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [X-CLIP](model_doc/xclip) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [X-MOD](model_doc/xmod) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [XGLM](model_doc/xglm) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLM](model_doc/xlm) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLM-ProphetNet](model_doc/xlm-prophetnet) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLM-RoBERTa](model_doc/xlm-roberta) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLM-RoBERTa-XL](model_doc/xlm-roberta-xl) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLM-V](model_doc/xlm-v) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLNet](model_doc/xlnet) | ✅ | ✅ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLS-R](model_doc/xls_r) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [XLSR-Wav2Vec2](model_doc/xlsr_wav2vec2) | ✅ | ✅ | ✅ |'
  prefs: []
  type: TYPE_TB
- en: '| [YOLOS](model_doc/yolos) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
- en: '| [YOSO](model_doc/yoso) | ✅ | ❌ | ❌ |'
  prefs: []
  type: TYPE_TB
