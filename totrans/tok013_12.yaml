- en: Encoding
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/tokenizers/api/encoding](https://huggingface.co/docs/tokenizers/api/encoding)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PythonRustNode
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Encoding
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.Encoding`'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)
    represents the output of a [Tokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/tokenizer#tokenizers.Tokenizer).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: property attention_mask
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '`List[int]`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: The attention mask
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: The attention mask
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: This indicates to the LM which tokens should be attended to, and which should
    not. This is especially important when batching sequences, where we need to applying
    padding.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: property ids
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '`List[int]`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: The list of IDs
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: The generated IDs
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: The IDs are the main input to a Language Model. They are the token indices,
    the numerical representations that a LM understands.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: property n_sequences
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '`int`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: The number of sequences in this [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: The number of sequences represented
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: property offsets
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: A `List` of `Tuple[int, int]`
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: The list of offsets
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: The offsets associated to each token
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: These offsets let’s you slice the input string, and thus retrieve the original
    part that led to producing the corresponding token.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: property overflowing
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: A `List` of overflowing [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: When using truncation, the [Tokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/tokenizer#tokenizers.Tokenizer)
    takes care of splitting the output into as many pieces as required to match the
    specified maximum length. This field lets you retrieve all the subsequent pieces.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: When you use pairs of sequences, the overflowing pieces will contain enough
    variations to cover all the possible combinations, while respecting the provided
    maximum length.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: property sequence_ids
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: A `List` of `Optional[int]`
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: A list of optional sequence index.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: The generated sequence indices.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: They represent the index of the input sequence associated to each token. The
    sequence id can be None if the token is not related to any input sequence, like
    for example with special tokens.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: property special_tokens_mask
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '`List[int]`'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: The special tokens mask
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: The special token mask
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: This indicates which tokens are special tokens, and which are not.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: property tokens
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '`List[str]`'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: The list of tokens
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: The generated tokens
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: They are the string representation of the IDs.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: property type_ids
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '`List[int]`'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: The list of type ids
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: The generated type IDs
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Generally used for tasks like sequence classification or question answering,
    these tokens let the LM know which input sequence corresponds to each tokens.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: property word_ids
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: A `List` of `Optional[int]`
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: A list of optional word index.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: The generated word indices.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: They represent the index of the word associated to each token. When the input
    is pre-tokenized, they correspond to the ID of the given input label, otherwise
    they correspond to the words indices as defined by the [PreTokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.PreTokenizer)
    that was used.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: For special tokens and such (any token that was generated from something that
    was not part of the input), the output is `None`
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: property words
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: Returns
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: A `List` of `Optional[int]`
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: A list of optional word index.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: The generated word indices.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: This is deprecated and will be removed in a future version. Please use `~tokenizers.Encoding.word_ids`
    instead.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: They represent the index of the word associated to each token. When the input
    is pre-tokenized, they correspond to the ID of the given input label, otherwise
    they correspond to the words indices as defined by the [PreTokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.PreTokenizer)
    that was used.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: For special tokens and such (any token that was generated from something that
    was not part of the input), the output is `None`
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '#### `char_to_token`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '`char_pos` (`int`) — The position of a char in the input string'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sequence_index` (`int`, defaults to `0`) — The index of the sequence that
    contains the target char'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '`int`'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: The index of the token that contains this char in the encoded sequence
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: Get the token that contains the char at the given position in the input sequence.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '#### `char_to_word`'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '`char_pos` (`int`) — The position of a char in the input string'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sequence_index` (`int`, defaults to `0`) — The index of the sequence that
    contains the target char'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: '`int`'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: The index of the word that contains this char in the input sequence
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Get the word that contains the char at the given position in the input sequence.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '#### `merge`'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '`encodings` (A `List` of [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding))
    — The list of encodings that should be merged in one'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`growing_offsets` (`bool`, defaults to `True`) — Whether the offsets should
    accumulate while merging'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '[Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: The resulting Encoding
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Merge the list of encodings into one final [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '#### `pad`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '`length` (`int`) — The desired length'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'direction — (`str`, defaults to `right`): The expected padding direction. Can
    be either `right` or `left`'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pad_id` (`int`, defaults to `0`) — The ID corresponding to the padding token'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pad_type_id` (`int`, defaults to `0`) — The type ID corresponding to the padding
    token'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pad_token` (`str`, defaults to *[PAD]*) — The pad token to use'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pad the [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)
    at the given length
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: '#### `set_sequence_id`'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Set the given sequence index
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Set the given sequence index for the whole range of tokens contained in this
    [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '#### `token_to_chars`'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '`token_index` (`int`) — The index of a token in the encoded sequence.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '`Tuple[int, int]`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: The token offsets `(first, last + 1)`
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: Get the offsets of the token at the given index.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: The returned offsets are related to the input sequence that contains the token.
    In order to determine in which input sequence it belongs, you must call `~tokenizers.Encoding.token_to_sequence()`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '#### `token_to_sequence`'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '`token_index` (`int`) — The index of a token in the encoded sequence.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '`int`'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: The sequence id of the given token
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Get the index of the sequence represented by the given token.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: In the general use case, this method returns `0` for a single sequence or the
    first sequence of a pair, and `1` for the second sequence of a pair
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '#### `token_to_word`'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '`token_index` (`int`) — The index of a token in the encoded sequence.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '`int`'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: The index of the word in the relevant input sequence.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: Get the index of the word that contains the token in one of the input sequences.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: The returned word index is related to the input sequence that contains the token.
    In order to determine in which input sequence it belongs, you must call `~tokenizers.Encoding.token_to_sequence()`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '#### `truncate`'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '`max_length` (`int`) — The desired length'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`stride` (`int`, defaults to `0`) — The length of previous content to be included
    in each overflowing piece'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`direction` (`str`, defaults to `right`) — Truncate direction'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Truncate the [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)
    at the given length
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: If this [Encoding](/docs/tokenizers/v0.13.4.rc2/en/api/encoding#tokenizers.Encoding)
    represents multiple sequences, when truncating this information is lost. It will
    be considered as representing a single sequence.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '#### `word_to_chars`'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Parameters
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '`word_index` (`int`) — The index of a word in one of the input sequences.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sequence_index` (`int`, defaults to `0`) — The index of the sequence that
    contains the target word'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '`Tuple[int, int]`'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: The range of characters (span) `(first, last + 1)`
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Get the offsets of the word at the given index in one of the input sequences.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 获取输入序列中给定索引处的单词的偏移量。
- en: '#### `word_to_tokens`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `word_to_tokens`'
- en: '[PRE11]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Parameters
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`word_index` (`int`) — The index of a word in one of the input sequences.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`word_index` (`int`) — 输入序列中单词的索引。'
- en: '`sequence_index` (`int`, defaults to `0`) — The index of the sequence that
    contains the target word'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sequence_index` (`int`，默认为`0`) — 包含目标单词的序列的索引'
- en: Returns
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '`Tuple[int, int]`'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`Tuple[int, int]`'
- en: 'The range of tokens: `(first, last + 1)`'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 标记的范围：`(第一个，最后一个 + 1)`
- en: Get the encoded tokens corresponding to the word at the given index in one of
    the input sequences.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 获取与输入序列中给定索引处的单词对应的编码标记。
