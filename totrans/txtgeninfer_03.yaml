- en: Quick Tour
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/text-generation-inference/quicktour](https://huggingface.co/docs/text-generation-inference/quicktour)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: The easiest way of getting started is using the official Docker container. Install
    Docker following [their installation instructions](https://docs.docker.com/get-docker/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s say you want to deploy [Falcon-7B Instruct](https://huggingface.co/tiiuae/falcon-7b-instruct)
    model with TGI. Here is an example on how to do that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To use NVIDIA GPUs, you need to install the [NVIDIA Container Toolkit](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html).
    We also recommend using NVIDIA drivers with CUDA version 12.2 or higher.
  prefs: []
  type: TYPE_NORMAL
- en: 'TGI also supports ROCm-enabled AMD GPUs (only MI210 and MI250 are tested),
    details are available in the [Supported Hardware section](./supported_models#supported-hardware)
    and [AMD documentation](https://rocm.docs.amd.com/en/latest/deploy/docker.html).
    To launch TGI on ROCm GPUs, please use instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once TGI is running, you can use the `generate` endpoint by doing requests.
    To learn more about how to query the endpoints, check the [Consuming TGI](./basic_tutorials/consuming_tgi)
    section, where we show examples with utility libraries and UIs. Below you can
    see a simple snippet to query the endpoint.
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: To see all possible deploy flags and options, you can use the `--help` flag.
    It’s possible to configure the number of shards, quantization, generation parameters,
    and more.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
