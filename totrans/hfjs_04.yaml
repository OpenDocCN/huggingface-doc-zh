- en: '@huggingface/inference'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '@huggingface/inference'
- en: 'Original text: [https://huggingface.co/docs/huggingface.js/inference/modules](https://huggingface.co/docs/huggingface.js/inference/modules)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '原文链接: [https://huggingface.co/docs/huggingface.js/inference/modules](https://huggingface.co/docs/huggingface.js/inference/modules)'
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Classes
- en: '[HfInference](classes/HfInference)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HfInference](classes/HfInference)'
- en: '[HfInferenceEndpoint](classes/HfInferenceEndpoint)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HfInferenceEndpoint](classes/HfInferenceEndpoint)'
- en: '[InferenceOutputError](classes/InferenceOutputError)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[InferenceOutputError](classes/InferenceOutputError)'
- en: Interfaces
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Interfaces
- en: '[AudioClassificationOutputValue](interfaces/AudioClassificationOutputValue)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AudioClassificationOutputValue](interfaces/AudioClassificationOutputValue)'
- en: '[AudioToAudioOutputValue](interfaces/AudioToAudioOutputValue)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AudioToAudioOutputValue](interfaces/AudioToAudioOutputValue)'
- en: '[AutomaticSpeechRecognitionOutput](interfaces/AutomaticSpeechRecognitionOutput)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AutomaticSpeechRecognitionOutput](interfaces/AutomaticSpeechRecognitionOutput)'
- en: '[BaseArgs](interfaces/BaseArgs)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[BaseArgs](interfaces/BaseArgs)'
- en: '[ConversationalOutput](interfaces/ConversationalOutput)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ConversationalOutput](interfaces/ConversationalOutput)'
- en: '[DocumentQuestionAnsweringOutput](interfaces/DocumentQuestionAnsweringOutput)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[DocumentQuestionAnsweringOutput](interfaces/DocumentQuestionAnsweringOutput)'
- en: '[ImageClassificationOutputValue](interfaces/ImageClassificationOutputValue)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ImageClassificationOutputValue](interfaces/ImageClassificationOutputValue)'
- en: '[ImageSegmentationOutputValue](interfaces/ImageSegmentationOutputValue)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ImageSegmentationOutputValue](interfaces/ImageSegmentationOutputValue)'
- en: '[ImageToTextOutput](interfaces/ImageToTextOutput)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ImageToTextOutput](interfaces/ImageToTextOutput)'
- en: '[ObjectDetectionOutputValue](interfaces/ObjectDetectionOutputValue)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ObjectDetectionOutputValue](interfaces/ObjectDetectionOutputValue)'
- en: '[Options](interfaces/Options)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Options](interfaces/Options)'
- en: '[QuestionAnsweringOutput](interfaces/QuestionAnsweringOutput)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[QuestionAnsweringOutput](interfaces/QuestionAnsweringOutput)'
- en: '[SummarizationOutput](interfaces/SummarizationOutput)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SummarizationOutput](interfaces/SummarizationOutput)'
- en: '[TableQuestionAnsweringOutput](interfaces/TableQuestionAnsweringOutput)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TableQuestionAnsweringOutput](interfaces/TableQuestionAnsweringOutput)'
- en: '[TextGenerationOutput](interfaces/TextGenerationOutput)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TextGenerationOutput](interfaces/TextGenerationOutput)'
- en: '[TextGenerationStreamBestOfSequence](interfaces/TextGenerationStreamBestOfSequence)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TextGenerationStreamBestOfSequence](interfaces/TextGenerationStreamBestOfSequence)'
- en: '[TextGenerationStreamDetails](interfaces/TextGenerationStreamDetails)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TextGenerationStreamDetails](interfaces/TextGenerationStreamDetails)'
- en: '[TextGenerationStreamOutput](interfaces/TextGenerationStreamOutput)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TextGenerationStreamOutput](interfaces/TextGenerationStreamOutput)'
- en: '[TextGenerationStreamPrefillToken](interfaces/TextGenerationStreamPrefillToken)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TextGenerationStreamPrefillToken](interfaces/TextGenerationStreamPrefillToken)'
- en: '[TextGenerationStreamToken](interfaces/TextGenerationStreamToken)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TextGenerationStreamToken](interfaces/TextGenerationStreamToken)'
- en: '[TokenClassificationOutputValue](interfaces/TokenClassificationOutputValue)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TokenClassificationOutputValue](interfaces/TokenClassificationOutputValue)'
- en: '[TranslationOutputValue](interfaces/TranslationOutputValue)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TranslationOutputValue](interfaces/TranslationOutputValue)'
- en: '[VisualQuestionAnsweringOutput](interfaces/VisualQuestionAnsweringOutput)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[VisualQuestionAnsweringOutput](interfaces/VisualQuestionAnsweringOutput)'
- en: '[ZeroShotClassificationOutputValue](interfaces/ZeroShotClassificationOutputValue)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ZeroShotClassificationOutputValue](interfaces/ZeroShotClassificationOutputValue)'
- en: '[ZeroShotImageClassificationOutputValue](interfaces/ZeroShotImageClassificationOutputValue)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ZeroShotImageClassificationOutputValue](interfaces/ZeroShotImageClassificationOutputValue)'
- en: Type Aliases
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Type Aliases
- en: AudioClassificationArgs
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AudioClassificationArgs
- en: 'Ƭ `AudioClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`:
    `Blob` | `ArrayBuffer` }'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `AudioClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`:
    `Blob` | `ArrayBuffer` }'
- en: Defined in
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Defined in
- en: '[inference/src/tasks/audio/audioClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioClassification.ts#L5)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/audioClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioClassification.ts#L5)'
- en: '* * *'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: AudioClassificationReturn
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AudioClassificationReturn
- en: 'Ƭ `AudioClassificationReturn`: [`AudioClassificationOutputValue`](interfaces/AudioClassificationOutputValue)[]'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `AudioClassificationReturn`: [`AudioClassificationOutputValue`](interfaces/AudioClassificationOutputValue)[]'
- en: Defined in
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Defined in
- en: '[inference/src/tasks/audio/audioClassification.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioClassification.ts#L24)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/audioClassification.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioClassification.ts#L24)'
- en: '* * *'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: AudioToAudioArgs
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AudioToAudioArgs
- en: 'Ƭ `AudioToAudioArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob`
    | `ArrayBuffer` }'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `AudioToAudioArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob`
    | `ArrayBuffer` }'
- en: Defined in
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Defined in
- en: '[inference/src/tasks/audio/audioToAudio.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioToAudio.ts#L5)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/audioToAudio.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioToAudio.ts#L5)'
- en: '* * *'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: AudioToAudioReturn
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AudioToAudioReturn
- en: 'Ƭ `AudioToAudioReturn`: [`AudioToAudioOutputValue`](interfaces/AudioToAudioOutputValue)[]'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `AudioToAudioReturn`: [`AudioToAudioOutputValue`](interfaces/AudioToAudioOutputValue)[]'
- en: Defined in
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Defined in
- en: '[inference/src/tasks/audio/audioToAudio.ts:29](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioToAudio.ts#L29)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/audioToAudio.ts:29](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioToAudio.ts#L29)'
- en: '* * *'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: AutomaticSpeechRecognitionArgs
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AutomaticSpeechRecognitionArgs
- en: 'Ƭ `AutomaticSpeechRecognitionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`:
    `Blob` | `ArrayBuffer` }'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `AutomaticSpeechRecognitionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`:
    `Blob` | `ArrayBuffer` }'
- en: Defined in
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Defined in
- en: '[inference/src/tasks/audio/automaticSpeechRecognition.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/automaticSpeechRecognition.ts#L5)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/automaticSpeechRecognition.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/automaticSpeechRecognition.ts#L5)'
- en: '* * *'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ConversationalArgs
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ConversationalArgs
- en: 'Ƭ `ConversationalArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: { `generated_responses?`:
    `string`[] ; `past_user_inputs?`: `string`[] ; `text`: `string` } ; `parameters?`:
    { `max_length?`: `number` ; `max_time?`: `number` ; `min_length?`: `number` ;
    `repetition_penalty?`: `number` ; `temperature?`: `number` ; `top_k?`: `number`
    ; `top_p?`: `number` } }'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ConversationalArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: { `generated_responses?`:
    `string`[] ; `past_user_inputs?`: `string`[] ; `text`: `string` } ; `parameters?`:
    { `max_length?`: `number` ; `max_time?`: `number` ; `min_length?`: `number` ;
    `repetition_penalty?`: `number` ; `temperature?`: `number` ; `top_k?`: `number`
    ; `top_p?`: `number` } }'
- en: Defined in
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Defined in
- en: '[inference/src/tasks/nlp/conversational.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/conversational.ts#L5)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/conversational.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/conversational.ts#L5)'
- en: '* * *'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: DocumentQuestionAnsweringArgs
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DocumentQuestionAnsweringArgs
- en: 'Ƭ `DocumentQuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `image`: `Blob` | `ArrayBuffer` ; `question`: `string` } }'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `DocumentQuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `image`: `Blob` | `ArrayBuffer` ; `question`: `string` } }'
- en: Defined in
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/multimodal/documentQuestionAnswering.ts:8](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/documentQuestionAnswering.ts#L8)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/multimodal/documentQuestionAnswering.ts:8](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/documentQuestionAnswering.ts#L8)'
- en: '* * *'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: FeatureExtractionArgs
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FeatureExtractionArgs
- en: 'Ƭ `FeatureExtractionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` | `string`[] }'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `FeatureExtractionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` | `string`[] }'
- en: Defined in
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Defined in
- en: '[inference/src/tasks/nlp/featureExtraction.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/featureExtraction.ts#L6)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/featureExtraction.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/featureExtraction.ts#L6)'
- en: '* * *'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: FeatureExtractionOutput
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FeatureExtractionOutput
- en: 'Ƭ `FeatureExtractionOutput`: (`number` | `number`[] | `number`[][])[]'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `FeatureExtractionOutput`: (`number` | `number`[] | `number`[][])[]'
- en: Returned values are a multidimensional array of floats (dimension depending
    on if you sent a string or a list of string, and if the automatic reduction, usually
    mean_pooling for instance was applied for you or not. This should be explained
    on the model’s README).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的值是浮点数的多维数组（维数取决于您发送的是字符串还是字符串列表，以及是否为您应用了自动缩减，通常是均值池化等）。这应该在模型的 README 中有解释。
- en: Defined in
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/featureExtraction.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/featureExtraction.ts#L19)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/featureExtraction.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/featureExtraction.ts#L19)'
- en: '* * *'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: FillMaskArgs
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FillMaskArgs
- en: 'Ƭ `FillMaskArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    }'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `FillMaskArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    }'
- en: Defined in
  id: totrans-82
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/fillMask.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/fillMask.ts#L5)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/fillMask.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/fillMask.ts#L5)'
- en: '* * *'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: FillMaskOutput
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FillMaskOutput
- en: 'Ƭ `FillMaskOutput`: { `score`: `number` ; `sequence`: `string` ; `token`: `number`
    ; `token_str`: `string` }[]'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `FillMaskOutput`: { `score`: `number` ; `sequence`: `string` ; `token`: `number`
    ; `token_str`: `string` }[]'
- en: Defined in
  id: totrans-87
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/fillMask.ts:9](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/fillMask.ts#L9)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/fillMask.ts:9](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/fillMask.ts#L9)'
- en: '* * *'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ImageClassificationArgs
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageClassificationArgs
- en: 'Ƭ `ImageClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`:
    `Blob` | `ArrayBuffer` }'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ImageClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`:
    `Blob` | `ArrayBuffer` }'
- en: Defined in
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageClassification.ts#L5)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageClassification.ts#L5)'
- en: '* * *'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ImageClassificationOutput
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageClassificationOutput
- en: 'Ƭ `ImageClassificationOutput`: [`ImageClassificationOutputValue`](interfaces/ImageClassificationOutputValue)[]'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ImageClassificationOutput`: [`ImageClassificationOutputValue`](interfaces/ImageClassificationOutputValue)[]'
- en: Defined in
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageClassification.ts:23](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageClassification.ts#L23)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageClassification.ts:23](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageClassification.ts#L23)'
- en: '* * *'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ImageSegmentationArgs
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageSegmentationArgs
- en: 'Ƭ `ImageSegmentationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob`
    | `ArrayBuffer` }'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ImageSegmentationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob`
    | `ArrayBuffer` }'
- en: Defined in
  id: totrans-102
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageSegmentation.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageSegmentation.ts#L5)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageSegmentation.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageSegmentation.ts#L5)'
- en: '* * *'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ImageSegmentationOutput
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageSegmentationOutput
- en: 'Ƭ `ImageSegmentationOutput`: [`ImageSegmentationOutputValue`](interfaces/ImageSegmentationOutputValue)[]'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ImageSegmentationOutput`: [`ImageSegmentationOutputValue`](interfaces/ImageSegmentationOutputValue)[]'
- en: Defined in
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageSegmentation.ts:27](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageSegmentation.ts#L27)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageSegmentation.ts:27](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageSegmentation.ts#L27)'
- en: '* * *'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ImageToImageArgs
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageToImageArgs
- en: 'Ƭ `ImageToImageArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `Blob`
    | `ArrayBuffer` ; `parameters?`: { `guess_mode?`: `boolean` ; `guidance_scale?`:
    `number` ; `height?`: `number` ; `negative_prompt?`: `string` ; `num_inference_steps?`:
    `number` ; `prompt?`: `string` ; `strength?`: `number` ; `width?`: `number` }
    }'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ImageToImageArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `Blob`
    | `ArrayBuffer` ; `parameters?`: { `guess_mode?`: `boolean` ; `guidance_scale?`:
    `number` ; `height?`: `number` ; `negative_prompt?`: `string` ; `num_inference_steps?`:
    `number` ; `prompt?`: `string` ; `strength?`: `number` ; `width?`: `number` }
    }'
- en: Defined in
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageToImage.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToImage.ts#L6)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageToImage.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToImage.ts#L6)'
- en: '* * *'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ImageToImageOutput
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageToImageOutput
- en: 'Ƭ `ImageToImageOutput`: `Blob`'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ImageToImageOutput`: `Blob`'
- en: Defined in
  id: totrans-117
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageToImage.ts:55](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToImage.ts#L55)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageToImage.ts:55](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToImage.ts#L55)'
- en: '* * *'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ImageToTextArgs
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageToTextArgs
- en: 'Ƭ `ImageToTextArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob` |
    `ArrayBuffer` }'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ImageToTextArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob` |
    `ArrayBuffer` }'
- en: Defined in
  id: totrans-122
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/cv/imageToText.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToText.ts#L5)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageToText.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToText.ts#L5)'
- en: '* * *'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: InferenceTask
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: InferenceTask
- en: 'Ƭ `InferenceTask`: `Exclude`<`PipelineType`, `"other"`>'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`InferenceTask`: `Exclude`<`PipelineType`, `"other"`>'
- en: Defined in
  id: totrans-127
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/types.ts:40](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L40)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/types.ts:40](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L40)'
- en: '* * *'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ObjectDetectionArgs
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ObjectDetectionArgs
- en: 'Ƭ `ObjectDetectionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob`
    | `ArrayBuffer` }'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`ObjectDetectionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob`
    | `ArrayBuffer` }'
- en: Defined in
  id: totrans-132
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/cv/objectDetection.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/objectDetection.ts#L5)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/objectDetection.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/objectDetection.ts#L5)'
- en: '* * *'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ObjectDetectionOutput
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ObjectDetectionOutput
- en: 'Ƭ `ObjectDetectionOutput`: [`ObjectDetectionOutputValue`](interfaces/ObjectDetectionOutputValue)[]'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`ObjectDetectionOutput`: [`ObjectDetectionOutputValue`](interfaces/ObjectDetectionOutputValue)[]'
- en: Defined in
  id: totrans-137
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/cv/objectDetection.ts:33](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/objectDetection.ts#L33)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/objectDetection.ts:33](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/objectDetection.ts#L33)'
- en: '* * *'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: QuestionAnsweringArgs
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: QuestionAnsweringArgs
- en: 'Ƭ `QuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `context`: `string` ; `question`: `string` } }'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`QuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: {
    `context`: `string` ; `question`: `string` } }'
- en: Defined in
  id: totrans-142
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/nlp/questionAnswering.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/questionAnswering.ts#L5)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/questionAnswering.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/questionAnswering.ts#L5)'
- en: '* * *'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: RequestArgs
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RequestArgs
- en: 'Ƭ `RequestArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob` | `ArrayBuffer`
    } | { `inputs`: `unknown` } & { `accessToken?`: `string` ; `parameters?`: `Record`<`string`,
    `unknown`> }'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`RequestArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `data`: `Blob` | `ArrayBuffer`
    } | { `inputs`: `unknown` } & { `accessToken?`: `string` ; `parameters?`: `Record`<`string`,
    `unknown`> }'
- en: Defined in
  id: totrans-147
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/types.ts:57](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L57)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/types.ts:57](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/types.ts#L57)'
- en: '* * *'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: SentenceSimilarityArgs
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SentenceSimilarityArgs
- en: 'Ƭ `SentenceSimilarityArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `Record`<`string`, `unknown`> | `Record`<`string`, `unknown`>[] }'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`SentenceSimilarityArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `Record`<`string`,
    `unknown`> | `Record`<`string`, `unknown`>[] }'
- en: Defined in
  id: totrans-152
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/nlp/sentenceSimilarity.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/sentenceSimilarity.ts#L6)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/sentenceSimilarity.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/sentenceSimilarity.ts#L6)'
- en: '* * *'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: SentenceSimilarityOutput
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SentenceSimilarityOutput
- en: 'Ƭ `SentenceSimilarityOutput`: `number`[]'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`SentenceSimilarityOutput`: `number`[]'
- en: Returned values are a list of floats
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值是一组浮点数列表
- en: Defined in
  id: totrans-158
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/nlp/sentenceSimilarity.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/sentenceSimilarity.ts#L19)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/sentenceSimilarity.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/sentenceSimilarity.ts#L19)'
- en: '* * *'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: SummarizationArgs
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SummarizationArgs
- en: 'Ƭ `SummarizationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    ; `parameters?`: { `max_length?`: `number` ; `max_time?`: `number` ; `min_length?`:
    `number` ; `repetition_penalty?`: `number` ; `temperature?`: `number` ; `top_k?`:
    `number` ; `top_p?`: `number` } }'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`SummarizationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    ; `parameters?`: { `max_length?`: `number` ; `max_time?`: `number` ; `min_length?`:
    `number` ; `repetition_penalty?`: `number` ; `temperature?`: `number` ; `top_k?`:
    `number` ; `top_p?`: `number` } }'
- en: Defined in
  id: totrans-163
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/nlp/summarization.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/summarization.ts#L5)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/summarization.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/summarization.ts#L5)'
- en: '* * *'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TableQuestionAnsweringArgs
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TableQuestionAnsweringArgs
- en: 'Ƭ `TableQuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `query`: `string` ; `table`: `Record`<`string`, `string`[]> } }'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`TableQuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `query`: `string` ; `table`: `Record`<`string`, `string`[]> } }'
- en: Defined in
  id: totrans-168
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/nlp/tableQuestionAnswering.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tableQuestionAnswering.ts#L5)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/tableQuestionAnswering.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tableQuestionAnswering.ts#L5)'
- en: '* * *'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TabularClassificationArgs
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TabularClassificationArgs
- en: 'Ƭ `TabularClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `data`: `Record`<`string`, `string`[]> } }'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`TabularClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `data`: `Record`<`string`, `string`[]> } }'
- en: Defined in
  id: totrans-173
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/tabular/tabularClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularClassification.ts#L5)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/tabular/tabularClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularClassification.ts#L5)'
- en: '* * *'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TabularClassificationOutput
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TabularClassificationOutput
- en: 'Ƭ `TabularClassificationOutput`: `number`[]'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`TabularClassificationOutput`: `number`[]'
- en: A list of predicted labels for each row
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 每行的预测标签列表
- en: Defined in
  id: totrans-179
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/tabular/tabularClassification.ts:17](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularClassification.ts#L17)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/tabular/tabularClassification.ts:17](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularClassification.ts#L17)'
- en: '* * *'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TabularRegressionArgs
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TabularRegressionArgs
- en: 'Ƭ `TabularRegressionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `data`: `Record`<`string`, `string`[]> } }'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`TabularRegressionArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: {
    `data`: `Record`<`string`, `string`[]> } }'
- en: Defined in
  id: totrans-184
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在以下位置定义：
- en: '[inference/src/tasks/tabular/tabularRegression.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularRegression.ts#L5)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/tabular/tabularRegression.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularRegression.ts#L5)'
- en: '* * *'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TabularRegressionOutput
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TabularRegressionOutput
- en: 'Ƭ `TabularRegressionOutput`: `number`[]'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TabularRegressionOutput`: `number`[]'
- en: a list of predicted values for each row
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 每行的预测值列表
- en: Defined in
  id: totrans-190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/tabular/tabularRegression.ts:17](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularRegression.ts#L17)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/tabular/tabularRegression.ts:17](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularRegression.ts#L17)'
- en: '* * *'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextClassificationArgs
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextClassificationArgs
- en: 'Ƭ `TextClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` }'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` }'
- en: Defined in
  id: totrans-195
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/textClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textClassification.ts#L5)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/textClassification.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textClassification.ts#L5)'
- en: '* * *'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextClassificationOutput
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextClassificationOutput
- en: 'Ƭ `TextClassificationOutput`: { `label`: `string` ; `score`: `number` }[]'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextClassificationOutput`: { `label`: `string` ; `score`: `number` }[]'
- en: Defined in
  id: totrans-200
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/textClassification.ts:12](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textClassification.ts#L12)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/textClassification.ts:12](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textClassification.ts#L12)'
- en: '* * *'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextGenerationArgs
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextGenerationArgs
- en: 'Ƭ `TextGenerationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    ; `parameters?`: { `do_sample?`: `boolean` ; `max_new_tokens?`: `number` ; `max_time?`:
    `number` ; `num_return_sequences?`: `number` ; `repetition_penalty?`: `number`
    ; `return_full_text?`: `boolean` ; `stop_sequences?`: `string`[] ; `temperature?`:
    `number` ; `top_k?`: `number` ; `top_p?`: `number` ; `truncate?`: `number` } }'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextGenerationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    ; `parameters?`: { `do_sample?`: `boolean` ; `max_new_tokens?`: `number` ; `max_time?`:
    `number` ; `num_return_sequences?`: `number` ; `repetition_penalty?`: `number`
    ; `return_full_text?`: `boolean` ; `stop_sequences?`: `string`[] ; `temperature?`:
    `number` ; `top_k?`: `number` ; `top_p?`: `number` ; `truncate?`: `number` }'
- en: Defined in
  id: totrans-205
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/textGeneration.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGeneration.ts#L5)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/textGeneration.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGeneration.ts#L5)'
- en: '* * *'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextGenerationStreamFinishReason
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextGenerationStreamFinishReason
- en: 'Ƭ `TextGenerationStreamFinishReason`: `"length"` | `"eos_token"` | `"stop_sequence"`'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextGenerationStreamFinishReason`: `"length"` | `"eos_token"` | `"stop_sequence"`'
- en: Defined in
  id: totrans-210
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/textGenerationStream.ts:46](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGenerationStream.ts#L46)'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/textGenerationStream.ts:46](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGenerationStream.ts#L46)'
- en: '* * *'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextToImageArgs
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextToImageArgs
- en: 'Ƭ `TextToImageArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    ; `parameters?`: { `guidance_scale?`: `number` ; `height?`: `number` ; `negative_prompt?`:
    `string` ; `num_inference_steps?`: `number` ; `width?`: `number` } }'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextToImageArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    ; `parameters?`: { `guidance_scale?`: `number` ; `height?`: `number` ; `negative_prompt?`:
    `string` ; `num_inference_steps?`: `number` ; `width?`: `number` } }'
- en: Defined in
  id: totrans-215
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/textToImage.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/textToImage.ts#L5)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/textToImage.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/textToImage.ts#L5)'
- en: '* * *'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextToImageOutput
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextToImageOutput
- en: 'Ƭ `TextToImageOutput`: `Blob`'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextToImageOutput`: `Blob`'
- en: Defined in
  id: totrans-220
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/textToImage.ts:35](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/textToImage.ts#L35)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/textToImage.ts:35](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/textToImage.ts#L35)'
- en: '* * *'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextToSpeechArgs
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextToSpeechArgs
- en: 'Ƭ `TextToSpeechArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    }'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextToSpeechArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    }'
- en: Defined in
  id: totrans-225
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/audio/textToSpeech.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/textToSpeech.ts#L5)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/textToSpeech.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/textToSpeech.ts#L5)'
- en: '* * *'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TextToSpeechOutput
  id: totrans-228
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TextToSpeechOutput
- en: 'Ƭ `TextToSpeechOutput`: `Blob`'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TextToSpeechOutput`: `Blob`'
- en: Defined in
  id: totrans-230
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/audio/textToSpeech.ts:12](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/textToSpeech.ts#L12)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/textToSpeech.ts:12](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/textToSpeech.ts#L12)'
- en: '* * *'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TokenClassificationArgs
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TokenClassificationArgs
- en: 'Ƭ `TokenClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` ; `parameters?`: { `aggregation_strategy?`: `"none"` | `"simple"` | `"first"`
    | `"average"` | `"max"` } }'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TokenClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` ; `parameters?`: { `aggregation_strategy?`: `"none"` | `"simple"` | `"first"`
    | `"average"` | `"max"` } }'
- en: Defined in
  id: totrans-235
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/tokenClassification.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tokenClassification.ts#L6)'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/tokenClassification.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tokenClassification.ts#L6)'
- en: '* * *'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TokenClassificationOutput
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TokenClassificationOutput
- en: 'Ƭ `TokenClassificationOutput`: [`TokenClassificationOutputValue`](interfaces/TokenClassificationOutputValue)[]'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TokenClassificationOutput`: [`TokenClassificationOutputValue`](interfaces/TokenClassificationOutputValue)[]'
- en: Defined in
  id: totrans-240
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/tokenClassification.ts:52](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tokenClassification.ts#L52)'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/tokenClassification.ts:52](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tokenClassification.ts#L52)'
- en: '* * *'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TranslationArgs
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TranslationArgs
- en: 'Ƭ `TranslationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    | `string`[] }'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TranslationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`: `string`
    | `string`[] }'
- en: Defined in
  id: totrans-245
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/translation.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/translation.ts#L5)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/translation.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/translation.ts#L5)'
- en: '* * *'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: TranslationOutput
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 翻译输出
- en: 'Ƭ `TranslationOutput`: [`TranslationOutputValue`](interfaces/TranslationOutputValue)
    | [`TranslationOutputValue`](interfaces/TranslationOutputValue)[]'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `TranslationOutput`: [`TranslationOutputValue`](interfaces/TranslationOutputValue)
    | [`TranslationOutputValue`](interfaces/TranslationOutputValue)[]'
- en: Defined in
  id: totrans-250
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/nlp/translation.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/translation.ts#L19)'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/translation.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/translation.ts#L19)'
- en: '* * *'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: VisualQuestionAnsweringArgs
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: VisualQuestionAnsweringArgs
- en: 'Ƭ `VisualQuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `image`: `Blob` | `ArrayBuffer` ; `question`: `string` } }'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `VisualQuestionAnsweringArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    { `image`: `Blob` | `ArrayBuffer` ; `question`: `string` } }'
- en: Defined in
  id: totrans-255
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/multimodal/visualQuestionAnswering.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/visualQuestionAnswering.ts#L6)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/multimodal/visualQuestionAnswering.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/visualQuestionAnswering.ts#L6)'
- en: '* * *'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ZeroShotClassificationArgs
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ZeroShotClassificationArgs
- en: 'Ƭ `ZeroShotClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` | `string`[] ; `parameters`: { `candidate_labels`: `string`[] ; `multi_label?`:
    `boolean` } }'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ZeroShotClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & { `inputs`:
    `string` | `string`[] ; `parameters`: { `candidate_labels`: `string`[] ; `multi_label?`:
    `boolean` } }'
- en: Defined in
  id: totrans-260
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/nlp/zeroShotClassification.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/zeroShotClassification.ts#L6)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/zeroShotClassification.ts:6](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/zeroShotClassification.ts#L6)'
- en: '* * *'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ZeroShotClassificationOutput
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 零样本分类输出
- en: 'Ƭ `ZeroShotClassificationOutput`: [`ZeroShotClassificationOutputValue`](interfaces/ZeroShotClassificationOutputValue)[]'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ZeroShotClassificationOutput`: [`ZeroShotClassificationOutputValue`](interfaces/ZeroShotClassificationOutputValue)[]'
- en: Defined in
  id: totrans-265
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/nlp/zeroShotClassification.ts:29](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/zeroShotClassification.ts#L29)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/zeroShotClassification.ts:29](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/zeroShotClassification.ts#L29)'
- en: '* * *'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ZeroShotImageClassificationArgs
  id: totrans-268
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ZeroShotImageClassificationArgs
- en: 'Ƭ `ZeroShotImageClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & {
    `inputs`: { `image`: `Blob` | `ArrayBuffer` } ; `parameters`: { `candidate_labels`:
    `string`[] } }'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ZeroShotImageClassificationArgs`: [`BaseArgs`](interfaces/BaseArgs) & {
    `inputs`: { `image`: `Blob` | `ArrayBuffer` } ; `parameters`: { `candidate_labels`:
    `string`[] } }'
- en: Defined in
  id: totrans-270
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/cv/zeroShotImageClassification.ts:7](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/zeroShotImageClassification.ts#L7)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/zeroShotImageClassification.ts:7](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/zeroShotImageClassification.ts#L7)'
- en: '* * *'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ZeroShotImageClassificationOutput
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ZeroShotImageClassificationOutput
- en: 'Ƭ `ZeroShotImageClassificationOutput`: [`ZeroShotImageClassificationOutputValue`](interfaces/ZeroShotImageClassificationOutputValue)[]'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ƭ `ZeroShotImageClassificationOutput`: [`ZeroShotImageClassificationOutputValue`](interfaces/ZeroShotImageClassificationOutputValue)[]'
- en: Defined in
  id: totrans-275
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/cv/zeroShotImageClassification.ts:27](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/zeroShotImageClassification.ts#L27)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/zeroShotImageClassification.ts:27](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/zeroShotImageClassification.ts#L27)'
- en: Functions
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数
- en: audioClassification
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 音频分类
- en: '▸ `audioClassification`(`args`, `options?`): `Promise`<[`AudioClassificationReturn`](modules#audioclassificationreturn)>'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `audioClassification`(`args`, `options?`): `Promise`<[`AudioClassificationReturn`](modules#audioclassificationreturn)>'
- en: 'This task reads some audio input and outputs the likelihood of classes. Recommended
    model: superb/hubert-large-superb-er'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 此任务读取一些音频输入并输出类别的可能性。推荐模型：superb/hubert-large-superb-er
- en: Parameters
  id: totrans-281
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`AudioClassificationArgs`](modules#audioclassificationargs) |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`AudioClassificationArgs`](modules#audioclassificationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-286
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`AudioClassificationReturn`](modules#audioclassificationreturn)>'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`AudioClassificationReturn`](modules#audioclassificationreturn)>'
- en: Defined in
  id: totrans-288
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/audio/audioClassification.ts:30](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioClassification.ts#L30)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/audioClassification.ts:30](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioClassification.ts#L30)'
- en: '* * *'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: audioToAudio
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 音频到音频
- en: '▸ `audioToAudio`(`args`, `options?`): `Promise`<[`AudioToAudioReturn`](modules#audiotoaudioreturn)>'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `audioToAudio`(`args`, `options?`): `Promise`<[`AudioToAudioReturn`](modules#audiotoaudioreturn)>'
- en: 'This task reads some audio input and outputs one or multiple audio files. Example
    model: speechbrain/sepformer-wham does audio source separation.'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 此任务读取一些音频输入并输出一个或多个音频文件。示例模型：speechbrain/sepformer-wham 用于音频源分离。
- en: Parameters
  id: totrans-294
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`AudioToAudioArgs`](modules#audiotoaudioargs) |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`AudioToAudioArgs`](modules#audiotoaudioargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-299
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`AudioToAudioReturn`](modules#audiotoaudioreturn)>'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`AudioToAudioReturn`](modules#audiotoaudioreturn)>'
- en: Defined in
  id: totrans-301
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/audio/audioToAudio.ts:35](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioToAudio.ts#L35)'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/audioToAudio.ts:35](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/audioToAudio.ts#L35)'
- en: '* * *'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: automaticSpeechRecognition
  id: totrans-304
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动语音识别
- en: '▸ `automaticSpeechRecognition`(`args`, `options?`): `Promise`<[`AutomaticSpeechRecognitionOutput`](interfaces/AutomaticSpeechRecognitionOutput)>'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `automaticSpeechRecognition`(`args`, `options?`): `Promise`<[`AutomaticSpeechRecognitionOutput`](interfaces/AutomaticSpeechRecognitionOutput)>'
- en: 'This task reads some audio input and outputs the said words within the audio
    files. Recommended model (english language): facebook/wav2vec2-large-960h-lv60-self'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 这项任务读取一些音频输入，并输出音频文件中的文字。推荐模型（英语语言）：facebook/wav2vec2-large-960h-lv60-self
- en: Parameters
  id: totrans-307
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`AutomaticSpeechRecognitionArgs`](modules#automaticspeechrecognitionargs)
    |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`AutomaticSpeechRecognitionArgs`](modules#automaticspeechrecognitionargs)
    |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-312
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`AutomaticSpeechRecognitionOutput`](interfaces/AutomaticSpeechRecognitionOutput)>'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`AutomaticSpeechRecognitionOutput`](interfaces/AutomaticSpeechRecognitionOutput)>'
- en: Defined in
  id: totrans-314
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/audio/automaticSpeechRecognition.ts:23](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/automaticSpeechRecognition.ts#L23)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/automaticSpeechRecognition.ts:23](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/automaticSpeechRecognition.ts#L23)'
- en: '* * *'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: conversational
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对话
- en: '▸ `conversational`(`args`, `options?`): `Promise`<[`ConversationalOutput`](interfaces/ConversationalOutput)>'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `conversational`(`args`, `options?`): `Promise`<[`ConversationalOutput`](interfaces/ConversationalOutput)>'
- en: 'This task corresponds to any chatbot like structure. Models tend to have shorter
    max_length, so please check with caution when using a given model if you need
    long range dependency or not. Recommended model: microsoft/DialoGPT-large.'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 这项任务对应于任何类似聊天机器人的结构。模型往往具有较短的max_length，因此在使用给定模型时，请谨慎检查是否需要长距离依赖。推荐模型：microsoft/DialoGPT-large。
- en: Parameters
  id: totrans-320
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ConversationalArgs`](modules#conversationalargs) |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ConversationalArgs`](modules#conversationalargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-325
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ConversationalOutput`](interfaces/ConversationalOutput)>'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ConversationalOutput`](interfaces/ConversationalOutput)>'
- en: Defined in
  id: totrans-327
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/conversational.ts:65](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/conversational.ts#L65)'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/conversational.ts:65](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/conversational.ts#L65)'
- en: '* * *'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: documentQuestionAnswering
  id: totrans-330
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文档问答
- en: '▸ `documentQuestionAnswering`(`args`, `options?`): `Promise`<[`DocumentQuestionAnsweringOutput`](interfaces/DocumentQuestionAnsweringOutput)>'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `documentQuestionAnswering`(`args`, `options?`): `Promise`<[`DocumentQuestionAnsweringOutput`](interfaces/DocumentQuestionAnsweringOutput)>'
- en: 'Answers a question on a document image. Recommended model: impira/layoutlm-document-qa.'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 回答文档图像上的问题。推荐模型：impira/layoutlm-document-qa。
- en: Parameters
  id: totrans-333
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`DocumentQuestionAnsweringArgs`](modules#documentquestionansweringargs)
    |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`DocumentQuestionAnsweringArgs`](modules#documentquestionansweringargs)
    |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-338
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`DocumentQuestionAnsweringOutput`](interfaces/DocumentQuestionAnsweringOutput)>'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`DocumentQuestionAnsweringOutput`](interfaces/DocumentQuestionAnsweringOutput)>'
- en: Defined in
  id: totrans-340
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/multimodal/documentQuestionAnswering.ts:42](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/documentQuestionAnswering.ts#L42)'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/multimodal/documentQuestionAnswering.ts:42](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/documentQuestionAnswering.ts#L42)'
- en: '* * *'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: featureExtraction
  id: totrans-343
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特征提取
- en: '▸ `featureExtraction`(`args`, `options?`): `Promise`<[`FeatureExtractionOutput`](modules#featureextractionoutput)>'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `featureExtraction`(`args`, `options?`): `Promise`<[`FeatureExtractionOutput`](modules#featureextractionoutput)>'
- en: This task reads some text and outputs raw float values, that are usually consumed
    as part of a semantic database/semantic search.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 这项任务读取一些文本，并输出原始浮点值，通常作为语义数据库/语义搜索的一部分。
- en: Parameters
  id: totrans-346
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`FeatureExtractionArgs`](modules#featureextractionargs) |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`FeatureExtractionArgs`](modules#featureextractionargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-351
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`FeatureExtractionOutput`](modules#featureextractionoutput)>'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`FeatureExtractionOutput`](modules#featureextractionoutput)>'
- en: Defined in
  id: totrans-353
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/featureExtraction.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/featureExtraction.ts#L24)'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/featureExtraction.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/featureExtraction.ts#L24)'
- en: '* * *'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: fillMask
  id: totrans-356
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 填充掩码
- en: '▸ `fillMask`(`args`, `options?`): `Promise`<[`FillMaskOutput`](modules#fillmaskoutput)>'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `fillMask`(`args`, `options?`): `Promise`<[`FillMaskOutput`](modules#fillmaskoutput)>'
- en: Tries to fill in a hole with a missing word (token to be precise). That’s the
    base task for BERT models.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试用缺失的单词（确切地说是标记）填补一个空洞。这是BERT模型的基本任务。
- en: Parameters
  id: totrans-359
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`FillMaskArgs`](modules#fillmaskargs) |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`FillMaskArgs`](modules#fillmaskargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-364
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`FillMaskOutput`](modules#fillmaskoutput)>'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`FillMaskOutput`](modules#fillmaskoutput)>'
- en: Defined in
  id: totrans-366
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/fillMask.ts:31](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/fillMask.ts#L31)'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/fillMask.ts:31](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/fillMask.ts#L31)'
- en: '* * *'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: imageClassification
  id: totrans-369
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像分类
- en: '▸ `imageClassification`(`args`, `options?`): `Promise`<[`ImageClassificationOutput`](modules#imageclassificationoutput)>'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `imageClassification`(`args`, `options?`): `Promise`<[`ImageClassificationOutput`](modules#imageclassificationoutput)>'
- en: 'This task reads some image input and outputs the likelihood of classes. Recommended
    model: google/vit-base-patch16-224'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 这项任务读取一些图像输入，并输出类别的可能性。推荐模型：google/vit-base-patch16-224
- en: Parameters
  id: totrans-372
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ImageClassificationArgs`](modules#imageclassificationargs) |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ImageClassificationArgs`](modules#imageclassificationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-377
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ImageClassificationOutput`](modules#imageclassificationoutput)>'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ImageClassificationOutput`](modules#imageclassificationoutput)>'
- en: Defined in
  id: totrans-379
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageClassification.ts:29](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageClassification.ts#L29)'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageClassification.ts:29](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageClassification.ts#L29)'
- en: '* * *'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: imageSegmentation
  id: totrans-382
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: imageSegmentation
- en: '▸ `imageSegmentation`(`args`, `options?`): `Promise`<[`ImageSegmentationOutput`](modules#imagesegmentationoutput)>'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `imageSegmentation`(`args`, `options?`): `Promise`<[`ImageSegmentationOutput`](modules#imagesegmentationoutput)>'
- en: 'This task reads some image input and outputs the likelihood of classes & bounding
    boxes of detected objects. Recommended model: facebook/detr-resnet-50-panoptic'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务读取一些图像输入并输出检测到的对象的类别和边界框的可能性。推荐模型：facebook/detr-resnet-50-panoptic
- en: Parameters
  id: totrans-385
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ImageSegmentationArgs`](modules#imagesegmentationargs) |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ImageSegmentationArgs`](modules#imagesegmentationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-390
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ImageSegmentationOutput`](modules#imagesegmentationoutput)>'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ImageSegmentationOutput`](modules#imagesegmentationoutput)>'
- en: Defined in
  id: totrans-392
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageSegmentation.ts:33](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageSegmentation.ts#L33)'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageSegmentation.ts:33](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageSegmentation.ts#L33)'
- en: '* * *'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: imageToImage
  id: totrans-395
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: imageToImage
- en: '▸ `imageToImage`(`args`, `options?`): `Promise`<[`ImageToImageOutput`](modules#imagetoimageoutput)>'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `imageToImage`(`args`, `options?`): `Promise`<[`ImageToImageOutput`](modules#imagetoimageoutput)>'
- en: 'This task reads some text input and outputs an image. Recommended model: lllyasviel/sd-controlnet-depth'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务读取一些文本输入并输出图像。推荐模型：lllyasviel/sd-controlnet-depth
- en: Parameters
  id: totrans-398
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ImageToImageArgs`](modules#imagetoimageargs) |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ImageToImageArgs`](modules#imagetoimageargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-403
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ImageToImageOutput`](modules#imagetoimageoutput)>'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ImageToImageOutput`](modules#imagetoimageoutput)>'
- en: Defined in
  id: totrans-405
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageToImage.ts:61](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToImage.ts#L61)'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageToImage.ts:61](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToImage.ts#L61)'
- en: '* * *'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: imageToText
  id: totrans-408
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: imageToText
- en: '▸ `imageToText`(`args`, `options?`): `Promise`<[`ImageToTextOutput`](interfaces/ImageToTextOutput)>'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `imageToText`(`args`, `options?`): `Promise`<[`ImageToTextOutput`](interfaces/ImageToTextOutput)>'
- en: This task reads some image input and outputs the text caption.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务读取一些图像输入并输出文本标题。
- en: Parameters
  id: totrans-411
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-413
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ImageToTextArgs`](modules#imagetotextargs) |'
  id: totrans-414
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ImageToTextArgs`](modules#imagetotextargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-415
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-416
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ImageToTextOutput`](interfaces/ImageToTextOutput)>'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ImageToTextOutput`](interfaces/ImageToTextOutput)>'
- en: Defined in
  id: totrans-418
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/imageToText.ts:22](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToText.ts#L22)'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/imageToText.ts:22](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/imageToText.ts#L22)'
- en: '* * *'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: objectDetection
  id: totrans-421
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: objectDetection
- en: '▸ `objectDetection`(`args`, `options?`): `Promise`<[`ObjectDetectionOutput`](modules#objectdetectionoutput)>'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `objectDetection`(`args`, `options?`): `Promise`<[`ObjectDetectionOutput`](modules#objectdetectionoutput)>'
- en: 'This task reads some image input and outputs the likelihood of classes & bounding
    boxes of detected objects. Recommended model: facebook/detr-resnet-50'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务读取一些图像输入并输出检测到的对象的类别和边界框的可能性。推荐模型：facebook/detr-resnet-50
- en: Parameters
  id: totrans-424
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-425
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ObjectDetectionArgs`](modules#objectdetectionargs) |'
  id: totrans-427
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ObjectDetectionArgs`](modules#objectdetectionargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-429
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ObjectDetectionOutput`](modules#objectdetectionoutput)>'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ObjectDetectionOutput`](modules#objectdetectionoutput)>'
- en: Defined in
  id: totrans-431
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/objectDetection.ts:39](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/objectDetection.ts#L39)'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/objectDetection.ts:39](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/objectDetection.ts#L39)'
- en: '* * *'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: questionAnswering
  id: totrans-434
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: questionAnswering
- en: '▸ `questionAnswering`(`args`, `options?`): `Promise`<[`QuestionAnsweringOutput`](interfaces/QuestionAnsweringOutput)>'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `questionAnswering`(`args`, `options?`): `Promise`<[`QuestionAnsweringOutput`](interfaces/QuestionAnsweringOutput)>'
- en: 'Want to have a nice know-it-all bot that can answer any question?. Recommended
    model: deepset/roberta-base-squad2'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 想要一个可以回答任何问题的聪明全知机器人吗？推荐模型：deepset/roberta-base-squad2
- en: Parameters
  id: totrans-437
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-438
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-439
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`QuestionAnsweringArgs`](modules#questionansweringargs) |'
  id: totrans-440
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`QuestionAnsweringArgs`](modules#questionansweringargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-441
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-442
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`QuestionAnsweringOutput`](interfaces/QuestionAnsweringOutput)>'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`QuestionAnsweringOutput`](interfaces/QuestionAnsweringOutput)>'
- en: Defined in
  id: totrans-444
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/questionAnswering.ts:34](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/questionAnswering.ts#L34)'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/questionAnswering.ts:34](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/questionAnswering.ts#L34)'
- en: '* * *'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: request
  id: totrans-447
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 请求
- en: '▸ `request`<`T`>(`args`, `options?`): `Promise`<`T`>'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `request`<`T`>(`args`, `options?`): `Promise`<`T`>'
- en: Primitive to make custom calls to Inference Endpoints
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 用于自定义调用推理端点的原语
- en: Type parameters
  id: totrans-450
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型参数
- en: '| Name |'
  id: totrans-451
  prefs: []
  type: TYPE_TB
  zh: '| 名称 |'
- en: '| :-- |'
  id: totrans-452
  prefs: []
  type: TYPE_TB
  zh: '| :-- |'
- en: '| `T` |'
  id: totrans-453
  prefs: []
  type: TYPE_TB
  zh: '| `T` |'
- en: Parameters
  id: totrans-454
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`RequestArgs`](modules#requestargs) |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`RequestArgs`](modules#requestargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) & { `task?`: `string` ; `taskHint?`:
    [`InferenceTask`](modules#inferencetask) } |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) & { `task?`: `string` ; `taskHint?`:
    [`InferenceTask`](modules#inferencetask) } |'
- en: Returns
  id: totrans-459
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<`T`>'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<`T`>'
- en: Defined in
  id: totrans-461
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/custom/request.ts:7](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/custom/request.ts#L7)'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/custom/request.ts:7](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/custom/request.ts#L7)'
- en: '* * *'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: sentenceSimilarity
  id: totrans-464
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 句子相似度
- en: '▸ `sentenceSimilarity`(`args`, `options?`): `Promise`<[`SentenceSimilarityOutput`](modules#sentencesimilarityoutput)>'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `sentenceSimilarity`(`args`, `options?`): `Promise`<[`SentenceSimilarityOutput`](modules#sentencesimilarityoutput)>'
- en: Calculate the semantic similarity between one text and a list of other sentences
    by comparing their embeddings.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 通过比较它们的嵌入，计算一个文本与一系列其他句子之间的语义相似度。
- en: Parameters
  id: totrans-467
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`SentenceSimilarityArgs`](modules#sentencesimilarityargs) |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`SentenceSimilarityArgs`](modules#sentencesimilarityargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-472
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`SentenceSimilarityOutput`](modules#sentencesimilarityoutput)>'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`SentenceSimilarityOutput`](modules#sentencesimilarityoutput)>'
- en: Defined in
  id: totrans-474
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/nlp/sentenceSimilarity.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/sentenceSimilarity.ts#L24)'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/sentenceSimilarity.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/sentenceSimilarity.ts#L24)'
- en: '* * *'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: streamingRequest
  id: totrans-477
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: streamingRequest
- en: '▸ `streamingRequest`<`T`>(`args`, `options?`): `AsyncGenerator`<`T`>'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '`streamingRequest`<`T`>(`args`, `options?`): `AsyncGenerator`<`T`>'
- en: Primitive to make custom inference calls that expect server-sent events, and
    returns the response through a generator
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 用于进行自定义推断调用，期望服务器发送事件，并通过生成器返回响应
- en: Type parameters
  id: totrans-480
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型参数
- en: '| Name |'
  id: totrans-481
  prefs: []
  type: TYPE_TB
  zh: '| 名称 |'
- en: '| :-- |'
  id: totrans-482
  prefs: []
  type: TYPE_TB
  zh: '| :-- |'
- en: '| `T` |'
  id: totrans-483
  prefs: []
  type: TYPE_TB
  zh: '| `T` |'
- en: Parameters
  id: totrans-484
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-485
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-486
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`RequestArgs`](modules#requestargs) |'
  id: totrans-487
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`RequestArgs`](modules#requestargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) & { `task?`: `string` ; `taskHint?`:
    [`InferenceTask`](modules#inferencetask) } |'
  id: totrans-488
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) & { `task?`: `string` ; `taskHint?`:
    [`InferenceTask`](modules#inferencetask) } |'
- en: Returns
  id: totrans-489
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`AsyncGenerator`<`T`>'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '`AsyncGenerator`<`T`>'
- en: Defined in
  id: totrans-491
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/custom/streamingRequest.ts:9](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/custom/streamingRequest.ts#L9)'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/custom/streamingRequest.ts:9](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/custom/streamingRequest.ts#L9)'
- en: '* * *'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: summarization
  id: totrans-494
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 摘要
- en: '▸ `summarization`(`args`, `options?`): `Promise`<[`SummarizationOutput`](interfaces/SummarizationOutput)>'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `summarization`(`args`, `options?`): `Promise`<[`SummarizationOutput`](interfaces/SummarizationOutput)>'
- en: This task is well known to summarize longer text into shorter text. Be careful,
    some models have a maximum length of input. That means that the summary cannot
    handle full books for instance. Be careful when choosing your model.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务被广泛用于将较长的文本总结为较短的文本。请注意，一些模型有输入的最大长度。这意味着摘要不能处理完整的书籍等。在选择模型时要小心。
- en: Parameters
  id: totrans-497
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-498
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-499
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`SummarizationArgs`](modules#summarizationargs) |'
  id: totrans-500
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`SummarizationArgs`](modules#summarizationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-501
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-502
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`SummarizationOutput`](interfaces/SummarizationOutput)>'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`SummarizationOutput`](interfaces/SummarizationOutput)>'
- en: Defined in
  id: totrans-504
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/nlp/summarization.ts:52](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/summarization.ts#L52)'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/summarization.ts:52](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/summarization.ts#L52)'
- en: '* * *'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: tableQuestionAnswering
  id: totrans-507
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表格问答
- en: '▸ `tableQuestionAnswering`(`args`, `options?`): `Promise`<[`TableQuestionAnsweringOutput`](interfaces/TableQuestionAnsweringOutput)>'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `tableQuestionAnswering`(`args`, `options?`): `Promise`<[`TableQuestionAnsweringOutput`](interfaces/TableQuestionAnsweringOutput)>'
- en: 'Don’t know SQL? Don’t want to dive into a large spreadsheet? Ask questions
    in plain english! Recommended model: google/tapas-base-finetuned-wtq.'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 不懂SQL？不想深入研究大型电子表格？用简单的英语提问！推荐模型：google/tapas-base-finetuned-wtq。
- en: Parameters
  id: totrans-510
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-511
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-512
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TableQuestionAnsweringArgs`](modules#tablequestionansweringargs)
    |'
  id: totrans-513
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TableQuestionAnsweringArgs`](modules#tablequestionansweringargs)
    |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-514
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-515
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TableQuestionAnsweringOutput`](interfaces/TableQuestionAnsweringOutput)>'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TableQuestionAnsweringOutput`](interfaces/TableQuestionAnsweringOutput)>'
- en: Defined in
  id: totrans-517
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/nlp/tableQuestionAnswering.ts:40](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tableQuestionAnswering.ts#L40)'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/tableQuestionAnswering.ts:40](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tableQuestionAnswering.ts#L40)'
- en: '* * *'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: tabularClassification
  id: totrans-520
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表格分类
- en: '▸ `tabularClassification`(`args`, `options?`): `Promise`<[`TabularClassificationOutput`](modules#tabularclassificationoutput)>'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `tabularClassification`(`args`, `options?`): `Promise`<[`TabularClassificationOutput`](modules#tabularclassificationoutput)>'
- en: 'Predicts target label for a given set of features in tabular form. Typically,
    you will want to train a classification model on your training data and use it
    with your new data of the same format. Example model: vvmnnnkv/wine-quality'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 预测表格形式中给定特征集的目标标签。通常，您会希望在训练数据上训练分类模型，并在具有相同格式的新数据上使用它。示例模型：vvmnnnkv/wine-quality
- en: Parameters
  id: totrans-523
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-524
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-525
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TabularClassificationArgs`](modules#tabularclassificationargs)
    |'
  id: totrans-526
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TabularClassificationArgs`](modules#tabularclassificationargs)
    |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-527
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-528
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TabularClassificationOutput`](modules#tabularclassificationoutput)>'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TabularClassificationOutput`](modules#tabularclassificationoutput)>'
- en: Defined in
  id: totrans-530
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义于
- en: '[inference/src/tasks/tabular/tabularClassification.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularClassification.ts#L24)'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/tabular/tabularClassification.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularClassification.ts#L24)'
- en: '* * *'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: tabularRegression
  id: totrans-533
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表格回归
- en: '▸ `tabularRegression`(`args`, `options?`): `Promise`<[`TabularRegressionOutput`](modules#tabularregressionoutput)>'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `tabularRegression`(`args`, `options?`): `Promise`<[`TabularRegressionOutput`](modules#tabularregressionoutput)>'
- en: 'Predicts target value for a given set of features in tabular form. Typically,
    you will want to train a regression model on your training data and use it with
    your new data of the same format. Example model: scikit-learn/Fish-Weight'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 对给定特征集的目标值进行预测。通常，您会想要在训练数据上训练回归模型，并将其与相同格式的新数据一起使用。示例模型：scikit-learn/Fish-Weight
- en: Parameters
  id: totrans-536
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-537
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-538
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TabularRegressionArgs`](modules#tabularregressionargs) |'
  id: totrans-539
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TabularRegressionArgs`](modules#tabularregressionargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-540
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-541
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TabularRegressionOutput`](modules#tabularregressionoutput)>'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TabularRegressionOutput`](modules#tabularregressionoutput)>'
- en: Defined in
  id: totrans-543
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/tabular/tabularRegression.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularRegression.ts#L24)'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/tabular/tabularRegression.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/tabular/tabularRegression.ts#L24)'
- en: '* * *'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: textClassification
  id: totrans-546
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本分类
- en: '▸ `textClassification`(`args`, `options?`): `Promise`<[`TextClassificationOutput`](modules#textclassificationoutput)>'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `textClassification`(`args`, `options?`): `Promise`<[`TextClassificationOutput`](modules#textclassificationoutput)>'
- en: 'Usually used for sentiment-analysis this will output the likelihood of classes
    of an input. Recommended model: distilbert-base-uncased-finetuned-sst-2-english'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 通常用于情感分析，这将输出输入类别的可能性。推荐模型：distilbert-base-uncased-finetuned-sst-2-english
- en: Parameters
  id: totrans-549
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-550
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-551
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TextClassificationArgs`](modules#textclassificationargs) |'
  id: totrans-552
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TextClassificationArgs`](modules#textclassificationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-553
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-554
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TextClassificationOutput`](modules#textclassificationoutput)>'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TextClassificationOutput`](modules#textclassificationoutput)>'
- en: Defined in
  id: totrans-556
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/textClassification.ts:26](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textClassification.ts#L26)'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/textClassification.ts:26](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textClassification.ts#L26)'
- en: '* * *'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: textGeneration
  id: totrans-559
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本生成
- en: '▸ `textGeneration`(`args`, `options?`): `Promise`<[`TextGenerationOutput`](interfaces/TextGenerationOutput)>'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `textGeneration`(`args`, `options?`): `Promise`<[`TextGenerationOutput`](interfaces/TextGenerationOutput)>'
- en: 'Use to continue text from a prompt. This is a very generic task. Recommended
    model: gpt2 (it’s a simple model, but fun to play with).'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 用于从提示中继续文本。这是一个非常通用的任务。推荐模型：gpt2（这是一个简单的模型，但很有趣玩）。
- en: Parameters
  id: totrans-562
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-563
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-564
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TextGenerationArgs`](modules#textgenerationargs) |'
  id: totrans-565
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TextGenerationArgs`](modules#textgenerationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-566
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-567
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TextGenerationOutput`](interfaces/TextGenerationOutput)>'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TextGenerationOutput`](interfaces/TextGenerationOutput)>'
- en: Defined in
  id: totrans-569
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/textGeneration.ts:68](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGeneration.ts#L68)'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/textGeneration.ts:68](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGeneration.ts#L68)'
- en: '* * *'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: textGenerationStream
  id: totrans-572
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本生成流
- en: '▸ `textGenerationStream`(`args`, `options?`): `AsyncGenerator`<[`TextGenerationStreamOutput`](interfaces/TextGenerationStreamOutput)>'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `textGenerationStream`(`args`, `options?`): `AsyncGenerator`<[`TextGenerationStreamOutput`](interfaces/TextGenerationStreamOutput)>'
- en: Use to continue text from a prompt. Same as `textGeneration` but returns generator
    that can be read one token at a time
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 用于从提示中继续文本。与`textGeneration`相同，但返回一个可以逐个读取标记的生成器
- en: Parameters
  id: totrans-575
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-576
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-577
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TextGenerationArgs`](modules#textgenerationargs) |'
  id: totrans-578
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TextGenerationArgs`](modules#textgenerationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-579
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-580
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`AsyncGenerator`<[`TextGenerationStreamOutput`](interfaces/TextGenerationStreamOutput)>'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: '`AsyncGenerator`<[`TextGenerationStreamOutput`](interfaces/TextGenerationStreamOutput)>'
- en: Defined in
  id: totrans-582
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/textGenerationStream.ts:87](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGenerationStream.ts#L87)'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/textGenerationStream.ts:87](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/textGenerationStream.ts#L87)'
- en: '* * *'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: textToImage
  id: totrans-585
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本转图像
- en: '▸ `textToImage`(`args`, `options?`): `Promise`<[`TextToImageOutput`](modules#texttoimageoutput)>'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `textToImage`(`args`, `options?`): `Promise`<[`TextToImageOutput`](modules#texttoimageoutput)>'
- en: 'This task reads some text input and outputs an image. Recommended model: stabilityai/stable-diffusion-2'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务读取一些文本输入并输出一幅图像。推荐模型：stabilityai/stable-diffusion-2
- en: Parameters
  id: totrans-588
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-589
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-590
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TextToImageArgs`](modules#texttoimageargs) |'
  id: totrans-591
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TextToImageArgs`](modules#texttoimageargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-592
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-593
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TextToImageOutput`](modules#texttoimageoutput)>'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TextToImageOutput`](modules#texttoimageoutput)>'
- en: Defined in
  id: totrans-595
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/textToImage.ts:41](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/textToImage.ts#L41)'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/textToImage.ts:41](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/textToImage.ts#L41)'
- en: '* * *'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: textToSpeech
  id: totrans-598
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本转语音
- en: '▸ `textToSpeech`(`args`, `options?`): `Promise`<[`TextToSpeechOutput`](modules#texttospeechoutput)>'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `textToSpeech`(`args`, `options?`): `Promise`<[`TextToSpeechOutput`](modules#texttospeechoutput)>'
- en: 'This task synthesize an audio of a voice pronouncing a given text. Recommended
    model: espnet/kan-bayashi_ljspeech_vits'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务合成一个发音给定文本的声音。推荐模型：espnet/kan-bayashi_ljspeech_vits
- en: Parameters
  id: totrans-601
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-602
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-603
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TextToSpeechArgs`](modules#texttospeechargs) |'
  id: totrans-604
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TextToSpeechArgs`](modules#texttospeechargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-605
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-606
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TextToSpeechOutput`](modules#texttospeechoutput)>'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TextToSpeechOutput`](modules#texttospeechoutput)>'
- en: Defined in
  id: totrans-608
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/audio/textToSpeech.ts:18](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/textToSpeech.ts#L18)'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/audio/textToSpeech.ts:18](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/audio/textToSpeech.ts#L18)'
- en: '* * *'
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: tokenClassification
  id: totrans-611
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标记分类
- en: '▸ `tokenClassification`(`args`, `options?`): `Promise`<[`TokenClassificationOutput`](modules#tokenclassificationoutput)>'
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `tokenClassification`(`args`, `options?`): `Promise`<[`TokenClassificationOutput`](modules#tokenclassificationoutput)>'
- en: 'Usually used for sentence parsing, either grammatical, or Named Entity Recognition
    (NER) to understand keywords contained within text. Recommended model: dbmdz/bert-large-cased-finetuned-conll03-english'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 通常用于句子解析，无论是语法还是命名实体识别（NER），以理解文本中包含的关键字。推荐模型：dbmdz/bert-large-cased-finetuned-conll03-english
- en: Parameters
  id: totrans-614
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-615
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-616
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TokenClassificationArgs`](modules#tokenclassificationargs) |'
  id: totrans-617
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TokenClassificationArgs`](modules#tokenclassificationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-618
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-619
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TokenClassificationOutput`](modules#tokenclassificationoutput)>'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TokenClassificationOutput`](modules#tokenclassificationoutput)>'
- en: Defined in
  id: totrans-621
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/tokenClassification.ts:57](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tokenClassification.ts#L57)'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/tokenClassification.ts:57](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/tokenClassification.ts#L57)'
- en: '* * *'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: translation
  id: totrans-624
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 翻译
- en: '▸ `translation`(`args`, `options?`): `Promise`<[`TranslationOutput`](modules#translationoutput)>'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `翻译`(`args`, `options?`): `Promise`<[`TranslationOutput`](modules#translationoutput)>'
- en: 'This task is well known to translate text from one language to another. Recommended
    model: Helsinki-NLP/opus-mt-ru-en.'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务被广泛用于将文本从一种语言翻译成另一种语言。推荐模型：Helsinki-NLP/opus-mt-ru-en。
- en: Parameters
  id: totrans-627
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-628
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-629
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`TranslationArgs`](modules#translationargs) |'
  id: totrans-630
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`TranslationArgs`](modules#translationargs) |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-631
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-632
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`TranslationOutput`](modules#translationoutput)>'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`TranslationOutput`](modules#translationoutput)>'
- en: Defined in
  id: totrans-634
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/translation.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/translation.ts#L24)'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/translation.ts:24](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/translation.ts#L24)'
- en: '* * *'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: visualQuestionAnswering
  id: totrans-637
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视觉问答
- en: '▸ `visualQuestionAnswering`(`args`, `options?`): `Promise`<[`VisualQuestionAnsweringOutput`](interfaces/VisualQuestionAnsweringOutput)>'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `visualQuestionAnswering`(`args`, `options?`): `Promise`<[`VisualQuestionAnsweringOutput`](interfaces/VisualQuestionAnsweringOutput)>'
- en: 'Answers a question on an image. Recommended model: dandelin/vilt-b32-finetuned-vqa.'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 回答图像上的问题。推荐模型：dandelin/vilt-b32-finetuned-vqa。
- en: Parameters
  id: totrans-640
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-641
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-642
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`VisualQuestionAnsweringArgs`](modules#visualquestionansweringargs)
    |'
  id: totrans-643
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`VisualQuestionAnsweringArgs`](modules#visualquestionansweringargs)
    |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-644
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-645
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`VisualQuestionAnsweringOutput`](interfaces/VisualQuestionAnsweringOutput)>'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`VisualQuestionAnsweringOutput`](interfaces/VisualQuestionAnsweringOutput)>'
- en: Defined in
  id: totrans-647
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/multimodal/visualQuestionAnswering.ts:32](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/visualQuestionAnswering.ts#L32)'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/multimodal/visualQuestionAnswering.ts:32](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/multimodal/visualQuestionAnswering.ts#L32)'
- en: '* * *'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: zeroShotClassification
  id: totrans-650
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: zeroShotClassification
- en: '▸ `zeroShotClassification`(`args`, `options?`): `Promise`<[`ZeroShotClassificationOutput`](modules#zeroshotclassificationoutput)>'
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `zeroShotClassification`(`args`, `options?`): `Promise`<[`ZeroShotClassificationOutput`](modules#zeroshotclassificationoutput)>'
- en: 'This task is super useful to try out classification with zero code, you simply
    pass a sentence/paragraph and the possible labels for that sentence, and you get
    a result. Recommended model: facebook/bart-large-mnli.'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务非常有用，可以尝试使用零代码进行分类，只需传递一个句子/段落和该句子的可能标签，就可以得到结果。推荐模型：facebook/bart-large-mnli。
- en: Parameters
  id: totrans-653
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-654
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-655
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ZeroShotClassificationArgs`](modules#zeroshotclassificationargs)
    |'
  id: totrans-656
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ZeroShotClassificationArgs`](modules#zeroshotclassificationargs)
    |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-657
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-658
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ZeroShotClassificationOutput`](modules#zeroshotclassificationoutput)>'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ZeroShotClassificationOutput`](modules#zeroshotclassificationoutput)>'
- en: Defined in
  id: totrans-660
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/nlp/zeroShotClassification.ts:34](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/zeroShotClassification.ts#L34)'
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/nlp/zeroShotClassification.ts:34](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/nlp/zeroShotClassification.ts#L34)'
- en: '* * *'
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: zeroShotImageClassification
  id: totrans-663
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: zeroShotImageClassification
- en: '▸ `zeroShotImageClassification`(`args`, `options?`): `Promise`<[`ZeroShotImageClassificationOutput`](modules#zeroshotimageclassificationoutput)>'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: '▸ `zeroShotImageClassification`(`args`, `options?`): `Promise`<[`ZeroShotImageClassificationOutput`](modules#zeroshotimageclassificationoutput)>'
- en: 'Classify an image to specified classes. Recommended model: openai/clip-vit-large-patch14-336'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像分类到指定的类别。推荐模型：openai/clip-vit-large-patch14-336
- en: Parameters
  id: totrans-666
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: '| Name | Type |'
  id: totrans-667
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 |'
- en: '| :-- | :-- |'
  id: totrans-668
  prefs: []
  type: TYPE_TB
  zh: '| :-- | :-- |'
- en: '| `args` | [`ZeroShotImageClassificationArgs`](modules#zeroshotimageclassificationargs)
    |'
  id: totrans-669
  prefs: []
  type: TYPE_TB
  zh: '| `args` | [`ZeroShotImageClassificationArgs`](modules#zeroshotimageclassificationargs)
    |'
- en: '| `options?` | [`Options`](interfaces/Options) |'
  id: totrans-670
  prefs: []
  type: TYPE_TB
  zh: '| `options?` | [`Options`](interfaces/Options) |'
- en: Returns
  id: totrans-671
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 返回
- en: '`Promise`<[`ZeroShotImageClassificationOutput`](modules#zeroshotimageclassificationoutput)>'
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: '`Promise`<[`ZeroShotImageClassificationOutput`](modules#zeroshotimageclassificationoutput)>'
- en: Defined in
  id: totrans-673
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义在
- en: '[inference/src/tasks/cv/zeroShotImageClassification.ts:33](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/zeroShotImageClassification.ts#L33)'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: '[inference/src/tasks/cv/zeroShotImageClassification.ts:33](https://github.com/huggingface/huggingface.js/blob/main/packages/inference/src/tasks/cv/zeroShotImageClassification.ts#L33)'
