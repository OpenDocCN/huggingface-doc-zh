- en: NeuronTrainer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://huggingface.co/docs/optimum-neuron/package_reference/trainer](https://huggingface.co/docs/optimum-neuron/package_reference/trainer)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/optimum.neuron/main/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/entry/start.abfe5599.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/scheduler.9039eef2.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/singletons.9144bb03.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/paths.e169ac99.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/entry/app.df8ec0a0.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/index.cdcc3d35.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/nodes/0.a52c6f40.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/nodes/18.b94418c0.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/Tip.6f74db41.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/Docstring.fff63cfc.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/Heading.96ce3702.js">
    <link rel="modulepreload" href="/docs/optimum.neuron/main/en/_app/immutable/chunks/CodeBlock.e3ac94d9.js">
  prefs: []
  type: TYPE_NORMAL
- en: The [`NeuronTrainer`](https://huggingface.co/docs/optimum/neuron/package_reference/trainer#optimum.neuron.NeuronTrainer)
    class provides an extended API for the feature-complete [Transformers Trainer](https://huggingface.co/docs/transformers/main_classes/trainer).
    It is used in all the [example scripts](https://github.com/huggingface/optimum-neuron/tree/main/examples).
  prefs: []
  type: TYPE_NORMAL
- en: The [`NeuronTrainer`](https://huggingface.co/docs/optimum/neuron/package_reference/trainer#optimum.neuron.NeuronTrainer)
    class is optimized for ðŸ¤— Transformers models running on AWS Trainium.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of how to customize [`NeuronTrainer`](https://huggingface.co/docs/optimum/neuron/package_reference/trainer#optimum.neuron.NeuronTrainer)
    to use a weighted loss (useful when you have an unbalanced training set):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Another way to customize the training loop behavior for the PyTorch [`NeuronTrainer`](https://huggingface.co/docs/optimum/neuron/package_reference/trainer#optimum.neuron.NeuronTrainer)
    is to use [callbacks](https://huggingface.co/docs/transformers/main_classes/callback)
    that can inspect the training loop state (for progress reporting, logging on TensorBoard
    or other ML platformsâ€¦) and take decisions (like early stopping).
  prefs: []
  type: TYPE_NORMAL
- en: NeuronTrainer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### class optimum.neuron.NeuronTrainer'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/optimum-neuron/blob/main/optimum/neuron/trainers.py#L1319)'
  prefs: []
  type: TYPE_NORMAL
- en: ( *args **kwargs )
  prefs: []
  type: TYPE_NORMAL
- en: Trainer that is suited for performing training on AWS Tranium instances.
  prefs: []
  type: TYPE_NORMAL
- en: '### class optimum.neuron.Seq2SeqNeuronTrainer'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/optimum-neuron/blob/main/optimum/neuron/trainers.py#L1325)'
  prefs: []
  type: TYPE_NORMAL
- en: ( *args **kwargs )
  prefs: []
  type: TYPE_NORMAL
- en: Seq2SeqTrainer that is suited for performing training on AWS Tranium instances.
  prefs: []
  type: TYPE_NORMAL
