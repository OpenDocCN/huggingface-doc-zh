- en: Search the Hub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/guides/search](https://huggingface.co/docs/huggingface_hub/guides/search)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: In this tutorial, you will learn how to search models, datasets and spaces on
    the Hub using `huggingface_hub`.
  prefs: []
  type: TYPE_NORMAL
- en: How to list repositories ?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`huggingface_hub` library includes an HTTP client [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    to interact with the Hub. Among other things, it can list models, datasets and
    spaces stored on the Hub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The output of [list_models()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_models)
    is an iterator over the models stored on the Hub.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, you can use [list_datasets()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_datasets)
    to list datasets and [list_spaces()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_spaces)
    to list Spaces.
  prefs: []
  type: TYPE_NORMAL
- en: How to filter repositories ?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Listing repositories is great but now you might want to filter your search.
    The list helpers have several attributes like:'
  prefs: []
  type: TYPE_NORMAL
- en: '`filter`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`author`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`search`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: …
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two of these parameters are intuitive (`author` and `search`), but what about
    that `filter`? `filter` takes as input a [ModelFilter](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.ModelFilter)
    object (or [DatasetFilter](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.DatasetFilter)).
    You can instantiate it by specifying which models you want to filter.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see an example to get all models on the Hub that does image classification,
    have been trained on the imagenet dataset and that runs with PyTorch. That can
    be done with a single [ModelFilter](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.ModelFilter).
    Attributes are combined as “logical AND”.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'While filtering, you can also sort the models and take only the top results.
    For example, the following example fetches the top 5 most downloaded datasets
    on the Hub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: To explore available filter on the Hub, visit [models](https://huggingface.co/models)
    and [datasets](https://huggingface.co/datasets) pages in your browser, search
    for some parameters and look at the values in the URL.
  prefs: []
  type: TYPE_NORMAL
