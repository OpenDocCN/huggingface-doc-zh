["```py\n>>> from transformers import PegasusXConfig, PegasusXModel\n\n>>> # Initializing a PEGASUS google/pegasus-x-large style configuration\n>>> configuration = PegasusXConfig()\n\n>>> # Initializing a model (with random weights) from the google/pegasus-x-large style configuration\n>>> model = PegasusXModel(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from transformers import AutoTokenizer, PegasusModel\n\n>>> tokenizer = AutoTokenizer.from_pretrained(\"google/pegasus-x-large\")\n>>> model = PegasusModel.from_pretrained(\"google/pegasus-x-large\")\n\n>>> inputs = tokenizer(\"Studies have been shown that owning a dog is good for you\", return_tensors=\"pt\")\n>>> decoder_inputs = tokenizer(\"Studies show that\", return_tensors=\"pt\")\n>>> outputs = model(input_ids=inputs.input_ids, decoder_input_ids=decoder_inputs.input_ids)\n\n>>> last_hidden_states = outputs.last_hidden_state\n>>> list(last_hidden_states.shape)\n[1, 4, 1024]\n```", "```py\n>>> from transformers import AutoTokenizer, PegasusXForConditionalGeneration\n\n>>> model = PegasusXForConditionalGeneration.from_pretrained(\"google/pegasus-x-base\")\n>>> tokenizer = AutoTokenizer.from_pretrained(\"google/pegasus-x-large\")\n\n>>> ARTICLE_TO_SUMMARIZE = (\n...     \"PG&E stated it scheduled the blackouts in response to forecasts for high winds \"\n...     \"amid dry conditions. The aim is to reduce the risk of wildfires. Nearly 800 thousand customers were \"\n...     \"scheduled to be affected by the shutoffs which were expected to last through at least midday tomorrow.\"\n... )\n>>> inputs = tokenizer(ARTICLE_TO_SUMMARIZE, max_length=1024, return_tensors=\"pt\")\n\n>>> # Generate Summary\n>>> summary_ids = model.generate(inputs[\"input_ids\"])\n>>> tokenizer.batch_decode(summary_ids, skip_special_tokens=True, clean_up_tokenization_spaces=False)[0]\n\"California's largest electricity provider has turned off power to hundreds of thousands of customers.\"\n```"]