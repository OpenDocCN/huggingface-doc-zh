- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/learn/deep-rl-course/unit4/introduction](https://huggingface.co/learn/deep-rl-course/unit4/introduction)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: '![thumbnail](../Images/207886028f30a9a8c43010256f915e88.png)'
  prefs: []
  type: TYPE_IMG
- en: In the last unit, we learned about Deep Q-Learning. In this value-based deep
    reinforcement learning algorithm, we **used a deep neural network to approximate
    the different Q-values for each possible action at a state.**
  prefs: []
  type: TYPE_NORMAL
- en: Since the beginning of the course, we have only studied value-based methods, **where
    we estimate a value function as an intermediate step towards finding an optimal
    policy.**
  prefs: []
  type: TYPE_NORMAL
- en: '![Link value policy](../Images/06e7785cc764e6109bfc6c89005a4d92.png)'
  prefs: []
  type: TYPE_IMG
- en: In value-based methods, the policy **(π) only exists because of the action value
    estimates since the policy is just a function** (for instance, greedy-policy)
    that will select the action with the highest value given a state.
  prefs: []
  type: TYPE_NORMAL
- en: With policy-based methods, we want to optimize the policy directly **without
    having an intermediate step of learning a value function.**
  prefs: []
  type: TYPE_NORMAL
- en: So today, **we’ll learn about policy-based methods and study a subset of these
    methods called policy gradient**. Then we’ll implement our first policy gradient
    algorithm called Monte Carlo **Reinforce** from scratch using PyTorch. Then, we’ll
    test its robustness using the CartPole-v1 and PixelCopter environments.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll then be able to iterate and improve this implementation for more advanced
    environments.
  prefs: []
  type: TYPE_NORMAL
- en: '![Environments](../Images/3b1f63eab47a364ef05dcdca4df7bf08.png)'
  prefs: []
  type: TYPE_IMG
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
