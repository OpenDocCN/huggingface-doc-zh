- en: Image Processor
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像处理器
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/image_processor](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/image_processor)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/image_processor](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/image_processor)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: An image processor is in charge of preparing input features for vision models
    and post processing their outputs. This includes transformations such as resizing,
    normalization, and conversion to PyTorch, TensorFlow, Flax and Numpy tensors.
    It may also include model specific post-processing such as converting logits to
    segmentation masks.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图像处理器负责为视觉模型准备输入特征并后处理它们的输出。这包括诸如调整大小、归一化和转换为PyTorch、TensorFlow、Flax和Numpy张量等转换。它还可能包括模型特定的后处理，如将对数转换为分割掩模。
- en: ImageProcessingMixin
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ImageProcessingMixin
- en: '### `class transformers.ImageProcessingMixin`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.ImageProcessingMixin`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L68)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L68)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is an image processor mixin used to provide saving/loading functionality
    for sequential and image feature extractors.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用于为顺序和图像特征提取器提供保存/加载功能的图像处理器mixin。
- en: '#### `from_pretrained`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L95)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L95)'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — This can be either:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str`或`os.PathLike`) — 这可以是：'
- en: a string, the *model id* of a pretrained image_processor hosted inside a model
    repo on huggingface.co. Valid model ids can be located at the root-level, like
    `bert-base-uncased`, or namespaced under a user or organization name, like `dbmdz/bert-base-german-cased`.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练的图像处理器的*模型ID*，托管在huggingface.co上的模型存储库中。有效的模型ID可以位于根级别，如`bert-base-uncased`，或者在用户或组织名称下命名空间化，如`dbmdz/bert-base-german-cased`。
- en: a path to a *directory* containing a image processor file saved using the [save_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.save_pretrained)
    method, e.g., `./my_model_directory/`.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*目录*的路径，其中包含使用[save_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.save_pretrained)方法保存的图像处理器文件，例如，`./my_model_directory/`。
- en: a path or url to a saved image processor JSON *file*, e.g., `./my_model_directory/preprocessor_config.json`.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个保存的图像处理器JSON *文件*的路径或URL，例如，`./my_model_directory/preprocessor_config.json`。
- en: '`cache_dir` (`str` or `os.PathLike`, *optional*) — Path to a directory in which
    a downloaded pretrained model image processor should be cached if the standard
    cache should not be used.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`str`或`os.PathLike`, *可选*) — 预下载的预训练模型图像处理器应该缓存在其中的目录路径，如果不使用标准缓存。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force to (re-)download the image processor files and override the cached versions
    if they exist.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`, *可选*, 默认为`False`) — 是否强制（重新）下载图像处理器文件并覆盖缓存版本（如果存在）。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to delete incompletely received file. Attempts to resume the download if such
    a file exists.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`, *可选*, 默认为`False`) — 是否删除接收不完整的文件。如果存在这样的文件，尝试恢复下载。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, e.g., `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}.` The proxies are used on each request.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`Dict[str, str]`, *可选*) — 一个代理服务器字典，按协议或端点使用，例如，`{''http'': ''foo.bar:3128'',
    ''http://hostname'': ''foo.bar:4012''}`。这些代理在每个请求中使用。'
- en: '`token` (`str` or `bool`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, or not specified, will use the token generated when
    running `huggingface-cli login` (stored in `~/.huggingface`).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`或`bool`, *可选*) — 用作远程文件的HTTP bearer授权的令牌。如果为`True`或未指定，将使用运行`huggingface-cli
    login`时生成的令牌（存储在`~/.huggingface`中）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, or a commit id, since we use a git-based
    system for storing models and other artifacts on huggingface.co, so `revision`
    can be any identifier allowed by git.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*, 默认为`"main"`) — 要使用的特定模型版本。它可以是分支名称、标签名称或提交ID，因为我们使用基于git的系统在huggingface.co上存储模型和其他工件，所以`revision`可以是git允许的任何标识符。'
- en: Instantiate a type of [ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)
    from an image processor.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从图像处理器实例化一个类型的[ImageProcessingMixin](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin)。
- en: 'Examples:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '#### `save_pretrained`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `save_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L210)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L210)'
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`save_directory` (`str` or `os.PathLike`) — Directory where the image processor
    JSON file will be saved (will be created if it does not exist).'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save_directory` (`str`或`os.PathLike`) — 将保存图像处理器JSON文件的目录（如果不存在，将创建）。'
- en: '`push_to_hub` (`bool`, *optional*, defaults to `False`) — Whether or not to
    push your model to the Hugging Face model hub after saving it. You can specify
    the repository you want to push to with `repo_id` (will default to the name of
    `save_directory` in your namespace).'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`push_to_hub` (`bool`, *可选*, 默认为`False`) — 是否在保存后将模型推送到Hugging Face模型中心。您可以使用`repo_id`指定要推送到的存储库（将默认为您的命名空间中的`save_directory`名称）。'
- en: '`kwargs` (`Dict[str, Any]`, *optional*) — Additional key word arguments passed
    along to the [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    method.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`, *可选*) — 传递给[push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)方法的额外关键字参数。'
- en: Save an image processor object to the directory `save_directory`, so that it
    can be re-loaded using the [from_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.from_pretrained)
    class method.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像处理器对象保存到目录`save_directory`，以便可以使用[from_pretrained()](/docs/transformers/v4.37.2/en/internal/image_processing_utils#transformers.ImageProcessingMixin.from_pretrained)类方法重新加载。
- en: BatchFeature
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BatchFeature
- en: '### `class transformers.BatchFeature`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.BatchFeature`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L61)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L61)'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`data` (`dict`, *optional*) — Dictionary of lists/arrays/tensors returned by
    the **call**/pad methods (‘input_values’, ‘attention_mask’, etc.).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data`（`dict`，*可选*）- 由**call**/pad方法返回的列表/数组/张量的字典（''input_values''，''attention_mask''等）。'
- en: '`tensor_type` (`Union[None, str, TensorType]`, *optional*) — You can give a
    tensor_type here to convert the lists of integers in PyTorch/TensorFlow/Numpy
    Tensors at initialization.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tensor_type`（`Union[None, str, TensorType]`，*可选*）- 您可以在此处给出一个tensor_type，以在初始化时将整数列表转换为PyTorch/TensorFlow/Numpy张量。'
- en: Holds the output of the [pad()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.SequenceFeatureExtractor.pad)
    and feature extractor specific `__call__` methods.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 保存[pad()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.SequenceFeatureExtractor.pad)和特定特征提取器`__call__`方法的输出。
- en: This class is derived from a python dictionary and can be used as a dictionary.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类是从一个Python字典派生而来的，可以作为一个字典使用。
- en: '#### `convert_to_tensors`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `convert_to_tensors`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L164)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L164)'
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`tensor_type` (`str` or [TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType),
    *optional*) — The type of tensors to use. If `str`, should be one of the values
    of the enum [TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType).
    If `None`, no modification is done.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tensor_type`（`str`或[TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType)，*可选*）-
    要使用的张量类型。如果是`str`，应该是枚举[TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType)的值之一。如果是`None`，则不进行修改。'
- en: Convert the inner content to tensors.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 将内部内容转换为张量。
- en: '#### `to`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L195)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L195)'
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`args` (`Tuple`) — Will be passed to the `to(...)` function of the tensors.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`args`（`Tuple`）- 将传递给张量的`to(...)`函数。'
- en: '`kwargs` (`Dict`, *optional*) — Will be passed to the `to(...)` function of
    the tensors.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs`（`Dict`，*可选*）- 将传递给张量的`to(...)`函数。'
- en: Returns
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)'
- en: The same instance after modification.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 修改后的相同实例。
- en: Send all values to device by calling `v.to(*args, **kwargs)` (PyTorch only).
    This should support casting in different `dtypes` and sending the `BatchFeature`
    to a different `device`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调用`v.to(*args, **kwargs)`将所有值发送到设备（仅适用于PyTorch）。这应该支持在不同的`dtypes`中进行转换，并将`BatchFeature`发送到不同的`device`。
- en: BaseImageProcessor
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BaseImageProcessor
- en: '### `class transformers.image_processing_utils.BaseImageProcessor`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.image_processing_utils.BaseImageProcessor`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L546)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L546)'
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '#### `center_crop`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `center_crop`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L626)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L626)'
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — Image to center crop.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`np.ndarray`）- 要居中裁剪的图像。'
- en: '`size` (`Dict[str, int]`) — Size of the output image.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（`Dict[str, int]`）- 输出图像的大小。'
- en: '`data_format` (`str` or `ChannelDimension`, *optional*) — The channel dimension
    format for the output image. If unset, the channel dimension format of the input
    image is used. Can be one of:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format`（`str`或`ChannelDimension`，*可选*）- 输出图像的通道维度格式。如果未设置，则使用输入图像的通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"`或`ChannelDimension.FIRST`：图像以(num_channels, height, width)格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format.'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"`或`ChannelDimension.LAST`：图像以(height, width, num_channels)格式。'
- en: '`input_data_format` (`ChannelDimension` or `str`, *optional*) — The channel
    dimension format for the input image. If unset, the channel dimension format is
    inferred from the input image. Can be one of:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format`（`ChannelDimension`或`str`，*可选*）- 输入图像的通道维度格式。如果未设置，则从输入图像推断通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"`或`ChannelDimension.FIRST`：图像以(num_channels, height, width)格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format.'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"`或`ChannelDimension.LAST`：图像以(height, width, num_channels)格式。'
- en: Center crop an image to `(size["height"], size["width"])`. If the input size
    is smaller than `crop_size` along any edge, the image is padded with 0’s and then
    center cropped.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像居中裁剪到`(size["height"], size["width"])`。如果输入尺寸沿任何边小于`crop_size`，则图像将填充为0，然后居中裁剪。
- en: '#### `normalize`'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `normalize`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L589)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L589)'
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parameters
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — Image to normalize.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`np.ndarray`）- 要归一化的图像。'
- en: '`mean` (`float` or `Iterable[float]`) — Image mean to use for normalization.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mean`（`float`或`Iterable[float]`）- 用于归一化的图像均值。'
- en: '`std` (`float` or `Iterable[float]`) — Image standard deviation to use for
    normalization.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std`（`float`或`Iterable[float]`）- 用于归一化的图像标准差。'
- en: '`data_format` (`str` or `ChannelDimension`, *optional*) — The channel dimension
    format for the output image. If unset, the channel dimension format of the input
    image is used. Can be one of:'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format` (`str` 或 `ChannelDimension`，*可选*) — 输出图像的通道维度格式。如果未设置，则使用输入图像的通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"` 或 `ChannelDimension.FIRST`：图像以 (通道数, 高度, 宽度) 格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format.'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"` 或 `ChannelDimension.LAST`：图像以 (高度, 宽度, 通道数) 格式。'
- en: '`input_data_format` (`ChannelDimension` or `str`, *optional*) — The channel
    dimension format for the input image. If unset, the channel dimension format is
    inferred from the input image. Can be one of:'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format` (`ChannelDimension` 或 `str`，*可选*) — 输入图像的通道维度格式。如果未设置，则从输入图像中推断通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"` 或 `ChannelDimension.FIRST`：图像以 (通道数, 高度, 宽度) 格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format.'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"` 或 `ChannelDimension.LAST`：图像以 (高度, 宽度, 通道数) 格式。'
- en: Returns
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '`np.ndarray`'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.ndarray`'
- en: The normalized image.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 归一化后的图像。
- en: Normalize an image. image = (image - image_mean) / image_std.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 归一化图像。图像 = (图像 - 图像均值) / 图像标准差。
- en: '#### `rescale`'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `重新缩放`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L557)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_processing_utils.py#L557)'
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Parameters
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`np.ndarray`) — Image to rescale.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image` (`np.ndarray`) — 要重新缩放的图像。'
- en: '`scale` (`float`) — The scaling factor to rescale pixel values by.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scale` (`float`) — 用于重新缩放像素值的缩放因子。'
- en: '`data_format` (`str` or `ChannelDimension`, *optional*) — The channel dimension
    format for the output image. If unset, the channel dimension format of the input
    image is used. Can be one of:'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data_format` (`str` 或 `ChannelDimension`，*可选*) — 输出图像的通道维度格式。如果未设置，则使用输入图像的通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"` 或 `ChannelDimension.FIRST`：图像以 (通道数, 高度, 宽度) 格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format.'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"` 或 `ChannelDimension.LAST`：图像以 (高度, 宽度, 通道数) 格式。'
- en: '`input_data_format` (`ChannelDimension` or `str`, *optional*) — The channel
    dimension format for the input image. If unset, the channel dimension format is
    inferred from the input image. Can be one of:'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`input_data_format` (`ChannelDimension` 或 `str`，*可选*) — 输入图像的通道维度格式。如果未设置，则从输入图像中推断通道维度格式。可以是以下之一：'
- en: '`"channels_first"` or `ChannelDimension.FIRST`: image in (num_channels, height,
    width) format.'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_first"` 或 `ChannelDimension.FIRST`：图像以 (通道数, 高度, 宽度) 格式。'
- en: '`"channels_last"` or `ChannelDimension.LAST`: image in (height, width, num_channels)
    format.'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"channels_last"` 或 `ChannelDimension.LAST`：图像以 (高度, 宽度, 通道数) 格式。'
- en: Returns
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '`np.ndarray`'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.ndarray`'
- en: The rescaled image.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 重新缩放后的图像。
- en: Rescale an image by a scale factor. image = image * scale.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 通过缩放因子重新缩放图像。图像 = 图像 * 缩放因子。
