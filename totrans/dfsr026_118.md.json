["```py\nfrom diffusers import AutoencoderKL\n\nurl = \"https://huggingface.co/stabilityai/sd-vae-ft-mse-original/blob/main/vae-ft-mse-840000-ema-pruned.safetensors\"  # can also be a local file\nmodel = AutoencoderKL.from_single_file(url)\n```", "```py\n( in_channels: int = 3 out_channels: int = 3 down_block_types: Tuple = ('DownEncoderBlock2D',) up_block_types: Tuple = ('UpDecoderBlock2D',) block_out_channels: Tuple = (64,) layers_per_block: int = 1 act_fn: str = 'silu' latent_channels: int = 4 norm_num_groups: int = 32 sample_size: int = 32 scaling_factor: float = 0.18215 force_upcast: float = True )\n```", "```py\n( *args **kwargs )\n```", "```py\n( *args **kwargs )\n```", "```py\n( )\n```", "```py\n( )\n```", "```py\n( )\n```", "```py\n( use_tiling: bool = True )\n```", "```py\n( sample: FloatTensor sample_posterior: bool = False return_dict: bool = True generator: Optional = None )\n```", "```py\n( )\n```", "```py\n( processor: Union )\n```", "```py\n( )\n```", "```py\n( z: FloatTensor return_dict: bool = True ) \u2192 export const metadata = 'undefined';~models.vae.DecoderOutput or tuple\n```", "```py\n( x: FloatTensor return_dict: bool = True ) \u2192 export const metadata = 'undefined';~models.autoencoder_kl.AutoencoderKLOutput or tuple\n```", "```py\n( )\n```", "```py\n( latent_dist: DiagonalGaussianDistribution )\n```", "```py\n( sample: FloatTensor )\n```", "```py\n( in_channels: int = 3 out_channels: int = 3 down_block_types: Tuple = ('DownEncoderBlock2D',) up_block_types: Tuple = ('UpDecoderBlock2D',) block_out_channels: Tuple = (64,) layers_per_block: int = 1 act_fn: str = 'silu' latent_channels: int = 4 norm_num_groups: int = 32 sample_size: int = 32 scaling_factor: float = 0.18215 dtype: dtype = <class 'jax.numpy.float32'> parent: Union = <flax.linen.module._Sentinel object at 0x7fbd557629e0> name: Optional = None )\n```", "```py\n( latent_dist: FlaxDiagonalGaussianDistribution )\n```", "```py\n( **updates )\n```", "```py\n( sample: Array )\n```", "```py\n( **updates )\n```"]