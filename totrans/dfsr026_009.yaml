- en: AutoPipeline
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AutoPipeline
- en: 'Original text: [https://huggingface.co/docs/diffusers/tutorials/autopipeline](https://huggingface.co/docs/diffusers/tutorials/autopipeline)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/docs/diffusers/tutorials/autopipeline](https://huggingface.co/docs/diffusers/tutorials/autopipeline)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 🤗 Diffusers is able to complete many different tasks, and you can often reuse
    the same pretrained weights for multiple tasks such as text-to-image, image-to-image,
    and inpainting. If you’re new to the library and diffusion models though, it may
    be difficult to know which pipeline to use for a task. For example, if you’re
    using the [runwayml/stable-diffusion-v1-5](https://huggingface.co/runwayml/stable-diffusion-v1-5)
    checkpoint for text-to-image, you might not know that you could also use it for
    image-to-image and inpainting by loading the checkpoint with the [StableDiffusionImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/img2img#diffusers.StableDiffusionImg2ImgPipeline)
    and [StableDiffusionInpaintPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/inpaint#diffusers.StableDiffusionInpaintPipeline)
    classes respectively.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 Diffusers能够完成许多不同的任务，您通常可以重复使用相同的预训练权重来完成多个任务，如文本到图像、图像到图像和修复。但是，如果您对库和扩散模型不熟悉，可能很难知道要为任务使用哪个管道。例如，如果您正在使用[runwayml/stable-diffusion-v1-5](https://huggingface.co/runwayml/stable-diffusion-v1-5)检查点进行文本到图像，您可能不知道您也可以通过使用[StableDiffusionImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/img2img#diffusers.StableDiffusionImg2ImgPipeline)和[StableDiffusionInpaintPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/inpaint#diffusers.StableDiffusionInpaintPipeline)类分别加载检查点进行图像到图像和修复。
- en: The `AutoPipeline` class is designed to simplify the variety of pipelines in
    🤗 Diffusers. It is a generic, *task-first* pipeline that lets you focus on the
    task. The `AutoPipeline` automatically detects the correct pipeline class to use,
    which makes it easier to load a checkpoint for a task without knowing the specific
    pipeline class name.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`AutoPipeline`类旨在简化🤗 Diffusers中各种管道。它是一个通用的、*任务优先*的管道，让您专注于任务。`AutoPipeline`会自动检测要使用的正确管道类，这使得在不知道特定管道类名称的情况下为任务加载检查点变得更容易。'
- en: Take a look at the [AutoPipeline](../api/pipelines/auto_pipeline) reference
    to see which tasks are supported. Currently, it supports text-to-image, image-to-image,
    and inpainting.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[AutoPipeline](../api/pipelines/auto_pipeline)参考以查看支持的任务。目前，它支持文本到图像、图像到图像和修复。
- en: This tutorial shows you how to use an `AutoPipeline` to automatically infer
    the pipeline class to load for a specific task, given the pretrained weights.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程向您展示如何使用`AutoPipeline`自动推断要加载的特定任务的管道类，给定预训练权重。
- en: Choose an AutoPipeline for your task
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为您的任务选择一个AutoPipeline
- en: 'Start by picking a checkpoint. For example, if you’re interested in text-to-image
    with the [runwayml/stable-diffusion-v1-5](https://huggingface.co/runwayml/stable-diffusion-v1-5)
    checkpoint, use [AutoPipelineForText2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 首先选择一个检查点。例如，如果您对使用[runwayml/stable-diffusion-v1-5](https://huggingface.co/runwayml/stable-diffusion-v1-5)检查点进行文本到图像感兴趣，请使用[AutoPipelineForText2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image)：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![generated image of peasant fighting dragon in wood cutting style](../Images/6b36788d2ba60d3bbff51fcbbb0d71e8.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![生成的农民与龙在木刻风格中战斗的图像](../Images/6b36788d2ba60d3bbff51fcbbb0d71e8.png)'
- en: 'Under the hood, [AutoPipelineForText2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image):'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后，[AutoPipelineForText2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image)：
- en: automatically detects a `"stable-diffusion"` class from the [`model_index.json`](https://huggingface.co/runwayml/stable-diffusion-v1-5/blob/main/model_index.json)
    file
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自动从[`model_index.json`](https://huggingface.co/runwayml/stable-diffusion-v1-5/blob/main/model_index.json)文件中检测到一个`"stable-diffusion"`类
- en: loads the corresponding text-to-image [StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline)
    based on the `"stable-diffusion"` class name
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据`"stable-diffusion"`类名加载相应的文本到图像[StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline)
- en: 'Likewise, for image-to-image, [AutoPipelineForImage2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image)
    detects a `"stable-diffusion"` checkpoint from the `model_index.json` file and
    it’ll load the corresponding [StableDiffusionImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/img2img#diffusers.StableDiffusionImg2ImgPipeline)
    behind the scenes. You can also pass any additional arguments specific to the
    pipeline class such as `strength`, which determines the amount of noise or variation
    added to an input image:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，对于图像到图像，[AutoPipelineForImage2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image)会从`model_index.json`文件中检测到一个`"stable-diffusion"`检查点，并在幕后加载相应的[StableDiffusionImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/img2img#diffusers.StableDiffusionImg2ImgPipeline)。您还可以传递任何特定于管道类的其他参数，如`strength`，它确定添加到输入图像的噪音或变化的量：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![generated image of a vermeer portrait of a dog wearing a pearl earring](../Images/324a523572635d35cf0a7729b6276327.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![生成的戴珍珠耳环的狗的维梅尔肖像](../Images/324a523572635d35cf0a7729b6276327.png)'
- en: 'And if you want to do inpainting, then [AutoPipelineForInpainting](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting)
    loads the underlying [StableDiffusionInpaintPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/inpaint#diffusers.StableDiffusionInpaintPipeline)
    class in the same way:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要进行修复，则[AutoPipelineForInpainting](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting)以相同的方式加载底层的[StableDiffusionInpaintPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/inpaint#diffusers.StableDiffusionInpaintPipeline)类：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![generated image of a tiger sitting on a bench](../Images/0a4e68dcc87ca3b2dd1efff748f52b7d.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![生成的老虎坐在长椅上的图像](../Images/0a4e68dcc87ca3b2dd1efff748f52b7d.png)'
- en: 'If you try to load an unsupported checkpoint, it’ll throw an error:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尝试加载不受支持的检查点，将会抛出错误：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Use multiple pipelines
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用多个管道
- en: For some workflows or if you’re loading many pipelines, it is more memory-efficient
    to reuse the same components from a checkpoint instead of reloading them which
    would unnecessarily consume additional memory. For example, if you’re using a
    checkpoint for text-to-image and you want to use it again for image-to-image,
    use the [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)
    method. This method creates a new pipeline from the components of a previously
    loaded pipeline at no additional memory cost.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些工作流程或者如果您正在加载许多流水线，更节省内存的方法是重复使用来自检查点的相同组件，而不是重新加载它们，这样会不必要地消耗额外的内存。例如，如果您正在使用一个用于文本到图像的检查点，并且想要再次用于图像到图像，可以使用[from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)方法。这个方法以零额外内存成本从先前加载的流水线的组件创建一个新的流水线。
- en: 'The [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)
    method detects the original pipeline class and maps it to the new pipeline class
    corresponding to the task you want to do. For example, if you load a `"stable-diffusion"`
    class pipeline for text-to-image:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)方法检测原始流水线类，并将其映射到您想要执行的任务对应的新流水线类。例如，如果您加载了一个用于文本到图像的`"stable-diffusion"`类流水线：'
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)
    maps the original `"stable-diffusion"` pipeline class to [StableDiffusionImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/img2img#diffusers.StableDiffusionImg2ImgPipeline):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后[from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)将原始的`"stable-diffusion"`流水线类映射到[StableDiffusionImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/img2img#diffusers.StableDiffusionImg2ImgPipeline)：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you passed an optional argument - like disabling the safety checker - to
    the original pipeline, this argument is also passed on to the new pipeline:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您向原始流水线传递了一个可选参数 - 比如禁用安全检查器 - 这个参数也会传递给新的流水线：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can overwrite any of the arguments and even configuration from the original
    pipeline if you want to change the behavior of the new pipeline. For example,
    to turn the safety checker back on and add the `strength` argument:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要更改新流水线的行为，可以覆盖原始流水线的任何参数甚至配置。例如，要重新打开安全检查器并添加`strength`参数：
- en: '[PRE7]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
