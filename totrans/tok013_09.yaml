- en: Input Sequences
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/tokenizers/api/input-sequences](https://huggingface.co/docs/tokenizers/api/input-sequences)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 
    
    
    
    
    
    
    PythonRustNode
  prefs: []
  type: TYPE_NORMAL
- en: 'These types represent all the different kinds of sequence that can be used
    as input of a Tokenizer. Globally, any sequence can be either a string or a list
    of strings, according to the operating mode of the tokenizer: `raw text` vs `pre-tokenized`.'
  prefs: []
  type: TYPE_NORMAL
- en: TextInputSequence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`tokenizers.TextInputSequence`'
  prefs: []
  type: TYPE_NORMAL
- en: A `str` that represents an input sequence
  prefs: []
  type: TYPE_NORMAL
- en: PreTokenizedInputSequence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`tokenizers.PreTokenizedInputSequence`'
  prefs: []
  type: TYPE_NORMAL
- en: 'A pre-tokenized input sequence. Can be one of:'
  prefs: []
  type: TYPE_NORMAL
- en: A `List` of `str`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `Tuple` of `str`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alias of `Union[List[str], Tuple[str]]`.
  prefs: []
  type: TYPE_NORMAL
- en: InputSequence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`tokenizers.InputSequence`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Represents all the possible types of input sequences for encoding. Can be:'
  prefs: []
  type: TYPE_NORMAL
- en: 'When `is_pretokenized=False`: [TextInputSequence](#tokenizers.TextInputSequence)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When `is_pretokenized=True`: [PreTokenizedInputSequence](#tokenizers.PreTokenizedInputSequence)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alias of `Union[str, List[str], Tuple[str]]`.
  prefs: []
  type: TYPE_NORMAL
