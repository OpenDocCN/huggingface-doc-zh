["```py\n# We can't instantiate directly the base class *ImageProcessingMixin* so let's show the examples on a\n# derived class: *CLIPImageProcessor*\nimage_processor = CLIPImageProcessor.from_pretrained(\n    \"openai/clip-vit-base-patch32\"\n)  # Download image_processing_config from huggingface.co and cache.\nimage_processor = CLIPImageProcessor.from_pretrained(\n    \"./test/saved_model/\"\n)  # E.g. image processor (or model) was saved using *save_pretrained('./test/saved_model/')*\nimage_processor = CLIPImageProcessor.from_pretrained(\"./test/saved_model/preprocessor_config.json\")\nimage_processor = CLIPImageProcessor.from_pretrained(\n    \"openai/clip-vit-base-patch32\", do_normalize=False, foo=False\n)\nassert image_processor.do_normalize is False\nimage_processor, unused_kwargs = CLIPImageProcessor.from_pretrained(\n    \"openai/clip-vit-base-patch32\", do_normalize=False, foo=False, return_unused_kwargs=True\n)\nassert image_processor.do_normalize is False\nassert unused_kwargs == {\"foo\": False}\n```", "```py\nfrom transformers import AutoImageProcessor\n\nimage processor = AutoImageProcessor.from_pretrained(\"bert-base-cased\")\n\n# Push the image processor to your namespace with the name \"my-finetuned-bert\".\nimage processor.push_to_hub(\"my-finetuned-bert\")\n\n# Push the image processor to an organization with the name \"my-finetuned-bert\".\nimage processor.push_to_hub(\"huggingface/my-finetuned-bert\")\n```"]