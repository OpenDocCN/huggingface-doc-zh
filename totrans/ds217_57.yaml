- en: Batch mapping
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 批处理映射
- en: 'Original text: [https://huggingface.co/docs/datasets/about_map_batch](https://huggingface.co/docs/datasets/about_map_batch)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/datasets/about_map_batch](https://huggingface.co/docs/datasets/about_map_batch)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Combining the utility of [Dataset.map()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.map)
    with batch mode is very powerful. It allows you to speed up processing, and freely
    control the size of the generated dataset.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将[Dataset.map()](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset.map)的实用性与批处理模式结合起来非常强大。它允许您加快处理速度，并自由控制生成的数据集的大小。
- en: Need for speed
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 需要速度
- en: The primary objective of batch mapping is to speed up processing. Often times,
    it is faster to work with batches of data instead of single examples. Naturally,
    batch mapping lends itself to tokenization. For example, the 🤗 [Tokenizers](https://huggingface.co/docs/tokenizers/python/latest/)
    library works faster with batches because it parallelizes the tokenization of
    all the examples in a batch.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 批处理映射的主要目标是加快处理速度。通常情况下，使用数据批次而不是单个示例更快。自然地，批处理映射适用于标记化。例如，🤗 [Tokenizers](https://huggingface.co/docs/tokenizers/python/latest/)库在批处理中的工作速度更快，因为它并行处理批次中所有示例的标记化。
- en: Input size != output size
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输入大小 != 输出大小
- en: 'The ability to control the size of the generated dataset can be leveraged for
    many interesting use-cases. In the How-to [map](#map) section, there are examples
    of using batch mapping to:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 控制生成数据集大小的能力可以用于许多有趣的用例。在[map](#map)部分中，有使用批处理映射的示例：
- en: Split long sentences into shorter chunks.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将长句子拆分为较短的块。
- en: Augment a dataset with additional tokens.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用额外的标记增强数据集。
- en: 'It is helpful to understand how this works, so you can come up with your own
    ways to use batch mapping. At this point, you may be wondering how you can control
    the size of the generated dataset. The answer is: **the mapped function does not
    have to return an output batch of the same size**.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这是如何工作的很有帮助，这样您就可以想出自己使用批处理映射的方法。此时，您可能想知道如何控制生成数据集的大小。答案是：**映射函数不必返回相同大小的输出批次**。
- en: In other words, your mapped function input can be a batch of size `N` and return
    a batch of size `M`. The output `M` can be greater than or less than `N`. This
    means you can concatenate your examples, divide it up, and even add more examples!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，您的映射函数输入可以是大小为`N`的批次，并返回大小为`M`的批次。输出`M`可以大于或小于`N`。这意味着您可以连接示例，将其分割，并甚至添加更多示例！
- en: However, remember that all values in the output dictionary must contain the
    **same number of elements** as the other fields in the output dictionary. Otherwise,
    it is not possible to define the number of examples in the output returned by
    the mapped function. The number can vary between successive batches processed
    by the mapped function. For a single batch though, all values of the output dictionary
    should have the same length (i.e., the number of elements).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，请记住，输出字典中的所有值必须包含与输出字典中的其他字段**相同数量的元素**。否则，无法定义映射函数返回的输出中的示例数量。映射函数处理的连续批次之间的数量可能会有所不同。但是对于单个批次，输出字典的所有值应具有相同的长度（即元素数量）。
- en: 'For example, from a dataset of 1 column and 3 rows, if you use `map` to return
    a new column with twice as many rows, then you will have an error. In this case,
    you end up with one column with 3 rows, and one column with 6 rows. As you can
    see, the table will not be valid:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，从具有1列和3行的数据集中，如果您使用`map`返回具有两倍行数的新列，则会出现错误。在这种情况下，您将得到一列有3行，另一列有6行。如您所见，表将无效：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To make it valid, you have to drop one of the columns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为使其有效，您必须删除其中一个列：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
