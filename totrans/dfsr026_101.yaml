- en: Outputs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/outputs](https://huggingface.co/docs/diffusers/api/outputs)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: All model outputs are subclasses of [BaseOutput](/docs/diffusers/v0.26.3/en/api/outputs#diffusers.utils.BaseOutput),
    data structures containing all the information returned by the model. The outputs
    can also be used as tuples or dictionaries.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The `outputs` object is a [ImagePipelineOutput](/docs/diffusers/v0.26.3/en/api/pipelines/stable_unclip#diffusers.ImagePipelineOutput)
    which means it has an image attribute.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can access each attribute as you normally would or with a keyword lookup,
    and if that attribute is not returned by the model, you will get `None`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'When considering the `outputs` object as a tuple, it only considers the attributes
    that don’t have `None` values. For instance, retrieving an image by indexing into
    it returns the tuple `(outputs.images)`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: To check a specific pipeline or model output, refer to its corresponding API
    documentation.
  prefs: []
  type: TYPE_NORMAL
- en: BaseOutput
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.utils.BaseOutput`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/utils/outputs.py#L40)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Base class for all model outputs as dataclass. Has a `__getitem__` that allows
    indexing by integer or slice (like a tuple) or strings (like a dictionary) that
    will ignore the `None` attributes. Otherwise behaves like a regular Python dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: You can’t unpack a `BaseOutput` directly. Use the [to_tuple()](/docs/diffusers/v0.26.3/en/api/outputs#diffusers.utils.BaseOutput.to_tuple)
    method to convert it to a tuple first.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `to_tuple`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/utils/outputs.py#L126)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Convert self to a tuple containing all the attributes/keys that are not `None`.
  prefs: []
  type: TYPE_NORMAL
- en: ImagePipelineOutput
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.ImagePipelineOutput`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/pipeline_utils.py#L116)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`images` (`List[PIL.Image.Image]` or `np.ndarray`) — List of denoised PIL images
    of length `batch_size` or NumPy array of shape `(batch_size, height, width, num_channels)`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output class for image pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: FlaxImagePipelineOutput
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.pipelines.pipeline_flax_utils.FlaxImagePipelineOutput`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/pipeline_flax_utils.py#L87)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`images` (`List[PIL.Image.Image]` or `np.ndarray`) — List of denoised PIL images
    of length `batch_size` or NumPy array of shape `(batch_size, height, width, num_channels)`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output class for image pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `replace`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/flax/struct.py#L111)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: “Returns a new object replacing the specified fields with new values.
  prefs: []
  type: TYPE_NORMAL
- en: AudioPipelineOutput
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.AudioPipelineOutput`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/pipeline_utils.py#L130)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`audios` (`np.ndarray`) — List of denoised audio samples of a NumPy array of
    shape `(batch_size, num_channels, sample_rate)`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output class for audio pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: ImageTextPipelineOutput
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.ImageTextPipelineOutput`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/unidiffuser/pipeline_unidiffuser.py#L33)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`images` (`List[PIL.Image.Image]` or `np.ndarray`) — List of denoised PIL images
    of length `batch_size` or NumPy array of shape `(batch_size, height, width, num_channels)`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`text` (`List[str]` or `List[List[str]]`) — List of generated text strings
    of length `batch_size` or a list of list of strings whose outer list has length
    `batch_size`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output class for joint image-text pipelines.
  prefs: []
  type: TYPE_NORMAL
