- en: Use custom models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自定义模型
- en: 'Original text: [https://huggingface.co/docs/transformers.js/custom_usage](https://huggingface.co/docs/transformers.js/custom_usage)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/transformers.js/custom_usage](https://huggingface.co/docs/transformers.js/custom_usage)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, Transformers.js uses [hosted pretrained models](https://huggingface.co/models?library=transformers.js)
    and [precompiled WASM binaries](https://cdn.jsdelivr.net/npm/@xenova/transformers@2.15.0/dist/),
    which should work out-of-the-box. You can customize this as follows:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Transformers.js使用[托管的预训练模型](https://huggingface.co/models?library=transformers.js)和[预编译的WASM二进制文件](https://cdn.jsdelivr.net/npm/@xenova/transformers@2.15.0/dist/)，应该可以直接使用。您可以按照以下方式自定义：
- en: Settings
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For a full list of available settings, check out the [API Reference](./api/env).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看所有可用设置的完整列表，请查看[API参考](./api/env)。
- en: Convert your models to ONNX
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将您的模型转换为ONNX
- en: We recommend using our [conversion script](https://github.com/xenova/transformers.js/blob/main/scripts/convert.py)
    to convert your PyTorch, TensorFlow, or JAX models to ONNX in a single command.
    Behind the scenes, it uses [🤗 Optimum](https://huggingface.co/docs/optimum) to
    perform conversion and quantization of your model.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议使用我们的[转换脚本](https://github.com/xenova/transformers.js/blob/main/scripts/convert.py)来将您的PyTorch、TensorFlow或JAX模型一次性转换为ONNX。在幕后，它使用[🤗
    Optimum](https://huggingface.co/docs/optimum)来执行模型的转换和量化。
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For example, convert and quantize [bert-base-uncased](https://huggingface.co/bert-base-uncased)
    using:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，使用以下命令转换和量化[bert-base-uncased](https://huggingface.co/bert-base-uncased)：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will save the following files to `./models/`:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这将保存以下文件到`./models/`：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For the full list of supported architectures, see the [Optimum documentation](https://huggingface.co/docs/optimum/main/en/exporters/onnx/overview).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看支持的所有架构的完整列表，请参阅[Optimum文档](https://huggingface.co/docs/optimum/main/en/exporters/onnx/overview)。
