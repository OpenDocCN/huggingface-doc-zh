["```py\n( freq: Union mel_scale: str = 'htk' ) \u2192 export const metadata = 'undefined';float or np.ndarray\n```", "```py\n( mels: Union mel_scale: str = 'htk' ) \u2192 export const metadata = 'undefined';float or np.ndarray\n```", "```py\n( num_frequency_bins: int num_mel_filters: int min_frequency: float max_frequency: float sampling_rate: int norm: Optional = None mel_scale: str = 'htk' triangularize_in_mel_space: bool = False ) \u2192 export const metadata = 'undefined';np.ndarray of shape (num_frequency_bins, num_mel_filters)\n```", "```py\n( window_length: int )\n```", "```py\n( window_length: int name: str = 'hann' periodic: bool = True frame_length: Optional = None center: bool = True )\n```", "```py\n( waveform: ndarray window: ndarray frame_length: int hop_length: int fft_length: Optional = None power: Optional = 1.0 center: bool = True pad_mode: str = 'reflect' onesided: bool = True preemphasis: Optional = None mel_filters: Optional = None mel_floor: float = 1e-10 log_mel: Optional = None reference: float = 1.0 min_value: float = 1e-10 db_range: Optional = None remove_dc_offset: Optional = None dtype: dtype = <class 'numpy.float32'> )\n```", "```py\n( spectrogram: ndarray reference: float = 1.0 min_value: float = 1e-10 db_range: Optional = None ) \u2192 export const metadata = 'undefined';np.ndarray\n```", "```py\n( spectrogram: ndarray reference: float = 1.0 min_value: float = 1e-05 db_range: Optional = None ) \u2192 export const metadata = 'undefined';np.ndarray\n```"]