- en: '@huggingface/hub'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/huggingface.js/hub/modules](https://huggingface.co/docs/huggingface.js/hub/modules)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[HubApiError](classes/HubApiError)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[InvalidApiResponseFormatError](classes/InvalidApiResponseFormatError)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interfaces
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[AuthInfo](interfaces/AuthInfo)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CommitDeletedEntry](interfaces/CommitDeletedEntry)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CommitFile](interfaces/CommitFile)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CommitOutput](interfaces/CommitOutput)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CommitParams](interfaces/CommitParams)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Credentials](interfaces/Credentials)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DatasetEntry](interfaces/DatasetEntry)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[FileDownloadInfoOutput](interfaces/FileDownloadInfoOutput)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ListFileEntry](interfaces/ListFileEntry)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ModelEntry](interfaces/ModelEntry)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[OAuthResult](interfaces/OAuthResult)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RepoId](interfaces/RepoId)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SafetensorsIndexJson](interfaces/SafetensorsIndexJson)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SpaceResourceConfig](interfaces/SpaceResourceConfig)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SpaceResourceRequirement](interfaces/SpaceResourceRequirement)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SpaceRuntime](interfaces/SpaceRuntime)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TensorInfo](interfaces/TensorInfo)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[WhoAmIApp](interfaces/WhoAmIApp)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[WhoAmIOrg](interfaces/WhoAmIOrg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[WhoAmIUser](interfaces/WhoAmIUser)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Type Aliases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: AccessToken
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `AccessToken`: `string`'
  prefs: []
  type: TYPE_NORMAL
- en: Actually `hf_${string}`, but for convenience, using the string type
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:15](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L15)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: AccessTokenRole
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `AccessTokenRole`: `"admin"` | `"write"` | `"contributor"` | `"read"`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:44](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L44)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: AuthType
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `AuthType`: `"access_token"` | `"app_token"` | `"app_token_as_user"`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:46](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L46)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: CommitOperation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `CommitOperation`: [`CommitDeletedEntry`](interfaces/CommitDeletedEntry)
    | [`CommitFile`](interfaces/CommitFile)'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/commit.ts:53](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/commit.ts#L53)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: CommitProgressEvent
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `CommitProgressEvent`: { `event`: `"phase"` ; `phase`: `"preuploading"`
    | `"uploadingLargeFiles"` | `"committing"` } | { `event`: `"fileProgress"` ; `path`:
    `string` ; `progress`: `number` ; `state`: `"hashing"` | `"uploading"` }'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/commit.ts:105](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/commit.ts#L105)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: ContentSource
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `ContentSource`: `Blob` | `URL`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/commit.ts:34](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/commit.ts#L34)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Dtype
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `Dtype`: `"F64"` | `"F32"` | `"F16"` | `"BF16"` | `"I64"` | `"I32"` | `"I16"`
    | `"I8"` | `"U8"` | `"BOOL"`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/parse-safetensors-metadata.ts:21](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/parse-safetensors-metadata.ts#L21)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: PipelineType
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `PipelineType`: keyof typeof `PIPELINE_DATA`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: tasks/dist/index.d.ts:444
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: RepoDesignation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `RepoDesignation`: [`RepoId`](interfaces/RepoId) | [`RepoFullName`](modules#repofullname)'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:12](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L12)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: RepoFullName
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `RepoFullName`: `string` | `spaces/${string}` | `datasets/${string}`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:10](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L10)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: RepoType
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `RepoType`: `"space"` | `"dataset"` | `"model"`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:3](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L3)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SafetensorsFileHeader
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `SafetensorsFileHeader`: `Record`<[`TensorName`](modules#tensorname), [`TensorInfo`](interfaces/TensorInfo)>
    & { `__metadata__`: `Record`<`string`, `string`> }'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/parse-safetensors-metadata.ts:29](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/parse-safetensors-metadata.ts#L29)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SafetensorsParseFromRepo
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `SafetensorsParseFromRepo`: { `header`: [`SafetensorsFileHeader`](modules#safetensorsfileheader)
    ; `parameterCount?`: `Partial`<`Record`<[`Dtype`](modules#dtype), `number`>> ;
    `sharded`: `false` } | { `headers`: [`SafetensorsShardedHeaders`](modules#safetensorsshardedheaders)
    ; `index`: [`SafetensorsIndexJson`](interfaces/SafetensorsIndexJson) ; `parameterCount?`:
    `Partial`<`Record`<[`Dtype`](modules#dtype), `number`>> ; `sharded`: `true` }'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/parse-safetensors-metadata.ts:43](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/parse-safetensors-metadata.ts#L43)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SafetensorsShardedHeaders
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `SafetensorsShardedHeaders`: `Record`<`FileName`, [`SafetensorsFileHeader`](modules#safetensorsfileheader)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/parse-safetensors-metadata.ts:41](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/parse-safetensors-metadata.ts#L41)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SpaceEntry
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `SpaceEntry`: { `id`: `string` ; `likes`: `number` ; `name`: `string` ;
    `private`: `boolean` ; `sdk?`: [`SpaceSdk`](modules#spacesdk) ; `updatedAt`: `Date`
    } & `Partial`<`Omit`<`ApiSpaceInfo`, `"updatedAt"`>>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/list-spaces.ts:11](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/list-spaces.ts#L11)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SpaceHardwareFlavor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `SpaceHardwareFlavor`: `"cpu-basic"` | `"cpu-upgrade"` | `"t4-small"` |
    `"t4-medium"` | `"a10g-small"` | `"a10g-large"` | `"a100-large"`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:21](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L21)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SpaceSdk
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `SpaceSdk`: `"streamlit"` | `"gradio"` | `"docker"` | `"static"`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:30](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L30)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: SpaceStage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `SpaceStage`: `"NO_APP_FILE"` | `"CONFIG_ERROR"` | `"BUILDING"` | `"BUILD_ERROR"`
    | `"RUNNING"` | `"RUNNING_BUILDING"` | `"RUNTIME_ERROR"` | `"DELETING"` | `"PAUSED"`
    | `"SLEEPING"`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/types/public.d.ts:32](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/types/public.d.ts#L32)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: TensorName
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `TensorName`: `string`'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/parse-safetensors-metadata.ts:20](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/parse-safetensors-metadata.ts#L20)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: WhoAmI
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Ƭ `WhoAmI`: [`WhoAmIApp`](interfaces/WhoAmIApp) | [`WhoAmIOrg`](interfaces/WhoAmIOrg)
    | [`WhoAmIUser`](interfaces/WhoAmIUser)'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/who-am-i.ts:50](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/who-am-i.ts#L50)'
  prefs: []
  type: TYPE_NORMAL
- en: Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: commit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `commit`(`params`): `Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | [`CommitParams`](interfaces/CommitParams) |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/commit.ts:552](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/commit.ts#L552)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: commitIter
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `commitIter`(`params`): `AsyncGenerator`<[`CommitProgressEvent`](modules#commitprogressevent),
    [`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Internal function for now, used by commit.
  prefs: []
  type: TYPE_NORMAL
- en: Can be exposed later to offer fine-tuned progress info
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | [`CommitParams`](interfaces/CommitParams) |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`AsyncGenerator`<[`CommitProgressEvent`](modules#commitprogressevent), [`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/commit.ts:122](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/commit.ts#L122)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: createRepo
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `createRepo`(`params`): `Promise`<{ `repoUrl`: `string` }>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> | Custom fetch function to use instead of the default
    one, for example to use a proxy or edit headers. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.files?` | { `content`: `ArrayBuffer` &#124; `Blob` ; `path`: `string`
    }[] | Only a few lightweight files are supported at repo creation |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.license?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.private?` | `boolean` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.sdk?` | [`SpaceSdk`](modules#spacesdk) | **`Required`** for when
    repo.type === “space” |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<{ `repoUrl`: `string` }>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/create-repo.ts:9](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/create-repo.ts#L9)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: deleteFile
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `deleteFile`(`params`): `Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.branch?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitDescription?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitTitle?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.isPullRequest?` | `boolean` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.parentCommit?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.path` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/delete-file.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/delete-file.ts#L5)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: deleteFiles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `deleteFiles`(`params`): `Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.branch?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitDescription?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitTitle?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.isPullRequest?` | `boolean` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.parentCommit?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.paths` | `string`[] |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/delete-files.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/delete-files.ts#L5)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: deleteRepo
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `deleteRepo`(`params`): `Promise`<`void`>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<`void`>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/delete-repo.ts:7](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/delete-repo.ts#L7)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: downloadFile
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `downloadFile`(`params`): `Promise`<`Response` | `null`>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> | Custom fetch function to use instead of the default
    one, for example to use a proxy or edit headers. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.path` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.range?` | [`number`, `number`] | Fetch only a specific part of the
    file |'
  prefs: []
  type: TYPE_TB
- en: '| `params.raw?` | `boolean` | If true, will download the raw git file. For
    example, when calling on a file stored with Git LFS, the pointer file will be
    downloaded instead. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.revision?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<`Response` | `null`>'
  prefs: []
  type: TYPE_NORMAL
- en: null when the file doesn’t exist
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/download-file.ts:10](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/download-file.ts#L10)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: fileDownloadInfo
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `fileDownloadInfo`(`params`): `Promise`<[`FileDownloadInfoOutput`](interfaces/FileDownloadInfoOutput)
    | `null`>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> | Custom fetch function to use instead of the default
    one, for example to use a proxy or edit headers. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.noContentDisposition?` | `boolean` | To avoid the content-disposition
    header in the `downloadLink` for LFS files So that on browsers you can use the
    URL in an iframe for example |'
  prefs: []
  type: TYPE_TB
- en: '| `params.path` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.raw?` | `boolean` | To get the raw pointer file behind a LFS file
    |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.revision?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`FileDownloadInfoOutput`](interfaces/FileDownloadInfoOutput) | `null`>'
  prefs: []
  type: TYPE_NORMAL
- en: null when the file doesn’t exist
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/file-download-info.ts:18](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/file-download-info.ts#L18)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: fileExists
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `fileExists`(`params`): `Promise`<`boolean`>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.path` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.revision?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<`boolean`>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/file-exists.ts:7](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/file-exists.ts#L7)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: listDatasets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `listDatasets`(`params?`): `AsyncGenerator`<[`DatasetEntry`](interfaces/DatasetEntry)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params?` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.search?` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.search.owner?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`AsyncGenerator`<[`DatasetEntry`](interfaces/DatasetEntry)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/list-datasets.ts:20](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/list-datasets.ts#L20)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: listFiles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `listFiles`(`params`): `AsyncGenerator`<[`ListFileEntry`](interfaces/ListFileEntry)>'
  prefs: []
  type: TYPE_NORMAL
- en: List files in a folder. To list ALL files in the directory, call it with params.recursive
    set to `true`.
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.expand?` | `boolean` | Fetch `lastCommit` and `securityStatus` for
    each file. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> | Custom fetch function to use instead of the default
    one, for example to use a proxy or edit headers. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.path?` | `string` | Eg ‘data’ for listing all files in the ‘data’
    folder. Leave it empty to list all files in the repo. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.recursive?` | `boolean` | Do we want to list files in subdirectories?
    |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.revision?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`AsyncGenerator`<[`ListFileEntry`](interfaces/ListFileEntry)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/list-files.ts:38](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/list-files.ts#L38)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: listModels
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `listModels`(`params?`): `AsyncGenerator`<[`ModelEntry`](interfaces/ModelEntry)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params?` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.search?` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.search.owner?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.search.task?` | `"text-classification"` &#124; `"token-classification"`
    &#124; `"table-question-answering"` &#124; `"question-answering"` &#124; `"zero-shot-classification"`
    &#124; `"translation"` &#124; `"summarization"` &#124; `"conversational"` &#124;
    `"feature-extraction"` &#124; `"text-generation"` &#124; `"text2text-generation"`
    &#124; `"fill-mask"` &#124; `"sentence-similarity"` &#124; `"text-to-speech"`
    &#124; `"text-to-audio"` &#124; `"automatic-speech-recognition"` &#124; `"audio-to-audio"`
    &#124; `"audio-classification"` &#124; `"voice-activity-detection"` &#124; `"depth-estimation"`
    &#124; `"image-classification"` &#124; `"object-detection"` &#124; `"image-segmentation"`
    &#124; `"text-to-image"` &#124; `"image-to-text"` &#124; `"image-to-image"` &#124;
    `"image-to-video"` &#124; `"unconditional-image-generation"` &#124; `"video-classification"`
    &#124; `"reinforcement-learning"` &#124; `"robotics"` &#124; `"tabular-classification"`
    &#124; `"tabular-regression"` &#124; `"tabular-to-text"` &#124; `"table-to-text"`
    &#124; `"multiple-choice"` &#124; `"text-retrieval"` &#124; `"time-series-forecasting"`
    &#124; `"text-to-video"` &#124; `"visual-question-answering"` &#124; `"document-question-answering"`
    &#124; `"zero-shot-image-classification"` &#124; `"graph-ml"` &#124; `"mask-generation"`
    &#124; `"zero-shot-object-detection"` &#124; `"text-to-3d"` &#124; `"image-to-3d"`
    &#124; `"other"` |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`AsyncGenerator`<[`ModelEntry`](interfaces/ModelEntry)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/list-models.ts:28](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/list-models.ts#L28)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: listSpaces
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `listSpaces`(`params?`): `AsyncGenerator`<[`SpaceEntry`](modules#spaceentry)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params?` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.additionalFields?` | keyof `ApiSpaceInfo`[] | Additional fields to
    fetch from huggingface.co. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> | Custom fetch function to use instead of the default
    one, for example to use a proxy or edit headers. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.search?` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.search.owner?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`AsyncGenerator`<[`SpaceEntry`](modules#spaceentry)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/list-spaces.ts:21](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/list-spaces.ts#L21)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: oauthHandleRedirect
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `oauthHandleRedirect`(`opts?`): `Promise`<[`OAuthResult`](interfaces/OAuthResult)>'
  prefs: []
  type: TYPE_NORMAL
- en: To call after the OAuth provider redirects back to the app.
  prefs: []
  type: TYPE_NORMAL
- en: There is also a helper function [oauthHandleRedirectIfPresent](modules#oauthhandleredirectifpresent),
    which will call `oauthHandleRedirect` if the URL contains an oauth code in the
    query parameters and return `false` otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `opts?` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `opts.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`OAuthResult`](interfaces/OAuthResult)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/oauth-handle-redirect.ts:37](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/oauth-handle-redirect.ts#L37)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: oauthHandleRedirectIfPresent
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `oauthHandleRedirectIfPresent`(`opts?`): `Promise`<[`OAuthResult`](interfaces/OAuthResult)
    | `false`>'
  prefs: []
  type: TYPE_NORMAL
- en: To call after the OAuth provider redirects back to the app.
  prefs: []
  type: TYPE_NORMAL
- en: It returns false if the URL does not contain an oauth code in the query parameters,
    otherwise it calls [oauthHandleRedirect](modules#oauthhandleredirect).
  prefs: []
  type: TYPE_NORMAL
- en: Depending on your app, you may want to call [oauthHandleRedirect](modules#oauthhandleredirect)
    directly instead.
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `opts?` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `opts.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`OAuthResult`](interfaces/OAuthResult) | `false`>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/oauth-handle-redirect.ts:191](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/oauth-handle-redirect.ts#L191)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: oauthLoginUrl
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `oauthLoginUrl`(`opts?`): `Promise`<`string`>'
  prefs: []
  type: TYPE_NORMAL
- en: Use “Sign in with Hub” to authenticate a user, and get oauth user info / access
    token.
  prefs: []
  type: TYPE_NORMAL
- en: Returns an url to redirect to. After the user is redirected back to your app,
    call `oauthHandleRedirect` to get the oauth user info / access token.
  prefs: []
  type: TYPE_NORMAL
- en: When called from inside a static Space with OAuth enabled, it will load the
    config from the space, otherwise you need to at least specify the client ID of
    your OAuth App.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Example`**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: (Theoretically, this function could be used to authenticate a user for any OAuth
    provider supporting PKCE and OpenID Connect by changing `hubUrl`, but it is currently
    only tested with the Hugging Face Hub.)
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `opts?` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `opts.clientId?` | `string` | OAuth client ID. For static Spaces, you can
    omit this and it will be loaded from the Space config, as long as `hf_oauth: true`
    is present in the README.md’s metadata. For other Spaces, it is available to the
    backend in the OAUTH_CLIENT_ID environment variable, as long as `hf_oauth: true`
    is present in the README.md’s metadata. You can also create a Developer Application
    at [https://huggingface.co/settings/connected-applications](https://huggingface.co/settings/connected-applications)
    and use its client ID. |'
  prefs: []
  type: TYPE_TB
- en: '| `opts.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `opts.redirectUrl?` | `string` | Redirect URI, defaults to the current URL.
    For Spaces, any URL within the Space is allowed. For Developer Applications, you
    can add any URL you want to the list of allowed redirect URIs at [https://huggingface.co/settings/connected-applications](https://huggingface.co/settings/connected-applications).
    |'
  prefs: []
  type: TYPE_TB
- en: '| `opts.scopes?` | `string` | OAuth scope, a list of space separate scopes.
    For static Spaces, you can omit this and it will be loaded from the Space config,
    as long as `hf_oauth: true` is present in the README.md’s metadata. For other
    Spaces, it is available to the backend in the OAUTH_SCOPES environment variable,
    as long as `hf_oauth: true` is present in the README.md’s metadata. Defaults to
    “openid profile”. You can also create a Developer Application at [https://huggingface.co/settings/connected-applications](https://huggingface.co/settings/connected-applications)
    and use its scopes. See [https://huggingface.co/docs/hub/oauth](https://huggingface.co/docs/hub/oauth)
    for a list of available scopes. |'
  prefs: []
  type: TYPE_TB
- en: '| `opts.state?` | `string` | State to pass to the OAuth provider, which will
    be returned in the call to `oauthLogin` after the redirect. |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<`string`>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/oauth-login-url.ts:31](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/oauth-login-url.ts#L31)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: parseSafetensorsMetadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `parseSafetensorsMetadata`(`params`): `Promise`<`SetRequired`<[`SafetensorsParseFromRepo`](modules#safetensorsparsefromrepo),
    `"parameterCount"`>>'
  prefs: []
  type: TYPE_NORMAL
- en: Analyze model.safetensors.index.json or model.safetensors from a model hosted
    on Hugging Face using smart range requests to extract its metadata.
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.computeParametersCount` | `true` | Will include SafetensorsParseFromRepo[“parameterCount”],
    an object containing the number of parameters for each DType **`Default`** false
    |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> | Custom fetch function to use instead of the default
    one, for example to use a proxy or edit headers. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) | Only models
    are supported |'
  prefs: []
  type: TYPE_TB
- en: '| `params.revision?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<`SetRequired`<[`SafetensorsParseFromRepo`](modules#safetensorsparsefromrepo),
    `"parameterCount"`>>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/parse-safetensors-metadata.ts:148](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/parse-safetensors-metadata.ts#L148)'
  prefs: []
  type: TYPE_NORMAL
- en: '▸ `parseSafetensorsMetadata`(`params`): `Promise`<[`SafetensorsParseFromRepo`](modules#safetensorsparsefromrepo)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.computeParametersCount?` | `boolean` | Will include SafetensorsParseFromRepo[“parameterCount”],
    an object containing the number of parameters for each DType **`Default`** false
    |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> | Custom fetch function to use instead of the default
    one, for example to use a proxy or edit headers. |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) | Only models
    are supported |'
  prefs: []
  type: TYPE_TB
- en: '| `params.revision?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`SafetensorsParseFromRepo`](modules#safetensorsparsefromrepo)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/parse-safetensors-metadata.ts:165](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/parse-safetensors-metadata.ts#L165)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: uploadFile
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `uploadFile`(`params`): `Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.abortSignal?` | `AbortSignal` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.branch?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitDescription?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitTitle?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.file` | `URL` &#124; `File` &#124; { `content`: [`ContentSource`](modules#contentsource)
    ; `path`: `string` } |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.isPullRequest?` | `boolean` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.parentCommit?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.useWebWorkers?` | `boolean` &#124; { `minSize?`: `number` ; `poolSize?`:
    `number` } |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/upload-file.ts:5](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/upload-file.ts#L5)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: uploadFiles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `uploadFiles`(`params`): `Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.abortSignal?` | `AbortSignal` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.branch?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitDescription?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitTitle?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.files` | (`URL` &#124; `File` &#124; { `content`: [`ContentSource`](modules#contentsource)
    ; `path`: `string` })[] |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.isPullRequest?` | `boolean` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.parentCommit?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.useWebWorkers?` | `boolean` &#124; { `minSize?`: `number` ; `poolSize?`:
    `number` } |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/upload-files.ts:4](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/upload-files.ts#L4)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: uploadFilesWithProgress
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `uploadFilesWithProgress`(`params`): `AsyncGenerator`<[`CommitProgressEvent`](modules#commitprogressevent),
    [`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Uploads with progress
  prefs: []
  type: TYPE_NORMAL
- en: Needs XMLHttpRequest to be available for progress events for uploads Set useWebWorkers
    to true in order to have progress events for hashing
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type | Description |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.abortSignal?` | `AbortSignal` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.branch?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitDescription?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.commitTitle?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials?` | [`Credentials`](interfaces/Credentials) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.files` | (`URL` &#124; `File` &#124; { `content`: [`ContentSource`](modules#contentsource)
    ; `path`: `string` })[] | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.isPullRequest?` | `boolean` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.parentCommit?` | `string` | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.repo` | [`RepoDesignation`](modules#repodesignation) | - |'
  prefs: []
  type: TYPE_TB
- en: '| `params.useWebWorkers?` | `boolean` &#124; { `minSize?`: `number` ; `poolSize?`:
    `number` } | Set this to true in order to have progress events for hashing |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`AsyncGenerator`<[`CommitProgressEvent`](modules#commitprogressevent), [`CommitOutput`](interfaces/CommitOutput)>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/upload-files-with-progress.ts:19](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/upload-files-with-progress.ts#L19)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: whoAmI
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '▸ `whoAmI`(`params`): `Promise`<[`WhoAmI`](modules#whoami) & { `auth`: [`AuthInfo`](interfaces/AuthInfo)
    }>'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '| Name | Type |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| `params` | `Object` |'
  prefs: []
  type: TYPE_TB
- en: '| `params.credentials` | [`Credentials`](interfaces/Credentials) |'
  prefs: []
  type: TYPE_TB
- en: '| `params.fetch?` | (`input`: `URL` &#124; `RequestInfo`, `init?`: `RequestInit`)
    => `Promise`<`Response`> |'
  prefs: []
  type: TYPE_TB
- en: '| `params.hubUrl?` | `string` |'
  prefs: []
  type: TYPE_TB
- en: Returns
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`Promise`<[`WhoAmI`](modules#whoami) & { `auth`: [`AuthInfo`](interfaces/AuthInfo)
    }>'
  prefs: []
  type: TYPE_NORMAL
- en: Defined in
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[hub/src/lib/who-am-i.ts:61](https://github.com/huggingface/huggingface.js/blob/main/packages/hub/src/lib/who-am-i.ts#L61)'
  prefs: []
  type: TYPE_NORMAL
