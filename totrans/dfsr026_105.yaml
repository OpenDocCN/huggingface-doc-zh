- en: Single files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/diffusers/api/loaders/single_file](https://huggingface.co/docs/diffusers/api/loaders/single_file)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/diffusers/v0.26.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/start.99629b4a.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/scheduler.182ea377.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/singletons.fade7992.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.1f6d62f6.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/paths.108a236d.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/app.2b3eaeb0.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.abf12888.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/0.3862a335.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/10.4ffcb977.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Tip.230e2334.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Docstring.93f6f462.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/globals.7f7f1b26.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Heading.16916d63.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/CodeBlock.57fe6e13.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/ExampleCodeBlock.658f5cd6.js">
  prefs: []
  type: TYPE_NORMAL
- en: 'Diffusers supports loading pretrained pipeline (or model) weights stored in
    a single file, such as a `ckpt` or `safetensors` file. These single file types
    are typically produced from community trained models. There are three classes
    for loading single file weights:'
  prefs: []
  type: TYPE_NORMAL
- en: '`FromSingleFileMixin` supports loading pretrained pipeline weights stored in
    a single file, which can either be a `ckpt` or `safetensors` file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`FromOriginalVAEMixin` supports loading a pretrained [AutoencoderKL](/docs/diffusers/v0.26.3/en/api/models/autoencoderkl#diffusers.AutoencoderKL)
    from pretrained ControlNet weights stored in a single file, which can either be
    a `ckpt` or `safetensors` file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`FromOriginalControlnetMixin` supports loading pretrained ControlNet weights
    stored in a single file, which can either be a `ckpt` or `safetensors` file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To learn more about how to load single file weights, see the [Load different
    Stable Diffusion formats](../../using-diffusers/other-formats) loading guide.
  prefs: []
  type: TYPE_NORMAL
- en: FromSingleFileMixin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### class diffusers.loaders.FromSingleFileMixin'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/loaders/single_file.py#L136)'
  prefs: []
  type: TYPE_NORMAL
- en: ( )
  prefs: []
  type: TYPE_NORMAL
- en: Load model weights saved in the `.ckpt` format into a [DiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline).
  prefs: []
  type: TYPE_NORMAL
- en: '#### from_single_file'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/loaders/single_file.py#L141)'
  prefs: []
  type: TYPE_NORMAL
- en: ( pretrained_model_link_or_path **kwargs )
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**pretrained_model_link_or_path** (`str` or `os.PathLike`, *optional*) — Can
    be either:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A link to the `.ckpt` file (for example `"https://huggingface.co/<repo_id>/blob/main/<path_to_file>.ckpt"`)
    on the Hub.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A path to a *file* containing all pipeline weights.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**torch_dtype** (`str` or `torch.dtype`, *optional*) — Override the default
    `torch.dtype` and load the model with another dtype.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**force_download** (`bool`, *optional*, defaults to `False`) — Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**cache_dir** (`Union[str, os.PathLike]`, *optional*) — Path to a directory
    where a downloaded pretrained model configuration is cached if the standard cache
    is not used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**resume_download** (`bool`, *optional*, defaults to `False`) — Whether or
    not to resume downloading the model weights and configuration files. If set to
    `False`, any incompletely downloaded files are deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**proxies** (`Dict[str, str]`, *optional*) — A dictionary of proxy servers
    to use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**local_files_only** (`bool`, *optional*, defaults to `False`) — Whether to
    only load local model weights and configuration files or not. If set to `True`,
    the model won’t be downloaded from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**token** (`str` or *bool*, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**revision** (`str`, *optional*, defaults to `"main"`) — The specific model
    version to use. It can be a branch name, a tag name, a commit id, or any identifier
    allowed by Git.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**use_safetensors** (`bool`, *optional*, defaults to `None`) — If set to `None`,
    the safetensors weights are downloaded if they’re available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiate a [DiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline)
    from pretrained pipeline weights saved in the `.ckpt` or `.safetensors` format.
    The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: FromOriginalVAEMixin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### class diffusers.loaders.FromOriginalVAEMixin'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/loaders/autoencoder.py#L23)'
  prefs: []
  type: TYPE_NORMAL
- en: ( )
  prefs: []
  type: TYPE_NORMAL
- en: Load pretrained AutoencoderKL weights saved in the `.ckpt` or `.safetensors`
    format into a [AutoencoderKL](/docs/diffusers/v0.26.3/en/api/models/autoencoderkl#diffusers.AutoencoderKL).
  prefs: []
  type: TYPE_NORMAL
- en: '#### from_single_file'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/loaders/autoencoder.py#L28)'
  prefs: []
  type: TYPE_NORMAL
- en: ( pretrained_model_link_or_path **kwargs )
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**pretrained_model_link_or_path** (`str` or `os.PathLike`, *optional*) — Can
    be either:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A link to the `.ckpt` file (for example `"https://huggingface.co/<repo_id>/blob/main/<path_to_file>.ckpt"`)
    on the Hub.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A path to a *file* containing all pipeline weights.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**config_file** (`str`, *optional*) — Filepath to the configuration YAML file
    associated with the model. If not provided it will default to: [https://raw.githubusercontent.com/CompVis/stable-diffusion/main/configs/stable-diffusion/v1-inference.yaml](https://raw.githubusercontent.com/CompVis/stable-diffusion/main/configs/stable-diffusion/v1-inference.yaml)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**torch_dtype** (`str` or `torch.dtype`, *optional*) — Override the default
    `torch.dtype` and load the model with another dtype. If `"auto"` is passed, the
    dtype is automatically derived from the model’s weights.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**force_download** (`bool`, *optional*, defaults to `False`) — Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**cache_dir** (`Union[str, os.PathLike]`, *optional*) — Path to a directory
    where a downloaded pretrained model configuration is cached if the standard cache
    is not used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**resume_download** (`bool`, *optional*, defaults to `False`) — Whether or
    not to resume downloading the model weights and configuration files. If set to
    `False`, any incompletely downloaded files are deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**proxies** (`Dict[str, str]`, *optional*) — A dictionary of proxy servers
    to use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**local_files_only** (`bool`, *optional*, defaults to `False`) — Whether to
    only load local model weights and configuration files or not. If set to True,
    the model won’t be downloaded from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**token** (`str` or *bool*, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**revision** (`str`, *optional*, defaults to `"main"`) — The specific model
    version to use. It can be a branch name, a tag name, a commit id, or any identifier
    allowed by Git.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**image_size** (`int`, *optional*, defaults to 512) — The image size the model
    was trained on. Use 512 for all Stable Diffusion v1 models and the Stable Diffusion
    v2 base model. Use 768 for Stable Diffusion v2.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**scaling_factor** (`float`, *optional*, defaults to 0.18215) — The component-wise
    standard deviation of the trained latent space computed using the first batch
    of the training set. This is used to scale the latent space to have unit variance
    when training the diffusion model. The latents are scaled with the formula `z
    = z * scaling_factor` before being passed to the diffusion model. When decoding,
    the latents are scaled back to the original scale with the formula: `z = 1 / scaling_factor
    * z`. For more details, refer to sections 4.3.2 and D.1 of the [High-Resolution
    Image Synthesis with Latent Diffusion Models](https://arxiv.org/abs/2112.10752)
    paper.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**use_safetensors** (`bool`, *optional*, defaults to `None`) — If set to `None`,
    the safetensors weights are downloaded if they’re available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**kwargs** (remaining dictionary of keyword arguments, *optional*) — Can be
    used to overwrite load and saveable variables (for example the pipeline components
    of the specific pipeline class). The overwritten components are directly passed
    to the pipelines `__init__` method. See example below for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiate a [AutoencoderKL](/docs/diffusers/v0.26.3/en/api/models/autoencoderkl#diffusers.AutoencoderKL)
    from pretrained ControlNet weights saved in the original `.ckpt` or `.safetensors`
    format. The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: Make sure to pass both `image_size` and `scaling_factor` to `from_single_file()`
    if you’re loading a VAE from SDXL or a Stable Diffusion v2 model or higher.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: FromOriginalControlnetMixin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### class diffusers.loaders.FromOriginalControlNetMixin'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/loaders/controlnet.py#L23)'
  prefs: []
  type: TYPE_NORMAL
- en: ( )
  prefs: []
  type: TYPE_NORMAL
- en: Load pretrained ControlNet weights saved in the `.ckpt` or `.safetensors` format
    into a [ControlNetModel](/docs/diffusers/v0.26.3/en/api/models/controlnet#diffusers.ControlNetModel).
  prefs: []
  type: TYPE_NORMAL
- en: '#### from_single_file'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/loaders/controlnet.py#L28)'
  prefs: []
  type: TYPE_NORMAL
- en: ( pretrained_model_link_or_path **kwargs )
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**pretrained_model_link_or_path** (`str` or `os.PathLike`, *optional*) — Can
    be either:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A link to the `.ckpt` file (for example `"https://huggingface.co/<repo_id>/blob/main/<path_to_file>.ckpt"`)
    on the Hub.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A path to a *file* containing all pipeline weights.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**torch_dtype** (`str` or `torch.dtype`, *optional*) — Override the default
    `torch.dtype` and load the model with another dtype. If `"auto"` is passed, the
    dtype is automatically derived from the model’s weights.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**force_download** (`bool`, *optional*, defaults to `False`) — Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**cache_dir** (`Union[str, os.PathLike]`, *optional*) — Path to a directory
    where a downloaded pretrained model configuration is cached if the standard cache
    is not used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**resume_download** (`bool`, *optional*, defaults to `False`) — Whether or
    not to resume downloading the model weights and configuration files. If set to
    `False`, any incompletely downloaded files are deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**proxies** (`Dict[str, str]`, *optional*) — A dictionary of proxy servers
    to use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**local_files_only** (`bool`, *optional*, defaults to `False`) — Whether to
    only load local model weights and configuration files or not. If set to True,
    the model won’t be downloaded from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**token** (`str` or *bool*, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**revision** (`str`, *optional*, defaults to `"main"`) — The specific model
    version to use. It can be a branch name, a tag name, a commit id, or any identifier
    allowed by Git.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**use_safetensors** (`bool`, *optional*, defaults to `None`) — If set to `None`,
    the safetensors weights are downloaded if they’re available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**image_size** (`int`, *optional*, defaults to 512) — The image size the model
    was trained on. Use 512 for all Stable Diffusion v1 models and the Stable Diffusion
    v2 base model. Use 768 for Stable Diffusion v2.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**upcast_attention** (`bool`, *optional*, defaults to `None`) — Whether the
    attention computation should always be upcasted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**kwargs** (remaining dictionary of keyword arguments, *optional*) — Can be
    used to overwrite load and saveable variables (for example the pipeline components
    of the specific pipeline class). The overwritten components are directly passed
    to the pipelines `__init__` method. See example below for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiate a [ControlNetModel](/docs/diffusers/v0.26.3/en/api/models/controlnet#diffusers.ControlNetModel)
    from pretrained ControlNet weights saved in the original `.ckpt` or `.safetensors`
    format. The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
