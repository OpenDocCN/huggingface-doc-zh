- en: Padding and truncation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 填充和截断
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/pad_truncation](https://huggingface.co/docs/transformers/v4.37.2/en/pad_truncation)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/transformers/v4.37.2/en/pad_truncation](https://huggingface.co/docs/transformers/v4.37.2/en/pad_truncation)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Batched inputs are often different lengths, so they can’t be converted to fixed-size
    tensors. Padding and truncation are strategies for dealing with this problem,
    to create rectangular tensors from batches of varying lengths. Padding adds a
    special **padding token** to ensure shorter sequences will have the same length
    as either the longest sequence in a batch or the maximum length accepted by the
    model. Truncation works in the other direction by truncating long sequences.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 批量输入通常具有不同的长度，因此无法转换为固定大小的张量。填充和截断是处理此问题的策略，以从不同长度的批次创建矩形张量。填充添加一个特殊的**填充标记**，以确保较短的序列将具有与批次中最长序列或模型接受的最大长度相同的长度。截断则是截断长序列。
- en: 'In most cases, padding your batch to the length of the longest sequence and
    truncating to the maximum length a model can accept works pretty well. However,
    the API supports more strategies if you need them. The three arguments you need
    to are: `padding`, `truncation` and `max_length`.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，将批次填充到最长序列的长度，并截断到模型可以接受的最大长度通常效果很好。但是，如果需要，API支持更多策略。您需要的三个参数是：`padding`，`truncation`和`max_length`。
- en: 'The `padding` argument controls padding. It can be a boolean or a string:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`padding`参数控制填充。它可以是布尔值或字符串：'
- en: '`True` or `''longest''`: pad to the longest sequence in the batch (no padding
    is applied if you only provide a single sequence).'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`True`或`''longest''`：填充到批次中最长的序列（如果只提供单个序列，则不会应用填充）。'
- en: '`''max_length''`: pad to a length specified by the `max_length` argument or
    the maximum length accepted by the model if no `max_length` is provided (`max_length=None`).
    Padding will still be applied if you only provide a single sequence.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''max_length''`：通过`max_length`参数指定的长度填充，或者如果没有提供`max_length`，则填充到模型接受的最大长度（`max_length=None`）。如果只提供单个序列，仍将应用填充。'
- en: '`False` or `''do_not_pad''`: no padding is applied. This is the default behavior.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`False`或`''do_not_pad''`：不会应用填充。这是默认行为。'
- en: 'The `truncation` argument controls truncation. It can be a boolean or a string:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`truncation`参数控制截断。它可以是布尔值或字符串：'
- en: '`True` or `''longest_first''`: truncate to a maximum length specified by the
    `max_length` argument or the maximum length accepted by the model if no `max_length`
    is provided (`max_length=None`). This will truncate token by token, removing a
    token from the longest sequence in the pair until the proper length is reached.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`True`或`''longest_first''`：通过`max_length`参数指定的最大长度截断，或者如果没有提供`max_length`，则截断到模型接受的最大长度（`max_length=None`）。这将逐标记截断，从一对中最长的序列中删除一个标记，直到达到适当的长度。'
- en: '`''only_second''`: truncate to a maximum length specified by the `max_length`
    argument or the maximum length accepted by the model if no `max_length` is provided
    (`max_length=None`). This will only truncate the second sentence of a pair if
    a pair of sequences (or a batch of pairs of sequences) is provided.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''only_second''`：通过`max_length`参数指定的最大长度截断，或者如果没有提供`max_length`，则截断到模型接受的最大长度（`max_length=None`）。如果提供了一对序列（或一批序列对），则只会截断第二句。'
- en: '`''only_first''`: truncate to a maximum length specified by the `max_length`
    argument or the maximum length accepted by the model if no `max_length` is provided
    (`max_length=None`). This will only truncate the first sentence of a pair if a
    pair of sequences (or a batch of pairs of sequences) is provided.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''only_first''`: 通过`max_length`参数指定的最大长度截断，或者如果没有提供`max_length`，则截断到模型接受的最大长度（`max_length=None`）。如果提供了一对序列（或一批序列对），则只会截断第一句。'
- en: '`False` or `''do_not_truncate''`: no truncation is applied. This is the default
    behavior.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`False`或`''do_not_truncate''`：不会应用截断。这是默认行为。'
- en: The `max_length` argument controls the length of the padding and truncation.
    It can be an integer or `None`, in which case it will default to the maximum length
    the model can accept. If the model has no specific maximum input length, truncation
    or padding to `max_length` is deactivated.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_length`参数控制填充和截断的长度。它可以是整数或`None`，在这种情况下，它将默认为模型可以接受的最大长度。如果模型没有特定的最大输入长度，截断或填充到`max_length`将被禁用。'
- en: The following table summarizes the recommended way to setup padding and truncation.
    If you use pairs of input sequences in any of the following examples, you can
    replace `truncation=True` by a `STRATEGY` selected in `['only_first', 'only_second',
    'longest_first']`, i.e. `truncation='only_second'` or `truncation='longest_first'`
    to control how both sequences in the pair are truncated as detailed before.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格总结了设置填充和截断的推荐方式。如果在以下示例中使用输入序列对，可以将`truncation=True`替换为在`['only_first',
    'only_second', 'longest_first']`中选择的`STRATEGY`，即`truncation='only_second'`或`truncation='longest_first'`以控制如前所述截断一对中的两个序列。
- en: '| Truncation | Padding | Instruction |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 截断 | 填充 | 指令 |'
- en: '| --- | --- | --- |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| no truncation | no padding | `tokenizer(batch_sentences)` |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 无截断 | 无填充 | `tokenizer(batch_sentences)` |'
- en: '|  | padding to max sequence in batch | `tokenizer(batch_sentences, padding=True)`
    or |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到批次中的最大序列 | `tokenizer(batch_sentences, padding=True)`或|'
- en: '|  |  | `tokenizer(batch_sentences, padding=''longest'')` |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '|  |  | `tokenizer(batch_sentences, padding=''longest'')` |'
- en: '|  | padding to max model input length | `tokenizer(batch_sentences, padding=''max_length'')`
    |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到最大模型输入长度 | `tokenizer(batch_sentences, padding=''max_length'')` |'
- en: '|  | padding to specific length | `tokenizer(batch_sentences, padding=''max_length'',
    max_length=42)` |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到特定长度 | `tokenizer(batch_sentences, padding=''max_length'', max_length=42)`
    |'
- en: '|  | padding to a multiple of a value | `tokenizer(batch_sentences, padding=True,
    pad_to_multiple_of=8)` |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到值的倍数 | `tokenizer(batch_sentences, padding=True, pad_to_multiple_of=8)`
    |'
- en: '| truncation to max model input length | no padding | `tokenizer(batch_sentences,
    truncation=True)` or |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 截断到最大模型输入长度 | 无填充 | `tokenizer(batch_sentences, truncation=True)`或|'
- en: '|  |  | `tokenizer(batch_sentences, truncation=STRATEGY)` |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '|  |  | `tokenizer(batch_sentences, truncation=STRATEGY)` |'
- en: '|  | padding to max sequence in batch | `tokenizer(batch_sentences, padding=True,
    truncation=True)` or |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到批次中的最大序列长度 | `tokenizer(batch_sentences, padding=True, truncation=True)`
    或 |'
- en: '|  |  | `tokenizer(batch_sentences, padding=True, truncation=STRATEGY)` |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '|  |  | `tokenizer(batch_sentences, padding=True, truncation=STRATEGY)` |'
- en: '|  | padding to max model input length | `tokenizer(batch_sentences, padding=''max_length'',
    truncation=True)` or |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到最大模型输入长度 | `tokenizer(batch_sentences, padding=''max_length'', truncation=True)`
    或 |'
- en: '|  |  | `tokenizer(batch_sentences, padding=''max_length'', truncation=STRATEGY)`
    |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '|  |  | `tokenizer(batch_sentences, padding=''max_length'', truncation=STRATEGY)`
    |'
- en: '|  | padding to specific length | Not possible |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到特定长度 | 不可能 |'
- en: '| truncation to specific length | no padding | `tokenizer(batch_sentences,
    truncation=True, max_length=42)` or |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 截断到特定长度 | 不填充 | `tokenizer(batch_sentences, truncation=True, max_length=42)`
    或 |'
- en: '|  |  | `tokenizer(batch_sentences, truncation=STRATEGY, max_length=42)` |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '|  |  | `tokenizer(batch_sentences, truncation=STRATEGY, max_length=42)` |'
- en: '|  | padding to max sequence in batch | `tokenizer(batch_sentences, padding=True,
    truncation=True, max_length=42)` or |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到批次中的最大序列长度 | `tokenizer(batch_sentences, padding=True, truncation=True,
    max_length=42)` 或 |'
- en: '|  |  | `tokenizer(batch_sentences, padding=True, truncation=STRATEGY, max_length=42)`
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '|  |  | `tokenizer(batch_sentences, padding=True, truncation=STRATEGY, max_length=42)`
    |'
- en: '|  | padding to max model input length | Not possible |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到最大模型输入长度 | 不可能 |'
- en: '|  | padding to specific length | `tokenizer(batch_sentences, padding=''max_length'',
    truncation=True, max_length=42)` or |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '|  | 填充到特定长度 | `tokenizer(batch_sentences, padding=''max_length'', truncation=True,
    max_length=42)` 或 |'
- en: '|  |  | `tokenizer(batch_sentences, padding=''max_length'', truncation=STRATEGY,
    max_length=42)` |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '|  |  | `tokenizer(batch_sentences, padding=''max_length'', truncation=STRATEGY,
    max_length=42)` |'
