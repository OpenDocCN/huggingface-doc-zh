- en: Semantic Guidance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/diffusers/api/pipelines/semantic_stable_diffusion](https://huggingface.co/docs/diffusers/api/pipelines/semantic_stable_diffusion)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/diffusers/v0.26.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/start.99629b4a.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/scheduler.182ea377.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/singletons.fade7992.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.1f6d62f6.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/paths.108a236d.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/app.2b3eaeb0.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.abf12888.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/0.3862a335.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/62.ae57b873.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Tip.230e2334.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Docstring.93f6f462.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/globals.7f7f1b26.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Heading.16916d63.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/CodeBlock.57fe6e13.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/ExampleCodeBlock.658f5cd6.js">
  prefs: []
  type: TYPE_NORMAL
- en: 'Semantic Guidance for Diffusion Models was proposed in [SEGA: Instructing Text-to-Image
    Models using Semantic Guidance](https://huggingface.co/papers/2301.12247) and
    provides strong semantic control over image generation. Small changes to the text
    prompt usually result in entirely different output images. However, with SEGA
    a variety of changes to the image are enabled that can be controlled easily and
    intuitively, while staying true to the original image composition.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The abstract from the paper is:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Text-to-image diffusion models have recently received a lot of interest for
    their astonishing ability to produce high-fidelity images from text only. However,
    achieving one-shot generation that aligns with the user’s intent is nearly impossible,
    yet small changes to the input prompt often result in very different images. This
    leaves the user with little semantic control. To put the user in control, we show
    how to interact with the diffusion process to flexibly steer it along semantic
    directions. This semantic guidance (SEGA) generalizes to any generative architecture
    using classifier-free guidance. More importantly, it allows for subtle and extensive
    edits, changes in composition and style, as well as optimizing the overall artistic
    conception. We demonstrate SEGA’s effectiveness on both latent and pixel-based
    diffusion models such as Stable Diffusion, Paella, and DeepFloyd-IF using a variety
    of tasks, thus providing strong evidence for its versatility, flexibility, and
    improvements over existing methods.*'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure to check out the Schedulers [guide](../../using-diffusers/schedulers)
    to learn how to explore the tradeoff between scheduler speed and quality, and
    see the [reuse components across pipelines](../../using-diffusers/loading#reuse-components-across-pipelines)
    section to learn how to efficiently load the same components into multiple pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: SemanticStableDiffusionPipeline
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### class diffusers.SemanticStableDiffusionPipeline'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/semantic_stable_diffusion/pipeline_semantic_stable_diffusion.py#L21)'
  prefs: []
  type: TYPE_NORMAL
- en: '( vae: AutoencoderKL text_encoder: CLIPTextModel tokenizer: CLIPTokenizer unet:
    UNet2DConditionModel scheduler: KarrasDiffusionSchedulers safety_checker: StableDiffusionSafetyChecker
    feature_extractor: CLIPImageProcessor requires_safety_checker: bool = True )'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**vae** ([AutoencoderKL](/docs/diffusers/v0.26.3/en/api/models/autoencoderkl#diffusers.AutoencoderKL))
    — Variational Auto-Encoder (VAE) model to encode and decode images to and from
    latent representations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**text_encoder** ([CLIPTextModel](https://huggingface.co/docs/transformers/v4.37.2/en/model_doc/clip#transformers.CLIPTextModel))
    — Frozen text-encoder ([clip-vit-large-patch14](https://huggingface.co/openai/clip-vit-large-patch14)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**tokenizer** ([CLIPTokenizer](https://huggingface.co/docs/transformers/v4.37.2/en/model_doc/clip#transformers.CLIPTokenizer))
    — A `CLIPTokenizer` to tokenize text.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**unet** ([UNet2DConditionModel](/docs/diffusers/v0.26.3/en/api/models/unet2d-cond#diffusers.UNet2DConditionModel))
    — A `UNet2DConditionModel` to denoise the encoded image latents.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**scheduler** ([SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin))
    — A scheduler to be used in combination with `unet` to denoise the encoded image
    latents. Can be one of [DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler),
    [LMSDiscreteScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/lms_discrete#diffusers.LMSDiscreteScheduler),
    or [PNDMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/pndm#diffusers.PNDMScheduler).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**safety_checker** (`Q16SafetyChecker`) — Classification module that estimates
    whether generated images could be considered offensive or harmful. Please refer
    to the [model card](https://huggingface.co/runwayml/stable-diffusion-v1-5) for
    more details about a model’s potential harms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**feature_extractor** ([CLIPImageProcessor](https://huggingface.co/docs/transformers/v4.37.2/en/model_doc/clip#transformers.CLIPImageProcessor))
    — A `CLIPImageProcessor` to extract features from generated images; used as inputs
    to the `safety_checker`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pipeline for text-to-image generation using Stable Diffusion with latent editing.
  prefs: []
  type: TYPE_NORMAL
- en: This model inherits from [DiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline)
    and builds on the [StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline).
    Check the superclass documentation for the generic methods implemented for all
    pipelines (downloading, saving, running on a particular device, etc.).
  prefs: []
  type: TYPE_NORMAL
- en: '#### __call__'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/semantic_stable_diffusion/pipeline_semantic_stable_diffusion.py#L210)'
  prefs: []
  type: TYPE_NORMAL
- en: '( prompt: Union height: Optional = None width: Optional = None num_inference_steps:
    int = 50 guidance_scale: float = 7.5 negative_prompt: Union = None num_images_per_prompt:
    int = 1 eta: float = 0.0 generator: Union = None latents: Optional = None output_type:
    Optional = ''pil'' return_dict: bool = True callback: Optional = None callback_steps:
    int = 1 editing_prompt: Union = None editing_prompt_embeddings: Optional = None
    reverse_editing_direction: Union = False edit_guidance_scale: Union = 5 edit_warmup_steps:
    Union = 10 edit_cooldown_steps: Union = None edit_threshold: Union = 0.9 edit_momentum_scale:
    Optional = 0.1 edit_mom_beta: Optional = 0.4 edit_weights: Optional = None sem_guidance:
    Optional = None ) → `~pipelines.semantic_stable_diffusion.SemanticStableDiffusionPipelineOutput`
    or `tuple`'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**prompt** (`str` or `List[str]`) — The prompt or prompts to guide image generation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**height** (`int`, *optional*, defaults to `self.unet.config.sample_size *
    self.vae_scale_factor`) — The height in pixels of the generated image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**width** (`int`, *optional*, defaults to `self.unet.config.sample_size * self.vae_scale_factor`)
    — The width in pixels of the generated image.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**num_inference_steps** (`int`, *optional*, defaults to 50) — The number of
    denoising steps. More denoising steps usually lead to a higher quality image at
    the expense of slower inference.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**guidance_scale** (`float`, *optional*, defaults to 7.5) — A higher guidance
    scale value encourages the model to generate images closely linked to the text
    `prompt` at the expense of lower image quality. Guidance scale is enabled when
    `guidance_scale > 1`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**negative_prompt** (`str` or `List[str]`, *optional*) — The prompt or prompts
    to guide what to not include in image generation. If not defined, you need to
    pass `negative_prompt_embeds` instead. Ignored when not using guidance (`guidance_scale
    < 1`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**num_images_per_prompt** (`int`, *optional*, defaults to 1) — The number of
    images to generate per prompt.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**eta** (`float`, *optional*, defaults to 0.0) — Corresponds to parameter eta
    (η) from the [DDIM](https://arxiv.org/abs/2010.02502) paper. Only applies to the
    [DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler),
    and is ignored in other schedulers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**generator** (`torch.Generator` or `List[torch.Generator]`, *optional*) —
    A [`torch.Generator`](https://pytorch.org/docs/stable/generated/torch.Generator.html)
    to make generation deterministic.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**latents** (`torch.FloatTensor`, *optional*) — Pre-generated noisy latents
    sampled from a Gaussian distribution, to be used as inputs for image generation.
    Can be used to tweak the same generation with different prompts. If not provided,
    a latents tensor is generated by sampling using the supplied random `generator`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**output_type** (`str`, *optional*, defaults to `"pil"`) — The output format
    of the generated image. Choose between `PIL.Image` or `np.array`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**return_dict** (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a [StableDiffusionPipelineOutput](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/upscale#diffusers.pipelines.stable_diffusion.StableDiffusionPipelineOutput)
    instead of a plain tuple.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**callback** (`Callable`, *optional*) — A function that calls every `callback_steps`
    steps during inference. The function is called with the following arguments: `callback(step:
    int, timestep: int, latents: torch.FloatTensor)`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**callback_steps** (`int`, *optional*, defaults to 1) — The frequency at which
    the `callback` function is called. If not specified, the callback is called at
    every step.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**editing_prompt** (`str` or `List[str]`, *optional*) — The prompt or prompts
    to use for semantic guidance. Semantic guidance is disabled by setting `editing_prompt
    = None`. Guidance direction of prompt should be specified via `reverse_editing_direction`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**editing_prompt_embeddings** (`torch.Tensor`, *optional*) — Pre-computed embeddings
    to use for semantic guidance. Guidance direction of embedding should be specified
    via `reverse_editing_direction`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**reverse_editing_direction** (`bool` or `List[bool]`, *optional*, defaults
    to `False`) — Whether the corresponding prompt in `editing_prompt` should be increased
    or decreased.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**edit_guidance_scale** (`float` or `List[float]`, *optional*, defaults to
    5) — Guidance scale for semantic guidance. If provided as a list, values should
    correspond to `editing_prompt`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**edit_warmup_steps** (`float` or `List[float]`, *optional*, defaults to 10)
    — Number of diffusion steps (for each prompt) for which semantic guidance is not
    applied. Momentum is calculated for those steps and applied once all warmup periods
    are over.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**edit_cooldown_steps** (`float` or `List[float]`, *optional*, defaults to
    `None`) — Number of diffusion steps (for each prompt) after which semantic guidance
    is longer applied.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**edit_threshold** (`float` or `List[float]`, *optional*, defaults to 0.9)
    — Threshold of semantic guidance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**edit_momentum_scale** (`float`, *optional*, defaults to 0.1) — Scale of the
    momentum to be added to the semantic guidance at each diffusion step. If set to
    0.0, momentum is disabled. Momentum is already built up during warmup (for diffusion
    steps smaller than `sld_warmup_steps`). Momentum is only added to latent guidance
    once all warmup periods are finished.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**edit_mom_beta** (`float`, *optional*, defaults to 0.4) — Defines how semantic
    guidance momentum builds up. `edit_mom_beta` indicates how much of the previous
    momentum is kept. Momentum is already built up during warmup (for diffusion steps
    smaller than `edit_warmup_steps`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**edit_weights** (`List[float]`, *optional*, defaults to `None`) — Indicates
    how much each individual concept should influence the overall guidance. If no
    weights are provided all concepts are applied equally.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sem_guidance** (`List[torch.Tensor]`, *optional*) — List of pre-generated
    guidance vectors to be applied at generation. Length of the list has to correspond
    to `num_inference_steps`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`~pipelines.semantic_stable_diffusion.SemanticStableDiffusionPipelineOutput`
    or `tuple`'
  prefs: []
  type: TYPE_NORMAL
- en: If `return_dict` is `True`, `~pipelines.semantic_stable_diffusion.SemanticStableDiffusionPipelineOutput`
    is returned, otherwise a `tuple` is returned where the first element is a list
    with the generated images and the second element is a list of `bool`s indicating
    whether the corresponding generated image contains “not-safe-for-work” (nsfw)
    content.
  prefs: []
  type: TYPE_NORMAL
- en: The call function to the pipeline for generation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: StableDiffusionSafePipelineOutput
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### class diffusers.pipelines.semantic_stable_diffusion.pipeline_output.SemanticStableDiffusionPipelineOutput'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/semantic_stable_diffusion/pipeline_output.py#L10)'
  prefs: []
  type: TYPE_NORMAL
- en: '( images: Union nsfw_content_detected: Optional )'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**images** (`List[PIL.Image.Image]` or `np.ndarray`) — List of denoised PIL
    images of length `batch_size` or NumPy array of shape `(batch_size, height, width,
    num_channels)`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**nsfw_content_detected** (`List[bool]`) — List indicating whether the corresponding
    generated image contains “not-safe-for-work” (nsfw) content or `None` if safety
    checking could not be performed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output class for Stable Diffusion pipelines.
  prefs: []
  type: TYPE_NORMAL
