["```py\nfrom diffusers import AutoPipelineForText2Image\nimport torch\n\npipeline = AutoPipelineForText2Image.from_pretrained(\n    \"runwayml/stable-diffusion-v1-5\", torch_dtype=torch.float16, use_safetensors=True\n).to(\"cuda\")\nprompt = \"Astronaut in a jungle, cold color palette, muted colors, detailed, 8k\"\n\nimage = pipeline(prompt, num_inference_steps=25).images[0]\n```", "```py\nSome weights of UNet2DConditionModel were not initialized from the model checkpoint at runwayml/stable-diffusion-v1-5 and are newly initialized because the shapes did not match:\n- conv_in.weight: found shape torch.Size([320, 4, 3, 3]) in the checkpoint and torch.Size([320, 9, 3, 3]) in the model instantiated\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n```", "```py\n>>> from diffusers import AutoPipelineForText2Image\n\n>>> pipeline = AutoPipelineForText2Image.from_pretrained(\"runwayml/stable-diffusion-v1-5\")\n>>> image = pipeline(prompt).images[0]\n```", "```py\n>>> from diffusers import AutoPipelineForText2Image, AutoPipelineForImage2Image\n\n>>> pipe_i2i = AutoPipelineForImage2Image.from_pretrained(\n...     \"runwayml/stable-diffusion-v1-5\", requires_safety_checker=False\n... )\n\n>>> pipe_t2i = AutoPipelineForText2Image.from_pipe(pipe_i2i)\n>>> image = pipe_t2i(prompt).images[0]\n```", "```py\nSome weights of UNet2DConditionModel were not initialized from the model checkpoint at runwayml/stable-diffusion-v1-5 and are newly initialized because the shapes did not match:\n- conv_in.weight: found shape torch.Size([320, 4, 3, 3]) in the checkpoint and torch.Size([320, 9, 3, 3]) in the model instantiated\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n```", "```py\n>>> from diffusers import AutoPipelineForImage2Image\n\n>>> pipeline = AutoPipelineForImage2Image.from_pretrained(\"runwayml/stable-diffusion-v1-5\")\n>>> image = pipeline(prompt, image).images[0]\n```", "```py\n>>> from diffusers import AutoPipelineForText2Image, AutoPipelineForImage2Image\n\n>>> pipe_t2i = AutoPipelineForText2Image.from_pretrained(\n...     \"runwayml/stable-diffusion-v1-5\", requires_safety_checker=False\n... )\n\n>>> pipe_i2i = AutoPipelineForImage2Image.from_pipe(pipe_t2i)\n>>> image = pipe_i2i(prompt, image).images[0]\n```", "```py\nSome weights of UNet2DConditionModel were not initialized from the model checkpoint at runwayml/stable-diffusion-v1-5 and are newly initialized because the shapes did not match:\n- conv_in.weight: found shape torch.Size([320, 4, 3, 3]) in the checkpoint and torch.Size([320, 9, 3, 3]) in the model instantiated\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n```", "```py\n>>> from diffusers import AutoPipelineForInpainting\n\n>>> pipeline = AutoPipelineForInpainting.from_pretrained(\"runwayml/stable-diffusion-v1-5\")\n>>> image = pipeline(prompt, image=init_image, mask_image=mask_image).images[0]\n```", "```py\n>>> from diffusers import AutoPipelineForText2Image, AutoPipelineForInpainting\n\n>>> pipe_t2i = AutoPipelineForText2Image.from_pretrained(\n...     \"DeepFloyd/IF-I-XL-v1.0\", requires_safety_checker=False\n... )\n\n>>> pipe_inpaint = AutoPipelineForInpainting.from_pipe(pipe_t2i)\n>>> image = pipe_inpaint(prompt, image=init_image, mask_image=mask_image).images[0]\n```"]