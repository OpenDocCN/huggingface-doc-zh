- en: BORT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/transformers/v4.37.2/en/model_doc/bort](https://huggingface.co/docs/transformers/v4.37.2/en/model_doc/bort)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/transformers/v4.37.2/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/entry/start.1af50ed5.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/scheduler.9bc65507.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/singletons.a2d7fdf1.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/index.3b203c72.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/paths.b8f1dad4.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/entry/app.59e74a31.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/index.707bf1b6.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/nodes/0.dbd8cc12.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/nodes/80.232fecf2.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/Tip.c2ecdbf4.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/Heading.342b1fa6.js">
  prefs: []
  type: TYPE_NORMAL
- en: This model is in maintenance mode only, we do not accept any new PRs changing
    its code.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you run into any issues running this model, please reinstall the last version
    that supported this model: v4.30.0. You can do so by running the following command:
    `pip install -U transformers==4.30.0`.'
  prefs: []
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The BORT model was proposed in [Optimal Subarchitecture Extraction for BERT](https://arxiv.org/abs/2010.10499)
    by Adrian de Wynter and Daniel J. Perry. It is an optimal subset of architectural
    parameters for the BERT, which the authors refer to as “Bort”.
  prefs: []
  type: TYPE_NORMAL
- en: 'The abstract from the paper is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '*We extract an optimal subset of architectural parameters for the BERT architecture
    from Devlin et al. (2018) by applying recent breakthroughs in algorithms for neural
    architecture search. This optimal subset, which we refer to as “Bort”, is demonstrably
    smaller, having an effective (that is, not counting the embedding layer) size
    of 5.5% the original BERT-large architecture, and 16% of the net size. Bort is
    also able to be pretrained in 288 GPU hours, which is 1.2% of the time required
    to pretrain the highest-performing BERT parametric architectural variant, RoBERTa-large
    (Liu et al., 2019), and about 33% of that of the world-record, in GPU hours, required
    to train BERT-large on the same hardware. It is also 7.9x faster on a CPU, as
    well as being better performing than other compressed variants of the architecture,
    and some of the non-compressed variants: it obtains performance improvements of
    between 0.3% and 31%, absolute, with respect to BERT-large, on multiple public
    natural language understanding (NLU) benchmarks.*'
  prefs: []
  type: TYPE_NORMAL
- en: This model was contributed by [stefan-it](https://huggingface.co/stefan-it).
    The original code can be found [here](https://github.com/alexa/bort/).
  prefs: []
  type: TYPE_NORMAL
- en: Usage tips
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: BORT’s model architecture is based on BERT, refer to [BERT’s documentation page](bert)
    for the model’s API reference as well as usage examples.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BORT uses the RoBERTa tokenizer instead of the BERT tokenizer, refer to [RoBERTa’s
    documentation page](roberta) for the tokenizer’s API reference as well as usage
    examples.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BORT requires a specific fine-tuning algorithm, called [Agora](https://adewynter.github.io/notes/bort_algorithms_and_applications.html#fine-tuning-with-algebraic-topology)
    , that is sadly not open-sourced yet. It would be very useful for the community,
    if someone tries to implement the algorithm to make BORT fine-tuning work.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
