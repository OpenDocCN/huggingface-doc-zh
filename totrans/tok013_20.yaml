- en: Visualizer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/tokenizers/api/visualizer](https://huggingface.co/docs/tokenizers/api/visualizer)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/assets/pages/__layout.svelte-hf-doc-builder.css">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/start-hf-doc-builder.js">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/chunks/vendor-hf-doc-builder.js">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/chunks/paths-hf-doc-builder.js">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/pages/__layout.svelte-hf-doc-builder.js">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/pages/api/visualizer.mdx-hf-doc-builder.js">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/chunks/Docstring-hf-doc-builder.js">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/chunks/IconCopyLink-hf-doc-builder.js">
    <link rel="modulepreload" href="/docs/tokenizers/v0.13.4.rc2/en/_app/chunks/TokenizersLanguageContent-hf-doc-builder.js">PythonRustNode
  prefs: []
  type: TYPE_NORMAL
- en: Annotation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.tools.Annotation`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/tokenizers/blob/v0.13.4.rc2/src/tokenizers/tools/visualizer.py#L16)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: EncodingVisualizer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.tools.EncodingVisualizer`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/tokenizers/blob/v0.13.4.rc2/src/tokenizers/tools/visualizer.py#L67)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`tokenizer` ([Tokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/tokenizer#tokenizers.Tokenizer))
    — A tokenizer instance'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`default_to_notebook` (`bool`) — Whether to render html output in a notebook
    by default'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`annotation_converter` (`Callable`, *optional*) — An optional (lambda) function
    that takes an annotation in any format and returns an Annotation object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build an EncodingVisualizer
  prefs: []
  type: TYPE_NORMAL
- en: '#### `__call__`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/tokenizers/blob/v0.13.4.rc2/src/tokenizers/tools/visualizer.py#L108)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`text` (`str`) — The text to tokenize'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`annotations` (`List[Annotation]`, *optional*) — An optional list of annotations
    of the text. The can either be an annotation class or anything else if you instantiated
    the visualizer with a converter function'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`default_to_notebook` (`bool`, *optional*, defaults to *False*) — If True,
    will render the html in a notebook. Otherwise returns an html string.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build a visualization of the given text
  prefs: []
  type: TYPE_NORMAL
