- en: Decoders
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解码器
- en: 'Original text: [https://huggingface.co/docs/tokenizers/api/decoders](https://huggingface.co/docs/tokenizers/api/decoders)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/tokenizers/api/decoders](https://huggingface.co/docs/tokenizers/api/decoders)
- en: PythonRustNode
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: PythonRustNode
- en: BPEDecoder
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BPEDecoder
- en: '### `class tokenizers.decoders.BPEDecoder`'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.decoders.BPEDecoder`'
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`suffix` (`str`, *optional*, defaults to `</w>`) — The suffix that was used
    to caracterize an end-of-word. This suffix will be replaced by whitespaces during
    the decoding'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`suffix` (`str`, *可选*, 默认为 `</w>`) — 用于表示单词结尾的后缀。在解码过程中，此后缀将被空格替换。'
- en: BPEDecoder Decoder
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: BPEDecoder 解码器
- en: ByteLevel
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ByteLevel
- en: '### `class tokenizers.decoders.ByteLevel`'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.decoders.ByteLevel`'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: ByteLevel Decoder
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ByteLevel 解码器
- en: This decoder is to be used in tandem with the [ByteLevel](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.ByteLevel)
    [PreTokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.PreTokenizer).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此解码器应与 [ByteLevel](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.ByteLevel)
    [PreTokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.PreTokenizer)
    一起使用。
- en: CTC
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CTC
- en: '### `class tokenizers.decoders.CTC`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.decoders.CTC`'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pad_token` (`str`, *optional*, defaults to `<pad>`) — The pad token used by
    CTC to delimit a new token.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pad_token` (`str`, *可选*, 默认为 `<pad>`) — CTC 用于分隔新标记的填充标记。'
- en: '`word_delimiter_token` (`str`, *optional*, defaults to `|`) — The word delimiter
    token. It will be replaced by a<space></space>'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`word_delimiter_token` (`str`, *可选*, 默认为 `|`) — 单词分隔符标记。它将被替换为一个空格'
- en: '`cleanup` (`bool`, *optional*, defaults to `True`) — Whether to cleanup some
    tokenization artifacts. Mainly spaces before punctuation, and some abbreviated
    english forms.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cleanup` (`bool`, *可选*, 默认为 `True`) — 是否清理一些标记化残留物。主要是标点符号前的空格，以及一些缩写的英文形式。'
- en: CTC Decoder
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: CTC 解码器
- en: Metaspace
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Metaspace
- en: '### `class tokenizers.decoders.Metaspace`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.decoders.Metaspace`'
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`replacement` (`str`, *optional*, defaults to `▁`) — The replacement character.
    Must be exactly one character. By default we use the *▁* (U+2581) meta symbol
    (Same as in SentencePiece).'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`replacement` (`str`, *可选*, 默认为 `▁`) — 替换字符。必须正好是一个字符。默认情况下，我们使用 *▁* (U+2581)
    元符号（与 SentencePiece 中相同）。'
- en: '`add_prefix_space` (`bool`, *optional*, defaults to `True`) — Whether to add
    a space to the first word if there isn’t already one. This lets us treat *hello*
    exactly like *say hello*.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`add_prefix_space` (`bool`, *可选*, 默认为 `True`) — 如果第一个单词没有空格，则是否在第一个单词前添加一个空格。这样我们可以将
    *hello* 和 *say hello* 完全相同对待。'
- en: Metaspace Decoder
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Metaspace 解码器
- en: WordPiece
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WordPiece
- en: '### `class tokenizers.decoders.WordPiece`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class tokenizers.decoders.WordPiece`'
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prefix` (`str`, *optional*, defaults to `##`) — The prefix to use for subwords
    that are not a beginning-of-word'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prefix` (`str`, *可选*, 默认为 `##`) — 用于表示不是单词开头的子词的前缀'
- en: '`cleanup` (`bool`, *optional*, defaults to `True`) — Whether to cleanup some
    tokenization artifacts. Mainly spaces before punctuation, and some abbreviated
    english forms.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cleanup` (`bool`, *可选*, 默认为 `True`) — 是否清理一些标记化残留物。主要是标点符号前的空格，以及一些缩写的英文形式。'
- en: WordPiece Decoder
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: WordPiece 解码器
