- en: Decoders
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/tokenizers/api/decoders](https://huggingface.co/docs/tokenizers/api/decoders)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 
    
    
    
    
    
    
    
    PythonRustNode
  prefs: []
  type: TYPE_NORMAL
- en: BPEDecoder
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.decoders.BPEDecoder`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`suffix` (`str`, *optional*, defaults to `</w>`) — The suffix that was used
    to caracterize an end-of-word. This suffix will be replaced by whitespaces during
    the decoding'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BPEDecoder Decoder
  prefs: []
  type: TYPE_NORMAL
- en: ByteLevel
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.decoders.ByteLevel`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: ByteLevel Decoder
  prefs: []
  type: TYPE_NORMAL
- en: This decoder is to be used in tandem with the [ByteLevel](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.ByteLevel)
    [PreTokenizer](/docs/tokenizers/v0.13.4.rc2/en/api/pre-tokenizers#tokenizers.pre_tokenizers.PreTokenizer).
  prefs: []
  type: TYPE_NORMAL
- en: CTC
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.decoders.CTC`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`pad_token` (`str`, *optional*, defaults to `<pad>`) — The pad token used by
    CTC to delimit a new token.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`word_delimiter_token` (`str`, *optional*, defaults to `|`) — The word delimiter
    token. It will be replaced by a<space></space>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cleanup` (`bool`, *optional*, defaults to `True`) — Whether to cleanup some
    tokenization artifacts. Mainly spaces before punctuation, and some abbreviated
    english forms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CTC Decoder
  prefs: []
  type: TYPE_NORMAL
- en: Metaspace
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.decoders.Metaspace`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`replacement` (`str`, *optional*, defaults to `▁`) — The replacement character.
    Must be exactly one character. By default we use the *▁* (U+2581) meta symbol
    (Same as in SentencePiece).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`add_prefix_space` (`bool`, *optional*, defaults to `True`) — Whether to add
    a space to the first word if there isn’t already one. This lets us treat *hello*
    exactly like *say hello*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metaspace Decoder
  prefs: []
  type: TYPE_NORMAL
- en: WordPiece
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class tokenizers.decoders.WordPiece`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`prefix` (`str`, *optional*, defaults to `##`) — The prefix to use for subwords
    that are not a beginning-of-word'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cleanup` (`bool`, *optional*, defaults to `True`) — Whether to cleanup some
    tokenization artifacts. Mainly spaces before punctuation, and some abbreviated
    english forms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WordPiece Decoder
  prefs: []
  type: TYPE_NORMAL
