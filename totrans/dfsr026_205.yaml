- en: RePaintScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RePaintScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/repaint](https://huggingface.co/docs/diffusers/api/schedulers/repaint)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/repaint](https://huggingface.co/docs/diffusers/api/schedulers/repaint)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '`RePaintScheduler` is a DDPM-based inpainting scheduler for unsupervised inpainting
    with extreme masks. It is designed to be used with the `RePaintPipeline`, and
    it is based on the paper [RePaint: Inpainting using Denoising Diffusion Probabilistic
    Models](https://huggingface.co/papers/2201.09865) by Andreas Lugmayr et al.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`RePaintScheduler`是一个基于DDPM的修复调度程序，用于极端蒙版的无监督修复。它旨在与`RePaintPipeline`一起使用，基于Andreas
    Lugmayr等人的论文[RePaint: 使用去噪扩散概率模型进行修复](https://huggingface.co/papers/2201.09865)。'
- en: 'The abstract from the paper is:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 论文摘要如下：
- en: '*Free-form inpainting is the task of adding new content to an image in the
    regions specified by an arbitrary binary mask. Most existing approaches train
    for a certain distribution of masks, which limits their generalization capabilities
    to unseen mask types. Furthermore, training with pixel-wise and perceptual losses
    often leads to simple textural extensions towards the missing areas instead of
    semantically meaningful generation. In this work, we propose RePaint: A Denoising
    Diffusion Probabilistic Model (DDPM) based inpainting approach that is applicable
    to even extreme masks. We employ a pretrained unconditional DDPM as the generative
    prior. To condition the generation process, we only alter the reverse diffusion
    iterations by sampling the unmasked regions using the given image information.
    Since this technique does not modify or condition the original DDPM network itself,
    the model produces high-quality and diverse output images for any inpainting form.
    We validate our method for both faces and general-purpose image inpainting using
    standard and extreme masks. RePaint outperforms state-of-the-art Autoregressive,
    and GAN approaches for at least five out of six mask distributions. GitHub Repository:
    [this http URL](http://git.io/RePaint).*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*自由形式修复是向图像的指定区域添加新内容的任务。大多数现有方法针对特定蒙版分布进行训练，这限制了它们对未见蒙版类型的泛化能力。此外，使用像素级和感知损失进行训练通常会导致对缺失区域进行简单的纹理扩展，而不是语义上有意义的生成。在这项工作中，我们提出了RePaint：一种基于去噪扩散概率模型（DDPM）的修复方法，适用于极端蒙版。我们使用预训练的无条件DDPM作为生成先验。为了调节生成过程，我们仅通过使用给定的图像信息对未蒙版区域进行采样来改变反向扩散迭代。由于这种技术不修改或调节原始的DDPM网络本身，该模型为任何修复形式生成高质量和多样化的输出图像。我们验证了我们的方法用于人脸和通用图像修复，使用标准和极端蒙版。RePaint在六种蒙版分布中至少有五种优于最先进的自回归和GAN方法。GitHub存储库：[此http
    URL](http://git.io/RePaint)。*'
- en: The original implementation can be found at [andreas128/RePaint](https://github.com/andreas128/).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 原始实现可在[andreas128/RePaint](https://github.com/andreas128/)找到。
- en: RePaintScheduler
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RePaintScheduler
- en: '### `class diffusers.RePaintScheduler`'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.RePaintScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_repaint.py#L91)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_repaint.py#L91)'
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_train_timesteps`（`int`，默认为1000）— 训练模型的扩散步数。'
- en: '`beta_start` (`float`, defaults to 0.0001) — The starting `beta` value of inference.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_start`（`float`，默认为0.0001）— 推断的起始`beta`值。'
- en: '`beta_end` (`float`, defaults to 0.02) — The final `beta` value.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_end`（`float`，默认为0.02）— 最终的`beta`值。'
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`,
    `scaled_linear`, `squaredcos_cap_v2`, or `sigmoid`.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_schedule`（`str`，默认为`"linear"`）— beta调度，从beta范围映射到用于步进模型的beta序列。可选择`linear`、`scaled_linear`、`squaredcos_cap_v2`或`sigmoid`。'
- en: '`eta` (`float`) — The weight of noise for added noise in diffusion step. If
    its value is between 0.0 and 1.0 it corresponds to the DDIM scheduler, and if
    its value is between -0.0 and 1.0 it corresponds to the DDPM scheduler.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eta`（`float`）— 扩散步骤中添加噪音的权重。如果其值在0.0和1.0之间，则对应于DDIM调度程序，如果其值在-0.0和1.0之间，则对应于DDPM调度程序。'
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trained_betas`（`np.ndarray`，*可选*）— 直接传递一个beta数组给构造函数，以绕过`beta_start`和`beta_end`。'
- en: '`clip_sample` (`bool`, defaults to `True`) — Clip the predicted sample between
    -1 and 1 for numerical stability.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clip_sample`（`bool`，默认为`True`）— 将预测样本剪切在-1和1之间以保持数值稳定性。'
- en: '`RePaintScheduler` is a scheduler for DDPM inpainting inside a given mask.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`RePaintScheduler`是一个用于在给定蒙版内进行DDPM修复的调度程序。'
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型继承自[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)和[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。查看超类文档以了解库为所有调度程序实现的通用方法，如加载和保存。
- en: '#### `scale_model_input`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_repaint.py#L163)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_repaint.py#L163)'
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample`（`torch.FloatTensor`）— 输入样本。'
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep`（`int`，*可选*）— 扩散链中的当前时间步。'
- en: Returns
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一个缩放后的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度程序可以互换。
- en: '#### `set_timesteps`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_repaint.py#L180)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model. If used, `timesteps` must be `None`.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jump_length` (`int`, defaults to 10) — The number of steps taken forward in
    time before going backward in time for a single jump (“j” in RePaint paper). Take
    a look at Figure 9 and 10 in the paper.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jump_n_sample` (`int`, defaults to 10) — The number of times to make a forward
    time jump for a given chosen time sample. Take a look at Figure 9 and 10 in the
    paper.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`device` (`str` or `torch.device`, *optional*) — The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '#### `step`'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_repaint.py#L246)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestep` (`int`) — The current discrete timestep in the diffusion chain.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`original_image` (`torch.FloatTensor`) — The original image to inpaint on.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mask` (`torch.FloatTensor`) — The mask where a value of 0.0 indicates which
    part of the original image to inpaint.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`generator` (`torch.Generator`, *optional*) — A random number generator.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a [RePaintSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/repaint#diffusers.schedulers.scheduling_repaint.RePaintSchedulerOutput)
    or `tuple`.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[RePaintSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/repaint#diffusers.schedulers.scheduling_repaint.RePaintSchedulerOutput)
    or `tuple`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: If return_dict is `True`, [RePaintSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/repaint#diffusers.schedulers.scheduling_repaint.RePaintSchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: RePaintSchedulerOutput
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.schedulers.scheduling_repaint.RePaintSchedulerOutput`'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_repaint.py#L28)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample (x_{t-1}) of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pred_original_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels,
    height, width)` for images) — The predicted denoised sample (x_{0}) based on the
    model output from the current timestep. `pred_original_sample` can be used to
    preview progress or for guidance.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Output class for the scheduler’s step function output.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
