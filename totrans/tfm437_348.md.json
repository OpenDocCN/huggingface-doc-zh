["```py\n>>> from transformers import IdeficsModel, IdeficsConfig\n\n>>> # Initializing a Idefics idefics-9b style configuration\n>>> configuration = IdeficsConfig()\n\n>>> # Initializing a model from the idefics-9b style configuration\n>>> model = IdeficsModel(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from transformers import AutoTokenizer, IdeficsForVisionText2Text\n\n>>> model = IdeficsForVisionText2Text.from_pretrained(\"HuggingFaceM4/idefics-9b\")\n>>> tokenizer = AutoTokenizer.from_pretrained(\"HuggingFaceM4/idefics-9b\")\n\n>>> prompt = \"Hey, are you consciours? Can you talk to me?\"\n>>> inputs = tokenizer(prompt, return_tensors=\"pt\")\n\n>>> # Generate\n>>> generate_ids = model.generate(inputs.input_ids, max_length=30)\n>>> tokenizer.batch_decode(generate_ids, skip_special_tokens=True, clean_up_tokenization_spaces=False)[0]\n\"Hey, are you consciours? Can you talk to me?\\nI'm not consciours, but I can talk to you.\"\n```", "```py\ncheckpoint = \"HuggingFaceM4/idefics-9b\"\nprocessor = AutoProcessor.from_pretrained(checkpoint)\nurl = \"https://hips.hearstapps.com/hmg-prod/images/cute-photos-of-cats-in-grass-1593184777.jpg\"\nimg = processor.image_processor.fetch_images([url])[0]\n\nprompts = [\n    \"User:\",\n    img,\n    \"Describe this image.\nt: An image of two kittens in grass.\n\n    \"User:\",\n    \"https://hips.hearstapps.com/hmg-prod/images/dog-puns-1581708208.jpg\",\n    \"Describe this image.\nt:\",\n]\n\ninputs = processor(prompts, return_tensors=\"pt\")\ngenerated_ids = model.generate(**inputs, max_length=100)\ngenerated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]\n```", "```py\n<s>User:<fake_token_around_image><image><fake_token_around_image>Describe this image.\nAssistant: An image of two kittens in grass.\nUser:<fake_token_around_image><image><fake_token_around_image>Describe this image.\nAssistant:'\n```", "```py\nimage_transform = transforms.Compose(\n    [\n        transforms.RandomResizedCrop(\n            (w, h), scale=(0.9, 1.0), interpolation=transforms.InterpolationMode.BICUBIC\n        ),\n        transforms.ToTensor(),\n        transforms.Normalize(mean=self.image_mean, std=self.image_std),\n    ]\n)\ninputs = processor(prompts, transform=image_transform, return_tensors=\"pt\")\n```"]