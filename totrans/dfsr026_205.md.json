["```py\n( num_train_timesteps: int = 1000 beta_start: float = 0.0001 beta_end: float = 0.02 beta_schedule: str = 'linear' eta: float = 0.0 trained_betas: Optional = None clip_sample: bool = True )\n```", "```py\n( sample: FloatTensor timestep: Optional = None ) \u2192 export const metadata = 'undefined';torch.FloatTensor\n```", "```py\n( num_inference_steps: int jump_length: int = 10 jump_n_sample: int = 10 device: Union = None )\n```", "```py\n( model_output: FloatTensor timestep: int sample: FloatTensor original_image: FloatTensor mask: FloatTensor generator: Optional = None return_dict: bool = True ) \u2192 export const metadata = 'undefined';RePaintSchedulerOutput or tuple\n```", "```py\n( prev_sample: FloatTensor pred_original_sample: FloatTensor )\n```"]