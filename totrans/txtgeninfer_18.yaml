- en: PagedAttention
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/text-generation-inference/conceptual/paged_attention](https://huggingface.co/docs/text-generation-inference/conceptual/paged_attention)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/text-generation-inference/main/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/entry/start.96d64f85.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/scheduler.9680c161.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/singletons.5632daf5.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/index.9d57cde4.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/paths.5eca520f.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/entry/app.48a2a24c.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/index.38d74ee1.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/nodes/0.c01ff294.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/nodes/9.5e73e59c.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/Heading.74c51a96.js">
  prefs: []
  type: TYPE_NORMAL
- en: LLMs struggle with memory limitations during generation. In the decoding part
    of generation, all the attention keys and values generated for previous tokens
    are stored in GPU memory for reuse. This is called *KV cache*, and it may take
    up a large amount of memory for large models and long sequences.
  prefs: []
  type: TYPE_NORMAL
- en: PagedAttention attempts to optimize memory use by partitioning the KV cache
    into blocks that are accessed through a lookup table. Thus, the KV cache does
    not need to be stored in contiguous memory, and blocks are allocated as needed.
    The memory efficiency can increase GPU utilization on memory-bound workloads,
    so more inference batches can be supported.
  prefs: []
  type: TYPE_NORMAL
- en: The use of a lookup table to access the memory blocks can also help with KV
    sharing across multiple generations. This is helpful for techniques such as *parallel
    sampling*, where multiple outputs are generated simultaneously for the same prompt.
    In this case, the cached KV blocks can be shared among the generations.
  prefs: []
  type: TYPE_NORMAL
- en: TGI’s PagedAttention implementation leverages the custom cuda kernels developed
    by the [vLLM Project](https://github.com/vllm-project/vllm). You can learn more
    about this technique in the [project’s page](https://vllm.ai/).
  prefs: []
  type: TYPE_NORMAL
