["```py\n( num_train_timesteps: int = 40 sigma_min: float = 0.002 sigma_max: float = 80.0 sigma_data: float = 0.5 s_noise: float = 1.0 rho: float = 7.0 clip_denoised: bool = True )\n```", "```py\n( sigma ) \u2192 export const metadata = 'undefined';tuple\n```", "```py\n( sample: FloatTensor timestep: Union ) \u2192 export const metadata = 'undefined';torch.FloatTensor\n```", "```py\n( num_inference_steps: Optional = None device: Union = None timesteps: Optional = None )\n```", "```py\n( sigmas: Union ) \u2192 export const metadata = 'undefined';float or np.ndarray\n```", "```py\n( model_output: FloatTensor timestep: Union sample: FloatTensor generator: Optional = None return_dict: bool = True ) \u2192 export const metadata = 'undefined';CMStochasticIterativeSchedulerOutput or tuple\n```", "```py\n( prev_sample: FloatTensor )\n```"]