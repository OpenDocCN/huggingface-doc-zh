["```py\nfrom IPython.display import HTML\n\nHTML(\n    \"\"\"<video width=\"640\" height=\"480\" controls>\n  <source src=\"https://huggingface.co/edbeeching/doom_health_gathering_supreme_3333/resolve/main/replay.mp4\"\n  type=\"video/mp4\">Your browser does not support the video tag.</video>\"\"\"\n)\n```", "```py\n# Install ViZDoom deps from\n# https://github.com/mwydmuch/ViZDoom/blob/master/doc/Building.md#-linux\n\napt-get install build-essential zlib1g-dev libsdl2-dev libjpeg-dev \\\nnasm tar libbz2-dev libgtk2.0-dev cmake git libfluidsynth-dev libgme-dev \\\nlibopenal-dev timidity libwildmidi-dev unzip ffmpeg\n\n# Boost libraries\napt-get install libboost-all-dev\n\n# Lua binding dependencies\napt-get install liblua5.1-dev\n```", "```py\npip install sample-factory\npip install vizdoom\n```", "```py\nimport functools\n\nfrom sample_factory.algo.utils.context import global_model_factory\nfrom sample_factory.cfg.arguments import parse_full_cfg, parse_sf_args\nfrom sample_factory.envs.env_utils import register_env\nfrom sample_factory.train import run_rl\n\nfrom sf_examples.vizdoom.doom.doom_model import make_vizdoom_encoder\nfrom sf_examples.vizdoom.doom.doom_params import add_doom_env_args, doom_override_defaults\nfrom sf_examples.vizdoom.doom.doom_utils import DOOM_ENVS, make_doom_env_from_spec\n\n# Registers all the ViZDoom environments\ndef register_vizdoom_envs():\n    for env_spec in DOOM_ENVS:\n        make_env_func = functools.partial(make_doom_env_from_spec, env_spec)\n        register_env(env_spec.name, make_env_func)\n\n# Sample Factory allows the registration of a custom Neural Network architecture\n# See https://github.com/alex-petrenko/sample-factory/blob/master/sf_examples/vizdoom/doom/doom_model.py for more details\ndef register_vizdoom_models():\n    global_model_factory().register_encoder_factory(make_vizdoom_encoder)\n\ndef register_vizdoom_components():\n    register_vizdoom_envs()\n    register_vizdoom_models()\n\n# parse the command line args and create a config\ndef parse_vizdoom_cfg(argv=None, evaluation=False):\n    parser, _ = parse_sf_args(argv=argv, evaluation=evaluation)\n    # parameters specific to Doom envs\n    add_doom_env_args(parser)\n    # override Doom default values for algo parameters\n    doom_override_defaults(parser)\n    # second parsing pass yields the final configuration\n    final_cfg = parse_full_cfg(parser, argv)\n    return final_cfg\n```", "```py\n## Start the training, this should take around 15 minutes\nregister_vizdoom_components()\n\n# The scenario we train on today is health gathering\n# other scenarios include \"doom_basic\", \"doom_two_colors_easy\", \"doom_dm\", \"doom_dwango5\", \"doom_my_way_home\", \"doom_deadly_corridor\", \"doom_defend_the_center\", \"doom_defend_the_line\"\nenv = \"doom_health_gathering_supreme\"\ncfg = parse_vizdoom_cfg(\n    argv=[f\"--env={env}\", \"--num_workers=8\", \"--num_envs_per_worker=4\", \"--train_for_env_steps=4000000\"]\n)\n\nstatus = run_rl(cfg)\n```", "```py\nfrom sample_factory.enjoy import enjoy\n\ncfg = parse_vizdoom_cfg(\n    argv=[f\"--env={env}\", \"--num_workers=1\", \"--save_video\", \"--no_render\", \"--max_num_episodes=10\"], evaluation=True\n)\nstatus = enjoy(cfg)\n```", "```py\nfrom base64 import b64encode\nfrom IPython.display import HTML\n\nmp4 = open(\"/content/train_dir/default_experiment/replay.mp4\", \"rb\").read()\ndata_url = \"data:video/mp4;base64,\" + b64encode(mp4).decode()\nHTML(\n    \"\"\"\n<video width=640 controls>\n      <source src=\"%s\" type=\"video/mp4\">\n</video>\n\"\"\"\n    % data_url\n)\n```", "```py\nfrom huggingface_hub import notebook_login\nnotebook_login()\n!git config --global credential.helper store\n```", "```py\nfrom sample_factory.enjoy import enjoy\n\nhf_username = \"ThomasSimonini\"  # insert your HuggingFace username here\n\ncfg = parse_vizdoom_cfg(\n    argv=[\n        f\"--env={env}\",\n        \"--num_workers=1\",\n        \"--save_video\",\n        \"--no_render\",\n        \"--max_num_episodes=10\",\n        \"--max_num_frames=100000\",\n        \"--push_to_hub\",\n        f\"--hf_repository={hf_username}/rl_course_vizdoom_health_gathering_supreme\",\n    ],\n    evaluation=True,\n)\nstatus = enjoy(cfg)\n```", "```py\n#download the agent from the hub\npython -m sample_factory.huggingface.load_from_hub -r edbeeching/doom_health_gathering_supreme_2222 -d ./train_dir\n```", "```py\nls train_dir/doom_health_gathering_supreme_2222\n```", "```py\nenv = \"doom_health_gathering_supreme\"\ncfg = parse_vizdoom_cfg(\n    argv=[\n        f\"--env={env}\",\n        \"--num_workers=1\",\n        \"--save_video\",\n        \"--no_render\",\n        \"--max_num_episodes=10\",\n        \"--experiment=doom_health_gathering_supreme_2222\",\n        \"--train_dir=train_dir\",\n    ],\n    evaluation=True,\n)\nstatus = enjoy(cfg)\n```", "```py\nmp4 = open(\"/content/train_dir/doom_health_gathering_supreme_2222/replay.mp4\", \"rb\").read()\ndata_url = \"data:video/mp4;base64,\" + b64encode(mp4).decode()\nHTML(\n    \"\"\"\n<video width=640 controls>\n      <source src=\"%s\" type=\"video/mp4\">\n</video>\n\"\"\"\n    % data_url\n)\n```", "```py\n# Download the agent from the hub\npython -m sample_factory.huggingface.load_from_hub -r edbeeching/doom_deathmatch_bots_2222 -d ./train_dir\n```", "```py\nfrom sample_factory.enjoy import enjoy\n\nregister_vizdoom_components()\nenv = \"doom_deathmatch_bots\"\ncfg = parse_vizdoom_cfg(\n    argv=[\n        f\"--env={env}\",\n        \"--num_workers=1\",\n        \"--save_video\",\n        \"--no_render\",\n        \"--max_num_episodes=1\",\n        \"--experiment=doom_deathmatch_bots_2222\",\n        \"--train_dir=train_dir\",\n    ],\n    evaluation=True,\n)\nstatus = enjoy(cfg)\nmp4 = open(\"/content/train_dir/doom_deathmatch_bots_2222/replay.mp4\", \"rb\").read()\ndata_url = \"data:video/mp4;base64,\" + b64encode(mp4).decode()\nHTML(\n    \"\"\"\n<video width=640 controls>\n      <source src=\"%s\" type=\"video/mp4\">\n</video>\n\"\"\"\n    % data_url\n)\n```"]