["```py\nfrom huggingface_hub import ModelCard\n\ncard = ModelCard.load('nateraw/vit-base-beans')\n```", "```py\ncontent = \"\"\"\n---\nlanguage: en\nlicense: mit\n---\n\n# My Model Card\n\"\"\"\n\ncard = ModelCard(content)\ncard.data.to_dict() == {'language': 'en', 'license': 'mit'}  # True\n```", "```py\ncard_data = ModelCardData(language='en', license='mit', library='timm')\n\nexample_template_var = 'nateraw'\ncontent = f\"\"\"\n---\n{ card_data.to_yaml() }\n---\n\n# My Model Card\n\nThis model created by [@{example_template_var}](https://github.com/{example_template_var})\n\"\"\"\n\ncard = ModelCard(content)\nprint(card)\n```", "```py\n---\nlanguage: en\nlicense: mit\nlibrary: timm\n--- \n# My Model Card\n\nThis model created by [@nateraw](https://github.com/nateraw)\n```", "```py\nfrom pathlib import Path\n\nfrom huggingface_hub import ModelCard, ModelCardData\n\n# Define your jinja template\ntemplate_text = \"\"\"\n---\n{{ card_data }}\n---\n\n# Model Card for MyCoolModel\n\nThis model does this and that.\n\nThis model was created by [@{{ author }}](https://hf.co/{{author}}).\n\"\"\".strip()\n\n# Write the template to a file\nPath('custom_template.md').write_text(template_text)\n\n# Define card metadata\ncard_data = ModelCardData(language='en', license='mit', library_name='keras')\n\n# Create card from template, passing it any jinja template variables you want.\n# In our case, we'll pass author\ncard = ModelCard.from_template(card_data, template_path='custom_template.md', author='nateraw')\ncard.save('my_model_card_1.md')\nprint(card)\n```", "```py\n---\nlanguage: en\nlicense: mit\nlibrary_name: keras\n--- \n# Model Card for MyCoolModel\n\nThis model does this and that.\n\nThis model was created by [@nateraw](https://hf.co/nateraw).\n```", "```py\ncard.data.library_name = 'timm'\ncard.data.language = 'fr'\ncard.data.license = 'apache-2.0'\nprint(card)\n```", "```py\n---\nlanguage: fr\nlicense: apache-2.0\nlibrary_name: timm\n--- \n# Model Card for MyCoolModel\n\nThis model does this and that.\n\nThis model was created by [@nateraw](https://hf.co/nateraw).\n```", "```py\ncard_data = ModelCardData(language='en', license='mit', library_name='keras')\ncard = ModelCard.from_template(\n    card_data,\n    model_id='my-cool-model',\n    model_description=\"this model does this and that\",\n    developers=\"Nate Raw\",\n    repo=\"https://github.com/huggingface/huggingface_hub\",\n)\ncard.save('my_model_card_2.md')\nprint(card)\n```", "```py\nfrom huggingface_hub import whoami, create_repo\n\nuser = whoami()['name']\nrepo_id = f'{user}/hf-hub-modelcards-pr-test'\nurl = create_repo(repo_id, exist_ok=True)\n```", "```py\ncard_data = ModelCardData(language='en', license='mit', library_name='keras')\ncard = ModelCard.from_template(\n    card_data,\n    model_id='my-cool-model',\n    model_description=\"this model does this and that\",\n    developers=\"Nate Raw\",\n    repo=\"https://github.com/huggingface/huggingface_hub\",\n)\n```", "```py\ncard.push_to_hub(repo_id)\n```", "```py\ncard.push_to_hub(repo_id, create_pr=True)\n```", "```py\n>>> from huggingface_hub import metadata_update\n>>> metadata_update(\"username/my-cool-model\", {\"pipeline_tag\": \"image-classification\"})\n```", "```py\n>>> from huggingface_hub import metadata_update\n>>> metadata_update(\"username/my-cool-model\", {\"pipeline_tag\": \"text-generation\"}, overwrite=True)\n```", "```py\n>>> from huggingface_hub import metadata_update\n>>> metadata_update(\"someone/model\", {\"pipeline_tag\": \"text-classification\"}, create_pr=True)\n```", "```py\ncard_data = ModelCardData(\n    language='en',\n    license='mit',\n    model_name='my-cool-model',\n    eval_results = EvalResult(\n        task_type='image-classification',\n        dataset_type='beans',\n        dataset_name='Beans',\n        metric_type='accuracy',\n        metric_value=0.7\n    )\n)\n\ncard = ModelCard.from_template(card_data)\nprint(card.data)\n```", "```py\nlanguage: en\nlicense: mit\nmodel-index:\n- name: my-cool-model\n  results:\n  - task:\n      type: image-classification\n    dataset:\n      name: Beans\n      type: beans\n    metrics:\n    - type: accuracy\n      value: 0.7\n```", "```py\ncard_data = ModelCardData(\n    language='en',\n    license='mit',\n    model_name='my-cool-model',\n    eval_results = [\n        EvalResult(\n            task_type='image-classification',\n            dataset_type='beans',\n            dataset_name='Beans',\n            metric_type='accuracy',\n            metric_value=0.7\n        ),\n        EvalResult(\n            task_type='image-classification',\n            dataset_type='beans',\n            dataset_name='Beans',\n            metric_type='f1',\n            metric_value=0.65\n        )\n    ]\n)\ncard = ModelCard.from_template(card_data)\ncard.data\n```", "```py\nlanguage: en\nlicense: mit\nmodel-index:\n- name: my-cool-model\n  results:\n  - task:\n      type: image-classification\n    dataset:\n      name: Beans\n      type: beans\n    metrics:\n    - type: accuracy\n      value: 0.7\n    - type: f1\n      value: 0.65\n```"]