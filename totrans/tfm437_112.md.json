["```py\nfrom transformers import AutoConfig\n\nconfig = AutoConfig.from_pretrained(\"bert-base-cased\")\n\n# Push the config to your namespace with the name \"my-finetuned-bert\".\nconfig.push_to_hub(\"my-finetuned-bert\")\n\n# Push the config to an organization with the name \"my-finetuned-bert\".\nconfig.push_to_hub(\"huggingface/my-finetuned-bert\")\n```", "```py\n# We can't instantiate directly the base class *PretrainedConfig* so let's show the examples on a\n# derived class: BertConfig\nconfig = BertConfig.from_pretrained(\n    \"bert-base-uncased\"\n)  # Download configuration from huggingface.co and cache.\nconfig = BertConfig.from_pretrained(\n    \"./test/saved_model/\"\n)  # E.g. config (or model) was saved using *save_pretrained('./test/saved_model/')*\nconfig = BertConfig.from_pretrained(\"./test/saved_model/my_configuration.json\")\nconfig = BertConfig.from_pretrained(\"bert-base-uncased\", output_attentions=True, foo=False)\nassert config.output_attentions == True\nconfig, unused_kwargs = BertConfig.from_pretrained(\n    \"bert-base-uncased\", output_attentions=True, foo=False, return_unused_kwargs=True\n)\nassert config.output_attentions == True\nassert unused_kwargs == {\"foo\": False}\n```"]