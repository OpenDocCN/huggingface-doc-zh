["```py\n---\ntitle: Basic Docker SDK Space\nemoji: \ud83d\udc33\ncolorFrom: purple\ncolorTo: gray\nsdk: docker\napp_port: 7860\n---\n```", "```py\n\t# Declare your environment variables with the ARG directive\n\tARG MODEL_REPO_NAME\n\n\tFROM python:latest\n\t# [...]\n\t# You can use them like environment variables\n\tRUN predict.py $MODEL_REPO_NAME\n```", "```py\n# Expose the secret SECRET_EXAMPLE at buildtime and use its value as git remote URL\nRUN --mount=type=secret,id=SECRET_EXAMPLE,mode=0444,required=true \\\n git init && \\\n git remote add origin $(cat /run/secrets/SECRET_EXAMPLE)\n```", "```py\n# Expose the secret SECRET_EXAMPLE at buildtime and use its value as a Bearer token for a curl request\nRUN --mount=type=secret,id=SECRET_EXAMPLE,mode=0444,required=true \\\n\tcurl test -H 'Authorization: Bearer $(cat /run/secrets/SECRET_EXAMPLE)'\n```", "```py\n# Set up a new user named \"user\" with user ID 1000\nRUN useradd -m -u 1000 user\n\n# Switch to the \"user\" user\nUSER user\n\n# Set home to the user's home directory\nENV HOME=/home/user \\\n\tPATH=/home/user/.local/bin:$PATH\n\n# Set the working directory to the user's home directory\nWORKDIR $HOME/app\n\n# Try and run pip command after setting the user with `USER user` to avoid permission issues with Python\nRUN pip install --no-cache-dir --upgrade pip\n\n# Copy the current directory contents into the container at $HOME/app setting the owner to the user\nCOPY --chown=user . $HOME/app\n\n# Download a checkpoint\nRUN mkdir content\nADD --chown=user https://<SOME_ASSET_URL> content/<SOME_ASSET_NAME>\n```", "```py\nRUN mkdir -p /data\nRUN chmod 777 /data\n```", "```py\nCOPY checkpoint .\nRUN chown -R user checkpoint\n```", "```py\nCOPY --chown=user checkpoint .\n```"]