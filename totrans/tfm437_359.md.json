["```py\n>>> from transformers import MgpstrProcessor, MgpstrForSceneTextRecognition\n>>> import requests\n>>> from PIL import Image\n\n>>> processor = MgpstrProcessor.from_pretrained('alibaba-damo/mgp-str-base')\n>>> model = MgpstrForSceneTextRecognition.from_pretrained('alibaba-damo/mgp-str-base')\n\n>>> # load image from the IIIT-5k dataset\n>>> url = \"https://i.postimg.cc/ZKwLg2Gw/367-14.png\"\n>>> image = Image.open(requests.get(url, stream=True).raw).convert(\"RGB\")\n\n>>> pixel_values = processor(images=image, return_tensors=\"pt\").pixel_values\n>>> outputs = model(pixel_values)\n\n>>> generated_text = processor.batch_decode(outputs.logits)['generated_text']\n```", "```py\n>>> from transformers import MgpstrConfig, MgpstrForSceneTextRecognition\n\n>>> # Initializing a Mgpstr mgp-str-base style configuration\n>>> configuration = MgpstrConfig()\n\n>>> # Initializing a model (with random weights) from the mgp-str-base style configuration\n>>> model = MgpstrForSceneTextRecognition(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from transformers import (\n...     MgpstrProcessor,\n...     MgpstrForSceneTextRecognition,\n... )\n>>> import requests\n>>> from PIL import Image\n\n>>> # load image from the IIIT-5k dataset\n>>> url = \"https://i.postimg.cc/ZKwLg2Gw/367-14.png\"\n>>> image = Image.open(requests.get(url, stream=True).raw).convert(\"RGB\")\n\n>>> processor = MgpstrProcessor.from_pretrained(\"alibaba-damo/mgp-str-base\")\n>>> pixel_values = processor(images=image, return_tensors=\"pt\").pixel_values\n\n>>> model = MgpstrForSceneTextRecognition.from_pretrained(\"alibaba-damo/mgp-str-base\")\n\n>>> # inference\n>>> outputs = model(pixel_values)\n>>> out_strs = processor.batch_decode(outputs.logits)\n>>> out_strs[\"generated_text\"]\n'[\"ticket\"]'\n```"]