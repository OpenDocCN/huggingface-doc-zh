["```py\n>>> def transforms(examples):\n...     examples[\"pixel_values\"] = [image.convert(\"RGB\").resize((100,100)) for image in examples[\"image\"]]\n...     return examples\n```", "```py\n>>> dataset = dataset.map(transforms, remove_columns=[\"image\"], batched=True)\n>>> dataset[0]\n{'label': 6,\n 'pixel_values': <PIL.PngImagePlugin.PngImageFile image mode=RGB size=100x100 at 0x7F058237BB10>}\n```", "```py\n>>> from torchvision.transforms import Compose, ColorJitter, ToTensor\n\n>>> jitter = Compose(\n...     [\n...          ColorJitter(brightness=0.25, contrast=0.25, saturation=0.25, hue=0.7),\n...          ToTensor(),\n...     ]\n... )\n```", "```py\n>>> def transforms(examples):\n...     examples[\"pixel_values\"] = [jitter(image.convert(\"RGB\")) for image in examples[\"image\"]]\n...     return examples\n```", "```py\n>>> dataset.set_transform(transforms)\n```"]