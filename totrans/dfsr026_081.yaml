- en: Token merging
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/diffusers/optimization/tome](https://huggingface.co/docs/diffusers/optimization/tome)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/diffusers/v0.26.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/start.99629b4a.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/scheduler.182ea377.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/singletons.fade7992.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.1f6d62f6.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/paths.108a236d.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/app.2b3eaeb0.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.abf12888.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/0.3862a335.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/129.a265ff22.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/CodeBlock.57fe6e13.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Heading.16916d63.js">
  prefs: []
  type: TYPE_NORMAL
- en: '[Token merging](https://huggingface.co/papers/2303.17604) (ToMe) merges redundant
    tokens/patches progressively in the forward pass of a Transformer-based network
    which can speed-up the inference latency of [StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install ToMe from `pip`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You can use ToMe from the [`tomesd`](https://github.com/dbolya/tomesd) library
    with the [`apply_patch`](https://github.com/dbolya/tomesd?tab=readme-ov-file#usage)
    function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `apply_patch` function exposes a number of [arguments](https://github.com/dbolya/tomesd#usage)
    to help strike a balance between pipeline inference speed and the quality of the
    generated tokens. The most important argument is `ratio` which controls the number
    of tokens that are merged during the forward pass.
  prefs: []
  type: TYPE_NORMAL
- en: As reported in the [paper](https://huggingface.co/papers/2303.17604), ToMe can
    greatly preserve the quality of the generated images while boosting inference
    speed. By increasing the `ratio`, you can speed-up inference even further, but
    at the cost of some degraded image quality.
  prefs: []
  type: TYPE_NORMAL
- en: 'To test the quality of the generated images, we sampled a few prompts from
    [Parti Prompts](https://parti.research.google/) and performed inference with the
    [StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline)
    with the following settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5751d285c18e53824ccfcaac8aef2dec.png)'
  prefs: []
  type: TYPE_IMG
- en: We didn’t notice any significant decrease in the quality of the generated samples,
    and you can check out the generated samples in this [WandB report](https://wandb.ai/sayakpaul/tomesd-results/runs/23j4bj3i?workspace=).
    If you’re interested in reproducing this experiment, use this [script](https://gist.github.com/sayakpaul/8cac98d7f22399085a060992f411ecbd).
  prefs: []
  type: TYPE_NORMAL
- en: Benchmarks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We also benchmarked the impact of `tomesd` on the [StableDiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/text2img#diffusers.StableDiffusionPipeline)
    with [xFormers](https://huggingface.co/docs/diffusers/optimization/xformers) enabled
    across several image resolutions. The results are obtained from A100 and V100
    GPUs in the following development environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: To reproduce this benchmark, feel free to use this [script](https://gist.github.com/sayakpaul/27aec6bca7eb7b0e0aa4112205850335).
    The results are reported in seconds, and where applicable we report the speed-up
    percentage over the vanilla pipeline when using ToMe and ToMe + xFormers.
  prefs: []
  type: TYPE_NORMAL
- en: '| **GPU** | **Resolution** | **Batch size** | **Vanilla** | **ToMe** | **ToMe
    + xFormers** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **A100** | 512 | 10 | 6.88 | 5.26 (+23.55%) | 4.69 (+31.83%) |'
  prefs: []
  type: TYPE_TB
- en: '|  | 768 | 10 | OOM | 14.71 | 11 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 8 | OOM | 11.56 | 8.84 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 4 | OOM | 5.98 | 4.66 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 2 | 4.99 | 3.24 (+35.07%) | 2.1 (+37.88%) |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 1 | 3.29 | 2.24 (+31.91%) | 2.03 (+38.3%) |'
  prefs: []
  type: TYPE_TB
- en: '|  | 1024 | 10 | OOM | OOM | OOM |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 8 | OOM | OOM | OOM |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 4 | OOM | 12.51 | 9.09 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 2 | OOM | 6.52 | 4.96 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 1 | 6.4 | 3.61 (+43.59%) | 2.81 (+56.09%) |'
  prefs: []
  type: TYPE_TB
- en: '| **V100** | 512 | 10 | OOM | 10.03 | 9.29 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 8 | OOM | 8.05 | 7.47 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 4 | 5.7 | 4.3 (+24.56%) | 3.98 (+30.18%) |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 2 | 3.14 | 2.43 (+22.61%) | 2.27 (+27.71%) |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 1 | 1.88 | 1.57 (+16.49%) | 1.57 (+16.49%) |'
  prefs: []
  type: TYPE_TB
- en: '|  | 768 | 10 | OOM | OOM | 23.67 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 8 | OOM | OOM | 18.81 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 4 | OOM | 11.81 | 9.7 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 2 | OOM | 6.27 | 5.2 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 1 | 5.43 | 3.38 (+37.75%) | 2.82 (+48.07%) |'
  prefs: []
  type: TYPE_TB
- en: '|  | 1024 | 10 | OOM | OOM | OOM |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 8 | OOM | OOM | OOM |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 4 | OOM | OOM | 19.35 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 2 | OOM | 13 | 10.78 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 1 | OOM | 6.66 | 5.54 |'
  prefs: []
  type: TYPE_TB
- en: As seen in the tables above, the speed-up from `tomesd` becomes more pronounced
    for larger image resolutions. It is also interesting to note that with `tomesd`,
    it is possible to run the pipeline on a higher resolution like 1024x1024\. You
    may be able to speed-up inference even more with [`torch.compile`](torch2.0).
  prefs: []
  type: TYPE_NORMAL
