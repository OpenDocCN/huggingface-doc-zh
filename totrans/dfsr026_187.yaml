- en: DDIMInverseScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DDIMInverseScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/ddim_inverse](https://huggingface.co/docs/diffusers/api/schedulers/ddim_inverse)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/ddim_inverse](https://huggingface.co/docs/diffusers/api/schedulers/ddim_inverse)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '`DDIMInverseScheduler` is the inverted scheduler from [Denoising Diffusion
    Implicit Models](https://huggingface.co/papers/2010.02502) (DDIM) by Jiaming Song,
    Chenlin Meng and Stefano Ermon. The implementation is mostly based on the DDIM
    inversion definition from [Null-text Inversion for Editing Real Images using Guided
    Diffusion Models](https://huggingface.co/papers/2211.09794).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`DDIMInverseScheduler`是由Jiaming Song、Chenlin Meng和Stefano Ermon提出的[Denoising
    Diffusion Implicit Models](https://huggingface.co/papers/2010.02502)（DDIM）的反转调度器。该实现主要基于来自[Null-text
    Inversion for Editing Real Images using Guided Diffusion Models](https://huggingface.co/papers/2211.09794)的DDIM反转定义。'
- en: DDIMInverseScheduler
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DDIMInverseScheduler
- en: '### `class diffusers.DDIMInverseScheduler`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.DDIMInverseScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L130)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L130)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_train_timesteps` (`int`, 默认为1000) — 训练模型的扩散步数。'
- en: '`beta_start` (`float`, defaults to 0.0001) — The starting `beta` value of inference.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_start` (`float`, 默认为0.0001) — 推断的起始`beta`值。'
- en: '`beta_end` (`float`, defaults to 0.02) — The final `beta` value.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_end` (`float`, 默认为0.02) — 最终的`beta`值。'
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`,
    `scaled_linear`, or `squaredcos_cap_v2`.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_schedule` (`str`, 默认为`"linear"`) — beta调度，从beta范围映射到用于模型步进的一系列beta。可选择`linear`、`scaled_linear`或`squaredcos_cap_v2`。'
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trained_betas` (`np.ndarray`, *可选*) — 直接传递一个beta数组给构造函数，以绕过`beta_start`和`beta_end`。'
- en: '`clip_sample` (`bool`, defaults to `True`) — Clip the predicted sample for
    numerical stability.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clip_sample` (`bool`, 默认为`True`) — 为了数值稳定性而裁剪预测样本。'
- en: '`clip_sample_range` (`float`, defaults to 1.0) — The maximum magnitude for
    sample clipping. Valid only when `clip_sample=True`.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clip_sample_range` (`float`, 默认为1.0) — 样本裁剪的最大幅度。仅在`clip_sample=True`时有效。'
- en: '`set_alpha_to_one` (`bool`, defaults to `True`) — Each diffusion step uses
    the alphas product value at that step and at the previous one. For the final step
    there is no previous alpha. When this option is `True` the previous alpha product
    is fixed to 0, otherwise it uses the alpha value at step `num_train_timesteps
    - 1`.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`set_alpha_to_one` (`bool`, 默认为`True`) — 每个扩散步骤使用该步骤和前一个步骤的alpha乘积值。对于最后一步，没有前一个alpha。当此选项为`True`时，前一个alpha乘积固定为0，否则使用步骤`num_train_timesteps
    - 1`处的alpha值。'
- en: '`steps_offset` (`int`, defaults to 0) — An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use `num_train_timesteps - 1` for the previous alpha product.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`steps_offset` (`int`, 默认为0) — 添加到推断步骤的偏移量。您可以使用`offset=1`和`set_alpha_to_one=False`的组合，使最后一步使用`num_train_timesteps
    - 1`作为前一个alpha乘积。'
- en: '`prediction_type` (`str`, defaults to `epsilon`, *optional*) — Prediction type
    of the scheduler function; can be `epsilon` (predicts the noise of the diffusion
    process), `sample` (directly predicts the noisy sample`) or` v_prediction` (see
    section 2.4 of [Imagen Video](https://imagen.research.google/video/paper.pdf)
    paper).'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prediction_type` (`str`, 默认为`epsilon`, *可选*) — 调度函数的预测类型；可以是`epsilon`（预测扩散过程的噪声）、`sample`（直接预测有噪声的样本）或`v_prediction`（参见[Imagen
    Video](https://imagen.research.google/video/paper.pdf)论文的第2.4节）。'
- en: '`timestep_spacing` (`str`, defaults to `"leading"`) — The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep_spacing` (`str`, 默认为`"leading"`) — 时间步长应该如何缩放。更多信息请参考[Common Diffusion
    Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)的表2。'
- en: '`rescale_betas_zero_snr` (`bool`, defaults to `False`) — Whether to rescale
    the betas to have zero terminal SNR. This enables the model to generate very bright
    and dark samples instead of limiting it to samples with medium brightness. Loosely
    related to [`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506).'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rescale_betas_zero_snr` (`bool`, 默认为`False`) — 是否将beta重新缩放为零终端信噪比。这使模型能够生成非常明亮和非常暗的样本，而不是限制在中等亮度的样本。与[`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506)
    loosely相关。'
- en: '`DDIMInverseScheduler` is the reverse scheduler of [DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`DDIMInverseScheduler`是[DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler)的反向调度器。'
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型继承自[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)和[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。查看超类文档以了解库为所有调度器实现的通用方法，如加载和保存。
- en: '#### `scale_model_input`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L236)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L236)'
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 输入样本。'
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`, *可选*) — 扩散链中的当前时间步。'
- en: Returns
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经过缩放的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长调整去噪模型输入的调度器可互换。
- en: '#### `set_timesteps`'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L253)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L253)'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_inference_steps` (`int`) — 使用预训练模型生成样本时使用的扩散步骤数。'
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于扩散链的离散时间步长（在推理之前运行）。
- en: '#### `step`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L291)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L291)'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出。'
- en: '`timestep` (`float`) — The current discrete timestep in the diffusion chain.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`float`) — 扩散链中的当前离散时间步长。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 由扩散过程创建的当前样本实例。'
- en: '`eta` (`float`) — The weight of noise for added noise in diffusion step.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eta` (`float`) — 添加噪声在扩散步骤中的噪声权重。'
- en: '`use_clipped_model_output` (`bool`, defaults to `False`) — If `True`, computes
    “corrected” `model_output` from the clipped predicted original sample. Necessary
    because predicted original sample is clipped to [-1, 1] when `self.config.clip_sample`
    is `True`. If no clipping has happened, “corrected” `model_output` would coincide
    with the one provided as input and `use_clipped_model_output` has no effect.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_clipped_model_output` (`bool`，默认为`False`) — 如果为`True`，则从剪切预测的原始样本计算“校正的”`model_output`。当`self.config.clip_sample`为`True`时，必要，因为预测的原始样本被剪切为[-1,
    1]。如果没有发生剪切，“校正的”`model_output`将与提供的输入一致，`use_clipped_model_output`不起作用。'
- en: '`variance_noise` (`torch.FloatTensor`) — Alternative to generating noise with
    `generator` by directly providing the noise for the variance itself. Useful for
    methods such as `CycleDiffusion`.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variance_noise` (`torch.FloatTensor`) — 通过直接提供方差本身的噪声，替代使用`generator`生成噪声。对于`CycleDiffusion`等方法非常有用。'
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a `~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput` or `tuple`.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`，*可选*，默认为`True`) — 是否返回`~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput`或`tuple`。'
- en: Returns
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput` or `tuple`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput`或`tuple`'
- en: If return_dict is `True`, `~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput`
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`return_dict`为`True`，则返回`~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput`，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE从上一个时间步预测样本。此函数从学习模型输出（通常是预测的噪声）传播扩散过程。
