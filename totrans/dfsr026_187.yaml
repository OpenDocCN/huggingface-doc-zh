- en: DDIMInverseScheduler
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/ddim_inverse](https://huggingface.co/docs/diffusers/api/schedulers/ddim_inverse)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: '`DDIMInverseScheduler` is the inverted scheduler from [Denoising Diffusion
    Implicit Models](https://huggingface.co/papers/2010.02502) (DDIM) by Jiaming Song,
    Chenlin Meng and Stefano Ermon. The implementation is mostly based on the DDIM
    inversion definition from [Null-text Inversion for Editing Real Images using Guided
    Diffusion Models](https://huggingface.co/papers/2211.09794).'
  prefs: []
  type: TYPE_NORMAL
- en: DDIMInverseScheduler
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.DDIMInverseScheduler`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L130)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_start` (`float`, defaults to 0.0001) — The starting `beta` value of inference.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_end` (`float`, defaults to 0.02) — The final `beta` value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`,
    `scaled_linear`, or `squaredcos_cap_v2`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`clip_sample` (`bool`, defaults to `True`) — Clip the predicted sample for
    numerical stability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`clip_sample_range` (`float`, defaults to 1.0) — The maximum magnitude for
    sample clipping. Valid only when `clip_sample=True`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`set_alpha_to_one` (`bool`, defaults to `True`) — Each diffusion step uses
    the alphas product value at that step and at the previous one. For the final step
    there is no previous alpha. When this option is `True` the previous alpha product
    is fixed to 0, otherwise it uses the alpha value at step `num_train_timesteps
    - 1`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`steps_offset` (`int`, defaults to 0) — An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use `num_train_timesteps - 1` for the previous alpha product.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`prediction_type` (`str`, defaults to `epsilon`, *optional*) — Prediction type
    of the scheduler function; can be `epsilon` (predicts the noise of the diffusion
    process), `sample` (directly predicts the noisy sample`) or` v_prediction` (see
    section 2.4 of [Imagen Video](https://imagen.research.google/video/paper.pdf)
    paper).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestep_spacing` (`str`, defaults to `"leading"`) — The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rescale_betas_zero_snr` (`bool`, defaults to `False`) — Whether to rescale
    the betas to have zero terminal SNR. This enables the model to generate very bright
    and dark samples instead of limiting it to samples with medium brightness. Loosely
    related to [`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DDIMInverseScheduler` is the reverse scheduler of [DDIMScheduler](/docs/diffusers/v0.26.3/en/api/schedulers/ddim#diffusers.DDIMScheduler).'
  prefs: []
  type: TYPE_NORMAL
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `scale_model_input`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L236)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`torch.FloatTensor`'
  prefs: []
  type: TYPE_NORMAL
- en: A scaled input sample.
  prefs: []
  type: TYPE_NORMAL
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `set_timesteps`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L253)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  prefs: []
  type: TYPE_NORMAL
- en: '#### `step`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddim_inverse.py#L291)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestep` (`float`) — The current discrete timestep in the diffusion chain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`eta` (`float`) — The weight of noise for added noise in diffusion step.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use_clipped_model_output` (`bool`, defaults to `False`) — If `True`, computes
    “corrected” `model_output` from the clipped predicted original sample. Necessary
    because predicted original sample is clipped to [-1, 1] when `self.config.clip_sample`
    is `True`. If no clipping has happened, “corrected” `model_output` would coincide
    with the one provided as input and `use_clipped_model_output` has no effect.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`variance_noise` (`torch.FloatTensor`) — Alternative to generating noise with
    `generator` by directly providing the noise for the variance itself. Useful for
    methods such as `CycleDiffusion`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) — Whether or not to
    return a `~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput` or `tuple`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput` or `tuple`'
  prefs: []
  type: TYPE_NORMAL
- en: If return_dict is `True`, `~schedulers.scheduling_ddim_inverse.DDIMInverseSchedulerOutput`
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  prefs: []
  type: TYPE_NORMAL
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  prefs: []
  type: TYPE_NORMAL
