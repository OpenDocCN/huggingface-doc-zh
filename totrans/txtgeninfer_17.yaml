- en: Tensor Parallelism
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://huggingface.co/docs/text-generation-inference/conceptual/tensor_parallelism](https://huggingface.co/docs/text-generation-inference/conceptual/tensor_parallelism)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/text-generation-inference/main/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/entry/start.96d64f85.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/scheduler.9680c161.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/singletons.5632daf5.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/index.9d57cde4.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/paths.5eca520f.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/entry/app.48a2a24c.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/index.38d74ee1.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/nodes/0.c01ff294.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/nodes/13.597d5b19.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/Tip.9bb23095.js">
    <link rel="modulepreload" href="/docs/text-generation-inference/main/en/_app/immutable/chunks/Heading.74c51a96.js">
  prefs: []
  type: TYPE_NORMAL
- en: Tensor parallelism is a technique used to fit a large model in multiple GPUs.
    For example, when multiplying the input tensors with the first weight tensor,
    the matrix multiplication is equivalent to splitting the weight tensor column-wise,
    multiplying each column with the input separately, and then concatenating the
    separate outputs. These outputs are then transferred from the GPUs and concatenated
    together to get the final result, like below ðŸ‘‡
  prefs: []
  type: TYPE_NORMAL
- en: '![Image courtesy of Anton Lozkhov](../Images/2434150b9bb14baed7418fdaf716c588.png)'
  prefs: []
  type: TYPE_IMG
- en: Tensor Parallelism only works for [models officially supported](../supported_models),
    it will not work when falling back to `transformers`. You can get more information
    about unsupported models [here](../basic_tutorials/non_core_models).
  prefs: []
  type: TYPE_NORMAL
- en: You can learn a lot more details about tensor-parallelism from [the `transformers`
    docs](https://huggingface.co/docs/transformers/main/en/perf_train_gpu_many#tensor-parallelism).
  prefs: []
  type: TYPE_NORMAL
