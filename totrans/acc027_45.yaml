- en: Logging with Accelerate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/accelerate/package_reference/logging](https://huggingface.co/docs/accelerate/package_reference/logging)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: Refer to the [Troubleshooting guide](../usage_guides/troubleshooting#logging)
    or to the example below to learn how to use ðŸ¤— Accelerateâ€™s logger.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `accelerate.logging.get_logger`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/logging.py#L83)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`) â€” The name for the logger, such as `__file__`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`log_level` (`str`, *optional*) â€” The log level to use. If not passed, will
    default to the `LOG_LEVEL` environment variable, or `INFO` if not'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns a `logging.Logger` for `name` that can handle multiprocessing.
  prefs: []
  type: TYPE_NORMAL
- en: If a log should be called on all processes, pass `main_process_only=False` If
    a log should be called on all processes and in order, also pass `in_order=True`
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
