["```py\n( **kwargs )\n```", "```py\n( pretrained_model_name_or_path: Union cache_dir: Union = None force_download: bool = False local_files_only: bool = False token: Union = None revision: str = 'main' **kwargs )\n```", "```py\n# We can't instantiate directly the base class *FeatureExtractionMixin* nor *SequenceFeatureExtractor* so let's show the examples on a\n# derived class: *Wav2Vec2FeatureExtractor*\nfeature_extractor = Wav2Vec2FeatureExtractor.from_pretrained(\n    \"facebook/wav2vec2-base-960h\"\n)  # Download feature_extraction_config from huggingface.co and cache.\nfeature_extractor = Wav2Vec2FeatureExtractor.from_pretrained(\n    \"./test/saved_model/\"\n)  # E.g. feature_extractor (or model) was saved using *save_pretrained('./test/saved_model/')*\nfeature_extractor = Wav2Vec2FeatureExtractor.from_pretrained(\"./test/saved_model/preprocessor_config.json\")\nfeature_extractor = Wav2Vec2FeatureExtractor.from_pretrained(\n    \"facebook/wav2vec2-base-960h\", return_attention_mask=False, foo=False\n)\nassert feature_extractor.return_attention_mask is False\nfeature_extractor, unused_kwargs = Wav2Vec2FeatureExtractor.from_pretrained(\n    \"facebook/wav2vec2-base-960h\", return_attention_mask=False, foo=False, return_unused_kwargs=True\n)\nassert feature_extractor.return_attention_mask is False\nassert unused_kwargs == {\"foo\": False}\n```", "```py\n( save_directory: Union push_to_hub: bool = False **kwargs )\n```", "```py\n( feature_size: int sampling_rate: int padding_value: float **kwargs )\n```", "```py\n( processed_features: Union padding: Union = True max_length: Optional = None truncation: bool = False pad_to_multiple_of: Optional = None return_attention_mask: Optional = None return_tensors: Union = None )\n```", "```py\n( data: Optional = None tensor_type: Union = None )\n```", "```py\n( tensor_type: Union = None )\n```", "```py\n( *args **kwargs ) \u2192 export const metadata = 'undefined';BatchFeature\n```", "```py\n( )\n```", "```py\n( image size ) \u2192 export const metadata = 'undefined';new_image\n```", "```py\n( image )\n```", "```py\n( image )\n```", "```py\n( image )\n```", "```py\n( image mean std rescale = False )\n```", "```py\n( image: ndarray scale: Union )\n```", "```py\n( image size resample = None default_to_square = True max_size = None ) \u2192 export const metadata = 'undefined';image\n```", "```py\n( image angle resample = None expand = 0 center = None translate = None fillcolor = None ) \u2192 export const metadata = 'undefined';image\n```", "```py\n( image rescale = None channel_first = True )\n```", "```py\n( image rescale = None )\n```"]