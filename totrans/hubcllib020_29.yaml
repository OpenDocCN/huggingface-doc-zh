- en: HfApi Client
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HfApi客户端
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/package_reference/hf_api](https://huggingface.co/docs/huggingface_hub/package_reference/hf_api)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/huggingface_hub/package_reference/hf_api](https://huggingface.co/docs/huggingface_hub/package_reference/hf_api)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Below is the documentation for the `HfApi` class, which serves as a Python wrapper
    for the Hugging Face Hub’s API.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是`HfApi`类的文档，它作为Hugging Face Hub的API的Python包装器。
- en: All methods from the `HfApi` are also accessible from the package’s root directly.
    Both approaches are detailed below.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`HfApi`中的所有方法也可以直接从包的根目录访问。下面详细介绍了这两种方法。'
- en: Using the root method is more straightforward but the [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    class gives you more flexibility. In particular, you can pass a token that will
    be reused in all HTTP calls. This is different than `huggingface-cli login` or
    [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)
    as the token is not persisted on the machine. It is also possible to provide a
    different endpoint or configure a custom user-agent.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用根方法更为直接，但[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)类提供更多灵活性。特别是，您可以传递一个将在所有HTTP调用中重复使用的令牌。这与`huggingface-cli
    login`或[login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)不同，因为令牌不会持久保存在计算机上。还可以提供不同的端点或配置自定义用户代理。
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: HfApi
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HfApi
- en: '### `class huggingface_hub.HfApi`'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class huggingface_hub.HfApi`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1214)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1214)'
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '#### `accept_access_request`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `accept_access_request`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L8025)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L8025)'
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The id of the repo to accept access request for.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要接受访问请求的存储库的ID。'
- en: '`user` (`str`) — The username of the user which access request should be accepted.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user` (`str`) — 应接受访问请求的用户的用户名。'
- en: '`repo_type` (`str`, *optional*) — The type of the repo to accept access request
    for. Must be one of `model`, `dataset` or `space`. Defaults to `model`.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 要接受访问请求的存储库类型。必须是`model`、`dataset`或`space`之一。默认为`model`。'
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 有效的身份验证令牌（参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。'
- en: Raises
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`HTTPError`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`HTTPError`'
- en: '`HTTPError` — HTTP 400 if the repo is not gated.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果存储库未受限，则为HTTP 400。'
- en: '`HTTPError` — HTTP 403 if you only have read-only access to the repo. This
    can be the case if you don’t have `write` or `admin` role in the organization
    the repo belongs to or if you passed a `read` token.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果您只有对存储库的只读访问权限，则为HTTP 403。如果您在存储库所属组织中没有`write`或`admin`角色，或者如果您传递了一个`read`令牌，这可能是情况。'
- en: '`HTTPError` — HTTP 404 if the user does not exist on the Hub.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果用户在Hub上不存在，则为HTTP 404。'
- en: '`HTTPError` — HTTP 404 if the user access request cannot be found.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果找不到用户访问请求，则为HTTP 404。'
- en: '`HTTPError` — HTTP 404 if the user access request is already in the accepted
    list.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果用户访问请求已经在接受列表中，则为HTTP 404。'
- en: Accept an access request from a user for a given gated repo.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接受来自用户的对给定受限存储库的访问请求。
- en: Once the request is accepted, the user will be able to download any file of
    the repo and access the community tab. If the approval mode is automatic, you
    don’t have to accept requests manually. An accepted request can be cancelled or
    rejected at any time using [cancel_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.cancel_access_request)
    and [reject_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.reject_access_request).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦请求被接受，用户将能够下载存储库的任何文件并访问社区选项卡。如果批准模式是自动的，您不必手动接受请求。接受的请求可以随时使用[cancel_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.cancel_access_request)和[reject_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.reject_access_request)进行取消或拒绝。
- en: For more info about gated repos, see [https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有关受限存储库的更多信息，请参阅[https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated)。
- en: '#### `add_collection_item`'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_collection_item`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7607)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7607)'
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`collection_slug` (`str`) — Slug of the collection to update. Example: `"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collection_slug` (`str`) — 要更新的集合的Slug。示例：`"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`。'
- en: '`item_id` (`str`) — ID of the item to add to the collection. It can be the
    ID of a repo on the Hub (e.g. `"facebook/bart-large-mnli"`) or a paper id (e.g.
    `"2307.09288"`).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`item_id` (`str`) — 要添加到集合中的项目的ID。它可以是Hub上存储库的ID（例如`"facebook/bart-large-mnli"`）或论文ID（例如`"2307.09288"`）。'
- en: '`item_type` (`str`) — Type of the item to add. Can be one of `"model"`, `"dataset"`,
    `"space"` or `"paper"`.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`item_type` (`str`) — 要添加的项目类型。可以是`"model"`、`"dataset"`、`"space"`或`"paper"`之一。'
- en: '`note` (`str`, *optional*) — A note to attach to the item in the collection.
    The maximum size for a note is 500 characters.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`note` (`str`, *可选*) — 要附加到集合中项目的注释。注释的最大长度为500个字符。'
- en: '`exists_ok` (`bool`, *optional*) — If `True`, do not raise an error if item
    already exists.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exists_ok` (`bool`, *可选*) — 如果为`True`，则如果项目已经存在，则不会引发错误。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — Hugging Face令牌。如果未提供，将默认使用本地保存的令牌。'
- en: Add an item to a collection on the Hub.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 将项目添加到Hub上的集合中。
- en: 'Returns: [Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：[Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)
- en: 'Example:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '#### `add_space_secret`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_space_secret`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6367)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6367)'
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — ID of the repo to update. Example: `"bigcode/in-the-stack"`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要更新的仓库的ID。示例："bigcode/in-the-stack"。'
- en: '`key` (`str`) — Secret key. Example: `"GITHUB_API_KEY"`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`key` (`str`) — 秘密键。示例："GITHUB_API_KEY"'
- en: '`value` (`str`) — Secret value. Example: `"your_github_api_key"`.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value` (`str`) — 秘密值。示例："your_github_api_key"。'
- en: '`description` (`str`, *optional*) — Secret description. Example: `"Github API
    key to access the Github API"`.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` (`str`, *可选*) — 秘密描述。示例："用于访问Github API的Github API密钥"。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — Hugging Face令牌。如果未提供，将默认使用本地保存的令牌。'
- en: Adds or updates a secret in a Space.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在空间中添加或更新一个秘密。
- en: Secrets allow to set secret keys or tokens to a Space without hardcoding them.
    For more details, see [https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 秘密允许在空间中设置秘密键或令牌，而无需将它们硬编码。有关更多详细信息，请参见[https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets)。
- en: '#### `add_space_variable`'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_space_variable`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6440)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6440)'
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — ID of the repo to update. Example: `"bigcode/in-the-stack"`.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要更新的仓库的ID。示例："bigcode/in-the-stack"。'
- en: '`key` (`str`) — Variable key. Example: `"MODEL_REPO_ID"`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`key` (`str`) — 变量键。示例："MODEL_REPO_ID"'
- en: '`value` (`str`) — Variable value. Example: `"the_model_repo_id"`.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value` (`str`) — 变量值。示例："the_model_repo_id"。'
- en: '`description` (`str`) — Description of the variable. Example: `"Model Repo
    ID of the implemented model"`.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` (`str`) — 变量描述。示例："实现模型的模型仓库ID"。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — Hugging Face令牌。如果未提供，将默认使用本地保存的令牌。'
- en: Adds or updates a variable in a Space.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在空间中添加或更新一个变量。
- en: Variables allow to set environment variables to a Space without hardcoding them.
    For more details, see [https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 变量允许在空间中设置环境变量，而无需将它们硬编码。有关更多详细信息，请参见[https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables)
- en: '#### `cancel_access_request`'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `cancel_access_request`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7988)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7988)'
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The id of the repo to cancel access request for.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要取消访问请求的仓库的ID。'
- en: '`user` (`str`) — The username of the user which access request should be cancelled.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user` (`str`) — 应取消访问请求的用户的用户名。'
- en: '`repo_type` (`str`, *optional*) — The type of the repo to cancel access request
    for. Must be one of `model`, `dataset` or `space`. Defaults to `model`.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 要取消访问请求的仓库类型。必须是`model`、`dataset`或`space`之一。默认为`model`。'
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 有效的身份验证令牌（请参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。'
- en: Raises
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`HTTPError`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`HTTPError`'
- en: '`HTTPError` — HTTP 400 if the repo is not gated.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果仓库未受限，则返回HTTP 400。'
- en: '`HTTPError` — HTTP 403 if you only have read-only access to the repo. This
    can be the case if you don’t have `write` or `admin` role in the organization
    the repo belongs to or if you passed a `read` token.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果您只有对仓库的只读访问权限，则返回HTTP 403。如果您在仓库所属组织中没有`write`或`admin`角色，或者如果您传递了一个`read`令牌，则可能会出现这种情况。'
- en: '`HTTPError` — HTTP 404 if the user does not exist on the Hub.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果Hub上不存在用户，则返回HTTP 404。'
- en: '`HTTPError` — HTTP 404 if the user access request cannot be found.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果找不到用户访问请求，则返回HTTP 404。'
- en: '`HTTPError` — HTTP 404 if the user access request is already in the pending
    list.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTPError` — 如果用户访问请求已在待处理列表中，则返回HTTP 404。'
- en: Cancel an access request from a user for a given gated repo.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 取消用户对特定受限仓库的访问请求。
- en: A cancelled request will go back to the pending list and the user will lose
    access to the repo.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 取消的请求将返回到待处理列表，并且用户将失去对仓库的访问权限。
- en: For more info about gated repos, see [https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 有关受限仓库的更多信息，请参见[https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated)。
- en: '#### `change_discussion_status`'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `change_discussion_status`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6121)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6121)'
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由命名空间（用户或组织）和由斜杠分隔的仓库名称组成。'
- en: '`discussion_num` (`int`) — The number of the Discussion or Pull Request . Must
    be a strictly positive integer.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussion_num` (`int`) — 讨论或拉取请求的编号。必须是严格正整数。'
- en: '`new_status` (`str`) — The new status for the discussion, either `"open"` or
    `"closed"`.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`new_status` (`str`) — 讨论的新状态，可以是`"open"`或`"closed"`。'
- en: '`comment` (`str`, *optional*) — An optional comment to post with the status
    change.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`comment` (`str`, *可选*) — 与状态更改一起发布的可选评论。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 如果上传到数据集或空间，则设置为`"dataset"`或`"space"`，如果上传到模型，则为`None`或`"model"`。默认为`None`。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 身份验证令牌（请参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: Returns
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[DiscussionStatusChange](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionStatusChange)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[DiscussionStatusChange](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionStatusChange)'
- en: the status change event
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 状态更改事件
- en: Closes or re-opens a Discussion or Pull Request.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭或重新打开讨论或拉取请求。
- en: 'Examples:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Raises the following errors:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    - 如果HuggingFace API返回错误'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    - 如果某个参数值无效'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError] 如果无法找到要下载的存储库。这可能是因为它不存在，或者因为它被设置为“private”，而您没有访问权限。'
- en: '#### `comment_discussion`'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `comment_discussion`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5978)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5978)'
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Parameters
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id`（`str`） - 由“/”分隔的命名空间（用户或组织）和存储库名称。'
- en: '`discussion_num` (`int`) — The number of the Discussion or Pull Request . Must
    be a strictly positive integer.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussion_num`（`int`） - 讨论或拉取请求的编号。必须是严格的正整数。'
- en: '`comment` (`str`) — The content of the comment to create. Comments support
    markdown formatting.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`comment`（`str`） - 要创建的评论内容。评论支持Markdown格式。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type`（`str`，*可选*） - 如果上传到数据集或空间，则设置为“dataset”或“space”，如果上传到模型，则为`None`或“model”。默认为`None`。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token`（`str`，*可选*） - 身份验证令牌（请参阅[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: Returns
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[DiscussionComment](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionComment)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[DiscussionComment](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionComment)'
- en: the newly created comment
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 新创建的评论
- en: Creates a new comment on the given Discussion.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定讨论上创建新评论。
- en: 'Examples:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE11]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Raises the following errors:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    - 如果HuggingFace API返回错误'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    - 如果某个参数值无效'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError] 如果无法找到要下载的存储库。这可能是因为它不存在，或者因为它被设置为“private”，而您没有访问权限。'
- en: '#### `create_branch`'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_branch`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5354)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5354)'
- en: '[PRE12]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Parameters
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The repository in which the branch will be created. Example:
    `"user/my-cool-model"`.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id`（`str`） - 将创建分支的存储库。示例：“user/my-cool-model”。'
- en: '`branch` (`str`) — The name of the branch to create.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`branch`（`str`） - 要创建的分支的名称。'
- en: '`revision` (`str`, *optional*) — The git revision to create the branch from.
    It can be a branch name or the OID/SHA of a commit, as a hexadecimal string. Defaults
    to the head of the `"main"` branch.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision`（`str`，*可选*） - 创建分支的git修订版。可以是分支名称或提交的OID/SHA，以十六进制字符串表示。默认为“main”分支的头部。'
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token`（`str`，*可选*） - 身份验证令牌。将默认为存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if creating
    a branch on a dataset or space, `None` or `"model"` if tagging a model. Default
    is `None`.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type`（`str`，*可选*） - 如果在数据集或空间上创建分支，则设置为“dataset”或“space”，如果标记模型，则为`None`或“model”。默认为`None`。'
- en: '`exist_ok` (`bool`, *optional*, defaults to `False`) — If `True`, do not raise
    an error if branch already exists.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exist_ok`（`bool`，*可选*，默认为`False`） - 如果为`True`，则如果分支已经存在，则不会引发错误。'
- en: Raises
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)
    or [HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError] 或 [BadRequestError] 或 [HfHubHTTPError]'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError] - 如果找不到存储库（错误404）：错误的repo_id/repo_type，私有但未经身份验证或存储库不存在。'
- en: '[BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)
    — If invalid reference for a branch. Ex: `refs/pr/5` or ‘refs/foo/bar’.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[BadRequestError] - 如果分支的引用无效。例如：`refs/pr/5`或‘refs/foo/bar’。'
- en: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — If the branch already exists on the repo (error 409) and `exist_ok` is set to
    `False`.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — 如果仓库中已经存在该分支（错误409），并且`exist_ok`设置为`False`。'
- en: Create a new branch for a repo on the Hub, starting from the specified revision
    (defaults to `main`). To find a revision suiting your needs, you can use [list_repo_refs()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_refs)
    or [list_repo_commits()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_commits).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在Hub上为仓库创建一个新分支，从指定的修订版本开始（默认为`main`）。要找到适合您需求的修订版本，可以使用[list_repo_refs()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_refs)或[list_repo_commits()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_commits)。
- en: '#### `create_collection`'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_collection`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7439)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7439)'
- en: '[PRE13]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Parameters
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`title` (`str`) — Title of the collection to create. Example: `"Recent models"`.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title` (`str`) — 要创建的集合的标题。示例："Recent models"。'
- en: '`namespace` (`str`, *optional*) — Namespace of the collection to create (username
    or org). Will default to the owner name.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`namespace` (`str`, *optional*) — 要创建的集合的命名空间（用户名或组织）。将默认为所有者名称。'
- en: '`description` (`str`, *optional*) — Description of the collection to create.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` (`str`, *optional*) — 要创建的集合的描述。'
- en: '`private` (`bool`, *optional*) — Whether the collection should be private or
    not. Defaults to `False` (i.e. public collection).'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private` (`bool`, *optional*) — 集合是否应该是私有的。默认为`False`（即公共集合）。'
- en: '`exists_ok` (`bool`, *optional*) — If `True`, do not raise an error if collection
    already exists.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exists_ok` (`bool`, *optional*) — 如果为`True`，则如果集合已经存在，则不会引发错误。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — Hugging Face令牌。如果未提供，将默认为本地保存的令牌。'
- en: Create a new Collection on the Hub.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在Hub上创建一个新的集合。
- en: 'Returns: [Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：[Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)
- en: 'Example:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE14]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '#### `create_commit`'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_commit`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3403)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3403)'
- en: '[PRE15]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Parameters
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The repository in which the commit will be created, for
    example: `"username/custom_transformers"`'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 将创建提交的仓库，例如："username/custom_transformers"'
- en: '`operations` (`Iterable` of `CommitOperation()`) — An iterable of operations
    to include in the commit, either:'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`operations` (`Iterable` of `CommitOperation()`) — 要包含在提交中的操作的可迭代对象，可以是：'
- en: '[CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd)
    to upload a file'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd)
    用于上传文件'
- en: '[CommitOperationDelete](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationDelete)
    to delete a file'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CommitOperationDelete](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationDelete)
    用于删除文件'
- en: '[CommitOperationCopy](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationCopy)
    to copy a file'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CommitOperationCopy](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationCopy)
    用于复制文件'
- en: Operation objects will be mutated to include information relative to the upload.
    Do not reuse the same objects for multiple commits.
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 操作对象将被修改以包含与上传相关的信息。不要重复使用相同的对象进行多次提交。
- en: '`commit_message` (`str`) — The summary (first line) of the commit that will
    be created.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`) — 将创建的提交的摘要（第一行）。'
- en: '`commit_description` (`str`, *optional*) — The description of the commit that
    will be created'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_description` (`str`, *optional*) — 将创建的提交的描述'
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `HfApi.login`
    method. Will default to the stored token.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 认证令牌，使用`HfApi.login`方法获取。将默认为存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果上传到数据集或空间，则设置为`"dataset"`或`"space"`，如果上传到模型，则为`None`或`"model"`。默认为`None`。'
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *optional*) — 提交的git修订版本。默认为`"main"`分支的头部。'
- en: '`create_pr` (`boolean`, *optional*) — Whether or not to create a Pull Request
    with that commit. Defaults to `False`. If `revision` is not set, PR is opened
    against the `"main"` branch. If `revision` is set and is a branch, PR is opened
    against this branch. If `revision` is set and is not a branch name (example: a
    commit oid), an `RevisionNotFoundError` is returned by the server.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_pr` (`boolean`, *optional*) — 是否创建一个包含该提交的Pull Request。默认为`False`。如果未设置`revision`，则PR将针对`"main"`分支打开。如果设置了`revision`并且是一个分支，则PR将针对该分支打开。如果设置了`revision`并且不是分支名称（例如：一个提交oid），服务器将返回`RevisionNotFoundError`。'
- en: '`num_threads` (`int`, *optional*) — Number of concurrent threads for uploading
    files. Defaults to 5. Setting it to 2 means at most 2 files will be uploaded concurrently.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_threads` (`int`, *optional*) — 用于上传文件的并发线程数。默认为5。将其设置为2意味着最多同时上传2个文件。'
- en: '`parent_commit` (`str`, *optional*) — The OID / SHA of the parent commit, as
    a hexadecimal string. Shorthands (7 first characters) are also supported. If specified
    and `create_pr` is `False`, the commit will fail if `revision` does not point
    to `parent_commit`. If specified and `create_pr` is `True`, the pull request will
    be created from `parent_commit`. Specifying `parent_commit` ensures the repo has
    not changed before committing the changes, and can be especially useful if the
    repo is updated / committed to concurrently.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parent_commit` (`str`, *可选*) — 父提交的 OID / SHA，以十六进制字符串表示。也支持缩写（前 7 个字符）。如果指定且
    `create_pr` 为 `False`，则如果 `revision` 没有指向 `parent_commit`，提交将失败。如果指定且 `create_pr`
    为 `True`，将从 `parent_commit` 创建拉取请求。指定 `parent_commit` 确保在提交更改之前存储库未更改，并且如果存储库同时更新/提交，则尤其有用。'
- en: '`run_as_future` (`bool`, *optional*) — Whether or not to run this method in
    the background. Background jobs are run sequentially without blocking the main
    thread. Passing `run_as_future=True` will return a [Future](https://docs.python.org/3/library/concurrent.futures.html#future-objects)
    object. Defaults to `False`.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`run_as_future` (`bool`, *可选*) — 是否在后台运行此方法。后台作业按顺序运行，不会阻塞主线程。传递 `run_as_future=True`
    将返回一个 [Future](https://docs.python.org/3/library/concurrent.futures.html#future-objects)
    对象。默认为 `False`。'
- en: Returns
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    or `Future`'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    或 `Future`'
- en: Instance of [CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    containing information about the newly created commit (commit hash, commit url,
    pr url, commit message,…). If `run_as_future=True` is passed, returns a Future
    object which will contain the result when executed.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 包含有关新创建提交的信息的 [CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    实例（提交哈希、提交 URL、PR URL、提交消息等）。如果传递 `run_as_future=True`，则返回一个 Future 对象，该对象在执行时将包含结果。
- en: Raises
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`ValueError` or [RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`ValueError` 或 [RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If commit message is empty.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — 如果提交消息为空。'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If parent commit is not a valid commit OID.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — 如果父提交不是有效的提交 OID。'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If the Hub API returns an HTTP 400 error (bad request)'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — 如果 Hub API 返回 HTTP 400 错误（错误请求）'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If `create_pr` is `True` and revision is neither `None` nor `"main"`.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — 如果 `create_pr` 为 `True`，且修订版本既不是 `None` 也不是 `"main"`。'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — 如果找不到存储库（错误 404）：错误的 repo_id/repo_type，私有但未经身份验证，或存储库不存在。'
- en: Creates a commit in the given repo, deleting & uploading files as needed.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定存储库中创建提交，根据需要删除和上传文件。
- en: The input list of `CommitOperation` will be mutated during the commit process.
    Do not reuse the same objects for multiple commits.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在提交过程中，输入的 `CommitOperation` 列表将发生变化。不要重复使用相同的对象进行多次提交。
- en: '`create_commit` assumes that the repo already exists on the Hub. If you get
    a Client error 404, please make sure you are authenticated and that `repo_id`
    and `repo_type` are set correctly. If repo does not exist, create it first using
    [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo).'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_commit` 假定存储库已经存在于 Hub 上。如果收到客户端错误 404，请确保已经进行了身份验证，并且 `repo_id` 和
    `repo_type` 设置正确。如果存储库不存在，请先使用 [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    创建它。'
- en: '`create_commit` is limited to 25k LFS files and a 1GB payload for regular files.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_commit` 限制为 25k 个 LFS 文件和 1GB 的常规文件负载。'
- en: '#### `create_commits_on_pr`'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_commits_on_pr`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3625)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3625)'
- en: '[PRE16]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Parameters
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The repository in which the commits will be pushed. Example:
    `"username/my-cool-model"`.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 将提交推送到的存储库。示例："username/my-cool-model"。'
- en: '`addition_commits` (`List` of `List` of [CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd))
    — A list containing lists of [CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd).
    Each sublist will result in a commit on the PR.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addition_commits` (`List` of `List` of [CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd))
    — 包含 [CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd)
    列表的列表。每个子列表将导致一个提交到 PR。'
- en: deletion_commits — A list containing lists of [CommitOperationDelete](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationDelete).
    Each sublist will result in a commit on the PR. Deletion commits are pushed before
    addition commits.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: deletion_commits — 包含 [CommitOperationDelete](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationDelete)
    列表的列表。每个子列表将导致一个提交到 PR。删除提交在添加提交之前推送。
- en: '`commit_message` (`str`) — The summary (first line) of the commit that will
    be created. Will also be the title of the PR.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`) — 将要创建的提交的摘要（第一行）。也将是 PR 的标题。'
- en: '`commit_description` (`str`, *optional*) — The description of the commit that
    will be created. The description will be added to the PR.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_description` (`str`, *可选*) — 将要创建的提交的描述。描述将添加到 PR 中。'
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `HfApi.login`
    method. Will default to the stored token.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 认证令牌，使用 `HfApi.login` 方法获取。将默认使用存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果上传到数据集或空间，则设置为 `"dataset"` 或 `"space"`，如果上传到模型，则为
    `None` 或 `"model"`。默认为 `None`。'
- en: '`merge_pr` (`bool`) — If set to `True`, the Pull Request is merged at the end
    of the process. Defaults to `True`.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`merge_pr` (`bool`) — 如果设置为 `True`，则 Pull Request 将在流程结束时合并。默认为 `True`。'
- en: '`num_threads` (`int`, *optional*) — Number of concurrent threads for uploading
    files. Defaults to 5.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_threads` (`int`, *optional*) — 上传文件的并发线程数。默认为 5。'
- en: '`verbose` (`bool`) — If set to `True`, process will run on verbose mode i.e.
    print information about the ongoing tasks. Defaults to `False`.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`verbose` (`bool`) — 如果设置为 `True`，则流程将以详细模式运行，即打印有关正在进行的任务的信息。默认为 `False`。'
- en: Returns
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: URL to the created PR.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的 PR 的 URL。
- en: Raises
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '`MultiCommitException`'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiCommitException`'
- en: '`MultiCommitException` — If an unexpected issue occur in the process: empty
    commits, unexpected commits in a PR, unexpected PR description, etc.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiCommitException` — 如果在流程中发生意外问题：空提交，PR 中的意外提交，意外的 PR 描述等。'
- en: Push changes to the Hub in multiple commits.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 将更改推送到 Hub 中的多个提交。
- en: Commits are pushed to a draft PR branch. If the upload fails or gets interrupted,
    it can be resumed. Progress is tracked in the PR description. At the end of the
    process, the PR is set as open and the title is updated to match the initial commit
    message. If `merge_pr=True` is passed, the PR is merged automatically.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 提交将推送到草稿 PR 分支。如果上传失败或中断，可以恢复。进度将在 PR 描述中跟踪。在流程结束时，PR 被设置为打开，并且标题将更新以匹配初始提交消息。如果传递了
    `merge_pr=True`，则 PR 将自动合并。
- en: All deletion commits are pushed first, followed by the addition commits. The
    order of the commits is not guaranteed as we might implement parallel commits
    in the future. Be sure that your are not updating several times the same file.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 所有删除提交将首先推送，然后是添加提交。由于我们可能会在将来实现并行提交，因此提交的顺序不能保证。请确保您不会多次更新同一文件。
- en: '`create_commits_on_pr` is experimental. Its API and behavior is subject to
    change in the future without prior notice.'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_commits_on_pr` 是实验性的。其 API 和行为可能会在未来发生变化，恕不另行通知。'
- en: '`create_commits_on_pr` assumes that the repo already exists on the Hub. If
    you get a Client error 404, please make sure you are authenticated and that `repo_id`
    and `repo_type` are set correctly. If repo does not exist, create it first using
    [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo).'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_commits_on_pr` 假设仓库已经存在于 Hub 上。如果收到客户端错误 404，请确保已经进行了身份验证，并且 `repo_id`
    和 `repo_type` 设置正确。如果仓库不存在，请先使用 [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    创建它。'
- en: 'Example:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE17]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '#### `create_discussion`'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_discussion`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5805)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5805)'
- en: '[PRE18]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Parameters
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 一个由 `/` 分隔的命名空间（用户或组织）和仓库名称。'
- en: '`title` (`str`) — The title of the discussion. It can be up to 200 characters
    long, and must be at least 3 characters long. Leading and trailing whitespaces
    will be stripped.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title` (`str`) — 讨论的标题。最多可以有 200 个字符，并且必须至少有 3 个字符。前导和尾随空格将被删除。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 认证令牌（参见 [https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: '`description` (`str`, *optional*) — An optional description for the Pull Request.
    Defaults to `"Discussion opened with the huggingface_hub Python library"`'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` (`str`, *optional*) — 一个可选的描述，用于 Pull Request。默认为 `"Discussion
    opened with the huggingface_hub Python library"`'
- en: '`pull_request` (`bool`, *optional*) — Whether to create a Pull Request or discussion.
    If `True`, creates a Pull Request. If `False`, creates a discussion. Defaults
    to `False`.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pull_request` (`bool`, *optional*) — 是否创建 Pull Request 或讨论。如果为 `True`，则创建
    Pull Request。如果为 `False`，则创建讨论。默认为 `False`。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果上传到数据集或空间，则设置为 `"dataset"` 或 `"space"`，如果上传到模型，则为
    `None` 或 `"model"`。默认为 `None`。'
- en: Creates a Discussion or Pull Request.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个讨论或 Pull Request。
- en: Pull Requests created programmatically will be in `"draft"` status.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 通过编程方式创建的 Pull Request 将处于 `"draft"` 状态。
- en: Creating a Pull Request with changes can also be done at once with [HfApi.create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [HfApi.create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit)
    可以一次性创建带有更改的 Pull Request。
- en: 'Returns: [DiscussionWithDetails](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionWithDetails)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：[DiscussionWithDetails](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionWithDetails)
- en: 'Raises the following errors:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 HuggingFace API 返回错误，则为 [`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    如果某个参数值无效'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    如果要下载的仓库找不到。这可能是因为它不存在，或者因为它被设置为 `private`，而您没有访问权限。'
- en: '#### `create_inference_endpoint`'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_inference_endpoint`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6929)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6929)'
- en: '[PRE19]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Parameters
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`name` (`str`) — The unique name for the new Inference Endpoint.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` (`str`) — 新推理端点的唯一名称。'
- en: '`repository` (`str`) — The name of the model repository associated with the
    Inference Endpoint (e.g. `"gpt2"`).'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repository` (`str`) — 与推理端点关联的模型存储库的名称（例如 `"gpt2"`）。'
- en: '`framework` (`str`) — The machine learning framework used for the model (e.g.
    `"custom"`).'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`framework` (`str`) — 用于模型的机器学习框架（例如 `"custom"`）。'
- en: '`accelerator` (`str`) — The hardware accelerator to be used for inference (e.g.
    `"cpu"`).'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accelerator` (`str`) — 用于推理的硬件加速器（例如 `"cpu"`）。'
- en: '`instance_size` (`str`) — The size or type of the instance to be used for hosting
    the model (e.g. `"large"`).'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`instance_size` (`str`) — 用于托管模型的实例的大小或类型（例如 `"large"`）。'
- en: '`instance_type` (`str`) — The cloud instance type where the Inference Endpoint
    will be deployed (e.g. `"c6i"`).'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`instance_type` (`str`) — 将部署推理端点的云实例类型（例如 `"c6i"`）。'
- en: '`region` (`str`) — The cloud region in which the Inference Endpoint will be
    created (e.g. `"us-east-1"`).'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`region` (`str`) — 将创建推理端点的云区域（例如 `"us-east-1"`）。'
- en: '`vendor` (`str`) — The cloud provider or vendor where the Inference Endpoint
    will be hosted (e.g. `"aws"`).'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vendor` (`str`) — 将托管推理端点的云提供商或供应商（例如 `"aws"`）。'
- en: '`account_id` (`str`, *optional*) — The account ID used to link a VPC to a private
    Inference Endpoint (if applicable).'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`account_id` (`str`, *optional*) — 用于将VPC链接到私有推理端点的帐户ID（如果适用）。'
- en: '`min_replica` (`int`, *optional*) — The minimum number of replicas (instances)
    to keep running for the Inference Endpoint. Defaults to 0.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_replica` (`int`, *optional*) — 保持运行的最小副本（实例）数量。默认为0。'
- en: '`max_replica` (`int`, *optional*) — The maximum number of replicas (instances)
    to scale to for the Inference Endpoint. Defaults to 1.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_replica` (`int`, *optional*) — 要扩展到的最大副本（实例）数量。默认为1。'
- en: '`revision` (`str`, *optional*) — The specific model revision to deploy on the
    Inference Endpoint (e.g. `"6c0e6080953db56375760c0471a8c5f2929baf11"`).'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *optional*) — 部署在推理端点上的特定模型修订版（例如 `"6c0e6080953db56375760c0471a8c5f2929baf11"`）。'
- en: '`task` (`str`, *optional*) — The task on which to deploy the model (e.g. `"text-classification"`).'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`task` (`str`, *optional*) — 部署模型的任务（例如 `"text-classification"`）。'
- en: '`custom_image` (`Dict`, *optional*) — A custom Docker image to use for the
    Inference Endpoint. This is useful if you want to deploy an Inference Endpoint
    running on the `text-generation-inference` (TGI) framework (see examples).'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`custom_image` (`Dict`, *optional*) — 用于推理端点的自定义Docker镜像。如果要部署在`text-generation-inference`（TGI）框架上运行的推理端点，则这很有用（请参阅示例）。'
- en: '`type` ([`InferenceEndpointType]`, *optional*) -- The type of the Inference
    Endpoint, which can be` “protected”`(default),`“public”`or`“private”`.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type` ([`InferenceEndpointType]`, *optional*) -- 推理端点的类型，可以是`“protected”`（默认）、`“public”`或`“private”`。'
- en: '`namespace` (`str`, *optional*) — The namespace where the Inference Endpoint
    will be created. Defaults to the current user’s namespace.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`namespace` (`str`, *optional*) — 推理端点将被创建的命名空间。默认为当前用户的命名空间。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 认证令牌（请参阅[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。'
- en: Returns
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
- en: information about the updated Inference Endpoint.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更新的推理端点的信息。
- en: Create a new Inference Endpoint.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的推理端点。
- en: 'Example:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE20]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '#### `create_pull_request`'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_pull_request`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5894)'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5894)'
- en: '[PRE22]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Parameters
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由斜杠分隔的命名空间（用户或组织）和存储库名称。'
- en: '`title` (`str`) — The title of the discussion. It can be up to 200 characters
    long, and must be at least 3 characters long. Leading and trailing whitespaces
    will be stripped.'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title` (`str`) — 讨论的标题。最多可以有200个字符，并且必须至少有3个字符。前导和尾随空格将被剥离。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 认证令牌（请参阅[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: '`description` (`str`, *optional*) — An optional description for the Pull Request.
    Defaults to `"Discussion opened with the huggingface_hub Python library"`'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` (`str`, *optional*) — 拉取请求的可选描述。默认为 `"Discussion opened with
    the huggingface_hub Python library"`。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果上传到数据集或空间，则设置为`"dataset"`或`"space"`，如果上传到模型，则为`None`或`"model"`。默认为`None`。'
- en: Creates a Pull Request . Pull Requests created programmatically will be in `"draft"`
    status.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 创建拉取请求。以编程方式创建的拉取请求将处于`"draft"`状态。
- en: Creating a Pull Request with changes can also be done at once with [HfApi.create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit);
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用[HfApi.create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit)一次性创建带有更改的拉取请求；
- en: This is a wrapper around [HfApi.create_discussion()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion).
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[HfApi.create_discussion()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion)的包装器。
- en: 'Returns: [DiscussionWithDetails](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionWithDetails)'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：[DiscussionWithDetails](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionWithDetails)
- en: 'Raises the following errors:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果HuggingFace API返回错误，则引发[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果某个参数值无效，则引发[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    如果要下载的存储库找不到。这可能是因为它不存在，或者因为它被设置为`private`而您无法访问。'
- en: '#### `create_repo`'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_repo`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3063)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3063)'
- en: '[PRE23]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Parameters
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由斜杠分隔的命名空间（用户或组织）和存储库名称。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 身份验证令牌（请参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: '`private` (`bool`, *optional*, defaults to `False`) — Whether the model repo
    should be private.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private` (`bool`, *optional*, 默认为`False`) — 模型存储库是否应为私有。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果上传到数据集或空间，则设置为`"dataset"`或`"space"`，如果上传到模型，则为`None`或`"model"`。默认为`None`。'
- en: '`exist_ok` (`bool`, *optional*, defaults to `False`) — If `True`, do not raise
    an error if repo already exists.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exist_ok` (`bool`, *optional*, 默认为`False`) — 如果为`True`，则如果存储库已经存在，则不会引发错误。'
- en: '`space_sdk` (`str`, *optional*) — Choice of SDK to use if repo_type is “space”.
    Can be “streamlit”, “gradio”, “docker”, or “static”.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space_sdk` (`str`, *optional*) — 如果`repo_type`为“space”，则要使用的SDK选择。可以是“streamlit”、“gradio”、“docker”或“static”。'
- en: '`space_hardware` (`SpaceHardware` or `str`, *optional*) — Choice of Hardware
    if repo_type is “space”. See [SpaceHardware](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceHardware)
    for a complete list.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space_hardware` (`SpaceHardware`或`str`, *optional*) — 如果`repo_type`为“space”，则硬件选择。有关完整列表，请参见[SpaceHardware](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceHardware)。'
- en: '`space_storage` (`SpaceStorage` or `str`, *optional*) — Choice of persistent
    storage tier. Example: `"small"`. See [SpaceStorage](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceStorage)
    for a complete list.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space_storage` (`SpaceStorage`或`str`, *optional*) — 持久性存储层的选择。示例："small"。有关完整列表，请参见[SpaceStorage](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceStorage)。'
- en: '`space_sleep_time` (`int`, *optional*) — Number of seconds of inactivity to
    wait before a Space is put to sleep. Set to `-1` if you don’t want your Space
    to sleep (default behavior for upgraded hardware). For free hardware, you can’t
    configure the sleep time (value is fixed to 48 hours of inactivity). See [https://huggingface.co/docs/hub/spaces-gpus#sleep-time](https://huggingface.co/docs/hub/spaces-gpus#sleep-time)
    for more details.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space_sleep_time` (`int`, *optional`) — 在将Space置于休眠状态之前等待的不活动秒数。如果不希望Space休眠，则设置为`-1`（升级硬件的默认行为）。对于免费硬件，您无法配置休眠时间（值固定为48小时的不活动时间）。有关更多详细信息，请参见[https://huggingface.co/docs/hub/spaces-gpus#sleep-time](https://huggingface.co/docs/hub/spaces-gpus#sleep-time)。'
- en: '`space_secrets` (`List[Dict[str, str]]`, *optional*) — A list of secret keys
    to set in your Space. Each item is in the form `{"key": ..., "value": ..., "description":
    ...}` where description is optional. For more details, see [https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets).'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space_secrets` (`List[Dict[str, str]]`, *optional*) — 要在您的Space中设置的秘密密钥列表。每个项目的形式为`{"key":
    ..., "value": ..., "description": ...}`，其中描述是可选的。有关更多详细信息，请参见[https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets)。'
- en: '`space_variables` (`List[Dict[str, str]]`, *optional*) — A list of public environment
    variables to set in your Space. Each item is in the form `{"key": ..., "value":
    ..., "description": ...}` where description is optional. For more details, see
    [https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables).'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space_variables` (`List[Dict[str, str]]`, *optional*) — 要在您的Space中设置的公共环境变量列表。每个项目的形式为`{"key":
    ..., "value": ..., "description": ...}`，其中描述是可选的。有关更多详细信息，请参见[https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables)。'
- en: Returns
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[RepoUrl](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.RepoUrl)'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '[RepoUrl](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.RepoUrl)'
- en: URL to the newly created repo. Value is a subclass of `str` containing attributes
    like `endpoint`, `repo_type` and `repo_id`.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 新创建的存储库的URL。值是包含`endpoint`、`repo_type`和`repo_id`等属性的`str`子类。
- en: Create an empty repo on the HuggingFace Hub.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在HuggingFace Hub上创建一个空的存储库。
- en: '#### `create_tag`'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `create_tag`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5470)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5470)'
- en: '[PRE24]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Parameters
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The repository in which a commit will be tagged. Example:
    `"user/my-cool-model"`.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 将要标记的存储库。示例："user/my-cool-model"。'
- en: '`tag` (`str`) — The name of the tag to create.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tag` (`str`) — 要创建的标签名称。'
- en: '`tag_message` (`str`, *optional*) — The description of the tag to create.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tag_message` (`str`, *optional*) — 要创建的标签的描述。'
- en: '`revision` (`str`, *optional*) — The git revision to tag. It can be a branch
    name or the OID/SHA of a commit, as a hexadecimal string. Shorthands (7 first
    characters) are also supported. Defaults to the head of the `"main"` branch.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *optional*) — 要标记的git修订版。可以是分支名称或提交的OID/SHA，以十六进制字符串表示。也支持缩写（前7个字符）。默认为`"main"`分支的头部。'
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 认证令牌。将默认为存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if tagging
    a dataset or space, `None` or `"model"` if tagging a model. Default is `None`.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 如果在数据集或空间上打标签，则设置为`"dataset"`或`"space"`，如果在模型上打标签，则设置为`None`或`"model"`。默认为`None`。'
- en: '`exist_ok` (`bool`, *optional*, defaults to `False`) — If `True`, do not raise
    an error if tag already exists.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exist_ok` (`bool`, *可选*, 默认为`False`) — 如果为`True`，则如果标签已经存在，则不会引发错误。'
- en: Raises
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    or [HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    或 [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    或 [HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — 如果找不到存储库（错误404）：错误的repo_id/repo_type，私有但未经身份验证或存储库不存在。'
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — If revision is not found (error 404) on the repo.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — 如果在存储库中找不到修订版（错误404）。'
- en: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — If the branch already exists on the repo (error 409) and `exist_ok` is set to
    `False`.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — 如果存储库中已经存在该分支（错误409），并且`exist_ok`设置为`False`。'
- en: Tag a given commit of a repo on the Hub.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在Hub上标记存储库的给定提交。
- en: '#### `dataset_info`'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `dataset_info`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2089)'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2089)'
- en: '[PRE25]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Parameters
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由斜杠分隔的命名空间（用户或组织）和存储库名称。'
- en: '`revision` (`str`, *optional*) — The revision of the dataset repository from
    which to get the information.'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*) — 要获取信息的数据集存储库的修订版。'
- en: '`timeout` (`float`, *optional*) — Whether to set a timeout for the request
    to the Hub.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeout` (`float`, *可选*) — 是否为请求到Hub设置超时。'
- en: '`files_metadata` (`bool`, *optional*) — Whether or not to retrieve metadata
    for files in the repository (size, LFS metadata, etc). Defaults to `False`.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`files_metadata` (`bool`, *可选*) — 是否检索存储库中文件的元数据（大小、LFS元数据等）。默认为`False`。'
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`bool` 或 `str`, *可选*) — 有效的认证令牌（参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。如果为`None`或`True`且机器已登录（通过`huggingface-cli
    login`或[login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)），则令牌将从缓存中检索。如果为`False`，则不会在请求头中发送令牌。'
- en: Returns
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[hf_api.DatasetInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.DatasetInfo)'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[hf_api.DatasetInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.DatasetInfo)'
- en: The dataset repository information.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集存储库信息。
- en: Get info on one specific dataset on huggingface.co.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 获取huggingface.co上一个特定数据集的信息。
- en: Dataset can be private if you pass an acceptable token.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递一个可接受的令牌，数据集可以是私有的。
- en: 'Raises the following errors:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    如果无法找到要下载的存储库。这可能是因为它不存在，或者因为它设置为`private`而您没有访问权限。'
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    如果无法找到要下载的修订版。'
- en: '#### `delete_branch`'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_branch`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5421)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5421)'
- en: '[PRE26]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Parameters
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The repository in which a branch will be deleted. Example:
    `"user/my-cool-model"`.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 将删除分支的存储库。示例：`"user/my-cool-model"`。'
- en: '`branch` (`str`) — The name of the branch to delete.'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`branch` (`str`) — 要删除的分支的名称。'
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 认证令牌。将默认为存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if creating
    a branch on a dataset or space, `None` or `"model"` if tagging a model. Default
    is `None`.'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 如果在数据集或空间上创建分支，则设置为`"dataset"`或`"space"`，如果在模型上打标签，则设置为`None`或`"model"`。默认为`None`。'
- en: Raises
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    或 [HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — 如果找不到仓库（错误 404）：错误的 repo_id/repo_type，私有但未经身份验证或仓库不存在。'
- en: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — If trying to delete a protected branch. Ex: `main` cannot be deleted.'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — 尝试删除受保护的分支时。例如：`main` 无法删除。'
- en: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — If trying to delete a branch that does not exist.'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — 尝试删除不存在的分支时。'
- en: Delete a branch from a repo on the Hub.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Hub 上的仓库中删除一个分支。
- en: '#### `delete_collection`'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_collection`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7569)'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7569)'
- en: '[PRE27]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Parameters
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`collection_slug` (`str`) — Slug of the collection to delete. Example: `"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`.'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collection_slug` (`str`) — 要删除的集合的 slug。示例：`"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`。'
- en: '`missing_ok` (`bool`, *optional*) — If `True`, do not raise an error if collection
    doesn’t exists.'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`missing_ok` (`bool`, *optional*) — 如果为 `True`，则如果集合不存在则不会引发错误。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — Hugging Face 令牌。如果未提供，将默认为本地保存的令牌。'
- en: Delete a collection on the Hub.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Hub 上删除一个集合。
- en: 'Example:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE28]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This is a non-revertible action. A deleted collection cannot be restored.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个不可逆的操作。删除的集合无法恢复。
- en: '#### `delete_collection_item`'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_collection_item`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7727)'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7727)'
- en: '[PRE29]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Parameters
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`collection_slug` (`str`) — Slug of the collection to update. Example: `"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`.'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collection_slug` (`str`) — 要更新的集合的 slug。示例：`"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`。'
- en: '`item_object_id` (`str`) — ID of the item in the collection. This is not the
    id of the item on the Hub (repo_id or paper id). It must be retrieved from a [CollectionItem](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.CollectionItem)
    object. Example: `collection.items[0]._id`.'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`item_object_id` (`str`) — 集合中项目的 ID。这不是 Hub 上项目的 id（repo_id 或 paper id）。必须从
    [CollectionItem](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.CollectionItem)
    对象中检索。示例：`collection.items[0]._id`。'
- en: '`missing_ok` (`bool`, *optional*) — If `True`, do not raise an error if item
    doesn’t exists.'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`missing_ok` (`bool`, *optional*) — 如果为 `True`，则如果项目不存在则不会引发错误。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — Hugging Face 令牌。如果未提供，将默认为本地保存的令牌。'
- en: Delete an item from a collection.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 从集合中删除一个项目。
- en: 'Example:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE30]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '#### `delete_file`'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_file`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4628)'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4628)'
- en: '[PRE31]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Parameters
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`path_in_repo` (`str`) — Relative filepath in the repo, for example: `"checkpoints/1fec34a/weights.bin"`'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`path_in_repo` (`str`) — 仓库中的相对文件路径，例如：`"checkpoints/1fec34a/weights.bin"`'
- en: '`repo_id` (`str`) — The repository from which the file will be deleted, for
    example: `"username/custom_transformers"`'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 将删除文件的仓库，例如：`"username/custom_transformers"`'
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `HfApi.login`
    method. Will default to the stored token.'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 认证令牌，使用 `HfApi.login` 方法获取。将默认为存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if the file
    is in a dataset or space, `None` or `"model"` if in a model. Default is `None`.'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果文件在数据集或空间中，则设置为 `"dataset"` 或 `"space"`，如果在模型中，则为
    `None` 或 `"model"`。默认为 `None`。'
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *optional*) — 提交的 git 版本。默认为 `"main"` 分支的头部。'
- en: '`commit_message` (`str`, *optional*) — The summary / title / first line of
    the generated commit. Defaults to `f"Delete {path_in_repo} with huggingface_hub"`.'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`, *optional*) — 生成提交的摘要 / 标题 / 第一行。默认为 `f"Delete {path_in_repo}
    with huggingface_hub"`。'
- en: '`commit_description` (`str` *optional*) — The description of the generated
    commit'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_description` (`str` *optional*) — 生成提交的描述'
- en: '`create_pr` (`boolean`, *optional*) — Whether or not to create a Pull Request
    with that commit. Defaults to `False`. If `revision` is not set, PR is opened
    against the `"main"` branch. If `revision` is set and is a branch, PR is opened
    against this branch. If `revision` is set and is not a branch name (example: a
    commit oid), an `RevisionNotFoundError` is returned by the server.'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_pr` (`boolean`, *optional*) — 是否创建一个包含该提交的 Pull Request。默认为 `False`。如果未设置
    `revision`，PR 将针对 `"main"` 分支打开。如果设置了 `revision` 并且是一个分支，PR 将针对该分支打开。如果设置了 `revision`
    并且不是分支名称（例如：提交 oid），服务器将返回 `RevisionNotFoundError`。'
- en: '`parent_commit` (`str`, *optional*) — The OID / SHA of the parent commit, as
    a hexadecimal string. Shorthands (7 first characters) are also supported. If specified
    and `create_pr` is `False`, the commit will fail if `revision` does not point
    to `parent_commit`. If specified and `create_pr` is `True`, the pull request will
    be created from `parent_commit`. Specifying `parent_commit` ensures the repo has
    not changed before committing the changes, and can be especially useful if the
    repo is updated / committed to concurrently.'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parent_commit` (`str`, *可选*) — 父提交的OID / SHA，以十六进制字符串表示。也支持缩写（前7个字符）。如果指定并且`create_pr`为`False`，则如果`revision`不指向`parent_commit`，提交将失败。如果指定并且`create_pr`为`True`，将从`parent_commit`创建拉取请求。指定`parent_commit`可确保在提交更改之前存储库未更改，并且如果存储库同时更新/提交，则尤其有用。'
- en: Deletes a file in the given repo.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 删除给定存储库中的文件。
- en: 'Raises the following errors:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[HTTPError](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    如果HuggingFace API返回错误'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ValueError](https://docs.python.org/3/library/exceptions.html#ValueError)
    如果某个参数值无效'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError] 如果无法找到要下载的存储库。这可能是因为它不存在，或者因为它被设置为“private”，而您没有访问权限。'
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RevisionNotFoundError] 如果无法找到要下载的修订版本。'
- en: '[EntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError)
    If the file to download cannot be found.'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[EntryNotFoundError] 如果无法找到要下载的文件。'
- en: '#### `delete_folder`'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_folder`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4716)'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4716)'
- en: '[PRE32]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Parameters
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`path_in_repo` (`str`) — Relative folder path in the repo, for example: `"checkpoints/1fec34a"`.'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`path_in_repo` (`str`) — 存储库中的相对文件夹路径，例如：`"checkpoints/1fec34a"`。'
- en: '`repo_id` (`str`) — The repository from which the folder will be deleted, for
    example: `"username/custom_transformers"`'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 将删除文件夹的存储库，例如：`"username/custom_transformers"`'
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `HfApi.login`
    method. Will default to the stored token.'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 认证令牌，使用`HfApi.login`方法获取。将默认为存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if the folder
    is in a dataset or space, `None` or `"model"` if in a model. Default is `None`.'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 如果文件夹在数据集或空间中，则设置为`"dataset"`或`"space"`，如果在模型中则为`None`或`"model"`。默认为`None`。'
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*) — 要提交的git修订版本。默认为`"main"`分支的头部。'
- en: '`commit_message` (`str`, *optional*) — The summary / title / first line of
    the generated commit. Defaults to `f"Delete folder {path_in_repo} with huggingface_hub"`.'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`, *可选*) — 生成提交的摘要/标题/第一行。默认为`f"Delete folder {path_in_repo}
    with huggingface_hub"`。'
- en: '`commit_description` (`str` *optional*) — The description of the generated
    commit.'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_description` (`str` *可选*) — 生成提交的描述。'
- en: '`create_pr` (`boolean`, *optional*) — Whether or not to create a Pull Request
    with that commit. Defaults to `False`. If `revision` is not set, PR is opened
    against the `"main"` branch. If `revision` is set and is a branch, PR is opened
    against this branch. If `revision` is set and is not a branch name (example: a
    commit oid), an `RevisionNotFoundError` is returned by the server.'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_pr` (`boolean`, *可选*) — 是否创建具有该提交的拉取请求。默认为`False`。如果未设置`revision`，则PR将针对`"main"`分支打开。如果设置了`revision`并且是一个分支，则PR将针对此分支打开。如果设置了`revision`并且不是分支名称（例如：一个提交oid），服务器将返回`RevisionNotFoundError`。'
- en: '`parent_commit` (`str`, *optional*) — The OID / SHA of the parent commit, as
    a hexadecimal string. Shorthands (7 first characters) are also supported. If specified
    and `create_pr` is `False`, the commit will fail if `revision` does not point
    to `parent_commit`. If specified and `create_pr` is `True`, the pull request will
    be created from `parent_commit`. Specifying `parent_commit` ensures the repo has
    not changed before committing the changes, and can be especially useful if the
    repo is updated / committed to concurrently.'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parent_commit` (`str`, *可选*) — 父提交的OID / SHA，以十六进制字符串表示。也支持缩写（前7个字符）。如果指定并且`create_pr`为`False`，则如果`revision`不指向`parent_commit`，提交将失败。如果指定并且`create_pr`为`True`，将从`parent_commit`创建拉取请求。指定`parent_commit`可确保在提交更改之前存储库未更改，并且如果存储库同时更新/提交，则尤其有用。'
- en: Deletes a folder in the given repo.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 删除给定存储库中的文件夹。
- en: Simple wrapper around [create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit)
    method.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 对[create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit)方法的简单包装。
- en: '#### `delete_inference_endpoint`'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_inference_endpoint`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7216)'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7216)'
- en: '[PRE33]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Parameters
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`name` (`str`) — The name of the Inference Endpoint to delete.'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` (`str`) — 要删除的推断端点的名称。'
- en: '`namespace` (`str`, *optional*) — The namespace in which the Inference Endpoint
    is located. Defaults to the current user.'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`namespace` (`str`, *可选*) — 推断端点所在的命名空间。默认为当前用户。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 认证令牌（请参阅[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。'
- en: Delete an Inference Endpoint.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 删除一个推理端点。
- en: This operation is not reversible. If you don’t want to be charged for an Inference
    Endpoint, it is preferable to pause it with [pause_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.pause_inference_endpoint)
    or scale it to zero with [scale_to_zero_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.scale_to_zero_inference_endpoint).
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 此操作是不可逆的。如果您不想为推理端点付费，最好使用[pause_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.pause_inference_endpoint)暂停它或使用[scale_to_zero_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.scale_to_zero_inference_endpoint)将其缩减为零。
- en: For convenience, you can also delete an Inference Endpoint using [InferenceEndpoint.delete()](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint.delete).
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便起见，您也可以使用[InferenceEndpoint.delete()](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint.delete)删除推理端点。
- en: '#### `delete_repo`'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_repo`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3198)'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3198)'
- en: '[PRE34]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Parameters
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由命名空间（用户或组织）和由`/`分隔的repo名称。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 认证令牌（请参阅[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model.'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 如果上传到数据集或空间，则设置为`"dataset"`或`"space"`，如果上传到模型，则设置为`None`或`"model"`。'
- en: '`missing_ok` (`bool`, *optional*, defaults to `False`) — If `True`, do not
    raise an error if repo does not exist.'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`missing_ok` (`bool`, *可选*, 默认为`False`) — 如果为`True`，则如果repo不存在，则不会引发错误。'
- en: Raises
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: Raises
- en: — [RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to delete from cannot be found and `missing_ok` is set to False
    (default).
  id: totrans-418
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: — [RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    如果要删除的存储库找不到且`missing_ok`设置为False（默认）。
- en: 'Delete a repo from the HuggingFace Hub. CAUTION: this is irreversible.'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 从HuggingFace Hub中删除一个repo。注意：这是不可逆的。
- en: '#### `delete_space_secret`'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_space_secret`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6398)'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6398)'
- en: '[PRE35]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Parameters
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — ID of the repo to update. Example: `"bigcode/in-the-stack"`.'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要更新的repo的ID。示例："bigcode/in-the-stack"。'
- en: '`key` (`str`) — Secret key. Example: `"GITHUB_API_KEY"`.'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`key` (`str`) — 秘密键。示例："GITHUB_API_KEY"。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — Hugging Face令牌。如果未提供，将默认使用本地保存的令牌。'
- en: Deletes a secret from a Space.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 从空间中删除一个秘密。
- en: Secrets allow to set secret keys or tokens to a Space without hardcoding them.
    For more details, see [https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets).
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 秘密允许在不硬编码的情况下将秘密键或令牌设置到空间中。有关更多详细信息，请参阅[https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets)。
- en: '#### `delete_space_storage`'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_space_storage`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6842)'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6842)'
- en: '[PRE36]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Parameters
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — ID of the Space to update. Example: `"HuggingFaceH4/open_llm_leaderboard"`.'
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要更新的空间的ID。示例："HuggingFaceH4/open_llm_leaderboard"。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — Hugging Face令牌。如果未提供，将默认使用本地保存的令牌。'
- en: Returns
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
- en: Runtime information about a Space including Space stage and hardware.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 关于空间的运行时信息，包括空间阶段和硬件。
- en: Raises
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: Raises
- en: '`BadRequestError`'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '`BadRequestError`'
- en: '`BadRequestError` — If space has no persistent storage.'
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BadRequestError` — 如果空间没有持久存储。'
- en: Delete persistent storage for a Space.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 删除空间的持久存储。
- en: '#### `delete_space_variable`'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_space_variable`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6472)'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6472)'
- en: '[PRE37]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Parameters
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — ID of the repo to update. Example: `"bigcode/in-the-stack"`.'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 要更新的repo的ID。示例："bigcode/in-the-stack"。'
- en: '`key` (`str`) — Variable key. Example: `"MODEL_REPO_ID"`'
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`key` (`str`) — 变量键。示例："MODEL_REPO_ID"'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — Hugging Face令牌。如果未提供，将默认使用本地保存的令牌。'
- en: Deletes a variable from a Space.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 从空间中删除一个变量。
- en: Variables allow to set environment variables to a Space without hardcoding them.
    For more details, see [https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables)
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 变量允许在不硬编码的情况下将环境变量设置到空间中。有关更多详细信息，请参阅[https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables)
- en: '#### `delete_tag`'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_tag`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5541)'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5541)'
- en: '[PRE38]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Parameters
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — The repository in which a tag will be deleted. Example:
    `"user/my-cool-model"`.'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 将删除标签的仓库。示例："user/my-cool-model"。'
- en: '`tag` (`str`) — The name of the tag to delete.'
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tag` (`str`) — 要删除的标签名称。'
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 认证令牌。将默认使用存储的令牌。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if tagging
    a dataset or space, `None` or `"model"` if tagging a model. Default is `None`.'
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果标记数据集或空间，则设置为 `"dataset"` 或 `"space"`，如果标记模型，则设置为
    `None` 或 `"model"`。默认为 `None`。'
- en: Raises
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    或 [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — 如果未找到仓库（错误 404）：错误的 repo_id/repo_type、私有但未经身份验证或仓库不存在。'
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — If tag is not found.'
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — 如果未找到标签。'
- en: Delete a tag from a repo on the Hub.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Hub 上的仓库中删除一个标签。
- en: '#### `duplicate_space`'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `duplicate_space`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6691)'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6691)'
- en: '[PRE39]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Parameters
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`from_id` (`str`) — ID of the Space to duplicate. Example: `"pharma/CLIP-Interrogator"`.'
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from_id` (`str`) — 要复制的空间的 ID。示例："pharma/CLIP-Interrogator"。'
- en: '`to_id` (`str`, *optional*) — ID of the new Space. Example: `"dog/CLIP-Interrogator"`.
    If not provided, the new Space will have the same name as the original Space,
    but in your account.'
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_id` (`str`, *optional*) — 新空间的 ID。示例："dog/CLIP-Interrogator"。如果未提供，则新空间将具有与原始空间相同的名称，但在您的帐户中。'
- en: '`private` (`bool`, *optional*) — Whether the new Space should be private or
    not. Defaults to the same privacy as the original Space.'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`private` (`bool`, *optional*) — 新空间是否应为私有。默认与原始空间的隐私设置相同。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — Hugging Face token. 如果未提供，将默认使用本地保存的令牌。'
- en: '`exist_ok` (`bool`, *optional*, defaults to `False`) — If `True`, do not raise
    an error if repo already exists.'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exist_ok` (`bool`, *optional*, 默认为 `False`) — 如果为 `True`，则如果仓库已经存在，则不会引发错误。'
- en: '`hardware` (`SpaceHardware` or `str`, *optional*) — Choice of Hardware. Example:
    `"t4-medium"`. See [SpaceHardware](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceHardware)
    for a complete list.'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hardware` (`SpaceHardware` 或 `str`, *optional*) — 硬件选择。示例："t4-medium"。查看 [SpaceHardware](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceHardware)
    获取完整列表。'
- en: '`storage` (`SpaceStorage` or `str`, *optional*) — Choice of persistent storage
    tier. Example: `"small"`. See [SpaceStorage](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceStorage)
    for a complete list.'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`storage` (`SpaceStorage` 或 `str`, *optional*) — 持久存储层的选择。示例："small"。查看 [SpaceStorage](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceStorage)
    获取完整列表。'
- en: '`sleep_time` (`int`, *optional*) — Number of seconds of inactivity to wait
    before a Space is put to sleep. Set to `-1` if you don’t want your Space to sleep
    (default behavior for upgraded hardware). For free hardware, you can’t configure
    the sleep time (value is fixed to 48 hours of inactivity). See [https://huggingface.co/docs/hub/spaces-gpus#sleep-time](https://huggingface.co/docs/hub/spaces-gpus#sleep-time)
    for more details.'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sleep_time` (`int`, *optional*) — 在将空间置于休眠状态之前等待的不活动秒数。如果不希望您的空间休眠（升级后硬件的默认行为），请设置为
    `-1`。对于免费硬件，您无法配置休眠时间（值固定为 48 小时的不活动时间）。有关更多详细信息，请参见 [https://huggingface.co/docs/hub/spaces-gpus#sleep-time](https://huggingface.co/docs/hub/spaces-gpus#sleep-time)。'
- en: '`secrets` (`List[Dict[str, str]]`, *optional*) — A list of secret keys to set
    in your Space. Each item is in the form `{"key": ..., "value": ..., "description":
    ...}` where description is optional. For more details, see [https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets).'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`secrets` (`List[Dict[str, str]]`, *optional*) — 要在您的空间中设置的秘密密钥列表。每个项目的形式为
    `{"key": ..., "value": ..., "description": ...}`，其中描述是可选的。有关更多详细信息，请参见 [https://huggingface.co/docs/hub/spaces-overview#managing-secrets](https://huggingface.co/docs/hub/spaces-overview#managing-secrets)。'
- en: '`variables` (`List[Dict[str, str]]`, *optional*) — A list of public environment
    variables to set in your Space. Each item is in the form `{"key": ..., "value":
    ..., "description": ...}` where description is optional. For more details, see
    [https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables).'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`variables` (`List[Dict[str, str]]`, *optional*) — 一个要在您的空间中设置的公共环境变量列表。每个项目的形式为
    `{"key": ..., "value": ..., "description": ...}`，其中描述是可选的。有关更多详细信息，请参见 [https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables)。'
- en: Returns
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '[RepoUrl](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.RepoUrl)'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '[RepoUrl](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.RepoUrl)'
- en: URL to the newly created repo. Value is a subclass of `str` containing attributes
    like `endpoint`, `repo_type` and `repo_id`.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 新创建的仓库的 URL。值是 `str` 的子类，包含 `endpoint`、`repo_type` 和 `repo_id` 等属性。
- en: Raises
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: — [`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error
  id: totrans-482
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: — 如果 HuggingFace API 返回错误，则为 [`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
- en: — [RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If one of `from_id` or `to_id` cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.
  id: totrans-483
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: — [RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    如果`from_id`或`to_id`中的一个无法找到。这可能是因为它不存在，或者因为它设置为`private`且您无权访问。
- en: Duplicate a Space.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 复制一个空间。
- en: Programmatically duplicate a Space. The new Space will be created in your account
    and will be in the same state as the original Space (running or paused). You can
    duplicate a Space no matter the current state of a Space.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 以编程方式复制一个空间。新空间将在您的帐户中创建，并且将处于与原始空间相同的状态（运行或暂停）。无论空间的当前状态如何，都可以复制空间。
- en: 'Example:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE40]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '#### `edit_discussion_comment`'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `edit_discussion_comment`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6249)'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6249)'
- en: '[PRE41]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Parameters
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由斜杠分隔的命名空间（用户或组织）和存储库名称。'
- en: '`discussion_num` (`int`) — The number of the Discussion or Pull Request . Must
    be a strictly positive integer.'
  id: totrans-493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussion_num` (`int`) — 讨论或拉取请求的编号。必须是严格正整数。'
- en: '`comment_id` (`str`) — The ID of the comment to edit.'
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`comment_id` (`str`) — 要编辑的评论的ID。'
- en: '`new_content` (`str`) — The new content of the comment. Comments support markdown
    formatting.'
  id: totrans-495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`new_content` (`str`) — 评论的新内容。评论支持Markdown格式。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 如果要上传到数据集或空间，则设置为`"dataset"`或`"space"`，如果要上传到模型，则设置为`None`或`"model"`。默认为`None`。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — 身份验证令牌（请参阅[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: Returns
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[DiscussionComment](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionComment)'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '[DiscussionComment](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionComment)'
- en: the edited comment
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑后的评论
- en: Edits a comment on a Discussion / Pull Request.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑讨论/拉取请求上的评论。
- en: 'Raises the following errors:'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    如果HuggingFace API返回错误'
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    如果某个参数值无效'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    如果无法找到要下载的存储库。这可能是因为它不存在，或者因为它设置为`private`且您无权访问。'
- en: '#### `file_exists`'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `file_exists`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2331)'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2331)'
- en: '[PRE42]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Parameters
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由斜杠分隔的命名空间（用户或组织）和存储库名称。'
- en: '`filename` (`str`) — The name of the file to check, for example: `"config.json"`'
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filename` (`str`) — 要检查的文件名，例如："config.json"'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if getting
    repository info from a dataset or a space, `None` or `"model"` if getting repository
    info from a model. Default is `None`.'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 如果从数据集或空间获取存储库信息，则设置为`"dataset"`或`"space"`，如果从模型获取存储库信息，则设置为`None`或`"model"`。默认为`None`。'
- en: '`revision` (`str`, *optional*) — The revision of the repository from which
    to get the information. Defaults to `"main"` branch.'
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*) — 要获取信息的存储库的修订版本。默认为`"main"`分支。'
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`bool`或`str`, *可选*) — 有效的身份验证令牌（请参阅[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。如果为`None`或`True`且机器已登录（通过`huggingface-cli
    login`或[login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)），则令牌将从缓存中检索。如果为`False`，则令牌不会发送到请求头中。'
- en: Checks if a file exists in a repository on the Hugging Face Hub.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 检查Hugging Face Hub上存储库中是否存在文件。
- en: 'Examples:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE43]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '#### `get_collection`'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_collection`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7403)'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7403)'
- en: '[PRE44]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Parameters
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`collection_slug` (`str`) — Slug of the collection of the Hub. Example: `"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`.'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collection_slug` (`str`) — Hub集合的slug。示例："TheBloke/recent-models-64f9a55bb3115b4f513ec026"。'
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *可选*) — Hugging Face 令牌。如果未提供，将默认使用本地保存的令牌。'
- en: Gets information about a Collection on the Hub.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 获取有关Hub上集合的信息。
- en: 'Returns: [Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：[Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)
- en: 'Example:'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE45]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '#### `get_dataset_tags`'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_dataset_tags`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1349)'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1349)'
- en: '[PRE46]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: List all valid dataset tags as a nested namespace object.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 列出所有有效的数据集标签作为嵌套命名空间对象。
- en: '#### `get_discussion_details`'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_discussion_details`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5729)'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5729)'
- en: '[PRE47]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Parameters
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由命名空间（用户或组织）和由`/`分隔的存储库名称。'
- en: '`discussion_num` (`int`) — The number of the Discussion or Pull Request . Must
    be a strictly positive integer.'
  id: totrans-537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussion_num` (`int`) — 讨论或拉取请求的编号。必须是严格的正整数。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *optional*) — 如果上传到数据集或空间，则设置为`"dataset"`或`"space"`，如果上传到模型，则为`None`或`"model"`。默认为`None`。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 身份验证令牌（参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）'
- en: Fetches a Discussion’s / Pull Request ‘s details from the Hub.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 从Hub获取讨论/拉取请求的详细信息。
- en: 'Returns: [DiscussionWithDetails](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionWithDetails)'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：[DiscussionWithDetails](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionWithDetails)
- en: 'Raises the following errors:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果HuggingFace API返回错误，则返回[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)。
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)如果某个参数值无效'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)如果无法找到要下载的存储库。这可能是因为它不存在，或者因为它设置为`private`并且您无法访问。'
- en: '#### `get_full_repo_name`'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_full_repo_name`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5587)'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5587)'
- en: '[PRE48]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Parameters
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_id` (`str`) — The name of the model.'
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id` (`str`) — 模型的名称。'
- en: '`organization` (`str`, *optional*) — If passed, the repository name will be
    in the organization namespace instead of the user namespace.'
  id: totrans-551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`organization` (`str`, *optional*) — 如果传递，则存储库名称将位于组织命名空间而不是用户命名空间中。'
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`bool`或`str`, *optional*) — 有效的身份验证令牌（参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。如果为`None`或`True`且机器已登录（通过`huggingface-cli
    login`或[login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)），则令牌将从缓存中检索。如果为`False`，则不会在请求标头中发送令牌。'
- en: Returns
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: The repository name in the user’s namespace ({username}/{model_id}) if no organization
    is passed, and under the organization namespace ({organization}/{model_id}) otherwise.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未传递组织，则在用户命名空间中的存储库名称（{用户名}/{模型ID}），否则在组织命名空间中（{组织}/{模型ID}）。
- en: Returns the repository name for a given model ID and optional organization.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 给定模型ID和可选组织的存储库名称。
- en: '#### `get_hf_file_metadata`'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_hf_file_metadata`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4781)'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4781)'
- en: '[PRE49]'
  id: totrans-559
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Parameters
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`url` (`str`) — File url, for example returned by [hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url).'
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url` (`str`) — 文件URL，例如由[hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url)返回。'
- en: '`token` (`str` or `bool`, *optional*) — A token to be used for the download.'
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`或`bool`, *optional*) — 用于下载的令牌。'
- en: If `True`, the token is read from the HuggingFace config folder.
  id: totrans-563
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为`True`，则从HuggingFace配置文件夹中读取令牌。
- en: If `False` or `None`, no token is provided.
  id: totrans-564
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为`False`或`None`，则不提供令牌。
- en: If a string, it’s used as the authentication token.
  id: totrans-565
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果是字符串，则用作身份验证令牌。
- en: '`proxies` (`dict`, *optional*) — Dictionary mapping protocol to the URL of
    the proxy passed to `requests.request`.'
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`dict`, *optional*) — 将协议映射到传递给 `requests.request` 的代理的URL的字典。'
- en: '`timeout` (`float`, *optional*, defaults to 10) — How many seconds to wait
    for the server to send metadata before giving up.'
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeout` (`float`, *optional*, 默认为10) — 等待服务器发送元数据的秒数，超过后放弃。'
- en: Fetch metadata of a file versioned on the Hub for a given url.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 获取在Hub上版本化的文件的元数据。
- en: '#### `get_inference_endpoint`'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_inference_endpoint`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7083)'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7083)'
- en: '[PRE50]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Parameters
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`name` (`str`) — The name of the Inference Endpoint to retrieve information
    about.'
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` (`str`) — 要检索信息的推理端点的名称。'
- en: '`namespace` (`str`, *optional*) — The namespace in which the Inference Endpoint
    is located. Defaults to the current user.'
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`namespace` (`str`, *optional*) — 推理端点所在的命名空间。默认为当前用户。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`, *optional*) — 身份验证令牌（参见[https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。'
- en: Returns
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
- en: information about the requested Inference Endpoint.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 有关请求的推理端点的信息。
- en: Get information about an Inference Endpoint.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 获取有关推理端点的信息。
- en: 'Example:'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE51]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '#### `get_model_tags`'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_model_tags`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1340)'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1340)'
- en: '[PRE52]'
  id: totrans-584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: List all valid model tags as a nested namespace object
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 列出所有有效的模型标签作为嵌套命名空间对象
- en: '#### `get_paths_info`'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_paths_info`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2902)'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2902)'
- en: '[PRE53]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Parameters
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由斜杠分隔的命名空间（用户或组织）和仓库名称。'
- en: '`paths` (`Union[List[str], str]`, *optional*) — The paths to get information
    about. If a path do not exist, it is ignored without raising an exception.'
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`paths` (`Union[List[str], str]`，*可选*) — 要获取信息的路径。如果路径不存在，则会被忽略而不会引发异常。'
- en: '`expand` (`bool`, *optional*, defaults to `False`) — Whether to fetch more
    information about the paths (e.g. last commit and files’ security scan results).
    This operation is more expensive for the server so only 50 results are returned
    per page (instead of 1000). As pagination is implemented in `huggingface_hub`,
    this is transparent for you except for the time it takes to get the results.'
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`expand` (`bool`，*可选*，默认为 `False`) — 是否获取有关路径的更多信息（例如最后一次提交和文件的安全扫描结果）。对于服务器来说，这个操作更昂贵，因此每页只返回
    50 个结果（而不是 1000 个）。由于在 `huggingface_hub` 中实现了分页，这对您来说是透明的，除了获取结果所需的时间。'
- en: '`revision` (`str`, *optional*) — The revision of the repository from which
    to get the information. Defaults to `"main"` branch.'
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`，*可选*) — 从中获取信息的仓库的修订版本。默认为 `"main"` 分支。'
- en: '`repo_type` (`str`, *optional*) — The type of the repository from which to
    get the information (`"model"`, `"dataset"` or `"space"`. Defaults to `"model"`.'
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`，*可选*) — 从中获取信息的仓库类型（`"model"`、`"dataset"` 或 `"space"`）。默认为
    `"model"`。'
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`bool` 或 `str`，*可选*) — 有效的身份验证令牌（参见 [https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。如果为
    `None` 或 `True` 并且机器已登录（通过 `huggingface-cli login` 或 [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)），令牌将从缓存中检索。如果为
    `False`，则令牌不会在请求头中发送。'
- en: Returns
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`List[Union[RepoFile, RepoFolder]]`'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: '`List[Union[RepoFile, RepoFolder]]`'
- en: The information about the paths, as a list of `RepoFile` and `RepoFolder` objects.
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 `RepoFile` 和 `RepoFolder` 对象列表的路径信息。
- en: Raises
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    或 [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)'
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — 如果找不到仓库（错误 404）：错误的 repo_id/repo_type，私有但未经身份验证或仓库不存在。'
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — If revision is not found (error 404) on the repo.'
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — 如果在仓库中找不到修订版本（错误 404）。'
- en: Get information about a repo’s paths.
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 获取有关仓库路径的信息。
- en: 'Example:'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE54]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '#### `get_repo_discussions`'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_repo_discussions`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5625)'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5625)'
- en: '[PRE55]'
  id: totrans-608
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Parameters
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_id` (`str`) — 由斜杠分隔的命名空间（用户或组织）和仓库名称。'
- en: '`author` (`str`, *optional*) — Pass a value to filter by discussion author.
    `None` means no filter. Default is `None`.'
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`author` (`str`，*可选*) — 传递一个值以按讨论作者筛选。`None` 表示无筛选。默认为 `None`。'
- en: '`discussion_type` (`str`, *optional*) — Set to `"pull_request"` to fetch only
    pull requests, `"discussion"` to fetch only discussions. Set to `"all"` or `None`
    to fetch both. Default is `None`.'
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussion_type` (`str`，*可选*) — 设置为 `"pull_request"` 以仅获取拉取请求，设置为 `"discussion"`
    以仅获取讨论。设置为 `"all"` 或 `None` 以获取全部。默认为 `None`。'
- en: '`discussion_status` (`str`, *optional*) — Set to `"open"` (respectively `"closed"`)
    to fetch only open (respectively closed) discussions. Set to `"all"` or `None`
    to fetch both. Default is `None`.'
  id: totrans-613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussion_status` (`str`，*可选*) — 设置为 `"open"`（分别为 `"closed"`）以仅获取开放的（分别为已关闭的）讨论。设置为
    `"all"` 或 `None` 以获取全部。默认为 `None`。'
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if fetching
    from a dataset or space, `None` or `"model"` if fetching from a model. Default
    is `None`.'
  id: totrans-614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`，*可选*) — 如果从数据集或空间获取，则设置为 `"dataset"` 或 `"space"`，如果从模型获取，则设置为
    `None` 或 `"model"`。默认为 `None`。'
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str`，*可选*) — 身份验证令牌（参见 [https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。'
- en: Returns
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`Iterator[Discussion]`'
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: '`Iterator[Discussion]`'
- en: An iterator of [Discussion](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.Discussion)
    objects.
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: '[Discussion](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.Discussion)
    对象的迭代器。'
- en: Fetches Discussions and Pull Requests for the given repo.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 获取给定仓库的讨论和拉取请求。
- en: 'Example:'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: 'Collecting all discussions of a repo in a list:'
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: 在列表中收集仓库的所有讨论：
- en: '[PRE56]'
  id: totrans-622
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Iterating over discussions of a repo:'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历仓库讨论的示例：
- en: '[PRE57]'
  id: totrans-624
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '#### `get_safetensors_metadata`'
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `get_safetensors_metadata`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5133)'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Parameters
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A user or an organization name and a repo name separated
    by a `/`.'
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`filename` (`str`) — The name of the file in the repo.'
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if the file
    is in a dataset or space, `None` or `"model"` if in a model. Default is `None`.'
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to fetch the file from. Can
    be a branch name, a tag, or a commit hash. Defaults to the head of the `"main"`
    branch.'
  id: totrans-632
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
- en: '`SafetensorsRepoMetadata`'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
- en: information related to safetensors repo.
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
- en: '— `NotASafetensorsRepoError`: if the repo is not a safetensors repo i.e. doesn’t
    have either a `model.safetensors` or a `model.safetensors.index.json` file.'
  id: totrans-638
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '— `SafetensorsParsingError`: if a safetensors file header couldn’t be parsed
    correctly.'
  id: totrans-639
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Parse metadata for a safetensors repo on the Hub.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
- en: We first check if the repo has a single safetensors file or a sharded safetensors
    repo. If it’s a single safetensors file, we parse the metadata from this file.
    If it’s a sharded safetensors repo, we parse the metadata from the index file
    and then parse the metadata from each shard.
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
- en: To parse metadata from a single safetensors file, use [get_safetensors_metadata()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.get_safetensors_metadata).
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
- en: For more details regarding the safetensors format, check out [https://huggingface.co/docs/safetensors/index#format](https://huggingface.co/docs/safetensors/index#format).
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '#### `get_space_runtime`'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6497)'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-648
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Parameters
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — ID of the repo to update. Example: `"bigcode/in-the-stack"`.'
  id: totrans-650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
- en: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
- en: Runtime information about a Space including Space stage and hardware.
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
- en: Gets runtime information about a Space.
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
- en: '#### `get_space_variables`'
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6420)'
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-658
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Parameters
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — ID of the repo to query. Example: `"bigcode/in-the-stack"`.'
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gets all variables from a Space.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
- en: Variables allow to set environment variables to a Space without hardcoding them.
    For more details, see [https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables](https://huggingface.co/docs/hub/spaces-overview#managing-secrets-and-environment-variables)
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
- en: '#### `get_token_permission`'
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1321)'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Parameters
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — The token to check for validity. Defaults to
    the one saved locally.'
  id: totrans-668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
- en: '`Literal["read", "write", None]`'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
- en: Permission granted by the token (“read” or “write”). Returns `None` if no token
    passed or token is invalid.
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
- en: Check if a given `token` is valid and return its permissions.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
- en: For more details about tokens, please refer to [https://huggingface.co/docs/hub/security-tokens#what-are-user-access-tokens](https://huggingface.co/docs/hub/security-tokens#what-are-user-access-tokens).
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
- en: '#### `grant_access`'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L8124)'
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-676
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Parameters
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The id of the repo to grant access to.'
  id: totrans-678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`user` (`str`) — The username of the user to grant access.'
  id: totrans-679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repo to grant access to.
    Must be one of `model`, `dataset` or `space`. Defaults to `model`.'
  id: totrans-680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError`'
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 400 if the repo is not gated.'
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 400 if the user already has access to the repo.'
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 403 if you only have read-only access to the repo. This
    can be the case if you don’t have `write` or `admin` role in the organization
    the repo belongs to or if you passed a `read` token.'
  id: totrans-686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 404 if the user does not exist on the Hub.'
  id: totrans-687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Grant access to a user for a given gated repo.
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
- en: Granting access don’t require for the user to send an access request by themselves.
    The user is automatically added to the accepted list meaning they can download
    the files You can revoke the granted access at any time using [cancel_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.cancel_access_request)
    or [reject_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.reject_access_request).
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
- en: For more info about gated repos, see [https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated).
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
- en: '#### `hf_hub_download`'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4823)'
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-693
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Parameters
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A user or an organization name and a repo name separated
    by a `/`.'
  id: totrans-695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`filename` (`str`) — The name of the file in the repo.'
  id: totrans-696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`subfolder` (`str`, *optional*) — An optional value corresponding to a folder
    inside the model repo.'
  id: totrans-697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if downloading
    from a dataset or space, `None` or `"model"` if downloading from a model. Default
    is `None`.'
  id: totrans-698
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — An optional Git revision id which can be a
    branch name, a tag, or a commit hash.'
  id: totrans-699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cache_dir` (`str`, `Path`, *optional*) — Path to the folder where cached files
    are stored.'
  id: totrans-700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_dir` (`str` or `Path`, *optional*) — If provided, the downloaded file
    will be placed under this directory, either as a symlink (default) or a regular
    file (see description for more details).'
  id: totrans-701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_dir_use_symlinks` (`"auto"` or `bool`, defaults to `"auto"`) — To be
    used with `local_dir`. If set to “auto”, the cache directory will be used and
    the file will be either duplicated or symlinked to the local directory depending
    on its size. It set to `True`, a symlink will be created, no matter the file size.
    If set to `False`, the file will either be duplicated from cache (if already exists)
    or downloaded from the Hub and not cached. See description for more details.'
  id: totrans-702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether the file
    should be downloaded even if it already exists in the local cache.'
  id: totrans-703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`proxies` (`dict`, *optional*) — Dictionary mapping protocol to the URL of
    the proxy passed to `requests.request`.'
  id: totrans-704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`etag_timeout` (`float`, *optional*, defaults to `10`) — When fetching ETag,
    how many seconds to wait for the server to send data before giving up which is
    passed to `requests.request`.'
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — If `True`, resume
    a previously interrupted download.'
  id: totrans-706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) — If `True`, avoid
    downloading the file and return the path to the local cached file if it exists.'
  id: totrans-708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`legacy_cache_layout` (`bool`, *optional*, defaults to `False`) — If `True`,
    uses the legacy file cache layout i.e. just call [hf_hub_url()](/docs/huggingface_hub/v0.20.3/en/package_reference/file_download#huggingface_hub.hf_hub_url)
    then `cached_download`. This is deprecated as the new cache layout is more powerful.'
  id: totrans-709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download a given file if it’s not already present in the local cache.
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
- en: 'The new cache file layout looks like this:'
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
- en: The cache directory contains one subfolder per repo_id (namespaced by repo type)
  id: totrans-712
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'inside each repo folder:'
  id: totrans-713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: refs is a list of the latest known revision => commit_hash pairs
  id: totrans-714
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: blobs contains the actual file blobs (identified by their git-sha or sha256,
    depending on whether they’re LFS files or not)
  id: totrans-715
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: snapshots contains one subfolder per commit, each “commit” contains the subset
    of the files that have been resolved at that particular commit. Each filename
    is a symlink to the blob at that particular commit.
  id: totrans-716
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If `local_dir` is provided, the file structure from the repo will be replicated
    in this location. You can configure how you want to move those files:'
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
- en: If `local_dir_use_symlinks="auto"` (default), files are downloaded and stored
    in the cache directory as blob files. Small files (<5MB) are duplicated in `local_dir`
    while a symlink is created for bigger files. The goal is to be able to manually
    edit and save small files without corrupting the cache while saving disk space
    for binary files. The 5MB threshold can be configured with the `HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`
    environment variable.
  id: totrans-718
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If `local_dir_use_symlinks=True`, files are downloaded, stored in the cache
    directory and symlinked in `local_dir`. This is optimal in term of disk usage
    but files must not be manually edited.
  id: totrans-719
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If `local_dir_use_symlinks=False` and the blob files exist in the cache directory,
    they are duplicated in the local dir. This means disk usage is not optimized.
  id: totrans-720
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, if `local_dir_use_symlinks=False` and the blob files do not exist in
    the cache directory, then the files are downloaded and directly placed under `local_dir`.
    This means if you need to download them again later, they will be re-downloaded
    entirely.
  id: totrans-721
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-722
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Raises the following errors:'
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
- en: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    if `token=True` and the token cannot be found.'
  id: totrans-724
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`OSError`](https://docs.python.org/3/library/exceptions.html#OSError) if ETag
    cannot be determined.'
  id: totrans-725
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-726
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-727
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-728
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[EntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError)
    If the file to download cannot be found.'
  id: totrans-729
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[LocalEntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.LocalEntryNotFoundError)
    If network is disabled or unavailable and file is not found in cache.'
  id: totrans-730
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `hide_discussion_comment`'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6306)'
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-733
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Parameters
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-735
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`discussion_num` (`int`) — The number of the Discussion or Pull Request . Must
    be a strictly positive integer.'
  id: totrans-736
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`comment_id` (`str`) — The ID of the comment to edit.'
  id: totrans-737
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-738
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-739
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
- en: '[DiscussionComment](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionComment)'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
- en: the hidden comment
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
- en: Hides a comment on a Discussion / Pull Request.
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
- en: Hidden comments' content cannot be retrieved anymore. Hiding a comment is irreversible.
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-746
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-747
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-748
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `like`'
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1801)'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Parameters
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The repository to like. Example: `"user/my-cool-model"`.'
  id: totrans-753
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-754
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if liking
    a dataset or space, `None` or `"model"` if liking a model. Default is `None`.'
  id: totrans-755
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)'
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-758
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Like a given repo on the Hub (e.g. set as favorite).
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
- en: See also [unlike()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.unlike)
    and [list_liked_repos()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_liked_repos).
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  id: totrans-762
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '#### `list_accepted_access_requests`'
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7841)'
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  id: totrans-765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Parameters
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The id of the repo to get access requests for.'
  id: totrans-767
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repo to get access requests
    for. Must be one of `model`, `dataset` or `space`. Defaults to `model`.'
  id: totrans-768
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-769
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
- en: '`List[AccessRequest]`'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
- en: A list of `AccessRequest` objects. Each time contains a `username`, `email`,
    `status` and `timestamp` attribute. If the gated repo has a custom form, the `fields`
    attribute will be populated with user’s answers.
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-773
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError`'
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 400 if the repo is not gated.'
  id: totrans-775
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 403 if you only have read-only access to the repo. This
    can be the case if you don’t have `write` or `admin` role in the organization
    the repo belongs to or if you passed a `read` token.'
  id: totrans-776
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get accepted access requests for a given gated repo.
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
- en: An accepted request means the user has requested access to the repo and the
    request has been accepted. The user can download any file of the repo. If the
    approval mode is automatic, this list should contains by default all requests.
    Accepted requests can be cancelled or rejected at any time using [cancel_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.cancel_access_request)
    and [reject_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.reject_access_request).
    A cancelled request will go back to the pending list while a rejected request
    will go to the rejected list. In both cases, the user will lose access to the
    repo.
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
- en: For more info about gated repos, see [https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated).
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  id: totrans-781
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '#### `list_collections`'
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7347)'
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  id: totrans-784
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Parameters
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
- en: '`owner` (`List[str]` or `str`, *optional*) — Filter by owner’s username.'
  id: totrans-786
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`item` (`List[str]` or `str`, *optional*) — Filter collections containing a
    particular items. Example: `"models/teknium/OpenHermes-2.5-Mistral-7B"`, `"datasets/squad"`
    or `"papers/2311.12983"`.'
  id: totrans-787
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sort` (`Literal["lastModified", "trending", "upvotes"]`, *optional*) — Sort
    collections by last modified, trending or upvotes.'
  id: totrans-788
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`limit` (`int`, *optional*) — Maximum number of collections to be returned.'
  id: totrans-789
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — An authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-790
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
- en: '`Iterable[Collection]`'
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
- en: an iterable of [Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)
    objects.
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
- en: List collections on the Huggingface Hub, given some filters.
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
- en: When listing collections, the item list per collection is truncated to 4 items
    maximum. To retrieve all items from a collection, you must use [get_collection()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.get_collection).
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
- en: '#### `list_datasets`'
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1544)'
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  id: totrans-798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Parameters
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
- en: '`filter` ([DatasetFilter](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.DatasetFilter)
    or `str` or `Iterable`, *optional*) — A string or [DatasetFilter](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.DatasetFilter)
    which can be used to identify datasets on the hub.'
  id: totrans-800
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`author` (`str`, *optional*) — A string which identify the author of the returned
    datasets.'
  id: totrans-801
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`search` (`str`, *optional*) — A string that will be contained in the returned
    datasets.'
  id: totrans-802
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sort` (`Literal["last_modified"]` or `str`, *optional*) — The key with which
    to sort the resulting datasets. Possible values are the properties of the [huggingface_hub.hf_api.DatasetInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.DatasetInfo)
    class.'
  id: totrans-803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`direction` (`Literal[-1]` or `int`, *optional*) — Direction in which to sort.
    The value `-1` sorts by descending order while all other values sort by ascending
    order.'
  id: totrans-804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`limit` (`int`, *optional*) — The limit on the number of datasets fetched.
    Leaving this option to `None` fetches all datasets.'
  id: totrans-805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`full` (`bool`, *optional*) — Whether to fetch all dataset data, including
    the `last_modified`, the `card_data` and the files. Can contain useful information
    such as the PapersWithCode ID.'
  id: totrans-806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
- en: '`Iterable[DatasetInfo]`'
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
- en: an iterable of [huggingface_hub.hf_api.DatasetInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.DatasetInfo)
    objects.
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
- en: List datasets hosted on the Huggingface Hub, given some filters.
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
- en: 'Example usage with the `filter` argument:'
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  id: totrans-813
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Example usage with the `search` argument:'
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  id: totrans-815
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '#### `list_files_info`'
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2393)'
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  id: totrans-818
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Parameters
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-820
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`paths` (`Union[List[str], str, None]`, *optional*) — The paths to get information
    about. Paths to files are directly resolved. Paths to folders are resolved recursively
    which means that information is returned about all files in the folder and its
    subfolders. If `None`, all files are returned (the default). If a path do not
    exist, it is ignored without raising an exception.'
  id: totrans-821
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`expand` (`bool`, *optional*, defaults to `False`) — Whether to fetch more
    information about the files (e.g. last commit and security scan results). This
    operation is more expensive for the server so only 50 results are returned per
    page (instead of 1000). As pagination is implemented in `huggingface_hub`, this
    is transparent for you except for the time it takes to get the results.'
  id: totrans-822
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The revision of the repository from which
    to get the information. Defaults to `"main"` branch.'
  id: totrans-823
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repository from which to
    get the information (`"model"`, `"dataset"` or `"space"`. Defaults to `"model"`.'
  id: totrans-824
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-825
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
- en: '`Iterable[RepoFile]`'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
- en: The information about the files, as an iterable of `RepoFile` objects. The order
    of the files is not guaranteed.
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)'
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-831
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — If revision is not found (error 404) on the repo.'
  id: totrans-832
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List files on a repo and get information about them.
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
- en: 'Takes as input a list of paths. Those paths can be either files or folders.
    Two server endpoints are called:'
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
- en: POST “/paths-info” to get information about the provided paths. Called once.
  id: totrans-835
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: GET “/tree?recursive=True” to paginate over the input folders. Called only if
    a folder path is provided as input. Will be called multiple times to follow pagination.
    If no path is provided as input, step 1\. is ignored and all files from the repo
    are listed.
  id: totrans-836
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Examples:'
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
- en: Get information about files on a repo.
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  id: totrans-839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Get even more information about files on a repo (last commit and security scan
    results)
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  id: totrans-841
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: List LFS files from the “vae/” folder in “stabilityai/stable-diffusion-2” repository.
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  id: totrans-843
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: List all files on a repo.
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  id: totrans-845
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '#### `list_inference_endpoints`'
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6874)'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Parameters
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
- en: '`namespace` (`str`, *optional*) — The namespace to list endpoints for. Defaults
    to the current user. Set to `"*"` to list all endpoints from all namespaces (i.e.
    personal namespace and all orgs the user belongs to).'
  id: totrans-850
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-851
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
- en: List[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
- en: A list of all inference endpoints for the given namespace.
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
- en: Lists all inference endpoints for the given namespace.
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  id: totrans-857
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '#### `list_liked_repos`'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1896)'
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  id: totrans-860
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Parameters
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
- en: '`user` (`str`, *optional*) — Name of the user for which you want to fetch the
    likes.'
  id: totrans-862
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    Used only if `user` is not passed to implicitly determine the current user name.'
  id: totrans-863
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
- en: '[UserLikes](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.UserLikes)'
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
- en: object containing the user name and 3 lists of repo ids (1 for models, 1 for
    datasets and 1 for Spaces).
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
- en: '`ValueError`'
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If `user` is not passed and no token found (either from argument or from machine).'
  id: totrans-869
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List all public repos liked by a user on huggingface.co.
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
- en: This list is public so token is optional. If `user` is not passed, it defaults
    to the logged in user.
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
- en: See also [like()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.like)
    and [unlike()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.unlike).
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  id: totrans-874
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '#### `list_metrics`'
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1701)'
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  id: totrans-877
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Returns
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
- en: '`List[MetricInfo]`'
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
- en: a list of `MetricInfo` objects which.
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
- en: Get the public list of all the metrics on huggingface.co
  id: totrans-881
  prefs: []
  type: TYPE_NORMAL
- en: '#### `list_models`'
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1358)'
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  id: totrans-884
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Parameters
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
- en: '`filter` ([ModelFilter](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.ModelFilter)
    or `str` or `Iterable`, *optional*) — A string or [ModelFilter](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.ModelFilter)
    which can be used to identify models on the Hub.'
  id: totrans-886
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`author` (`str`, *optional*) — A string which identify the author (user or
    organization) of the returned models'
  id: totrans-887
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`search` (`str`, *optional*) — A string that will be contained in the returned
    model ids.'
  id: totrans-888
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`emissions_thresholds` (`Tuple`, *optional*) — A tuple of two ints or floats
    representing a minimum and maximum carbon footprint to filter the resulting models
    with in grams.'
  id: totrans-889
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sort` (`Literal["last_modified"]` or `str`, *optional*) — The key with which
    to sort the resulting models. Possible values are the properties of the [huggingface_hub.hf_api.ModelInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.ModelInfo)
    class.'
  id: totrans-890
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`direction` (`Literal[-1]` or `int`, *optional*) — Direction in which to sort.
    The value `-1` sorts by descending order while all other values sort by ascending
    order.'
  id: totrans-891
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`limit` (`int`, *optional*) — The limit on the number of models fetched. Leaving
    this option to `None` fetches all models.'
  id: totrans-892
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`full` (`bool`, *optional*) — Whether to fetch all model data, including the
    `last_modified`, the `sha`, the files and the `tags`. This is set to `True` by
    default when using a filter.'
  id: totrans-893
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cardData` (`bool`, *optional*) — Whether to grab the metadata for the model
    as well. Can contain useful information such as carbon emissions, metrics, and
    datasets trained on.'
  id: totrans-894
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fetch_config` (`bool`, *optional*) — Whether to fetch the model configs as
    well. This is not included in `full` due to its size.'
  id: totrans-895
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-896
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
- en: '`Iterable[ModelInfo]`'
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
- en: an iterable of [huggingface_hub.hf_api.ModelInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.ModelInfo)
    objects.
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
- en: List models hosted on the Huggingface Hub, given some filters.
  id: totrans-900
  prefs: []
  type: TYPE_NORMAL
- en: 'Example usage with the `filter` argument:'
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  id: totrans-902
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'Example usage with the `search` argument:'
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  id: totrans-904
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '#### `list_pending_access_requests`'
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7780)'
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  id: totrans-907
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Parameters
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The id of the repo to get access requests for.'
  id: totrans-909
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repo to get access requests
    for. Must be one of `model`, `dataset` or `space`. Defaults to `model`.'
  id: totrans-910
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-911
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
- en: '`List[AccessRequest]`'
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
- en: A list of `AccessRequest` objects. Each time contains a `username`, `email`,
    `status` and `timestamp` attribute. If the gated repo has a custom form, the `fields`
    attribute will be populated with user’s answers.
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError`'
  id: totrans-916
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 400 if the repo is not gated.'
  id: totrans-917
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 403 if you only have read-only access to the repo. This
    can be the case if you don’t have `write` or `admin` role in the organization
    the repo belongs to or if you passed a `read` token.'
  id: totrans-918
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get pending access requests for a given gated repo.
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
- en: A pending request means the user has requested access to the repo but the request
    has not been processed yet. If the approval mode is automatic, this list should
    be empty. Pending requests can be accepted or rejected using [accept_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.accept_access_request)
    and [reject_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.reject_access_request).
  id: totrans-920
  prefs: []
  type: TYPE_NORMAL
- en: For more info about gated repos, see [https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated).
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  id: totrans-923
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '#### `list_rejected_access_requests`'
  id: totrans-924
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7900)'
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  id: totrans-926
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Parameters
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The id of the repo to get access requests for.'
  id: totrans-928
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repo to get access requests
    for. Must be one of `model`, `dataset` or `space`. Defaults to `model`.'
  id: totrans-929
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-930
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
- en: '`List[AccessRequest]`'
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
- en: A list of `AccessRequest` objects. Each time contains a `username`, `email`,
    `status` and `timestamp` attribute. If the gated repo has a custom form, the `fields`
    attribute will be populated with user’s answers.
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-934
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError`'
  id: totrans-935
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 400 if the repo is not gated.'
  id: totrans-936
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 403 if you only have read-only access to the repo. This
    can be the case if you don’t have `write` or `admin` role in the organization
    the repo belongs to or if you passed a `read` token.'
  id: totrans-937
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get rejected access requests for a given gated repo.
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
- en: A rejected request means the user has requested access to the repo and the request
    has been explicitly rejected by a repo owner (either you or another user from
    your organization). The user cannot download any file of the repo. Rejected requests
    can be accepted or cancelled at any time using [accept_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.accept_access_request)
    and [cancel_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.cancel_access_request).
    A cancelled request will go back to the pending list while an accepted request
    will go to the accepted list.
  id: totrans-939
  prefs: []
  type: TYPE_NORMAL
- en: For more info about gated repos, see [https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated).
  id: totrans-940
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  id: totrans-942
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '#### `list_repo_commits`'
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2816)'
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  id: totrans-945
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Parameters
  id: totrans-946
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-947
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if listing
    commits from a dataset or a Space, `None` or `"model"` if listing from a model.
    Default is `None`.'
  id: totrans-948
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-949
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  id: totrans-950
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`formatted` (`bool`) — Whether to return the HTML-formatted title and description
    of the commits. Defaults to False.'
  id: totrans-951
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
- en: List[[GitCommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.GitCommitInfo)]
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
- en: list of objects containing information about the commits for a repo on the Hub.
  id: totrans-954
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)'
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-957
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — If revision is not found (error 404) on the repo.'
  id: totrans-958
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get the list of commits of a given revision for a repo on the Hub.
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
- en: Commits are sorted by date (last commit first).
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  id: totrans-962
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '#### `list_repo_files`'
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2577)'
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  id: totrans-965
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Parameters
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-967
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The revision of the model repository from
    which to get the information.'
  id: totrans-968
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-969
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-970
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
- en: '`List[str]`'
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
- en: the list of files in a given repository.
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
- en: Get the list of files in a given repo.
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
- en: '#### `list_repo_likers`'
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1971)'
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  id: totrans-977
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Parameters
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The repository to retrieve . Example: `"user/my-cool-model"`.'
  id: totrans-979
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-980
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-981
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
- en: '`List[User]`'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
- en: a list of [User](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.User)
    objects.
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
- en: List all users who liked a given repo on the hugging Face Hub.
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
- en: See also [like()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.like)
    and [list_liked_repos()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_liked_repos).
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
- en: '#### `list_repo_refs`'
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2744)'
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  id: totrans-989
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: Parameters
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-991
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if listing
    refs from a dataset or a Space, `None` or `"model"` if listing from a model. Default
    is `None`.'
  id: totrans-992
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`include_pull_requests` (`bool`, *optional*) — Whether to include refs from
    pull requests in the list. Defaults to `False`.'
  id: totrans-993
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-994
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
- en: '[GitRefs](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.GitRefs)'
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
- en: object containing all information about branches and tags for a repo on the
    Hub.
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
- en: Get the list of refs of a given repo (both tags and branches).
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-999
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  id: totrans-1000
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '#### `list_repo_tree`'
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2613)'
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  id: totrans-1003
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Parameters
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1005
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`path_in_repo` (`str`, *optional*) — Relative path of the tree (folder) in
    the repo, for example: `"checkpoints/1fec34a/results"`. Will default to the root
    tree (folder) of the repository.'
  id: totrans-1006
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`recursive` (`bool`, *optional*, defaults to `False`) — Whether to list tree’s
    files and folders recursively.'
  id: totrans-1007
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`expand` (`bool`, *optional*, defaults to `False`) — Whether to fetch more
    information about the tree’s files and folders (e.g. last commit and files’ security
    scan results). This operation is more expensive for the server so only 50 results
    are returned per page (instead of 1000). As pagination is implemented in `huggingface_hub`,
    this is transparent for you except for the time it takes to get the results.'
  id: totrans-1008
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The revision of the repository from which
    to get the tree. Defaults to `"main"` branch.'
  id: totrans-1009
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repository from which to
    get the tree (`"model"`, `"dataset"` or `"space"`. Defaults to `"model"`.'
  id: totrans-1010
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1011
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
- en: '`Iterable[Union[RepoFile, RepoFolder]]`'
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
- en: The information about the tree’s files and folders, as an iterable of `RepoFile`
    and `RepoFolder` objects. The order of the files and folders is not guaranteed.
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    or [EntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError)'
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-1017
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — If revision is not found (error 404) on the repo.'
  id: totrans-1018
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[EntryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError)
    — If the tree (folder) does not exist (error 404) on the repo.'
  id: totrans-1019
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List a repo tree’s files and folders and get information about them.
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
- en: Get information about a repo’s tree.
  id: totrans-1022
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  id: totrans-1023
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Get even more information about a repo’s tree (last commit and files’ security
    scan results)
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  id: totrans-1025
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '#### `list_spaces`'
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1714)'
  id: totrans-1027
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  id: totrans-1028
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Parameters
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
- en: '`filter` (`str` or `Iterable`, *optional*) — A string tag or list of tags that
    can be used to identify Spaces on the Hub.'
  id: totrans-1030
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`author` (`str`, *optional*) — A string which identify the author of the returned
    Spaces.'
  id: totrans-1031
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`search` (`str`, *optional*) — A string that will be contained in the returned
    Spaces.'
  id: totrans-1032
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sort` (`Literal["last_modified"]` or `str`, *optional*) — The key with which
    to sort the resulting Spaces. Possible values are the properties of the [huggingface_hub.hf_api.SpaceInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.SpaceInfo)`
    class.'
  id: totrans-1033
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`direction` (`Literal[-1]` or `int`, *optional*) — Direction in which to sort.
    The value `-1` sorts by descending order while all other values sort by ascending
    order.'
  id: totrans-1034
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`limit` (`int`, *optional*) — The limit on the number of Spaces fetched. Leaving
    this option to `None` fetches all Spaces.'
  id: totrans-1035
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datasets` (`str` or `Iterable`, *optional*) — Whether to return Spaces that
    make use of a dataset. The name of a specific dataset can be passed as a string.'
  id: totrans-1036
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`models` (`str` or `Iterable`, *optional*) — Whether to return Spaces that
    make use of a model. The name of a specific model can be passed as a string.'
  id: totrans-1037
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`linked` (`bool`, *optional*) — Whether to return Spaces that make use of either
    a model or a dataset.'
  id: totrans-1038
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`full` (`bool`, *optional*) — Whether to fetch all Spaces data, including the
    `last_modified`, `siblings` and `card_data` fields.'
  id: totrans-1039
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1040
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1041
  prefs: []
  type: TYPE_NORMAL
- en: '`Iterable[SpaceInfo]`'
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
- en: an iterable of [huggingface_hub.hf_api.SpaceInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.SpaceInfo)
    objects.
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
- en: List spaces hosted on the Huggingface Hub, given some filters.
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
- en: '#### `merge_pull_request`'
  id: totrans-1045
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6196)'
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  id: totrans-1047
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Parameters
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1049
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`discussion_num` (`int`) — The number of the Discussion or Pull Request . Must
    be a strictly positive integer.'
  id: totrans-1050
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`comment` (`str`, *optional*) — An optional comment to post with the status
    change.'
  id: totrans-1051
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-1052
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-1053
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
- en: '[DiscussionStatusChange](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionStatusChange)'
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
- en: the status change event
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
- en: Merges a Pull Request.
  id: totrans-1057
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-1059
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-1060
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1061
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `model_info`'
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2021)'
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  id: totrans-1064
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Parameters
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1066
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The revision of the model repository from
    which to get the information.'
  id: totrans-1067
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timeout` (`float`, *optional*) — Whether to set a timeout for the request
    to the Hub.'
  id: totrans-1068
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`securityStatus` (`bool`, *optional*) — Whether to retrieve the security status
    from the model repository as well.'
  id: totrans-1069
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`files_metadata` (`bool`, *optional*) — Whether or not to retrieve metadata
    for files in the repository (size, LFS metadata, etc). Defaults to `False`.'
  id: totrans-1070
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1071
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
- en: '[huggingface_hub.hf_api.ModelInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.ModelInfo)'
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
- en: The model repository information.
  id: totrans-1074
  prefs: []
  type: TYPE_NORMAL
- en: Get info on one specific model on huggingface.co
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
- en: Model can be private if you pass an acceptable token or are logged in.
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1078
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-1079
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `move_repo`'
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3305)'
  id: totrans-1081
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  id: totrans-1082
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Parameters
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
- en: '`from_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`. Original repository identifier.'
  id: totrans-1084
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`. Final repository identifier.'
  id: totrans-1085
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-1086
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-1087
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moving a repository from namespace1/repo_name1 to namespace2/repo_name2
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
- en: Note there are certain limitations. For more information about moving repositories,
    please see [https://hf.co/docs/hub/repositories-settings#renaming-or-transferring-a-repo](https://hf.co/docs/hub/repositories-settings#renaming-or-transferring-a-repo).
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1091
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `parse_safetensors_file_metadata`'
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L5254)'
  id: totrans-1093
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  id: totrans-1094
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Parameters
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A user or an organization name and a repo name separated
    by a `/`.'
  id: totrans-1096
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`filename` (`str`) — The name of the file in the repo.'
  id: totrans-1097
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if the file
    is in a dataset or space, `None` or `"model"` if in a model. Default is `None`.'
  id: totrans-1098
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to fetch the file from. Can
    be a branch name, a tag, or a commit hash. Defaults to the head of the `"main"`
    branch.'
  id: totrans-1099
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
- en: '`SafetensorsFileMetadata`'
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
- en: information related to a safetensors file.
  id: totrans-1103
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
- en: '— `NotASafetensorsRepoError`: if the repo is not a safetensors repo i.e. doesn’t
    have either a `model.safetensors` or a `model.safetensors.index.json` file.'
  id: totrans-1105
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '— `SafetensorsParsingError`: if a safetensors file header couldn’t be parsed
    correctly.'
  id: totrans-1106
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Parse metadata from a safetensors file on the Hub.
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
- en: To parse metadata from all safetensors files in a repo at once, use [get_safetensors_metadata()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.get_safetensors_metadata).
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
- en: For more details regarding the safetensors format, check out [https://huggingface.co/docs/safetensors/index#format](https://huggingface.co/docs/safetensors/index#format).
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
- en: '#### `pause_inference_endpoint`'
  id: totrans-1110
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7241)'
  id: totrans-1111
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  id: totrans-1112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Parameters
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`) — The name of the Inference Endpoint to pause.'
  id: totrans-1114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`namespace` (`str`, *optional*) — The namespace in which the Inference Endpoint
    is located. Defaults to the current user.'
  id: totrans-1115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-1116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
- en: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
- en: information about the paused Inference Endpoint.
  id: totrans-1119
  prefs: []
  type: TYPE_NORMAL
- en: Pause an Inference Endpoint.
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
- en: A paused Inference Endpoint will not be charged. It can be resumed at any time
    using [resume_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.resume_inference_endpoint).
    This is different than scaling the Inference Endpoint to zero with [scale_to_zero_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.scale_to_zero_inference_endpoint),
    which would be automatically restarted when a request is made to it.
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
- en: For convenience, you can also pause an Inference Endpoint using [pause_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.pause_inference_endpoint).
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
- en: '#### `pause_space`'
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6612)'
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  id: totrans-1125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Parameters
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — ID of the Space to pause. Example: `"Salesforce/BLIP2"`.'
  id: totrans-1127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
- en: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
- en: Runtime information about your Space including `stage=PAUSED` and requested
    hardware.
  id: totrans-1131
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1132
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    or [BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)'
  id: totrans-1133
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If your Space is not found (error 404). Most probably wrong repo_id or your
    space is private but you are not authenticated.'
  id: totrans-1134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — 403 Forbidden: only the owner of a Space can pause it. If you want to manage
    a Space that you don’t own, either ask the owner by opening a Discussion or duplicate
    the Space.'
  id: totrans-1135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)
    — If your Space is a static Space. Static Spaces are always running and never
    billed. If you want to hide a static Space, you can set it to private.'
  id: totrans-1136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pause your Space.
  id: totrans-1137
  prefs: []
  type: TYPE_NORMAL
- en: A paused Space stops executing until manually restarted by its owner. This is
    different from the sleeping state in which free Spaces go after 48h of inactivity.
    Paused time is not billed to your account, no matter the hardware you’ve selected.
    To restart your Space, use [restart_space()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.restart_space)
    and go to your Space settings page.
  id: totrans-1138
  prefs: []
  type: TYPE_NORMAL
- en: For more details, please visit [the docs](https://huggingface.co/docs/hub/spaces-gpus#pause).
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
- en: '#### `preupload_lfs_files`'
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3925)'
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  id: totrans-1142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Parameters
  id: totrans-1143
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The repository in which you will commit the files, for
    example: `"username/custom_transformers"`.'
  id: totrans-1144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`operations` (`Iterable` of [CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd))
    — The list of files to upload. Warning: the objects in this list will be mutated
    to include information relative to the upload. Do not reuse the same objects for
    multiple commits.'
  id: totrans-1145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-1146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of repository to upload to (e.g.
    `"model"` -default-, `"dataset"` or `"space"`).'
  id: totrans-1147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  id: totrans-1148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`create_pr` (`boolean`, *optional*) — Whether or not you plan to create a Pull
    Request with that commit. Defaults to `False`.'
  id: totrans-1149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`num_threads` (`int`, *optional*) — Number of concurrent threads for uploading
    files. Defaults to 5. Setting it to 2 means at most 2 files will be uploaded concurrently.'
  id: totrans-1150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`gitignore_content` (`str`, *optional*) — The content of the `.gitignore` file
    to know which files should be ignored. The order of priority is to first check
    if `gitignore_content` is passed, then check if the `.gitignore` file is present
    in the list of files to commit and finally default to the `.gitignore` file already
    hosted on the Hub (if any).'
  id: totrans-1151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pre-upload LFS files to S3 in preparation on a future commit.
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
- en: This method is useful if you are generating the files to upload on-the-fly and
    you don’t want to store them in memory before uploading them all at once.
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
- en: This is a power-user method. You shouldn’t need to call it directly to make
    a normal commit. Use [create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit)
    directly instead.
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
- en: Commit operations will be mutated during the process. In particular, the attached
    `path_or_fileobj` will be removed after the upload to save memory (and replaced
    by an empty `bytes` object). Do not reuse the same objects except to pass them
    to [create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit).
    If you don’t want to remove the attached content from the commit operation object,
    pass `free_memory=False`.
  id: totrans-1155
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1156
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  id: totrans-1157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '#### `reject_access_request`'
  id: totrans-1158
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L8064)'
  id: totrans-1159
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  id: totrans-1160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Parameters
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The id of the repo to reject access request for.'
  id: totrans-1162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`user` (`str`) — The username of the user which access request should be rejected.'
  id: totrans-1163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repo to reject access request
    for. Must be one of `model`, `dataset` or `space`. Defaults to `model`.'
  id: totrans-1164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-1165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1166
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError`'
  id: totrans-1167
  prefs: []
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 400 if the repo is not gated.'
  id: totrans-1168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 403 if you only have read-only access to the repo. This
    can be the case if you don’t have `write` or `admin` role in the organization
    the repo belongs to or if you passed a `read` token.'
  id: totrans-1169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 404 if the user does not exist on the Hub.'
  id: totrans-1170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 404 if the user access request cannot be found.'
  id: totrans-1171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`HTTPError` — HTTP 404 if the user access request is already in the rejected
    list.'
  id: totrans-1172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reject an access request from a user for a given gated repo.
  id: totrans-1173
  prefs: []
  type: TYPE_NORMAL
- en: A rejected request will go to the rejected list. The user cannot download any
    file of the repo. Rejected requests can be accepted or cancelled at any time using
    [accept_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.accept_access_request)
    and [cancel_access_request()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.cancel_access_request).
    A cancelled request will go back to the pending list while an accepted request
    will go to the accepted list.
  id: totrans-1174
  prefs: []
  type: TYPE_NORMAL
- en: For more info about gated repos, see [https://huggingface.co/docs/hub/models-gated](https://huggingface.co/docs/hub/models-gated).
  id: totrans-1175
  prefs: []
  type: TYPE_NORMAL
- en: '#### `rename_discussion`'
  id: totrans-1176
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6054)'
  id: totrans-1177
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  id: totrans-1178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Parameters
  id: totrans-1179
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`discussion_num` (`int`) — The number of the Discussion or Pull Request . Must
    be a strictly positive integer.'
  id: totrans-1181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`new_title` (`str`) — The new title for the discussion'
  id: totrans-1182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-1183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-1184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1185
  prefs: []
  type: TYPE_NORMAL
- en: '[DiscussionTitleChange](/docs/huggingface_hub/v0.20.3/en/package_reference/community#huggingface_hub.DiscussionTitleChange)'
  id: totrans-1186
  prefs: []
  type: TYPE_NORMAL
- en: the title change event
  id: totrans-1187
  prefs: []
  type: TYPE_NORMAL
- en: Renames a Discussion.
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  id: totrans-1189
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  id: totrans-1190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'Raises the following errors:'
  id: totrans-1191
  prefs: []
  type: TYPE_NORMAL
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-1192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-1193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `repo_exists`'
  id: totrans-1195
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2283)'
  id: totrans-1196
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  id: totrans-1197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Parameters
  id: totrans-1198
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if getting
    repository info from a dataset or a space, `None` or `"model"` if getting repository
    info from a model. Default is `None`.'
  id: totrans-1200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Checks if a repository exists on the Hugging Face Hub.
  id: totrans-1202
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  id: totrans-1203
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  id: totrans-1204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '#### `repo_info`'
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2215)'
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  id: totrans-1207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Parameters
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The revision of the repository from which
    to get the information.'
  id: totrans-1210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if getting
    repository info from a dataset or a space, `None` or `"model"` if getting repository
    info from a model. Default is `None`.'
  id: totrans-1211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timeout` (`float`, *optional*) — Whether to set a timeout for the request
    to the Hub.'
  id: totrans-1212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`files_metadata` (`bool`, *optional*) — Whether or not to retrieve metadata
    for files in the repository (size, LFS metadata, etc). Defaults to `False`.'
  id: totrans-1213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1215
  prefs: []
  type: TYPE_NORMAL
- en: '`Union[SpaceInfo, DatasetInfo, ModelInfo]`'
  id: totrans-1216
  prefs: []
  type: TYPE_NORMAL
- en: The repository information, as a [huggingface_hub.hf_api.DatasetInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.DatasetInfo),
    [huggingface_hub.hf_api.ModelInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.ModelInfo)
    or [huggingface_hub.hf_api.SpaceInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.SpaceInfo)
    object.
  id: totrans-1217
  prefs: []
  type: TYPE_NORMAL
- en: Get the info object for a given repo of a given type.
  id: totrans-1218
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1219
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-1221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `request_space_hardware`'
  id: totrans-1222
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6516)'
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  id: totrans-1224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Parameters
  id: totrans-1225
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — ID of the repo to update. Example: `"bigcode/in-the-stack"`.'
  id: totrans-1226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`hardware` (`str` or [SpaceHardware](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceHardware))
    — Hardware on which to run the Space. Example: `"t4-medium"`.'
  id: totrans-1227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sleep_time` (`int`, *optional*) — Number of seconds of inactivity to wait
    before a Space is put to sleep. Set to `-1` if you don’t want your Space to sleep
    (default behavior for upgraded hardware). For free hardware, you can’t configure
    the sleep time (value is fixed to 48 hours of inactivity). See [https://huggingface.co/docs/hub/spaces-gpus#sleep-time](https://huggingface.co/docs/hub/spaces-gpus#sleep-time)
    for more details.'
  id: totrans-1229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
- en: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
  id: totrans-1231
  prefs: []
  type: TYPE_NORMAL
- en: Runtime information about a Space including Space stage and hardware.
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
- en: Request new hardware for a Space.
  id: totrans-1233
  prefs: []
  type: TYPE_NORMAL
- en: It is also possible to request hardware directly when creating the Space repo!
    See [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    for details.
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
- en: '#### `request_space_storage`'
  id: totrans-1235
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6806)'
  id: totrans-1236
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  id: totrans-1237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Parameters
  id: totrans-1238
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — ID of the Space to update. Example: `"HuggingFaceH4/open_llm_leaderboard"`.'
  id: totrans-1239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`storage` (`str` or [SpaceStorage](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceStorage))
    — Storage tier. Either ‘small’, ‘medium’, or ‘large’.'
  id: totrans-1240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1242
  prefs: []
  type: TYPE_NORMAL
- en: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
- en: Runtime information about a Space including Space stage and hardware.
  id: totrans-1244
  prefs: []
  type: TYPE_NORMAL
- en: Request persistent storage for a Space.
  id: totrans-1245
  prefs: []
  type: TYPE_NORMAL
- en: It is not possible to decrease persistent storage after its granted. To do so,
    you must delete it via [delete_space_storage()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_space_storage).
  id: totrans-1246
  prefs: []
  type: TYPE_NORMAL
- en: '#### `restart_space`'
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6648)'
  id: totrans-1248
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  id: totrans-1249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Parameters
  id: totrans-1250
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — ID of the Space to restart. Example: `"Salesforce/BLIP2"`.'
  id: totrans-1251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`factory_reboot` (`bool`, *optional*) — If `True`, the Space will be rebuilt
    from scratch without caching any requirements.'
  id: totrans-1253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1254
  prefs: []
  type: TYPE_NORMAL
- en: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
- en: Runtime information about your Space.
  id: totrans-1256
  prefs: []
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1257
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    or [BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)'
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If your Space is not found (error 404). Most probably wrong repo_id or your
    space is private but you are not authenticated.'
  id: totrans-1259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[HfHubHTTPError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError)
    — 403 Forbidden: only the owner of a Space can restart it. If you want to restart
    a Space that you don’t own, either ask the owner by opening a Discussion or duplicate
    the Space.'
  id: totrans-1260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)
    — If your Space is a static Space. Static Spaces are always running and never
    billed. If you want to hide a static Space, you can set it to private.'
  id: totrans-1261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restart your Space.
  id: totrans-1262
  prefs: []
  type: TYPE_NORMAL
- en: This is the only way to programmatically restart a Space if you’ve put it on
    Pause (see [pause_space()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.pause_space)).
    You must be the owner of the Space to restart it. If you are using an upgraded
    hardware, your account will be billed as soon as the Space is restarted. You can
    trigger a restart no matter the current state of a Space.
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
- en: For more details, please visit [the docs](https://huggingface.co/docs/hub/spaces-gpus#pause).
  id: totrans-1264
  prefs: []
  type: TYPE_NORMAL
- en: '#### `resume_inference_endpoint`'
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7273)'
  id: totrans-1266
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  id: totrans-1267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Parameters
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`) — The name of the Inference Endpoint to resume.'
  id: totrans-1269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`namespace` (`str`, *optional*) — The namespace in which the Inference Endpoint
    is located. Defaults to the current user.'
  id: totrans-1270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-1271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
- en: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
- en: information about the resumed Inference Endpoint.
  id: totrans-1274
  prefs: []
  type: TYPE_NORMAL
- en: Resume an Inference Endpoint.
  id: totrans-1275
  prefs: []
  type: TYPE_NORMAL
- en: For convenience, you can also resume an Inference Endpoint using [InferenceEndpoint.resume()](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint.resume).
  id: totrans-1276
  prefs: []
  type: TYPE_NORMAL
- en: '#### `run_as_future`'
  id: totrans-1277
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1251)'
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  id: totrans-1279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Parameters
  id: totrans-1280
  prefs: []
  type: TYPE_NORMAL
- en: '`fn` (`Callable`) — The method to run in the background.'
  id: totrans-1281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`*args,` **kwargs — Arguments with which the method will be called.'
  id: totrans-1282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
- en: '`Future`'
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
- en: a [Future](https://docs.python.org/3/library/concurrent.futures.html#future-objects)
    instance to get the result of the task.
  id: totrans-1285
  prefs: []
  type: TYPE_NORMAL
- en: Run a method in the background and return a Future instance.
  id: totrans-1286
  prefs: []
  type: TYPE_NORMAL
- en: The main goal is to run methods without blocking the main thread (e.g. to push
    data during a training). Background jobs are queued to preserve order but are
    not ran in parallel. If you need to speed-up your scripts by parallelizing lots
    of call to the API, you must setup and use your own [ThreadPoolExecutor](https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor).
  id: totrans-1287
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: Most-used methods like [upload_file()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file),
    [upload_folder()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder)
    and [create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit)
    have a `run_as_future: bool` argument to directly call them in the background.
    This is equivalent to calling `api.run_as_future(...)` on them but less verbose.'
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1289
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  id: totrans-1290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '#### `scale_to_zero_inference_endpoint`'
  id: totrans-1291
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7301)'
  id: totrans-1292
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  id: totrans-1293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Parameters
  id: totrans-1294
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`) — The name of the Inference Endpoint to scale to zero.'
  id: totrans-1295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`namespace` (`str`, *optional*) — The namespace in which the Inference Endpoint
    is located. Defaults to the current user.'
  id: totrans-1296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-1297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1298
  prefs: []
  type: TYPE_NORMAL
- en: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
- en: information about the scaled-to-zero Inference Endpoint.
  id: totrans-1300
  prefs: []
  type: TYPE_NORMAL
- en: Scale Inference Endpoint to zero.
  id: totrans-1301
  prefs: []
  type: TYPE_NORMAL
- en: An Inference Endpoint scaled to zero will not be charged. It will be resume
    on the next request to it, with a cold start delay. This is different than pausing
    the Inference Endpoint with [pause_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.pause_inference_endpoint),
    which would require a manual resume with [resume_inference_endpoint()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.resume_inference_endpoint).
  id: totrans-1302
  prefs: []
  type: TYPE_NORMAL
- en: For convenience, you can also scale an Inference Endpoint to zero using [InferenceEndpoint.scale_to_zero()](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint.scale_to_zero).
  id: totrans-1303
  prefs: []
  type: TYPE_NORMAL
- en: '#### `set_space_sleep_time`'
  id: totrans-1304
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L6566)'
  id: totrans-1305
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  id: totrans-1306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Parameters
  id: totrans-1307
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — ID of the repo to update. Example: `"bigcode/in-the-stack"`.'
  id: totrans-1308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sleep_time` (`int`, *optional*) — Number of seconds of inactivity to wait
    before a Space is put to sleep. Set to `-1` if you don’t want your Space to pause
    (default behavior for upgraded hardware). For free hardware, you can’t configure
    the sleep time (value is fixed to 48 hours of inactivity). See [https://huggingface.co/docs/hub/spaces-gpus#sleep-time](https://huggingface.co/docs/hub/spaces-gpus#sleep-time)
    for more details.'
  id: totrans-1309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1311
  prefs: []
  type: TYPE_NORMAL
- en: '[SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)'
  id: totrans-1312
  prefs: []
  type: TYPE_NORMAL
- en: Runtime information about a Space including Space stage and hardware.
  id: totrans-1313
  prefs: []
  type: TYPE_NORMAL
- en: Set a custom sleep time for a Space running on upgraded hardware..
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
- en: Your Space will go to sleep after X seconds of inactivity. You are not billed
    when your Space is in “sleep” mode. If a new visitor lands on your Space, it will
    “wake it up”. Only upgraded hardware can have a configurable sleep time. To know
    more about the sleep stage, please refer to [https://huggingface.co/docs/hub/spaces-gpus#sleep-time](https://huggingface.co/docs/hub/spaces-gpus#sleep-time).
  id: totrans-1315
  prefs: []
  type: TYPE_NORMAL
- en: It is also possible to set a custom sleep time when requesting hardware with
    [request_space_hardware()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.request_space_hardware).
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
- en: '#### `snapshot_download`'
  id: totrans-1317
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4991)'
  id: totrans-1318
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  id: totrans-1319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: Parameters
  id: totrans-1320
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A user or an organization name and a repo name separated
    by a `/`.'
  id: totrans-1321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if downloading
    from a dataset or space, `None` or `"model"` if downloading from a model. Default
    is `None`.'
  id: totrans-1322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — An optional Git revision id which can be a
    branch name, a tag, or a commit hash.'
  id: totrans-1323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cache_dir` (`str`, `Path`, *optional*) — Path to the folder where cached files
    are stored.'
  id: totrans-1324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_dir` (`str` or `Path`, *optional*) — If provided, the downloaded files
    will be placed under this directory, either as symlinks (default) or regular files
    (see description for more details).'
  id: totrans-1325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_dir_use_symlinks` (`"auto"` or `bool`, defaults to `"auto"`) — To be
    used with `local_dir`. If set to “auto”, the cache directory will be used and
    the file will be either duplicated or symlinked to the local directory depending
    on its size. It set to `True`, a symlink will be created, no matter the file size.
    If set to `False`, the file will either be duplicated from cache (if already exists)
    or downloaded from the Hub and not cached. See description for more details.'
  id: totrans-1326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`proxies` (`dict`, *optional*) — Dictionary mapping protocol to the URL of
    the proxy passed to `requests.request`.'
  id: totrans-1327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`etag_timeout` (`float`, *optional*, defaults to `10`) — When fetching ETag,
    how many seconds to wait for the server to send data before giving up which is
    passed to `requests.request`.'
  id: totrans-1328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`resume_download` (`bool`, *optional*, defaults to `False) -- If` True`, resume
    a previously interrupted download.'
  id: totrans-1329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether the file
    should be downloaded even if it already exists in the local cache.'
  id: totrans-1330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) — If `True`, avoid
    downloading the file and return the path to the local cached file if it exists.'
  id: totrans-1332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`allow_patterns` (`List[str]` or `str`, *optional*) — If provided, only files
    matching at least one pattern are downloaded.'
  id: totrans-1333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ignore_patterns` (`List[str]` or `str`, *optional*) — If provided, files matching
    any of the patterns are not downloaded.'
  id: totrans-1334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max_workers` (`int`, *optional*) — Number of concurrent threads to download
    files (1 thread = 1 file download). Defaults to 8.'
  id: totrans-1335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tqdm_class` (`tqdm`, *optional*) — If provided, overwrites the default behavior
    for the progress bar. Passed argument must inherit from `tqdm.auto.tqdm` or at
    least mimic its behavior. Note that the `tqdm_class` is not passed to each individual
    download. Defaults to the custom HF progress bar that can be disabled by setting
    `HF_HUB_DISABLE_PROGRESS_BARS` environment variable.'
  id: totrans-1336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download repo files.
  id: totrans-1337
  prefs: []
  type: TYPE_NORMAL
- en: Download a whole snapshot of a repo’s files at the specified revision. This
    is useful when you want all files from a repo, because you don’t know which ones
    you will need a priori. All files are nested inside a folder in order to keep
    their actual filename relative to that folder. You can also filter which files
    to download using `allow_patterns` and `ignore_patterns`.
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
- en: 'If `local_dir` is provided, the file structure from the repo will be replicated
    in this location. You can configure how you want to move those files:'
  id: totrans-1339
  prefs: []
  type: TYPE_NORMAL
- en: If `local_dir_use_symlinks="auto"` (default), files are downloaded and stored
    in the cache directory as blob files. Small files (<5MB) are duplicated in `local_dir`
    while a symlink is created for bigger files. The goal is to be able to manually
    edit and save small files without corrupting the cache while saving disk space
    for binary files. The 5MB threshold can be configured with the `HF_HUB_LOCAL_DIR_AUTO_SYMLINK_THRESHOLD`
    environment variable.
  id: totrans-1340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If `local_dir_use_symlinks=True`, files are downloaded, stored in the cache
    directory and symlinked in `local_dir`. This is optimal in term of disk usage
    but files must not be manually edited.
  id: totrans-1341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If `local_dir_use_symlinks=False` and the blob files exist in the cache directory,
    they are duplicated in the local dir. This means disk usage is not optimized.
  id: totrans-1342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, if `local_dir_use_symlinks=False` and the blob files do not exist in
    the cache directory, then the files are downloaded and directly placed under `local_dir`.
    This means if you need to download them again later, they will be re-downloaded
    entirely.
  id: totrans-1343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An alternative would be to clone the repo but this requires git and git-lfs
    to be installed and properly configured. It is also not possible to filter which
    files to download when cloning a repository using git.
  id: totrans-1344
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1345
  prefs: []
  type: TYPE_NORMAL
- en: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    if `token=True` and the token cannot be found.'
  id: totrans-1346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`OSError`](https://docs.python.org/3/library/exceptions.html#OSError) if ETag
    cannot be determined.'
  id: totrans-1347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-1348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `space_info`'
  id: totrans-1349
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2152)'
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  id: totrans-1351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Parameters
  id: totrans-1352
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The revision of the space repository from
    which to get the information.'
  id: totrans-1354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timeout` (`float`, *optional*) — Whether to set a timeout for the request
    to the Hub.'
  id: totrans-1355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`files_metadata` (`bool`, *optional*) — Whether or not to retrieve metadata
    for files in the repository (size, LFS metadata, etc). Defaults to `False`.'
  id: totrans-1356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-1357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1358
  prefs: []
  type: TYPE_NORMAL
- en: '[SpaceInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.SpaceInfo)'
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
- en: The space repository information.
  id: totrans-1360
  prefs: []
  type: TYPE_NORMAL
- en: Get info on one specific Space on huggingface.co.
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
- en: Space can be private if you pass an acceptable token.
  id: totrans-1362
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1363
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-1365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `super_squash_history`'
  id: totrans-1366
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L2978)'
  id: totrans-1367
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  id: totrans-1368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: Parameters
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — A namespace (user or an organization) and a repo name separated
    by a `/`.'
  id: totrans-1370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`branch` (`str`, *optional*) — The branch to squash. Defaults to the head of
    the `"main"` branch.'
  id: totrans-1371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_message` (`str`, *optional*) — The commit message to use for the squashed
    commit.'
  id: totrans-1372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if listing
    commits from a dataset or a Space, `None` or `"model"` if listing from a model.
    Default is `None`.'
  id: totrans-1373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If the machine is logged in (through `huggingface-cli login` or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token can be automatically retrieved from the cache.'
  id: totrans-1374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    or [RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    or [BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)'
  id: totrans-1376
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-1377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    — If the branch to squash cannot be found.'
  id: totrans-1378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[BadRequestError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.BadRequestError)
    — If invalid reference for a branch. You cannot squash history on tags.'
  id: totrans-1379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Squash commit history on a branch for a repo on the Hub.
  id: totrans-1380
  prefs: []
  type: TYPE_NORMAL
- en: Squashing the repo history is useful when you know you’ll make hundreds of commits
    and you don’t want to clutter the history. Squashing commits can only be performed
    from the head of a branch.
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
- en: Once squashed, the commit history cannot be retrieved. This is a non-revertible
    operation.
  id: totrans-1382
  prefs: []
  type: TYPE_NORMAL
- en: Once the history of a branch has been squashed, it is not possible to merge
    it back into another branch since their history will have diverged.
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1384
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  id: totrans-1385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '#### `unlike`'
  id: totrans-1386
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1849)'
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  id: totrans-1388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Parameters
  id: totrans-1389
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The repository to unlike. Example: `"user/my-cool-model"`.'
  id: totrans-1390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token. Will default to the stored
    token.'
  id: totrans-1391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if unliking
    a dataset or space, `None` or `"model"` if unliking a model. Default is `None`.'
  id: totrans-1392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1393
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)'
  id: totrans-1394
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    — If repository is not found (error 404): wrong repo_id/repo_type, private but
    not authenticated or repo does not exist.'
  id: totrans-1395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unlike a given repo on the Hub (e.g. remove from favorite list).
  id: totrans-1396
  prefs: []
  type: TYPE_NORMAL
- en: See also [like()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.like)
    and [list_liked_repos()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_liked_repos).
  id: totrans-1397
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1398
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  id: totrans-1399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '#### `update_collection_item`'
  id: totrans-1400
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7677)'
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  id: totrans-1402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: Parameters
  id: totrans-1403
  prefs: []
  type: TYPE_NORMAL
- en: '`collection_slug` (`str`) — Slug of the collection to update. Example: `"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`.'
  id: totrans-1404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`item_object_id` (`str`) — ID of the item in the collection. This is not the
    id of the item on the Hub (repo_id or paper id). It must be retrieved from a [CollectionItem](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.CollectionItem)
    object. Example: `collection.items[0].item_object_id`.'
  id: totrans-1405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`note` (`str`, *optional*) — A note to attach to the item in the collection.
    The maximum size for a note is 500 characters.'
  id: totrans-1406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`position` (`int`, *optional*) — New position of the item in the collection.'
  id: totrans-1407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update an item in a collection.
  id: totrans-1409
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1410
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  id: totrans-1411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '#### `update_collection_metadata`'
  id: totrans-1412
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7504)'
  id: totrans-1413
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  id: totrans-1414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Parameters
  id: totrans-1415
  prefs: []
  type: TYPE_NORMAL
- en: '`collection_slug` (`str`) — Slug of the collection to update. Example: `"TheBloke/recent-models-64f9a55bb3115b4f513ec026"`.'
  id: totrans-1416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`title` (`str`) — Title of the collection to update.'
  id: totrans-1417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`description` (`str`, *optional*) — Description of the collection to update.'
  id: totrans-1418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`position` (`int`, *optional*) — New position of the collection in the list
    of collections of the user.'
  id: totrans-1419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`private` (`bool`, *optional*) — Whether the collection should be private or
    not.'
  id: totrans-1420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`theme` (`str`, *optional*) — Theme of the collection on the Hub.'
  id: totrans-1421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update metadata of a collection on the Hub.
  id: totrans-1423
  prefs: []
  type: TYPE_NORMAL
- en: All arguments are optional. Only provided metadata will be updated.
  id: totrans-1424
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns: [Collection](/docs/huggingface_hub/v0.20.3/en/package_reference/collections#huggingface_hub.Collection)'
  id: totrans-1425
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1426
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  id: totrans-1427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '#### `update_inference_endpoint`'
  id: totrans-1428
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L7127)'
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  id: totrans-1430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Parameters
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`) — The name of the Inference Endpoint to update.'
  id: totrans-1432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`accelerator` (`str`, *optional*) — The hardware accelerator to be used for
    inference (e.g. `"cpu"`).'
  id: totrans-1433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`instance_size` (`str`, *optional*) — The size or type of the instance to be
    used for hosting the model (e.g. `"large"`).'
  id: totrans-1434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`instance_type` (`str`, *optional*) — The cloud instance type where the Inference
    Endpoint will be deployed (e.g. `"c6i"`).'
  id: totrans-1435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`min_replica` (`int`, *optional*) — The minimum number of replicas (instances)
    to keep running for the Inference Endpoint.'
  id: totrans-1436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max_replica` (`int`, *optional*) — The maximum number of replicas (instances)
    to scale to for the Inference Endpoint.'
  id: totrans-1437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repository` (`str`, *optional*) — The name of the model repository associated
    with the Inference Endpoint (e.g. `"gpt2"`).'
  id: totrans-1438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`framework` (`str`, *optional*) — The machine learning framework used for the
    model (e.g. `"custom"`).'
  id: totrans-1439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The specific model revision to deploy on the
    Inference Endpoint (e.g. `"6c0e6080953db56375760c0471a8c5f2929baf11"`).'
  id: totrans-1440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task` (`str`, *optional*) — The task on which to deploy the model (e.g. `"text-classification"`).'
  id: totrans-1441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`namespace` (`str`, *optional*) — The namespace where the Inference Endpoint
    will be updated. Defaults to the current user’s namespace.'
  id: totrans-1442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).'
  id: totrans-1443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1444
  prefs: []
  type: TYPE_NORMAL
- en: '[InferenceEndpoint](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint)'
  id: totrans-1445
  prefs: []
  type: TYPE_NORMAL
- en: information about the updated Inference Endpoint.
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
- en: Update an Inference Endpoint.
  id: totrans-1447
  prefs: []
  type: TYPE_NORMAL
- en: This method allows the update of either the compute configuration, the deployed
    model, or both. All arguments are optional but at least one must be provided.
  id: totrans-1448
  prefs: []
  type: TYPE_NORMAL
- en: For convenience, you can also update an Inference Endpoint using [InferenceEndpoint.update()](/docs/huggingface_hub/v0.20.3/en/package_reference/inference_endpoints#huggingface_hub.InferenceEndpoint.update).
  id: totrans-1449
  prefs: []
  type: TYPE_NORMAL
- en: '#### `update_repo_visibility`'
  id: totrans-1450
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L3245)'
  id: totrans-1451
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  id: totrans-1452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: Parameters
  id: totrans-1453
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`, *optional*) — A namespace (user or an organization) and a
    repo name separated by a `/`.'
  id: totrans-1454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`private` (`bool`, *optional*, defaults to `False`) — Whether the model repo
    should be private.'
  id: totrans-1455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — An authentication token (See [https://huggingface.co/settings/token](https://huggingface.co/settings/token))'
  id: totrans-1456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-1457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update the visibility setting of a repository.
  id: totrans-1458
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `upload_file`'
  id: totrans-1461
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4111)'
  id: totrans-1462
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  id: totrans-1463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Parameters
  id: totrans-1464
  prefs: []
  type: TYPE_NORMAL
- en: '`path_or_fileobj` (`str`, `Path`, `bytes`, or `IO`) — Path to a file on the
    local machine or binary data stream / fileobj / buffer.'
  id: totrans-1465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`path_in_repo` (`str`) — Relative filepath in the repo, for example: `"checkpoints/1fec34a/weights.bin"`'
  id: totrans-1466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The repository to which the file will be uploaded, for
    example: `"username/custom_transformers"`'
  id: totrans-1467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `HfApi.login`
    method. Will default to the stored token.'
  id: totrans-1468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-1469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  id: totrans-1470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_message` (`str`, *optional*) — The summary / title / first line of
    the generated commit'
  id: totrans-1471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_description` (`str` *optional*) — The description of the generated
    commit'
  id: totrans-1472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`create_pr` (`boolean`, *optional*) — Whether or not to create a Pull Request
    with that commit. Defaults to `False`. If `revision` is not set, PR is opened
    against the `"main"` branch. If `revision` is set and is a branch, PR is opened
    against this branch. If `revision` is set and is not a branch name (example: a
    commit oid), an `RevisionNotFoundError` is returned by the server.'
  id: totrans-1473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parent_commit` (`str`, *optional*) — The OID / SHA of the parent commit, as
    a hexadecimal string. Shorthands (7 first characters) are also supported. If specified
    and `create_pr` is `False`, the commit will fail if `revision` does not point
    to `parent_commit`. If specified and `create_pr` is `True`, the pull request will
    be created from `parent_commit`. Specifying `parent_commit` ensures the repo has
    not changed before committing the changes, and can be especially useful if the
    repo is updated / committed to concurrently.'
  id: totrans-1474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`run_as_future` (`bool`, *optional*) — Whether or not to run this method in
    the background. Background jobs are run sequentially without blocking the main
    thread. Passing `run_as_future=True` will return a [Future](https://docs.python.org/3/library/concurrent.futures.html#future-objects)
    object. Defaults to `False`.'
  id: totrans-1475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1476
  prefs: []
  type: TYPE_NORMAL
- en: '[CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    or `Future`'
  id: totrans-1477
  prefs: []
  type: TYPE_NORMAL
- en: Instance of [CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    containing information about the newly created commit (commit hash, commit url,
    pr url, commit message,…). If `run_as_future=True` is passed, returns a Future
    object which will contain the result when executed.
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
- en: Upload a local file (up to 50 GB) to the given repo. The upload is done through
    a HTTP post request, and doesn’t require git or git-lfs to be installed.
  id: totrans-1479
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1480
  prefs: []
  type: TYPE_NORMAL
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-1481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-1482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RepositoryNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError)
    If the repository to download from cannot be found. This may be because it doesn’t
    exist, or because it is set to `private` and you do not have access.'
  id: totrans-1483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RevisionNotFoundError](/docs/huggingface_hub/v0.20.3/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError)
    If the revision to download from cannot be found.'
  id: totrans-1484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`upload_file` assumes that the repo already exists on the Hub. If you get a
    Client error 404, please make sure you are authenticated and that `repo_id` and
    `repo_type` are set correctly. If repo does not exist, create it first using [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo).'
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1486
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  id: totrans-1487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '#### `upload_folder`'
  id: totrans-1488
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L4369)'
  id: totrans-1489
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  id: totrans-1490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: Parameters
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The repository to which the file will be uploaded, for
    example: `"username/custom_transformers"`'
  id: totrans-1492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`folder_path` (`str` or `Path`) — Path to the folder to upload on the local
    file system'
  id: totrans-1493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`path_in_repo` (`str`, *optional*) — Relative path of the directory in the
    repo, for example: `"checkpoints/1fec34a/results"`. Will default to the root folder
    of the repository.'
  id: totrans-1494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `HfApi.login`
    method. Will default to the stored token.'
  id: totrans-1495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if uploading
    to a dataset or space, `None` or `"model"` if uploading to a model. Default is
    `None`.'
  id: totrans-1496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  id: totrans-1497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_message` (`str`, *optional*) — The summary / title / first line of
    the generated commit. Defaults to: `f"Upload {path_in_repo} with huggingface_hub"`'
  id: totrans-1498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_description` (`str` *optional*) — The description of the generated
    commit'
  id: totrans-1499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`create_pr` (`boolean`, *optional*) — Whether or not to create a Pull Request
    with that commit. Defaults to `False`. If `revision` is not set, PR is opened
    against the `"main"` branch. If `revision` is set and is a branch, PR is opened
    against this branch. If `revision` is set and is not a branch name (example: a
    commit oid), an `RevisionNotFoundError` is returned by the server. If both `multi_commits`
    and `create_pr` are True, the PR created in the multi-commit process is kept opened.'
  id: totrans-1500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parent_commit` (`str`, *optional*) — The OID / SHA of the parent commit, as
    a hexadecimal string. Shorthands (7 first characters) are also supported. If specified
    and `create_pr` is `False`, the commit will fail if `revision` does not point
    to `parent_commit`. If specified and `create_pr` is `True`, the pull request will
    be created from `parent_commit`. Specifying `parent_commit` ensures the repo has
    not changed before committing the changes, and can be especially useful if the
    repo is updated / committed to concurrently.'
  id: totrans-1501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`allow_patterns` (`List[str]` or `str`, *optional*) — If provided, only files
    matching at least one pattern are uploaded.'
  id: totrans-1502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ignore_patterns` (`List[str]` or `str`, *optional*) — If provided, files matching
    any of the patterns are not uploaded.'
  id: totrans-1503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`delete_patterns` (`List[str]` or `str`, *optional*) — If provided, remote
    files matching any of the patterns will be deleted from the repo while committing
    new files. This is useful if you don’t know which files have already been uploaded.
    Note: to avoid discrepancies the `.gitattributes` file is not deleted even if
    it matches the pattern.'
  id: totrans-1504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multi_commits` (`bool`) — If True, changes are pushed to a PR using a multi-commit
    process. Defaults to `False`.'
  id: totrans-1505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multi_commits_verbose` (`bool`) — If True and `multi_commits` is used, more
    information will be displayed to the user.'
  id: totrans-1506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`run_as_future` (`bool`, *optional*) — Whether or not to run this method in
    the background. Background jobs are run sequentially without blocking the main
    thread. Passing `run_as_future=True` will return a [Future](https://docs.python.org/3/library/concurrent.futures.html#future-objects)
    object. Defaults to `False`.'
  id: totrans-1507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1508
  prefs: []
  type: TYPE_NORMAL
- en: '[CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    or `Future`'
  id: totrans-1509
  prefs: []
  type: TYPE_NORMAL
- en: 'Instance of [CommitInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitInfo)
    containing information about the newly created commit (commit hash, commit url,
    pr url, commit message,…). If `run_as_future=True` is passed, returns a Future
    object which will contain the result when executed. `str` or `Future`: If `multi_commits=True`,
    returns the url of the PR created to push the changes. If `run_as_future=True`
    is passed, returns a Future object which will contain the result when executed.'
  id: totrans-1510
  prefs: []
  type: TYPE_NORMAL
- en: Upload a local folder to the given repo. The upload is done through a HTTP requests,
    and doesn’t require git or git-lfs to be installed.
  id: totrans-1511
  prefs: []
  type: TYPE_NORMAL
- en: The structure of the folder will be preserved. Files with the same name already
    present in the repository will be overwritten. Others will be left untouched.
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
- en: Use the `allow_patterns` and `ignore_patterns` arguments to specify which files
    to upload. These parameters accept either a single pattern or a list of patterns.
    Patterns are Standard Wildcards (globbing patterns) as documented [here](https://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm).
    If both `allow_patterns` and `ignore_patterns` are provided, both constraints
    apply. By default, all files from the folder are uploaded.
  id: totrans-1513
  prefs: []
  type: TYPE_NORMAL
- en: Use the `delete_patterns` argument to specify remote files you want to delete.
    Input type is the same as for `allow_patterns` (see above). If `path_in_repo`
    is also provided, the patterns are matched against paths relative to this folder.
    For example, `upload_folder(..., path_in_repo="experiment", delete_patterns="logs/*")`
    will delete any remote file under `./experiment/logs/`. Note that the `.gitattributes`
    file will not be deleted even if it matches the patterns.
  id: totrans-1514
  prefs: []
  type: TYPE_NORMAL
- en: Any `.git/` folder present in any subdirectory will be ignored. However, please
    be aware that the `.gitignore` file is not taken into account.
  id: totrans-1515
  prefs: []
  type: TYPE_NORMAL
- en: Uses `HfApi.create_commit` under the hood.
  id: totrans-1516
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  id: totrans-1517
  prefs: []
  type: TYPE_NORMAL
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the HuggingFace API returned an error'
  id: totrans-1518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if some parameter value is invalid'
  id: totrans-1519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`upload_folder` assumes that the repo already exists on the Hub. If you get
    a Client error 404, please make sure you are authenticated and that `repo_id`
    and `repo_type` are set correctly. If repo does not exist, create it first using
    [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo).'
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
- en: '`multi_commits` is experimental. Its API and behavior is subject to change
    in the future without prior notice.'
  id: totrans-1521
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  id: totrans-1523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '#### `whoami`'
  id: totrans-1524
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1291)'
  id: totrans-1525
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  id: totrans-1526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: Parameters
  id: totrans-1527
  prefs: []
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Hugging Face token. Will default to the locally
    saved token if not provided.'
  id: totrans-1528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Call HF API to know “whoami”.
  id: totrans-1529
  prefs: []
  type: TYPE_NORMAL
- en: '#### `huggingface_hub.plan_multi_commits`'
  id: totrans-1530
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_multi_commits.py#L77)'
  id: totrans-1531
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  id: totrans-1532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: Parameters
  id: totrans-1533
  prefs: []
  type: TYPE_NORMAL
- en: '`operations` (`List` of `CommitOperation()`) — The list of operations to split
    into commits.'
  id: totrans-1534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max_operations_per_commit` (`int`) — Maximum number of operations in a single
    commit. Defaults to 50.'
  id: totrans-1535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max_upload_size_per_commit` (`int`) — Maximum size to upload (in bytes) in
    a single commit. Defaults to 2GB. Files bigger than this limit are uploaded, 1
    per commit.'
  id: totrans-1536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-1537
  prefs: []
  type: TYPE_NORMAL
- en: '`Tuple[List[List[CommitOperationAdd]], List[List[CommitOperationDelete]]]`'
  id: totrans-1538
  prefs: []
  type: TYPE_NORMAL
- en: a tuple. First item is a list of lists of [CommitOperationAdd](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationAdd)
    representing the addition commits to push. The second item is a list of lists
    of [CommitOperationDelete](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationDelete)
    representing the deletion commits.
  id: totrans-1539
  prefs: []
  type: TYPE_NORMAL
- en: Split a list of operations in a list of commits to perform.
  id: totrans-1540
  prefs: []
  type: TYPE_NORMAL
- en: 'Implementation follows a sub-optimal (yet simple) algorithm:'
  id: totrans-1541
  prefs: []
  type: TYPE_NORMAL
- en: Delete operations are grouped together by commits of maximum `max_operations_per_commits`
    operations.
  id: totrans-1542
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All additions exceeding `max_upload_size_per_commit` are committed 1 by 1.
  id: totrans-1543
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All remaining additions are grouped together and split each time the `max_operations_per_commit`
    or the `max_upload_size_per_commit` limit is reached.
  id: totrans-1544
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We do not try to optimize the splitting to get the lowest number of commits
    as this is a NP-hard problem (see [bin packing problem](https://en.wikipedia.org/wiki/Bin_packing_problem)).
    For our use case, it is not problematic to use a sub-optimal solution so we favored
    an easy-to-explain implementation.
  id: totrans-1545
  prefs: []
  type: TYPE_NORMAL
- en: '`plan_multi_commits` is experimental. Its API and behavior is subject to change
    in the future without prior notice.'
  id: totrans-1546
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1547
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  id: totrans-1548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: The initial order of the operations is not guaranteed! All deletions will be
    performed before additions. If you are not updating multiple times the same file,
    you are fine.
  id: totrans-1549
  prefs: []
  type: TYPE_NORMAL
- en: API Dataclasses
  id: totrans-1550
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: AccessRequest
  id: totrans-1551
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.hf_api.AccessRequest`'
  id: totrans-1552
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L342)'
  id: totrans-1553
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  id: totrans-1554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Parameters
  id: totrans-1555
  prefs: []
  type: TYPE_NORMAL
- en: '`username` (`str`) — Username of the user who requested access.'
  id: totrans-1556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fullname` (`str`) — Fullname of the user who requested access.'
  id: totrans-1557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`email` (`str`) — Email of the user who requested access.'
  id: totrans-1558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestamp` (`datetime`) — Timestamp of the request.'
  id: totrans-1559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`status` (`Literal["pending", "accepted", "rejected"]`) — Status of the request.
    Can be one of `["pending", "accepted", "rejected"]`.'
  id: totrans-1560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fields` (`Dict[str, Any]`, *optional*) — Additional fields filled by the user
    in the gate form.'
  id: totrans-1561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data structure containing information about a user access request.
  id: totrans-1562
  prefs: []
  type: TYPE_NORMAL
- en: CommitInfo
  id: totrans-1563
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.CommitInfo`'
  id: totrans-1564
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L272)'
  id: totrans-1565
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  id: totrans-1566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Parameters
  id: totrans-1567
  prefs: []
  type: TYPE_NORMAL
- en: '`commit_url` (`str`) — Url where to find the commit.'
  id: totrans-1568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_message` (`str`) — The summary (first line) of the commit that has
    been created.'
  id: totrans-1569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_description` (`str`) — Description of the commit that has been created.
    Can be empty.'
  id: totrans-1570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`oid` (`str`) — Commit hash id. Example: `"91c54ad1727ee830252e457677f467be0bfd8a57"`.'
  id: totrans-1571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pr_url` (`str`, *optional*) — Url to the PR that has been created, if any.
    Populated when `create_pr=True` is passed.'
  id: totrans-1572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pr_revision` (`str`, *optional*) — Revision of the PR that has been created,
    if any. Populated when `create_pr=True` is passed. Example: `"refs/pr/1"`.'
  id: totrans-1573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pr_num` (`int`, *optional*) — Number of the PR discussion that has been created,
    if any. Populated when `create_pr=True` is passed. Can be passed as `discussion_num`
    in [get_discussion_details()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details).
    Example: `1`.'
  id: totrans-1574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`_url` (`str`, *optional*) — Legacy url for `str` compatibility. Can be the
    url to the uploaded file on the Hub (if returned by [upload_file()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file)),
    to the uploaded folder on the Hub (if returned by [upload_folder()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder))
    or to the commit on the Hub (if returned by [create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit)).
    Defaults to `commit_url`. It is deprecated to use this attribute. Please use `commit_url`
    instead.'
  id: totrans-1575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data structure containing information about a newly created commit.
  id: totrans-1576
  prefs: []
  type: TYPE_NORMAL
- en: 'Returned by any method that creates a commit on the Hub: [create_commit()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit),
    [upload_file()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file),
    [upload_folder()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder),
    [delete_file()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_file),
    [delete_folder()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_folder).
    It inherits from `str` for backward compatibility but using methods specific to
    `str` is deprecated.'
  id: totrans-1577
  prefs: []
  type: TYPE_NORMAL
- en: DatasetInfo
  id: totrans-1578
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.hf_api.DatasetInfo`'
  id: totrans-1579
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L697)'
  id: totrans-1580
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  id: totrans-1581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: Parameters
  id: totrans-1582
  prefs: []
  type: TYPE_NORMAL
- en: '`id` (`str`) — ID of dataset.'
  id: totrans-1583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`author` (`str`) — Author of the dataset.'
  id: totrans-1584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sha` (`str`) — Repo SHA at this particular revision.'
  id: totrans-1585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`created_at` (`datetime`, *optional*) — Date of creation of the repo on the
    Hub. Note that the lowest value is `2022-03-02T23:29:04.000Z`, corresponding to
    the date when we began to store creation dates.'
  id: totrans-1586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`last_modified` (`datetime`, *optional*) — Date of last commit to the repo.'
  id: totrans-1587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`private` (`bool`) — Is the repo private.'
  id: totrans-1588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled` (`bool`, *optional*) — Is the repo disabled.'
  id: totrans-1589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`gated` (`Literal["auto", "manual", False]`, *optional*) — Is the repo gated.
    If so, whether there is manual or automatic approval.'
  id: totrans-1590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`downloads` (`int`) — Number of downloads of the dataset.'
  id: totrans-1591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`likes` (`int`) — Number of likes of the dataset.'
  id: totrans-1592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tags` (`List[str]`) — List of tags of the dataset.'
  id: totrans-1593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`card_data` (`DatasetCardData`, *optional*) — Model Card Metadata as a [huggingface_hub.repocard_data.DatasetCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.DatasetCardData)
    object.'
  id: totrans-1594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`siblings` (`List[RepoSibling]`) — List of [huggingface_hub.hf_api.RepoSibling](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.RepoSibling)
    objects that constitute the dataset.'
  id: totrans-1595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a dataset on the Hub.
  id: totrans-1596
  prefs: []
  type: TYPE_NORMAL
- en: Most attributes of this class are optional. This is because the data returned
    by the Hub depends on the query made. In general, the more specific the query,
    the more information is returned. On the contrary, when listing datasets using
    [list_datasets()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_datasets)
    only a subset of the attributes are returned.
  id: totrans-1597
  prefs: []
  type: TYPE_NORMAL
- en: GitRefInfo
  id: totrans-1598
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.GitRefInfo`'
  id: totrans-1599
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1055)'
  id: totrans-1600
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  id: totrans-1601
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: Parameters
  id: totrans-1602
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`) — Name of the reference (e.g. tag name or branch name).'
  id: totrans-1603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ref` (`str`) — Full git ref on the Hub (e.g. `"refs/heads/main"` or `"refs/tags/v1.0"`).'
  id: totrans-1604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`target_commit` (`str`) — OID of the target commit for the ref (e.g. `"e7da7f221d5bf496a48136c0cd264e630fe9fcc8"`)'
  id: totrans-1605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a git reference for a repo on the Hub.
  id: totrans-1606
  prefs: []
  type: TYPE_NORMAL
- en: GitCommitInfo
  id: totrans-1607
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.GitCommitInfo`'
  id: totrans-1608
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1100)'
  id: totrans-1609
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  id: totrans-1610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Parameters
  id: totrans-1611
  prefs: []
  type: TYPE_NORMAL
- en: '`commit_id` (`str`) — OID of the commit (e.g. `"e7da7f221d5bf496a48136c0cd264e630fe9fcc8"`)'
  id: totrans-1612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`authors` (`List[str]`) — List of authors of the commit.'
  id: totrans-1613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`created_at` (`datetime`) — Datetime when the commit was created.'
  id: totrans-1614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`title` (`str`) — Title of the commit. This is a free-text value entered by
    the authors.'
  id: totrans-1615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`message` (`str`) — Description of the commit. This is a free-text value entered
    by the authors.'
  id: totrans-1616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`formatted_title` (`str`) — Title of the commit formatted as HTML. Only returned
    if `formatted=True` is set.'
  id: totrans-1617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`formatted_message` (`str`) — Description of the commit formatted as HTML.
    Only returned if `formatted=True` is set.'
  id: totrans-1618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a git commit for a repo on the Hub. Check out [list_repo_commits()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_commits)
    for more details.
  id: totrans-1619
  prefs: []
  type: TYPE_NORMAL
- en: GitRefs
  id: totrans-1620
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.GitRefs`'
  id: totrans-1621
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1074)'
  id: totrans-1622
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  id: totrans-1623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: Parameters
  id: totrans-1624
  prefs: []
  type: TYPE_NORMAL
- en: '`branches` (`List[GitRefInfo]`) — A list of [GitRefInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.GitRefInfo)
    containing information about branches on the repo.'
  id: totrans-1625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`converts` (`List[GitRefInfo]`) — A list of [GitRefInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.GitRefInfo)
    containing information about “convert” refs on the repo. Converts are refs used
    (internally) to push preprocessed data in Dataset repos.'
  id: totrans-1626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tags` (`List[GitRefInfo]`) — A list of [GitRefInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.GitRefInfo)
    containing information about tags on the repo.'
  id: totrans-1627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pull_requests` (`List[GitRefInfo]`, *optional*) — A list of [GitRefInfo](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.GitRefInfo)
    containing information about pull requests on the repo. Only returned if `include_prs=True`
    is set.'
  id: totrans-1628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about all git references for a repo on the Hub.
  id: totrans-1629
  prefs: []
  type: TYPE_NORMAL
- en: Object is returned by [list_repo_refs()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_refs).
  id: totrans-1630
  prefs: []
  type: TYPE_NORMAL
- en: ModelInfo
  id: totrans-1631
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.hf_api.ModelInfo`'
  id: totrans-1632
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L551)'
  id: totrans-1633
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]'
  id: totrans-1634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: Parameters
  id: totrans-1635
  prefs: []
  type: TYPE_NORMAL
- en: '`id` (`str`) — ID of model.'
  id: totrans-1636
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`author` (`str`, *optional*) — Author of the model.'
  id: totrans-1637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sha` (`str`, *optional*) — Repo SHA at this particular revision.'
  id: totrans-1638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`created_at` (`datetime`, *optional*) — Date of creation of the repo on the
    Hub. Note that the lowest value is `2022-03-02T23:29:04.000Z`, corresponding to
    the date when we began to store creation dates.'
  id: totrans-1639
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`last_modified` (`datetime`, *optional*) — Date of last commit to the repo.'
  id: totrans-1640
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`private` (`bool`) — Is the repo private.'
  id: totrans-1641
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled` (`bool`, *optional*) — Is the repo disabled.'
  id: totrans-1642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`gated` (`Literal["auto", "manual", False]`, *optional*) — Is the repo gated.
    If so, whether there is manual or automatic approval.'
  id: totrans-1643
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`downloads` (`int`) — Number of downloads of the model.'
  id: totrans-1644
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`likes` (`int`) — Number of likes of the model.'
  id: totrans-1645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`library_name` (`str`, *optional*) — Library associated with the model.'
  id: totrans-1646
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tags` (`List[str]`) — List of tags of the model. Compared to `card_data.tags`,
    contains extra tags computed by the Hub (e.g. supported libraries, model’s arXiv).'
  id: totrans-1647
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pipeline_tag` (`str`, *optional*) — Pipeline tag associated with the model.'
  id: totrans-1648
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mask_token` (`str`, *optional*) — Mask token used by the model.'
  id: totrans-1649
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`widget_data` (`Any`, *optional*) — Widget data associated with the model.'
  id: totrans-1650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`model_index` (`Dict`, *optional*) — Model index for evaluation.'
  id: totrans-1651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config` (`Dict`, *optional*) — Model configuration.'
  id: totrans-1652
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`transformers_info` (`TransformersInfo`, *optional*) — Transformers-specific
    info (auto class, processor, etc.) associated with the model.'
  id: totrans-1653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`card_data` (`ModelCardData`, *optional*) — Model Card Metadata as a [huggingface_hub.repocard_data.ModelCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCardData)
    object.'
  id: totrans-1654
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`siblings` (`List[RepoSibling]`) — List of [huggingface_hub.hf_api.RepoSibling](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.RepoSibling)
    objects that constitute the model.'
  id: totrans-1655
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`spaces` (`List[str]`, *optional*) — List of spaces using the model.'
  id: totrans-1656
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`safetensors` (`SafeTensorsInfo`, *optional*) — Model’s safetensors information.'
  id: totrans-1657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a model on the Hub.
  id: totrans-1658
  prefs: []
  type: TYPE_NORMAL
- en: Most attributes of this class are optional. This is because the data returned
    by the Hub depends on the query made. In general, the more specific the query,
    the more information is returned. On the contrary, when listing models using [list_models()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_models)
    only a subset of the attributes are returned.
  id: totrans-1659
  prefs: []
  type: TYPE_NORMAL
- en: RepoSibling
  id: totrans-1660
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.hf_api.RepoSibling`'
  id: totrans-1661
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L431)'
  id: totrans-1662
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  id: totrans-1663
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Parameters
  id: totrans-1664
  prefs: []
  type: TYPE_NORMAL
- en: '`rfilename` (str) — file name, relative to the repo root.'
  id: totrans-1665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`size` (`int`, *optional*) — The file’s size, in bytes. This attribute is defined
    when `files_metadata` argument of [repo_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.repo_info)
    is set to `True`. It’s `None` otherwise.'
  id: totrans-1666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`blob_id` (`str`, *optional*) — The file’s git OID. This attribute is defined
    when `files_metadata` argument of [repo_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.repo_info)
    is set to `True`. It’s `None` otherwise.'
  id: totrans-1667
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`lfs` (`BlobLfsInfo`, *optional*) — The file’s LFS metadata. This attribute
    is defined when`files_metadata` argument of [repo_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.repo_info)
    is set to `True` and the file is stored with Git LFS. It’s `None` otherwise.'
  id: totrans-1668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains basic information about a repo file inside a repo on the Hub.
  id: totrans-1669
  prefs: []
  type: TYPE_NORMAL
- en: All attributes of this class are optional except `rfilename`. This is because
    only the file names are returned when listing repositories on the Hub (with [list_models()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_models),
    [list_datasets()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_datasets)
    or [list_spaces()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_spaces)).
    If you need more information like file size, blob id or lfs details, you must
    request them specifically from one repo at a time (using [model_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.model_info),
    [dataset_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.dataset_info)
    or [space_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.space_info))
    as it adds more constraints on the backend server to retrieve these.
  id: totrans-1670
  prefs: []
  type: TYPE_NORMAL
- en: RepoFile
  id: totrans-1671
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.hf_api.RepoFile`'
  id: totrans-1672
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L466)'
  id: totrans-1673
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  id: totrans-1674
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Parameters
  id: totrans-1675
  prefs: []
  type: TYPE_NORMAL
- en: '`path` (str) — file path relative to the repo root.'
  id: totrans-1676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`size` (`int`) — The file’s size, in bytes.'
  id: totrans-1677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`blob_id` (`str`) — The file’s git OID.'
  id: totrans-1678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`lfs` (`BlobLfsInfo`) — The file’s LFS metadata.'
  id: totrans-1679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`last_commit` (`LastCommitInfo`, *optional*) — The file’s last commit metadata.
    Only defined if [list_files_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_files_info),
    [list_repo_tree()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_tree)
    and [get_paths_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.get_paths_info)
    are called with `expand=True`.'
  id: totrans-1680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`security` (`BlobSecurityInfo`, *optional*) — The file’s security scan metadata.
    Only defined if [list_files_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_files_info),
    [list_repo_tree()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_tree)
    and [get_paths_info()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.get_paths_info)
    are called with `expand=True`.'
  id: totrans-1681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a file on the Hub.
  id: totrans-1682
  prefs: []
  type: TYPE_NORMAL
- en: RepoUrl
  id: totrans-1683
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.RepoUrl`'
  id: totrans-1684
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L371)'
  id: totrans-1685
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  id: totrans-1686
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Parameters
  id: totrans-1687
  prefs: []
  type: TYPE_NORMAL
- en: '`url` (`Any`) — String value of the repo url.'
  id: totrans-1688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`endpoint` (`str`, *optional*) — Endpoint of the Hub. Defaults to [https://huggingface.co](https://huggingface.co).'
  id: totrans-1689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1690
  prefs: []
  type: TYPE_NORMAL
- en: — [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    If URL cannot be parsed.
  id: totrans-1691
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: — [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    If `repo_type` is unknown.
  id: totrans-1692
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Subclass of `str` describing a repo URL on the Hub.
  id: totrans-1693
  prefs: []
  type: TYPE_NORMAL
- en: '`RepoUrl` is returned by `HfApi.create_repo`. It inherits from `str` for backward
    compatibility. At initialization, the URL is parsed to populate properties:'
  id: totrans-1694
  prefs: []
  type: TYPE_NORMAL
- en: endpoint (`str`)
  id: totrans-1695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: namespace (`Optional[str]`)
  id: totrans-1696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: repo_name (`str`)
  id: totrans-1697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: repo_id (`str`)
  id: totrans-1698
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: repo_type (`Literal["model", "dataset", "space"]`)
  id: totrans-1699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: url (`str`)
  id: totrans-1700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1701
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  id: totrans-1702
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: SafetensorsRepoMetadata
  id: totrans-1703
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.utils.SafetensorsRepoMetadata`'
  id: totrans-1704
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/utils/_safetensors.py#L86)'
  id: totrans-1705
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  id: totrans-1706
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: Parameters
  id: totrans-1707
  prefs: []
  type: TYPE_NORMAL
- en: '`metadata` (`Dict`, *optional*) — The metadata contained in the ‘model.safetensors.index.json’
    file, if it exists. Only populated for sharded models.'
  id: totrans-1708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sharded` (`bool`) — Whether the repo contains a sharded model or not.'
  id: totrans-1709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`weight_map` (`Dict[str, str]`) — A map of all weights. Keys are tensor names
    and values are filenames of the files containing the tensors.'
  id: totrans-1710
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`files_metadata` (`Dict[str, SafetensorsFileMetadata]`) — A map of all files
    metadata. Keys are filenames and values are the metadata of the corresponding
    file, as a `SafetensorsFileMetadata` object.'
  id: totrans-1711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parameter_count` (`Dict[str, int]`) — A map of the number of parameters per
    data type. Keys are data types and values are the number of parameters of that
    data type.'
  id: totrans-1712
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata for a Safetensors repo.
  id: totrans-1713
  prefs: []
  type: TYPE_NORMAL
- en: A repo is considered to be a Safetensors repo if it contains either a ‘model.safetensors’
    weight file (non-shared model) or a ‘model.safetensors.index.json’ index file
    (sharded model) at its root.
  id: totrans-1714
  prefs: []
  type: TYPE_NORMAL
- en: This class is returned by [get_safetensors_metadata()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.get_safetensors_metadata).
  id: totrans-1715
  prefs: []
  type: TYPE_NORMAL
- en: For more details regarding the safetensors format, check out [https://huggingface.co/docs/safetensors/index#format](https://huggingface.co/docs/safetensors/index#format).
  id: totrans-1716
  prefs: []
  type: TYPE_NORMAL
- en: SafetensorsFileMetadata
  id: totrans-1717
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.utils.SafetensorsFileMetadata`'
  id: totrans-1718
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/utils/_safetensors.py#L56)'
  id: totrans-1719
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]'
  id: totrans-1720
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: Parameters
  id: totrans-1721
  prefs: []
  type: TYPE_NORMAL
- en: '`metadata` (`Dict`) — The metadata contained in the file.'
  id: totrans-1722
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tensors` (`Dict[str, TensorInfo]`) — A map of all tensors. Keys are tensor
    names and values are information about the corresponding tensor, as a `TensorInfo`
    object.'
  id: totrans-1723
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parameter_count` (`Dict[str, int]`) — A map of the number of parameters per
    data type. Keys are data types and values are the number of parameters of that
    data type.'
  id: totrans-1724
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata for a Safetensors file hosted on the Hub.
  id: totrans-1725
  prefs: []
  type: TYPE_NORMAL
- en: This class is returned by [parse_safetensors_file_metadata()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.parse_safetensors_file_metadata).
  id: totrans-1726
  prefs: []
  type: TYPE_NORMAL
- en: For more details regarding the safetensors format, check out [https://huggingface.co/docs/safetensors/index#format](https://huggingface.co/docs/safetensors/index#format).
  id: totrans-1727
  prefs: []
  type: TYPE_NORMAL
- en: SpaceInfo
  id: totrans-1728
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.hf_api.SpaceInfo`'
  id: totrans-1729
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L804)'
  id: totrans-1730
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  id: totrans-1731
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Parameters
  id: totrans-1732
  prefs: []
  type: TYPE_NORMAL
- en: '`id` (`str`) — ID of the Space.'
  id: totrans-1733
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`author` (`str`, *optional*) — Author of the Space.'
  id: totrans-1734
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sha` (`str`, *optional*) — Repo SHA at this particular revision.'
  id: totrans-1735
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`created_at` (`datetime`, *optional*) — Date of creation of the repo on the
    Hub. Note that the lowest value is `2022-03-02T23:29:04.000Z`, corresponding to
    the date when we began to store creation dates.'
  id: totrans-1736
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`last_modified` (`datetime`, *optional*) — Date of last commit to the repo.'
  id: totrans-1737
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`private` (`bool`) — Is the repo private.'
  id: totrans-1738
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`gated` (`Literal["auto", "manual", False]`, *optional*) — Is the repo gated.
    If so, whether there is manual or automatic approval.'
  id: totrans-1739
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`disabled` (`bool`, *optional*) — Is the Space disabled.'
  id: totrans-1740
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`host` (`str`, *optional*) — Host URL of the Space.'
  id: totrans-1741
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`subdomain` (`str`, *optional*) — Subdomain of the Space.'
  id: totrans-1742
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`likes` (`int`) — Number of likes of the Space.'
  id: totrans-1743
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tags` (`List[str]`) — List of tags of the Space.'
  id: totrans-1744
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`siblings` (`List[RepoSibling]`) — List of [huggingface_hub.hf_api.RepoSibling](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.hf_api.RepoSibling)
    objects that constitute the Space.'
  id: totrans-1745
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`card_data` (`SpaceCardData`, *optional*) — Space Card Metadata as a [huggingface_hub.repocard_data.SpaceCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.SpaceCardData)
    object.'
  id: totrans-1746
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`runtime` (`SpaceRuntime`, *optional*) — Space runtime information as a [huggingface_hub.hf_api.SpaceRuntime](/docs/huggingface_hub/v0.20.3/en/package_reference/space_runtime#huggingface_hub.SpaceRuntime)
    object.'
  id: totrans-1747
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sdk` (`str`, *optional*) — SDK used by the Space.'
  id: totrans-1748
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`models` (`List[str]`, *optional*) — List of models used by the Space.'
  id: totrans-1749
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datasets` (`List[str]`, *optional*) — List of datasets used by the Space.'
  id: totrans-1750
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a Space on the Hub.
  id: totrans-1751
  prefs: []
  type: TYPE_NORMAL
- en: Most attributes of this class are optional. This is because the data returned
    by the Hub depends on the query made. In general, the more specific the query,
    the more information is returned. On the contrary, when listing spaces using [list_spaces()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_spaces)
    only a subset of the attributes are returned.
  id: totrans-1752
  prefs: []
  type: TYPE_NORMAL
- en: TensorInfo
  id: totrans-1753
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.utils.TensorInfo`'
  id: totrans-1754
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/utils/_safetensors.py#L26)'
  id: totrans-1755
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE157]'
  id: totrans-1756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: Parameters
  id: totrans-1757
  prefs: []
  type: TYPE_NORMAL
- en: '`dtype` (`str`) — The data type of the tensor (“F64”, “F32”, “F16”, “BF16”,
    “I64”, “I32”, “I16”, “I8”, “U8”, “BOOL”).'
  id: totrans-1758
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`shape` (`List[int]`) — The shape of the tensor.'
  id: totrans-1759
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`data_offsets` (`Tuple[int, int]`) — The offsets of the data in the file as
    a tuple `[BEGIN, END]`.'
  id: totrans-1760
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parameter_count` (`int`) — The number of parameters in the tensor.'
  id: totrans-1761
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Information about a tensor.
  id: totrans-1762
  prefs: []
  type: TYPE_NORMAL
- en: For more details regarding the safetensors format, check out [https://huggingface.co/docs/safetensors/index#format](https://huggingface.co/docs/safetensors/index#format).
  id: totrans-1763
  prefs: []
  type: TYPE_NORMAL
- en: User
  id: totrans-1764
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.User`'
  id: totrans-1765
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1161)'
  id: totrans-1766
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  id: totrans-1767
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: Parameters
  id: totrans-1768
  prefs: []
  type: TYPE_NORMAL
- en: '`avatar_url` (`str`) — URL of the user’s avatar.'
  id: totrans-1769
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`username` (`str`) — Name of the user on the Hub (unique).'
  id: totrans-1770
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`fullname` (`str`) — User’s full name.'
  id: totrans-1771
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a user on the Hub.
  id: totrans-1772
  prefs: []
  type: TYPE_NORMAL
- en: UserLikes
  id: totrans-1773
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.UserLikes`'
  id: totrans-1774
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/hf_api.py#L1133)'
  id: totrans-1775
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE159]'
  id: totrans-1776
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: Parameters
  id: totrans-1777
  prefs: []
  type: TYPE_NORMAL
- en: '`user` (`str`) — Name of the user for which we fetched the likes.'
  id: totrans-1778
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`total` (`int`) — Total number of likes.'
  id: totrans-1779
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datasets` (`List[str]`) — List of datasets liked by the user (as repo_ids).'
  id: totrans-1780
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`models` (`List[str]`) — List of models liked by the user (as repo_ids).'
  id: totrans-1781
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`spaces` (`List[str]`) — List of spaces liked by the user (as repo_ids).'
  id: totrans-1782
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains information about a user likes on the Hub.
  id: totrans-1783
  prefs: []
  type: TYPE_NORMAL
- en: CommitOperation
  id: totrans-1784
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Below are the supported values for `CommitOperation()`:'
  id: totrans-1785
  prefs: []
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.CommitOperationAdd`'
  id: totrans-1786
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_api.py#L110)'
  id: totrans-1787
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE160]'
  id: totrans-1788
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Parameters
  id: totrans-1789
  prefs: []
  type: TYPE_NORMAL
- en: '`path_in_repo` (`str`) — Relative filepath in the repo, for example: `"checkpoints/1fec34a/weights.bin"`'
  id: totrans-1790
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`path_or_fileobj` (`str`, `Path`, `bytes`, or `BinaryIO`) — Either:'
  id: totrans-1791
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a path to a local file (as `str` or `pathlib.Path`) to upload
  id: totrans-1792
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: a buffer of bytes (`bytes`) holding the content of the file to upload
  id: totrans-1793
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: a “file object” (subclass of `io.BufferedIOBase`), typically obtained with `open(path,
    "rb")`. It must support `seek()` and `tell()` methods.
  id: totrans-1794
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Raises
  id: totrans-1795
  prefs: []
  type: TYPE_NORMAL
- en: '`ValueError`'
  id: totrans-1796
  prefs: []
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If `path_or_fileobj` is not one of `str`, `Path`, `bytes` or `io.BufferedIOBase`.'
  id: totrans-1797
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If `path_or_fileobj` is a `str` or `Path` but not a path to an existing file.'
  id: totrans-1798
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    — If `path_or_fileobj` is a `io.BufferedIOBase` but it doesn’t support both `seek()`
    and `tell()`.'
  id: totrans-1799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data structure holding necessary info to upload a file to a repository on the
    Hub.
  id: totrans-1800
  prefs: []
  type: TYPE_NORMAL
- en: '#### `as_file`'
  id: totrans-1801
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_api.py#L189)'
  id: totrans-1802
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  id: totrans-1803
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: Parameters
  id: totrans-1804
  prefs: []
  type: TYPE_NORMAL
- en: '`with_tqdm` (`bool`, *optional*, defaults to `False`) — If True, iterating
    over the file object will display a progress bar. Only works if the file-like
    object is a path to a file. Pure bytes and buffers are not supported.'
  id: totrans-1805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A context manager that yields a file-like object allowing to read the underlying
    data behind `path_or_fileobj`.
  id: totrans-1806
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1807
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  id: totrans-1808
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '#### `b64content`'
  id: totrans-1809
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_api.py#L239)'
  id: totrans-1810
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE163]'
  id: totrans-1811
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: The base64-encoded content of `path_or_fileobj`
  id: totrans-1812
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns: `bytes`'
  id: totrans-1813
  prefs: []
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.CommitOperationDelete`'
  id: totrans-1814
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_api.py#L49)'
  id: totrans-1815
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE164]'
  id: totrans-1816
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: Parameters
  id: totrans-1817
  prefs: []
  type: TYPE_NORMAL
- en: '`path_in_repo` (`str`) — Relative filepath in the repo, for example: `"checkpoints/1fec34a/weights.bin"`
    for a file or `"checkpoints/1fec34a/"` for a folder.'
  id: totrans-1818
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_folder` (`bool` or `Literal["auto"]`, *optional*) — Whether the Delete
    Operation applies to a folder or not. If “auto”, the path type (file or folder)
    is guessed automatically by looking if path ends with a ”/” (folder) or not (file).
    To explicitly set the path type, you can set `is_folder=True` or `is_folder=False`.'
  id: totrans-1819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data structure holding necessary info to delete a file or a folder from a repository
    on the Hub.
  id: totrans-1820
  prefs: []
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.CommitOperationCopy`'
  id: totrans-1821
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_api.py#L80)'
  id: totrans-1822
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE165]'
  id: totrans-1823
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Parameters
  id: totrans-1824
  prefs: []
  type: TYPE_NORMAL
- en: '`src_path_in_repo` (`str`) — Relative filepath in the repo of the file to be
    copied, e.g. `"checkpoints/1fec34a/weights.bin"`.'
  id: totrans-1825
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`path_in_repo` (`str`) — Relative filepath in the repo where to copy the file,
    e.g. `"checkpoints/1fec34a/weights_copy.bin"`.'
  id: totrans-1826
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`src_revision` (`str`, *optional*) — The git revision of the file to be copied.
    Can be any valid git revision. Default to the target commit revision.'
  id: totrans-1827
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data structure holding necessary info to copy a file in a repository on the
    Hub.
  id: totrans-1828
  prefs: []
  type: TYPE_NORMAL
- en: 'Limitations:'
  id: totrans-1829
  prefs: []
  type: TYPE_NORMAL
- en: Only LFS files can be copied. To copy a regular file, you need to download it
    locally and re-upload it
  id: totrans-1830
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cross-repository copies are not supported.
  id: totrans-1831
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note: you can combine a [CommitOperationCopy](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationCopy)
    and a [CommitOperationDelete](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitOperationDelete)
    to rename an LFS file on the Hub.'
  id: totrans-1832
  prefs: []
  type: TYPE_NORMAL
- en: CommitScheduler
  id: totrans-1833
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.CommitScheduler`'
  id: totrans-1834
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_scheduler.py#L29)'
  id: totrans-1835
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE166]'
  id: totrans-1836
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: Parameters
  id: totrans-1837
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The id of the repo to commit to.'
  id: totrans-1838
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`folder_path` (`str` or `Path`) — Path to the local folder to upload regularly.'
  id: totrans-1839
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`every` (`int` or `float`, *optional*) — The number of minutes between each
    commit. Defaults to 5 minutes.'
  id: totrans-1840
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`path_in_repo` (`str`, *optional*) — Relative path of the directory in the
    repo, for example: `"checkpoints/"`. Defaults to the root folder of the repository.'
  id: totrans-1841
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of the repo to commit to. Defaults
    to `model`.'
  id: totrans-1842
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The revision of the repo to commit to. Defaults
    to `main`.'
  id: totrans-1843
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`private` (`bool`, *optional*) — Whether to make the repo private. Defaults
    to `False`. This value is ignored if the repo already exist.'
  id: totrans-1844
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — The token to use to commit to the repo. Defaults
    to the token saved on the machine.'
  id: totrans-1845
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`allow_patterns` (`List[str]` or `str`, *optional*) — If provided, only files
    matching at least one pattern are uploaded.'
  id: totrans-1846
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ignore_patterns` (`List[str]` or `str`, *optional*) — If provided, files matching
    any of the patterns are not uploaded.'
  id: totrans-1847
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`squash_history` (`bool`, *optional*) — Whether to squash the history of the
    repo after each commit. Defaults to `False`. Squashing commits is useful to avoid
    degraded performances on the repo when it grows too large.'
  id: totrans-1848
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`hf_api` (`HfApi`, *optional*) — The [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    client to use to commit to the Hub. Can be set with custom settings (user agent,
    token,…).'
  id: totrans-1849
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scheduler to upload a local folder to the Hub at regular intervals (e.g. push
    to hub every 5 minutes).
  id: totrans-1850
  prefs: []
  type: TYPE_NORMAL
- en: The scheduler is started when instantiated and run indefinitely. At the end
    of your script, a last commit is triggered. Checkout the [upload guide](https://huggingface.co/docs/huggingface_hub/guides/upload#scheduled-uploads)
    to learn more about how to use it.
  id: totrans-1851
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  id: totrans-1852
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE167]'
  id: totrans-1853
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '#### `push_to_hub`'
  id: totrans-1854
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_scheduler.py#L178)'
  id: totrans-1855
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE168]'
  id: totrans-1856
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: Push folder to the Hub and return the commit info.
  id: totrans-1857
  prefs: []
  type: TYPE_NORMAL
- en: This method is not meant to be called directly. It is run in the background
    by the scheduler, respecting a queue mechanism to avoid concurrent commits. Making
    a direct call to the method might lead to concurrency issues.
  id: totrans-1858
  prefs: []
  type: TYPE_NORMAL
- en: The default behavior of `push_to_hub` is to assume an append-only folder. It
    lists all files in the folder and uploads only changed files. If no changes are
    found, the method returns without committing anything. If you want to change this
    behavior, you can inherit from [CommitScheduler](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.CommitScheduler)
    and override this method. This can be useful for example to compress data together
    in a single file before committing. For more details and examples, check out our
    [integration guide](https://huggingface.co/docs/huggingface_hub/main/en/guides/upload#scheduled-uploads).
  id: totrans-1859
  prefs: []
  type: TYPE_NORMAL
- en: '#### `stop`'
  id: totrans-1860
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_scheduler.py#L140)'
  id: totrans-1861
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE169]'
  id: totrans-1862
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: Stop the scheduler.
  id: totrans-1863
  prefs: []
  type: TYPE_NORMAL
- en: A stopped scheduler cannot be restarted. Mostly for tests purposes.
  id: totrans-1864
  prefs: []
  type: TYPE_NORMAL
- en: '#### `trigger`'
  id: totrans-1865
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_commit_scheduler.py#L155)'
  id: totrans-1866
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE170]'
  id: totrans-1867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: Trigger a `push_to_hub` and return a future.
  id: totrans-1868
  prefs: []
  type: TYPE_NORMAL
- en: This method is automatically called every `every` minutes. You can also call
    it manually to trigger a commit immediately, without waiting for the next scheduled
    commit.
  id: totrans-1869
  prefs: []
  type: TYPE_NORMAL
- en: Search helpers
  id: totrans-1870
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some helpers to filter repositories on the Hub are available in the `huggingface_hub`
    package.
  id: totrans-1871
  prefs: []
  type: TYPE_NORMAL
- en: DatasetFilter
  id: totrans-1872
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.DatasetFilter`'
  id: totrans-1873
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/utils/endpoint_helpers.py#L69)'
  id: totrans-1874
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE171]'
  id: totrans-1875
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: Parameters
  id: totrans-1876
  prefs: []
  type: TYPE_NORMAL
- en: '`author` (`str`, *optional*) — A string or list of strings that can be used
    to identify datasets on the Hub by the original uploader (author or organization),
    such as `facebook` or `huggingface`.'
  id: totrans-1877
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`benchmark` (`str` or `List`, *optional*) — A string or list of strings that
    can be used to identify datasets on the Hub by their official benchmark.'
  id: totrans-1878
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_name` (`str`, *optional*) — A string or list of strings that can be
    used to identify datasets on the Hub by its name, such as `SQAC` or `wikineural`'
  id: totrans-1879
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`language_creators` (`str` or `List`, *optional*) — A string or list of strings
    that can be used to identify datasets on the Hub with how the data was curated,
    such as `crowdsourced` or `machine_generated`.'
  id: totrans-1880
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`language` (`str` or `List`, *optional*) — A string or list of strings representing
    a two-character language to filter datasets by on the Hub.'
  id: totrans-1881
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multilinguality` (`str` or `List`, *optional*) — A string or list of strings
    representing a filter for datasets that contain multiple languages.'
  id: totrans-1882
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`size_categories` (`str` or `List`, *optional*) — A string or list of strings
    that can be used to identify datasets on the Hub by the size of the dataset such
    as `100K<n<1M` or `1M<n<10M`.'
  id: totrans-1883
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task_categories` (`str` or `List`, *optional*) — A string or list of strings
    that can be used to identify datasets on the Hub by the designed task, such as
    `audio_classification` or `named_entity_recognition`.'
  id: totrans-1884
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task_ids` (`str` or `List`, *optional*) — A string or list of strings that
    can be used to identify datasets on the Hub by the specific task such as `speech_emotion_recognition`
    or `paraphrase`.'
  id: totrans-1885
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A class that converts human-readable dataset search parameters into ones compatible
    with the REST API. For all parameters capitalization does not matter.
  id: totrans-1886
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  id: totrans-1887
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE172]'
  id: totrans-1888
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: ModelFilter
  id: totrans-1889
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.ModelFilter`'
  id: totrans-1890
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/utils/endpoint_helpers.py#L155)'
  id: totrans-1891
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE173]'
  id: totrans-1892
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: Parameters
  id: totrans-1893
  prefs: []
  type: TYPE_NORMAL
- en: '`author` (`str`, *optional*) — A string that can be used to identify models
    on the Hub by the original uploader (author or organization), such as `facebook`
    or `huggingface`.'
  id: totrans-1894
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`library` (`str` or `List`, *optional*) — A string or list of strings of foundational
    libraries models were originally trained from, such as pytorch, tensorflow, or
    allennlp.'
  id: totrans-1895
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`language` (`str` or `List`, *optional*) — A string or list of strings of languages,
    both by name and country code, such as “en” or “English”'
  id: totrans-1896
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`model_name` (`str`, *optional*) — A string that contain complete or partial
    names for models on the Hub, such as “bert” or “bert-base-cased”'
  id: totrans-1897
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task` (`str` or `List`, *optional*) — A string or list of strings of tasks
    models were designed for, such as: “fill-mask” or “automatic-speech-recognition”'
  id: totrans-1898
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tags` (`str` or `List`, *optional*) — A string tag or a list of tags to filter
    models on the Hub by, such as `text-generation` or `spacy`.'
  id: totrans-1899
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`trained_dataset` (`str` or `List`, *optional*) — A string tag or a list of
    string tags of the trained dataset for a model on the Hub.'
  id: totrans-1900
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A class that converts human-readable model search parameters into ones compatible
    with the REST API. For all parameters capitalization does not matter.
  id: totrans-1901
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE174]'
  id: totrans-1902
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
