- en: Webhooks Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/huggingface_hub/package_reference/webhooks_server](https://huggingface.co/docs/huggingface_hub/package_reference/webhooks_server)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/entry/start.81f0ceaa.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/scheduler.6062bdaf.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/singletons.3c2729d2.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/paths.566d2d8a.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/entry/app.77e31cee.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/index.4bca734e.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/nodes/0.d6dfa8c0.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/nodes/38.89c64345.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Tip.b9ac1f03.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Docstring.ed07512f.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Heading.723dceba.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/CodeBlock.fa01571c.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/ExampleCodeBlock.823fb173.js">
  prefs: []
  type: TYPE_NORMAL
- en: Webhooks are a foundation for MLOps-related features. They allow you to listen
    for new changes on specific repos or to all repos belonging to particular users/organizations
    you’re interested in following. To learn more about webhooks on the Huggingface
    Hub, you can read the Webhooks [guide](https://huggingface.co/docs/hub/webhooks).
  prefs: []
  type: TYPE_NORMAL
- en: Check out this [guide](../guides/webhooks_server) for a step-by-step tutorial
    on how to setup your webhooks server and deploy it as a Space.
  prefs: []
  type: TYPE_NORMAL
- en: This is an experimental feature. This means that we are still working on improving
    the API. Breaking changes might be introduced in the future without prior notice.
    Make sure to pin the version of `huggingface_hub` in your requirements. A warning
    is triggered when you use an experimental feature. You can disable it by setting
    `HF_HUB_DISABLE_EXPERIMENTAL_WARNING=1` as an environment variable.
  prefs: []
  type: TYPE_NORMAL
- en: Server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The server is a [Gradio](https://gradio.app/) app. It has a UI to display instructions
    for you or your users and an API to listen to webhooks. Implementing a webhook
    endpoint is as simple as decorating a function. You can then debug it by redirecting
    the Webhooks to your machine (using a Gradio tunnel) before deploying it to a
    Space.
  prefs: []
  type: TYPE_NORMAL
- en: WebhooksServer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '#### huggingface_hub.WebhooksServer'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_server.py#L38)'
  prefs: []
  type: TYPE_NORMAL
- en: ( *args **kwargs )
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**ui** (`gradio.Blocks`, optional) — A Gradio UI instance to be used as the
    Space landing page. If `None`, a UI displaying instructions about the configured
    webhooks is created.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**webhook_secret** (`str`, optional) — A secret key to verify incoming webhook
    requests. You can set this value to any secret you want as long as you also configure
    it in your [webhooks settings panel](https://huggingface.co/settings/webhooks).
    You can also set this value as the `WEBHOOK_SECRET` environment variable. If no
    secret is provided, the webhook endpoints are opened without any security.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [WebhooksServer()](/docs/huggingface_hub/v0.20.3/en/package_reference/webhooks_server#huggingface_hub.WebhooksServer)
    class lets you create an instance of a Gradio app that can receive Huggingface
    webhooks. These webhooks can be registered using the `add_webhook()` decorator.
    Webhook endpoints are added to the app as a POST endpoint to the FastAPI router.
    Once all the webhooks are registered, the `run` method has to be called to start
    the app.
  prefs: []
  type: TYPE_NORMAL
- en: It is recommended to accept [WebhookPayload](/docs/huggingface_hub/v0.20.3/en/package_reference/webhooks_server#huggingface_hub.WebhookPayload)
    as the first argument of the webhook function. It is a Pydantic model that contains
    all the information about the webhook event. The data will be parsed automatically
    for you.
  prefs: []
  type: TYPE_NORMAL
- en: Check out the [webhooks guide](../guides/webhooks_server) for a step-by-step
    tutorial on how to setup your WebhooksServer and deploy it on a Space.
  prefs: []
  type: TYPE_NORMAL
- en: '`WebhooksServer` is experimental. Its API is subject to change in the future.'
  prefs: []
  type: TYPE_NORMAL
- en: You must have `gradio` installed to use `WebhooksServer` (`pip install --upgrade
    gradio`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '@webhook_endpoint'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '#### huggingface_hub.webhook_endpoint'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_server.py#L223)'
  prefs: []
  type: TYPE_NORMAL
- en: '( path: Optional = None )'
  prefs: []
  type: TYPE_NORMAL
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '**path** (`str`, optional) — The URL path to register the webhook function.
    If not provided, the function name will be used as the path. In any case, all
    webhooks are registered under `/webhooks`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decorator to start a [WebhooksServer()](/docs/huggingface_hub/v0.20.3/en/package_reference/webhooks_server#huggingface_hub.WebhooksServer)
    and register the decorated function as a webhook endpoint.
  prefs: []
  type: TYPE_NORMAL
- en: This is a helper to get started quickly. If you need more flexibility (custom
    landing page or webhook secret), you can use [WebhooksServer()](/docs/huggingface_hub/v0.20.3/en/package_reference/webhooks_server#huggingface_hub.WebhooksServer)
    directly. You can register multiple webhook endpoints (to the same server) by
    using this decorator multiple times.
  prefs: []
  type: TYPE_NORMAL
- en: Check out the [webhooks guide](../guides/webhooks_server) for a step-by-step
    tutorial on how to setup your server and deploy it on a Space.
  prefs: []
  type: TYPE_NORMAL
- en: '`webhook_endpoint` is experimental. Its API is subject to change in the future.'
  prefs: []
  type: TYPE_NORMAL
- en: You must have `gradio` installed to use `webhook_endpoint` (`pip install --upgrade
    gradio`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples: The default usage is to register a function as a webhook endpoint.
    The function name will be used as the path. The server will be started automatically
    at exit (i.e. at the end of the script).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Advanced usage: register a function as a webhook endpoint and start the server
    manually. This is useful if you are running it in a notebook.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Payload
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[WebhookPayload](/docs/huggingface_hub/v0.20.3/en/package_reference/webhooks_server#huggingface_hub.WebhookPayload)
    is the main data structure that contains the payload from Webhooks. This is a
    `pydantic` class which makes it very easy to use with FastAPI. If you pass it
    as a parameter to a webhook endpoint, it will be automatically validated and parsed
    as a Python object.'
  prefs: []
  type: TYPE_NORMAL
- en: For more information about webhooks payload, you can refer to the Webhooks Payload
    [guide](https://huggingface.co/docs/hub/webhooks#webhook-payloads).
  prefs: []
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayload'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L109)'
  prefs: []
  type: TYPE_NORMAL
- en: '( event: WebhookPayloadEvent repo: WebhookPayloadRepo discussion: Optional
    = None comment: Optional = None webhook: WebhookPayloadWebhook movedTo: Optional
    = None )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayload
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayload'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L109)'
  prefs: []
  type: TYPE_NORMAL
- en: '( event: WebhookPayloadEvent repo: WebhookPayloadRepo discussion: Optional
    = None comment: Optional = None webhook: WebhookPayloadWebhook movedTo: Optional
    = None )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadComment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadComment'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L80)'
  prefs: []
  type: TYPE_NORMAL
- en: '( id: str author: ObjectId hidden: bool content: Optional = None url: WebhookPayloadUrl
    )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadDiscussion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadDiscussion'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L87)'
  prefs: []
  type: TYPE_NORMAL
- en: '( id: str num: int author: ObjectId url: WebhookPayloadUrl title: str isPullRequest:
    bool status: Literal changes: Optional = None pinned: Optional = None )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadDiscussionChanges
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadDiscussionChanges'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L75)'
  prefs: []
  type: TYPE_NORMAL
- en: '( base: str mergeCommitId: Optional = None )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadEvent
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadEvent'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L70)'
  prefs: []
  type: TYPE_NORMAL
- en: '( action: Literal scope: str )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadMovedTo
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadMovedTo'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L61)'
  prefs: []
  type: TYPE_NORMAL
- en: '( name: str owner: ObjectId )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadRepo
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadRepo'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L98)'
  prefs: []
  type: TYPE_NORMAL
- en: '( id: str owner: ObjectId head_sha: Optional = None name: str private: bool
    subdomain: Optional = None tags: Optional = None type: Literal url: WebhookPayloadUrl
    )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadUrl
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadUrl'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L56)'
  prefs: []
  type: TYPE_NORMAL
- en: '( web: str api: Optional = None )'
  prefs: []
  type: TYPE_NORMAL
- en: WebhookPayloadWebhook
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### class huggingface_hub.WebhookPayloadWebhook'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/_webhooks_payload.py#L66)'
  prefs: []
  type: TYPE_NORMAL
- en: '( id: str version: Literal )'
  prefs: []
  type: TYPE_NORMAL
