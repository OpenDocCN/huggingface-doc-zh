- en: Metadata Parsing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 元数据解析
- en: 'Original text: [https://huggingface.co/docs/safetensors/metadata_parsing](https://huggingface.co/docs/safetensors/metadata_parsing)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '原文链接: [https://huggingface.co/docs/safetensors/metadata_parsing](https://huggingface.co/docs/safetensors/metadata_parsing)'
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Given the simplicity of the format, it’s very simple and efficient to fetch
    and parse metadata about Safetensors weights – i.e. the list of tensors, their
    types, and their shapes or numbers of parameters – using small [(Range) HTTP requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这种格式的简单性，非常简单和高效地获取和解析有关Safetensors权重的元数据 - 即张量列表、它们的类型和它们的形状或参数数量 - 使用小的[(范围)HTTP请求](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests)。
- en: This parsing has been implemented in JS in [`huggingface.js`](https://huggingface.co/docs/huggingface.js/main/en/hub/modules#parsesafetensorsmetadata)
    (sample code follows below), but it would be similar in any language.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这种解析已经在[`huggingface.js`](https://huggingface.co/docs/huggingface.js/main/en/hub/modules#parsesafetensorsmetadata)中用JS实现（下面是示例代码），但在任何语言中都会类似。
- en: Example use case
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例用例
- en: 'There can be many potential use cases. For instance, we use it on the HuggingFace
    Hub to display info about models which have safetensors weights:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有许多潜在的用例。例如，我们在HuggingFace Hub上使用它来显示具有safetensors权重的模型的信息：
- en: '![](../Images/555be3a5ebb40fdd1a0fbd5277d15b1a.png) ![](../Images/1feaa6e3290eb5ae97b1e2e5279e0de1.png)![](../Images/213783eaa480d7a50c99889522778fdd.png)
    ![](../Images/b63c0bdd195755851d17295e7a367d1b.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/555be3a5ebb40fdd1a0fbd5277d15b1a.png) ![](../Images/1feaa6e3290eb5ae97b1e2e5279e0de1.png)![](../Images/213783eaa480d7a50c99889522778fdd.png)
    ![](../Images/b63c0bdd195755851d17295e7a367d1b.png)'
- en: Usage
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用法
- en: httpjavascriptpython
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: httpjavascriptpython
- en: From [🤗 Hub](hf.co/models), you can get metadata of a model with [HTTP range
    requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests) instead
    of downloading the entire safetensors file with all the weights. In this example
    python script below (you can use any language that has HTTP requests support),
    we are parsing metadata of [gpt2](https://huggingface.co/gpt2/blob/main/model.safetensors).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 从[🤗 Hub](hf.co/models)上，您可以通过[HTTP范围请求](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests)获取模型的元数据，而不是下载带有所有权重的完整safetensors文件。在下面的这个示例python脚本中（您可以使用任何支持HTTP请求的语言），我们正在解析[gpt2](https://huggingface.co/gpt2/blob/main/model.safetensors)的元数据。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Example output
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例输出
- en: For instance, here are the number of params per dtype for a few models on the
    HuggingFace Hub. Also see [this issue](https://github.com/huggingface/safetensors/issues/44)
    for more examples of usage.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这里是HuggingFace Hub上几个模型每种数据类型的参数数量。还可以查看[此问题](https://github.com/huggingface/safetensors/issues/44)以获取更多用法示例。
- en: '| model | safetensors | params |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 模型 | safetensors | 参数 |'
- en: '| --- | --- | --- |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [gpt2](https://huggingface.co/gpt2?show_tensors=true) | single-file | { ‘F32’
    => 137022720 } |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [gpt2](https://huggingface.co/gpt2?show_tensors=true) | 单文件 | { ‘F32’ =>
    137022720 } |'
- en: '| [roberta-base](https://huggingface.co/roberta-base?show_tensors=true) | single-file
    | { ‘F32’ => 124697433, ‘I64’ => 514 } |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [roberta-base](https://huggingface.co/roberta-base?show_tensors=true) | 单文件
    | { ‘F32’ => 124697433, ‘I64’ => 514 } |'
- en: '| [Jean-Baptiste/camembert-ner](https://huggingface.co/Jean-Baptiste/camembert-ner?show_tensors=true)
    | single-file | { ‘F32’ => 110035205, ‘I64’ => 514 } |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [Jean-Baptiste/camembert-ner](https://huggingface.co/Jean-Baptiste/camembert-ner?show_tensors=true)
    | 单文件 | { ‘F32’ => 110035205, ‘I64’ => 514 } |'
- en: '| [roberta-large](https://huggingface.co/roberta-large?show_tensors=true) |
    single-file | { ‘F32’ => 355412057, ‘I64’ => 514 } |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [roberta-large](https://huggingface.co/roberta-large?show_tensors=true) |
    单文件 | { ‘F32’ => 355412057, ‘I64’ => 514 } |'
- en: '| [distilbert-base-german-cased](https://huggingface.co/distilbert-base-german-cased?show_tensors=true)
    | single-file | { ‘F32’ => 67431550 } |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [distilbert-base-german-cased](https://huggingface.co/distilbert-base-german-cased?show_tensors=true)
    | 单文件 | { ‘F32’ => 67431550 } |'
- en: '| [EleutherAI/gpt-neox-20b](https://huggingface.co/EleutherAI/gpt-neox-20b?show_tensors=true)
    | sharded | { ‘F16’ => 20554568208, ‘U8’ => 184549376 } |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [EleutherAI/gpt-neox-20b](https://huggingface.co/EleutherAI/gpt-neox-20b?show_tensors=true)
    | 分片 | { ‘F16’ => 20554568208, ‘U8’ => 184549376 } |'
- en: '| [bigscience/bloom-560m](https://huggingface.co/bigscience/bloom-560m?show_tensors=true)
    | single-file | { ‘F16’ => 559214592 } |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [bigscience/bloom-560m](https://huggingface.co/bigscience/bloom-560m?show_tensors=true)
    | 单文件 | { ‘F16’ => 559214592 } |'
- en: '| [bigscience/bloom](https://huggingface.co/bigscience/bloom?show_tensors=true)
    | sharded | { ‘BF16’ => 176247271424 } |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [bigscience/bloom](https://huggingface.co/bigscience/bloom?show_tensors=true)
    | 分片 | { ‘BF16’ => 176247271424 } |'
- en: '| [bigscience/bloom-3b](https://huggingface.co/bigscience/bloom-3b?show_tensors=true)
    | single-file | { ‘F16’ => 3002557440 } |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [bigscience/bloom-3b](https://huggingface.co/bigscience/bloom-3b?show_tensors=true)
    | 单文件 | { ‘F16’ => 3002557440 } |'
