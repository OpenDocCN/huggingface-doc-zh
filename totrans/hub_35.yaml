- en: Spaces Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/hub/spaces-overview](https://huggingface.co/docs/hub/spaces-overview)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/hub/main/en/_app/immutable/assets/0.e3b0c442.css" rel="modulepreload">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/entry/start.e368d515.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/chunks/scheduler.d6170356.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/chunks/singletons.7c936848.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/chunks/paths.e886be64.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/entry/app.eaa965a0.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/chunks/index.fcd4cc08.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/nodes/0.98ea1774.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/nodes/114.e50c23da.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/chunks/CodeBlock.7b16bdef.js">
    <link rel="modulepreload" href="/docs/hub/main/en/_app/immutable/chunks/Heading.8660bd0e.js">
  prefs: []
  type: TYPE_NORMAL
- en: 'Hugging Face Spaces make it easy for you to create and deploy ML-powered demos
    in minutes. Watch the following video for a quick introduction to Spaces:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.youtube-nocookie.com/embed/3bSVKNKb_PY](https://www.youtube-nocookie.com/embed/3bSVKNKb_PY)'
  prefs: []
  type: TYPE_NORMAL
- en: In the following sections, you’ll learn the basics of creating a Space, configuring
    it, and deploying your code to it.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new Space
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**To make a new Space**, visit the [Spaces main page](https://huggingface.co/spaces)
    and click on **Create new Space**. Along with choosing a name for your Space,
    selecting an optional license, and setting your Space’s visibility, you’ll be
    prompted to choose the **SDK** for your Space. The Hub offers four SDK options:
    Gradio, Streamlit, Docker and static HTML. If you select “Gradio” as your SDK,
    you’ll be navigated to a new repo showing the following page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bdca6caded44b20c6c9e00bd00d1404d.png) ![](../Images/ab4ab2c23abc2fff7e99a870c3304a01.png)'
  prefs: []
  type: TYPE_IMG
- en: Under the hood, Spaces stores your code inside a git repository, just like the
    model and dataset repositories. Thanks to this, the same tools we use for all
    the [other repositories on the Hub](./repositories) (`git` and `git-lfs`) also
    work for Spaces. Follow the same flow as in [Getting Started with Repositories](./repositories-getting-started)
    to add files to your Space. Each time a new commit is pushed, the Space will automatically
    rebuild and restart.
  prefs: []
  type: TYPE_NORMAL
- en: 'For step-by-step tutorials to creating your first Space, see the guides below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Creating a Gradio Space](./spaces-sdks-gradio)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating a Streamlit Space](./spaces-sdks-streamlit)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating a Docker Space](./spaces-sdks-docker-first-demo)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hardware resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each Spaces environment is limited to 16GB RAM, 2 CPU cores and 50GB of (not
    persistent) disk space by default, which you can use free of charge. You can upgrade
    to better hardware, including a variety of GPU accelerators and persistent storage,
    for a [competitive price](https://huggingface.co/pricing#spaces). To request an
    upgrade, please click the *Settings* button in your Space and select your preferred
    hardware environment.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Hardware** | **GPU Memory** | **CPU** | **Memory** | **Disk** | **Hourly
    Price** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| CPU Basic | - | 2 vCPU | 16 GB | 50 GB | Free! |'
  prefs: []
  type: TYPE_TB
- en: '| CPU Upgrade | - | 8 vCPU | 32 GB | 50 GB | $0.03 |'
  prefs: []
  type: TYPE_TB
- en: '| Nvidia T4 - small | 16GB | 4 vCPU | 15 GB | 50 GB | $0.60 |'
  prefs: []
  type: TYPE_TB
- en: '| Nvidia T4 - medium | 16GB | 8 vCPU | 30 GB | 100 GB | $0.90 |'
  prefs: []
  type: TYPE_TB
- en: '| Nvidia A10G - small | 24GB | 4 vCPU | 15 GB | 110 GB | $1.05 |'
  prefs: []
  type: TYPE_TB
- en: '| Nvidia A10G - large | 24GB | 12 vCPU | 46 GB | 200 GB | $3.15 |'
  prefs: []
  type: TYPE_TB
- en: '| 2x Nvidia A10G - large | 48GB | 24 vCPU | 92 GB | 1000 GB | $5.70 |'
  prefs: []
  type: TYPE_TB
- en: '| 4x Nvidia A10G - large | 96GB | 48 vCPU | 184 GB | 2000 GB | $10.80 |'
  prefs: []
  type: TYPE_TB
- en: '| Nvidia A100 - large | 40GB | 12 vCPU | 142 GB | 1000 GB | $4.13 |'
  prefs: []
  type: TYPE_TB
- en: '| **Storage tier** | **Size** | **Persistent** | **Monthly price** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Ephemeral (default) | 50GB | No | Free! |'
  prefs: []
  type: TYPE_TB
- en: '| Small | Ephemeral + 20GB | Yes | $5 |'
  prefs: []
  type: TYPE_TB
- en: '| Medium | Ephemeral + 150GB | Yes | $25 |'
  prefs: []
  type: TYPE_TB
- en: '| Large | Ephemeral + 1TB | yes | $100 |'
  prefs: []
  type: TYPE_TB
- en: 'Note: Find more detailed and comprehensive pricing information on [our pricing
    page](https://huggingface.co/pricing).'
  prefs: []
  type: TYPE_NORMAL
- en: Do you have an awesome Space but need help covering the hardware upgrade costs?
    We love helping out those with an innovative Space so please feel free to apply
    for a community GPU grant using the link in the *Settings* tab of your Space and
    see if yours makes the cut!
  prefs: []
  type: TYPE_NORMAL
- en: Read more in our dedicated sections on [Spaces GPU Upgrades](./spaces-gpus)
    and [Spaces Storage Upgrades](./spaces-storage).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f250872d73732a4ae6f12dd2dfa240d2.png) ![](../Images/666b57cb00f4f222cf0073074268799c.png)'
  prefs: []
  type: TYPE_IMG
- en: Managing secrets and environment variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If your app requires environment variables (for instance, secret keys or tokens),
    do not hard-code them inside your app! Instead, go to the Settings page of your
    Space repository and add a new **variable** or **secret**. Use variables if you
    need to store non-sensitive configuration values and secrets for storing access
    tokens, API keys, or any sensitive value or credentials.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1f0d976c61c01ae655c564b60a699b81.png) ![](../Images/6f2c757616ef8706d4ae3ec6cc278e16.png)'
  prefs: []
  type: TYPE_IMG
- en: Variables are publicly accessible and viewable and will be automatically added
    to Spaces duplicated from your repository. They are exposed to your app as environment
    variables.
  prefs: []
  type: TYPE_NORMAL
- en: For Static Spaces, they are available through client-side JavaScript in `window.huggingface.variables`.
  prefs: []
  type: TYPE_NORMAL
- en: For Docker Spaces, check out [environment management with Docker](./spaces-sdks-docker#secrets-and-variables-management).
  prefs: []
  type: TYPE_NORMAL
- en: Secrets are private and their value cannot be retrieved once set. They won’t
    be added to Spaces duplicated from your repository. The secrets will be exposed
    to your app with [Streamlit Secrets Management](https://blog.streamlit.io/secrets-in-sharing-apps/)
    if you use Streamlit, and as environment variables in other cases. For Docker
    Spaces, please check out [environment management with Docker](./spaces-sdks-docker#secrets-and-variables-management).
    Users are warned when our `Spaces Secrets Scanner` [finds hard-coded secrets](./security-secrets).
  prefs: []
  type: TYPE_NORMAL
- en: Duplicating a Space
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Duplicating a Space can be useful if you want to build a new demo using another
    demo as an initial template. Duplicated Spaces can also be useful if you want
    to have an individual Upgraded Space for your use with fast inference.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to duplicate a Space, you can click the three dots at the top right
    of the space and click **Duplicate this Space**. Once you do this, you will be
    able to change the following attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Owner: The duplicated Space can be under your account or any organization in
    which you have write access'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Space name
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Visibility: The Space is private by default. Read more about private repositories
    [here](./repositories-settings#private-repositories).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hardware: You can choose the hardware on which the Space will be running. Read
    more about hardware upgrades [here](./spaces-gpus).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Storage: If the original repo uses persistent storage, you will be prompted
    to choose a storage tier. Read more about persistent storage [here](./spaces-storage).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Secrets and variables: If the original repo has set some secrets and variables,
    you’ll be able to set them while duplicating the repo.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some Spaces might have environment variables that you may need to set up. In
    these cases, the duplicate workflow will auto-populate the public Variables from
    the source Space, and give you a warning about setting up the Secrets. The duplicated
    Space will use a free CPU hardware by default, but you can later upgrade if needed.
  prefs: []
  type: TYPE_NORMAL
- en: Networking
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If your Space needs to make any network requests, you can make requests through
    the standard HTTP and HTTPS ports (80 and 443) along with port 8080\. Any requests
    going to other ports will be blocked.
  prefs: []
  type: TYPE_NORMAL
- en: Lifecycle management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On free hardware, your Space will “go to sleep” and stop executing after a period
    of time if unused. If you wish for your Space to run indefinitely, consider [upgrading
    to a paid hardware](./spaces-gpus). You can also manually pause your Space from
    the **Settings** tab. A paused Space stops executing until manually restarted
    by its owner. Paused time is not billed.
  prefs: []
  type: TYPE_NORMAL
- en: Helper environment variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In some cases, you might be interested in having programmatic access to the
    Space author or repository name. This feature is particularly useful when you
    expect users to duplicate your Space. To help with this, Spaces exposes different
    environment variables at runtime. Given a Space [`osanseviero/i-like-flan`](https://huggingface.co/spaces/osanseviero/i-like-flan):'
  prefs: []
  type: TYPE_NORMAL
- en: '`CPU_CORES`: 4'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MEMORY`: 15Gi'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SPACE_AUTHOR_NAME`: osanseviero'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SPACE_REPO_NAME`: i-like-flan'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SPACE_TITLE`: I Like Flan (specified in the README file)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SPACE_ID`: `osanseviero/i-like-flan`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SPACE_HOST`: `osanseviero-i-like-flan.hf.space`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In case [OAuth](./spaces-oauth) is enabled for your Space, the following variables
    will also be available:'
  prefs: []
  type: TYPE_NORMAL
- en: '`OAUTH_CLIENT_ID`: the client ID of your OAuth app (public)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`OAUTH_CLIENT_SECRET`: the client secret of your OAuth app'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`OAUTH_SCOPES`: scopes accessible by your OAuth app. Currently, this is always
    `"openid profile"`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`OPENID_PROVIDER_URL`: The URL of the OpenID provider. The OpenID metadata
    will be available at [`{OPENID_PROVIDER_URL}/.well-known/openid-configuration`](https://huggingface.co/.well-known/openid-configuration).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clone the Repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can easily clone your Space repo locally. Start by clicking on the dropdown
    menu in the top right of your Space page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bbc00b091da3217e63d821a30f1d239a.png) ![](../Images/feebe8e12645c3437f6ef3660368ecd6.png)'
  prefs: []
  type: TYPE_IMG
- en: Select “Clone repository”, and then you’ll be able to follow the instructions
    to clone the Space repo to your local machine using HTTPS or SSH.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a79944b8973c112a5ba288bdd36c679c.png) ![](../Images/31d14e13932c2dc7cac05ac2467a242e.png)![](../Images/7b71b5146b5f55d5a15b4714601a71b4.png)
    ![](../Images/ed463438c16a7f7fdefec231171f3626.png)'
  prefs: []
  type: TYPE_IMG
- en: Linking Models and Datasets on the Hub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can showcase all the models and datasets that your Space links to by adding
    their identifier in your Space’s README metadata. To do so, you can define them
    under the `models` and `datasets` keys. In addition to listing the artefacts in
    the README file, you can also record them in any `.py`, `.ini` or `.html` file
    as well. We’ll parse it auto-magically!
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example linking two models from a space:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
