- en: Spaces Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Spaces 概述
- en: 'Original text: [https://huggingface.co/docs/hub/spaces-overview](https://huggingface.co/docs/hub/spaces-overview)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/docs/hub/spaces-overview](https://huggingface.co/docs/hub/spaces-overview)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Hugging Face Spaces make it easy for you to create and deploy ML-powered demos
    in minutes. Watch the following video for a quick introduction to Spaces:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Hugging Face Spaces 让您可以在几分钟内轻松创建和部署基于 ML 的演示。观看以下视频，快速了解 Spaces：
- en: '[https://www.youtube-nocookie.com/embed/3bSVKNKb_PY](https://www.youtube-nocookie.com/embed/3bSVKNKb_PY)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.youtube-nocookie.com/embed/3bSVKNKb_PY](https://www.youtube-nocookie.com/embed/3bSVKNKb_PY)'
- en: In the following sections, you’ll learn the basics of creating a Space, configuring
    it, and deploying your code to it.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，您将学习创建空间、配置空间和部署代码到空间的基础知识。
- en: Creating a new Space
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个新空间
- en: '**To make a new Space**, visit the [Spaces main page](https://huggingface.co/spaces)
    and click on **Create new Space**. Along with choosing a name for your Space,
    selecting an optional license, and setting your Space’s visibility, you’ll be
    prompted to choose the **SDK** for your Space. The Hub offers four SDK options:
    Gradio, Streamlit, Docker and static HTML. If you select “Gradio” as your SDK,
    you’ll be navigated to a new repo showing the following page:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建一个新空间**，访问[Spaces 主页](https://huggingface.co/spaces)并单击**创建新空间**。除了为您的空间选择一个名称、选择一个可选许可证和设置您的空间的可见性外，您还将被提示选择您的空间的**SDK**。Hub
    提供四个 SDK 选项：Gradio、Streamlit、Docker 和静态 HTML。如果您选择“Gradio”作为您的 SDK，您将被导航到一个新的仓库，显示以下页面：'
- en: '![](../Images/bdca6caded44b20c6c9e00bd00d1404d.png) ![](../Images/ab4ab2c23abc2fff7e99a870c3304a01.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bdca6caded44b20c6c9e00bd00d1404d.png) ![](../Images/ab4ab2c23abc2fff7e99a870c3304a01.png)'
- en: Under the hood, Spaces stores your code inside a git repository, just like the
    model and dataset repositories. Thanks to this, the same tools we use for all
    the [other repositories on the Hub](./repositories) (`git` and `git-lfs`) also
    work for Spaces. Follow the same flow as in [Getting Started with Repositories](./repositories-getting-started)
    to add files to your Space. Each time a new commit is pushed, the Space will automatically
    rebuild and restart.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部，Spaces 将您的代码存储在一个 git 仓库中，就像模型和数据集仓库一样。由于这一点，我们用于所有[Hub 上的其他仓库](./repositories)（`git`
    和 `git-lfs`）的相同工具也适用于 Spaces。按照[开始使用仓库](./repositories-getting-started)中的相同流程将文件添加到您的空间。每次推送新提交时，空间将自动重建和重新启动。
- en: 'For step-by-step tutorials to creating your first Space, see the guides below:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有关逐步教程以创建您的第一个空间，请参阅下面的指南：
- en: '[Creating a Gradio Space](./spaces-sdks-gradio)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建一个 Gradio 空间](./spaces-sdks-gradio)'
- en: '[Creating a Streamlit Space](./spaces-sdks-streamlit)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建一个 Streamlit 空间](./spaces-sdks-streamlit)'
- en: '[Creating a Docker Space](./spaces-sdks-docker-first-demo)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建一个 Docker 空间](./spaces-sdks-docker-first-demo)'
- en: Hardware resources
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件资源
- en: Each Spaces environment is limited to 16GB RAM, 2 CPU cores and 50GB of (not
    persistent) disk space by default, which you can use free of charge. You can upgrade
    to better hardware, including a variety of GPU accelerators and persistent storage,
    for a [competitive price](https://huggingface.co/pricing#spaces). To request an
    upgrade, please click the *Settings* button in your Space and select your preferred
    hardware environment.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Spaces 环境默认限制为 16GB RAM、2 个 CPU 核心和 50GB（非持久性）磁盘空间，您可以免费使用。您可以升级到更好的硬件，包括各种
    GPU 加速器和持久性存储，价格[有竞争力](https://huggingface.co/pricing#spaces)。要请求升级，请单击您的空间中的
    *设置* 按钮，并选择您喜欢的硬件环境。
- en: '| **Hardware** | **GPU Memory** | **CPU** | **Memory** | **Disk** | **Hourly
    Price** |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| **硬件** | **GPU 内存** | **CPU** | **内存** | **磁盘** | **每小时价格** |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| CPU Basic | - | 2 vCPU | 16 GB | 50 GB | Free! |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| CPU 基础 | - | 2 vCPU | 16 GB | 50 GB | 免费！ |'
- en: '| CPU Upgrade | - | 8 vCPU | 32 GB | 50 GB | $0.03 |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| CPU 升级 | - | 8 vCPU | 32 GB | 50 GB | $0.03 |'
- en: '| Nvidia T4 - small | 16GB | 4 vCPU | 15 GB | 50 GB | $0.60 |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia T4 - 小 | 16GB | 4 vCPU | 15 GB | 50 GB | $0.60 |'
- en: '| Nvidia T4 - medium | 16GB | 8 vCPU | 30 GB | 100 GB | $0.90 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia T4 - 中 | 16GB | 8 vCPU | 30 GB | 100 GB | $0.90 |'
- en: '| Nvidia A10G - small | 24GB | 4 vCPU | 15 GB | 110 GB | $1.05 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia A10G - 小 | 24GB | 4 vCPU | 15 GB | 110 GB | $1.05 |'
- en: '| Nvidia A10G - large | 24GB | 12 vCPU | 46 GB | 200 GB | $3.15 |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia A10G - 大 | 24GB | 12 vCPU | 46 GB | 200 GB | $3.15 |'
- en: '| 2x Nvidia A10G - large | 48GB | 24 vCPU | 92 GB | 1000 GB | $5.70 |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 2x Nvidia A10G - 大 | 48GB | 24 vCPU | 92 GB | 1000 GB | $5.70 |'
- en: '| 4x Nvidia A10G - large | 96GB | 48 vCPU | 184 GB | 2000 GB | $10.80 |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 4x Nvidia A10G - 大 | 96GB | 48 vCPU | 184 GB | 2000 GB | $10.80 |'
- en: '| Nvidia A100 - large | 40GB | 12 vCPU | 142 GB | 1000 GB | $4.13 |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| Nvidia A100 - 大 | 40GB | 12 vCPU | 142 GB | 1000 GB | $4.13 |'
- en: '| **Storage tier** | **Size** | **Persistent** | **Monthly price** |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| **存储层** | **大小** | **持久性** | **月租金** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Ephemeral (default) | 50GB | No | Free! |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 临时（默认） | 50GB | 否 | 免费！ |'
- en: '| Small | Ephemeral + 20GB | Yes | $5 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 小 | 临时 + 20GB | 是 | $5 |'
- en: '| Medium | Ephemeral + 150GB | Yes | $25 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 中等 | 临时 + 150GB | 是 | $25 |'
- en: '| Large | Ephemeral + 1TB | yes | $100 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 大 | 临时 + 1TB | 是 | $100 |'
- en: 'Note: Find more detailed and comprehensive pricing information on [our pricing
    page](https://huggingface.co/pricing).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：在[我们的定价页面](https://huggingface.co/pricing)上找到更详细和全面的定价信息。
- en: Do you have an awesome Space but need help covering the hardware upgrade costs?
    We love helping out those with an innovative Space so please feel free to apply
    for a community GPU grant using the link in the *Settings* tab of your Space and
    see if yours makes the cut!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您是否拥有一个很棒的空间，但需要帮助支付硬件升级成本？我们很乐意帮助那些拥有创新空间的人，所以请随时申请社区 GPU 赠款，使用您的空间的 *设置* 选项卡中的链接，看看您的空间是否符合条件！
- en: Read more in our dedicated sections on [Spaces GPU Upgrades](./spaces-gpus)
    and [Spaces Storage Upgrades](./spaces-storage).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在[Spaces GPU 升级](./spaces-gpus)和[Spaces 存储升级](./spaces-storage)的专门部分中阅读更多。
- en: '![](../Images/f250872d73732a4ae6f12dd2dfa240d2.png) ![](../Images/666b57cb00f4f222cf0073074268799c.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f250872d73732a4ae6f12dd2dfa240d2.png) ![](../Images/666b57cb00f4f222cf0073074268799c.png)'
- en: Managing secrets and environment variables
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理密钥和环境变量
- en: If your app requires environment variables (for instance, secret keys or tokens),
    do not hard-code them inside your app! Instead, go to the Settings page of your
    Space repository and add a new **variable** or **secret**. Use variables if you
    need to store non-sensitive configuration values and secrets for storing access
    tokens, API keys, or any sensitive value or credentials.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序需要环境变量（例如，秘密密钥或令牌），请不要在应用程序内部硬编码它们！相反，请转到您的空间存储库的设置页面，并添加一个新的**变量**或**秘密**。如果需要存储非敏感配置值的变量和用于存储访问令牌、API密钥或任何敏感值或凭据的秘密，请使用变量。
- en: '![](../Images/1f0d976c61c01ae655c564b60a699b81.png) ![](../Images/6f2c757616ef8706d4ae3ec6cc278e16.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1f0d976c61c01ae655c564b60a699b81.png) ![](../Images/6f2c757616ef8706d4ae3ec6cc278e16.png)'
- en: Variables are publicly accessible and viewable and will be automatically added
    to Spaces duplicated from your repository. They are exposed to your app as environment
    variables.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 变量是公开可访问和可查看的，并将自动添加到从您的存储库复制的空间中。它们作为环境变量暴露给您的应用程序。
- en: For Static Spaces, they are available through client-side JavaScript in `window.huggingface.variables`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于静态空间，它们可以通过客户端JavaScript在`window.huggingface.variables`中访问。
- en: For Docker Spaces, check out [environment management with Docker](./spaces-sdks-docker#secrets-and-variables-management).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Docker空间，请查看[Docker环境管理](./spaces-sdks-docker#secrets-and-variables-management)。
- en: Secrets are private and their value cannot be retrieved once set. They won’t
    be added to Spaces duplicated from your repository. The secrets will be exposed
    to your app with [Streamlit Secrets Management](https://blog.streamlit.io/secrets-in-sharing-apps/)
    if you use Streamlit, and as environment variables in other cases. For Docker
    Spaces, please check out [environment management with Docker](./spaces-sdks-docker#secrets-and-variables-management).
    Users are warned when our `Spaces Secrets Scanner` [finds hard-coded secrets](./security-secrets).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 秘密是私有的，一旦设置就无法检索其值。它们不会被添加到从您的存储库复制的空间中。如果您使用Streamlit，秘密将通过[Streamlit秘密管理](https://blog.streamlit.io/secrets-in-sharing-apps/)暴露给您的应用程序，在其他情况下作为环境变量。对于Docker空间，请查看[Docker环境管理](./spaces-sdks-docker#secrets-and-variables-management)。当我们的`Spaces
    Secrets Scanner`[发现硬编码的秘密](./security-secrets)时，用户会收到警告。
- en: Duplicating a Space
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复制空间
- en: Duplicating a Space can be useful if you want to build a new demo using another
    demo as an initial template. Duplicated Spaces can also be useful if you want
    to have an individual Upgraded Space for your use with fast inference.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用另一个演示作为初始模板构建新的演示，复制空间可能会很有用。如果您想要一个个人升级的空间以进行快速推理，复制的空间也可能会很有用。
- en: 'If you want to duplicate a Space, you can click the three dots at the top right
    of the space and click **Duplicate this Space**. Once you do this, you will be
    able to change the following attributes:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想复制一个空间，可以单击空间右上角的三个点，然后单击**复制此空间**。这样做后，您将能够更改以下属性：
- en: 'Owner: The duplicated Space can be under your account or any organization in
    which you have write access'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有者：复制的空间可以在您的帐户下或您具有写入访问权限的任何组织下。
- en: Space name
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空间名称
- en: 'Visibility: The Space is private by default. Read more about private repositories
    [here](./repositories-settings#private-repositories).'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可见性：空间默认为私有。了解更多关于私有存储库的信息[这里](./repositories-settings#private-repositories)。
- en: 'Hardware: You can choose the hardware on which the Space will be running. Read
    more about hardware upgrades [here](./spaces-gpus).'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件：您可以选择空间运行的硬件。了解更多关于硬件升级的信息[这里](./spaces-gpus)。
- en: 'Storage: If the original repo uses persistent storage, you will be prompted
    to choose a storage tier. Read more about persistent storage [here](./spaces-storage).'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储：如果原始存储库使用持久存储，您将被提示选择存储层级。了解更多关于持久存储的信息[这里](./spaces-storage)。
- en: 'Secrets and variables: If the original repo has set some secrets and variables,
    you’ll be able to set them while duplicating the repo.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 秘密和变量：如果原始存储库设置了一些秘密和变量，您可以在复制存储库时设置它们。
- en: Some Spaces might have environment variables that you may need to set up. In
    these cases, the duplicate workflow will auto-populate the public Variables from
    the source Space, and give you a warning about setting up the Secrets. The duplicated
    Space will use a free CPU hardware by default, but you can later upgrade if needed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一些空间可能有环境变量需要设置。在这种情况下，复制工作流将自动填充源空间的公共变量，并提醒您设置秘密。复制的空间将默认使用免费的CPU硬件，但如果需要，您可以随后升级。
- en: Networking
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络
- en: If your Space needs to make any network requests, you can make requests through
    the standard HTTP and HTTPS ports (80 and 443) along with port 8080\. Any requests
    going to other ports will be blocked.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的空间需要进行任何网络请求，您可以通过标准的HTTP和HTTPS端口（80和443）以及端口8080进行请求。任何发送到其他端口的请求将被阻止。
- en: Lifecycle management
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生命周期管理
- en: On free hardware, your Space will “go to sleep” and stop executing after a period
    of time if unused. If you wish for your Space to run indefinitely, consider [upgrading
    to a paid hardware](./spaces-gpus). You can also manually pause your Space from
    the **Settings** tab. A paused Space stops executing until manually restarted
    by its owner. Paused time is not billed.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在免费硬件上，如果未使用，您的空间将“休眠”并在一段时间后停止执行。如果希望您的空间无限期运行，请考虑[升级到付费硬件](./spaces-gpus)。您还可以从**设置**选项卡手动暂停您的空间。暂停的空间将停止执行，直到由所有者手动重新启动。暂停时间不计费。
- en: Helper environment variables
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 辅助环境变量
- en: 'In some cases, you might be interested in having programmatic access to the
    Space author or repository name. This feature is particularly useful when you
    expect users to duplicate your Space. To help with this, Spaces exposes different
    environment variables at runtime. Given a Space [`osanseviero/i-like-flan`](https://huggingface.co/spaces/osanseviero/i-like-flan):'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能对以编程方式访问空间作者或存储库名称感兴趣。当您希望用户复制您的空间时，此功能特别有用。为了帮助实现这一点，Spaces在运行时暴露不同的环境变量。给定一个空间[`osanseviero/i-like-flan`](https://huggingface.co/spaces/osanseviero/i-like-flan)：
- en: '`CPU_CORES`: 4'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CPU_CORES`: 4'
- en: '`MEMORY`: 15Gi'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MEMORY`: 15Gi'
- en: '`SPACE_AUTHOR_NAME`: osanseviero'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPACE_AUTHOR_NAME`: osanseviero'
- en: '`SPACE_REPO_NAME`: i-like-flan'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPACE_REPO_NAME`: i-like-flan'
- en: '`SPACE_TITLE`: I Like Flan (specified in the README file)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPACE_TITLE`：我喜欢奶油布丁（在README文件中指定）'
- en: '`SPACE_ID`: `osanseviero/i-like-flan`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPACE_ID`：`osanseviero/i-like-flan`'
- en: '`SPACE_HOST`: `osanseviero-i-like-flan.hf.space`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SPACE_HOST`：`osanseviero-i-like-flan.hf.space`'
- en: 'In case [OAuth](./spaces-oauth) is enabled for your Space, the following variables
    will also be available:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为您的Space启用了[OAuth](./spaces-oauth)，还将提供以下变量：
- en: '`OAUTH_CLIENT_ID`: the client ID of your OAuth app (public)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OAUTH_CLIENT_ID`：您的OAuth应用程序的客户端ID（公共）'
- en: '`OAUTH_CLIENT_SECRET`: the client secret of your OAuth app'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OAUTH_CLIENT_SECRET`：您的OAuth应用程序的客户端密钥'
- en: '`OAUTH_SCOPES`: scopes accessible by your OAuth app. Currently, this is always
    `"openid profile"`.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OAUTH_SCOPES`：您的OAuth应用程序可访问的范围。目前，这始终是`"openid profile"`。'
- en: '`OPENID_PROVIDER_URL`: The URL of the OpenID provider. The OpenID metadata
    will be available at [`{OPENID_PROVIDER_URL}/.well-known/openid-configuration`](https://huggingface.co/.well-known/openid-configuration).'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OPENID_PROVIDER_URL`：OpenID提供者的URL。 OpenID元数据将在[`{OPENID_PROVIDER_URL}/.well-known/openid-configuration`](https://huggingface.co/.well-known/openid-configuration)处提供。'
- en: Clone the Repository
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 克隆存储库
- en: 'You can easily clone your Space repo locally. Start by clicking on the dropdown
    menu in the top right of your Space page:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以轻松地在本地克隆您的Space存储库。首先点击Space页面右上角的下拉菜单开始：
- en: '![](../Images/bbc00b091da3217e63d821a30f1d239a.png) ![](../Images/feebe8e12645c3437f6ef3660368ecd6.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bbc00b091da3217e63d821a30f1d239a.png) ![](../Images/feebe8e12645c3437f6ef3660368ecd6.png)'
- en: Select “Clone repository”, and then you’ll be able to follow the instructions
    to clone the Space repo to your local machine using HTTPS or SSH.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“克隆存储库”，然后您可以按照说明使用HTTPS或SSH将Space存储库克隆到本地计算机。
- en: '![](../Images/a79944b8973c112a5ba288bdd36c679c.png) ![](../Images/31d14e13932c2dc7cac05ac2467a242e.png)![](../Images/7b71b5146b5f55d5a15b4714601a71b4.png)
    ![](../Images/ed463438c16a7f7fdefec231171f3626.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a79944b8973c112a5ba288bdd36c679c.png) ![](../Images/31d14e13932c2dc7cac05ac2467a242e.png)![](../Images/7b71b5146b5f55d5a15b4714601a71b4.png)
    ![](../Images/ed463438c16a7f7fdefec231171f3626.png)'
- en: Linking Models and Datasets on the Hub
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Hub上链接模型和数据集
- en: You can showcase all the models and datasets that your Space links to by adding
    their identifier in your Space’s README metadata. To do so, you can define them
    under the `models` and `datasets` keys. In addition to listing the artefacts in
    the README file, you can also record them in any `.py`, `.ini` or `.html` file
    as well. We’ll parse it auto-magically!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在Space的README元数据中添加它们的标识符来展示Space链接到的所有模型和数据集。为此，您可以在`models`和`datasets`键下定义它们。除了在README文件中列出工件外，您还可以将它们记录在任何`.py`、`.ini`或`.html`文件中。我们会自动解析它！
- en: 'Here’s an example linking two models from a space:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个链接两个模型的示例：
- en: '[PRE0]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
