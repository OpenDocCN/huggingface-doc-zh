- en: Datasets 🤝 Arrow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集 🤝 Arrow
- en: 'Original text: [https://huggingface.co/docs/datasets/about_arrow](https://huggingface.co/docs/datasets/about_arrow)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/datasets/about_arrow](https://huggingface.co/docs/datasets/about_arrow)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: What is Arrow?
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Arrow是什么？
- en: '[Arrow](https://arrow.apache.org/) enables large amounts of data to be processed
    and moved quickly. It is a specific data format that stores data in a columnar
    memory layout. This provides several significant advantages:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[Arrow](https://arrow.apache.org/)使大量数据能够快速处理和移动。它是一种特定的数据格式，以列式内存布局存储数据。这提供了几个重要优势：'
- en: Arrow’s standard format allows [zero-copy reads](https://en.wikipedia.org/wiki/Zero-copy)
    which removes virtually all serialization overhead.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arrow的标准格式允许[零拷贝读取](https://en.wikipedia.org/wiki/Zero-copy)，从而消除了几乎所有的序列化开销。
- en: Arrow is language-agnostic so it supports different programming languages.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arrow是与语言无关的，因此支持不同的编程语言。
- en: Arrow is column-oriented so it is faster at querying and processing slices or
    columns of data.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arrow是面向列的，因此在查询和处理数据的切片或列时更快。
- en: Arrow allows for copy-free hand-offs to standard machine learning tools such
    as NumPy, Pandas, PyTorch, and TensorFlow.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arrow允许无拷贝地将数据传递给标准的机器学习工具，如NumPy、Pandas、PyTorch和TensorFlow。
- en: Arrow supports many, possibly nested, column types.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arrow支持许多可能是嵌套的列类型。
- en: Memory-mapping
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内存映射
- en: 🤗 Datasets uses Arrow for its local caching system. It allows datasets to be
    backed by an on-disk cache, which is memory-mapped for fast lookup. This architecture
    allows for large datasets to be used on machines with relatively small device
    memory.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 🤗 数据集使用Arrow作为其本地缓存系统。它允许数据集由一个在磁盘上的缓存支持，该缓存为快速查找而进行了内存映射。这种架构允许在设备内存相对较小的机器上使用大型数据集。
- en: 'For example, loading the full English Wikipedia dataset only takes a few MB
    of RAM:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，加载完整的英文维基百科数据集只需要几MB的RAM：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is possible because the Arrow data is actually memory-mapped from disk,
    and not loaded in memory. Memory-mapping allows access to data on disk, and leverages
    virtual memory capabilities for fast lookups.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是可能的，因为Arrow数据实际上是从磁盘内存映射的，而不是加载到内存中。内存映射允许访问磁盘上的数据，并利用虚拟内存功能进行快速查找。
- en: Performance
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能
- en: 'Iterating over a memory-mapped dataset using Arrow is fast. Iterating over
    Wikipedia on a laptop gives you speeds of 1-3 Gbit/s:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Arrow迭代内存映射数据集很快。在笔记本电脑上迭代维基百科可以达到1-3 Gbit/s的速度：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
