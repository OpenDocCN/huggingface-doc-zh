- en: Datasets ü§ù Arrow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://huggingface.co/docs/datasets/about_arrow](https://huggingface.co/docs/datasets/about_arrow)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/datasets/v2.17.0/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/entry/start.146395b0.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/scheduler.bdbef820.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/singletons.98dc5b8b.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/index.8a885b74.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/paths.a483fec8.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/entry/app.e612c4fb.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/index.c0aea24a.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/nodes/0.5e8dbda6.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/nodes/2.33d5f303.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/CodeBlock.6ccca92e.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/Heading.2eb892cb.js">
  prefs: []
  type: TYPE_NORMAL
- en: What is Arrow?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Arrow](https://arrow.apache.org/) enables large amounts of data to be processed
    and moved quickly. It is a specific data format that stores data in a columnar
    memory layout. This provides several significant advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: Arrow‚Äôs standard format allows [zero-copy reads](https://en.wikipedia.org/wiki/Zero-copy)
    which removes virtually all serialization overhead.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arrow is language-agnostic so it supports different programming languages.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arrow is column-oriented so it is faster at querying and processing slices or
    columns of data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arrow allows for copy-free hand-offs to standard machine learning tools such
    as NumPy, Pandas, PyTorch, and TensorFlow.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arrow supports many, possibly nested, column types.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Memory-mapping
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ü§ó Datasets uses Arrow for its local caching system. It allows datasets to be
    backed by an on-disk cache, which is memory-mapped for fast lookup. This architecture
    allows for large datasets to be used on machines with relatively small device
    memory.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, loading the full English Wikipedia dataset only takes a few MB
    of RAM:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This is possible because the Arrow data is actually memory-mapped from disk,
    and not loaded in memory. Memory-mapping allows access to data on disk, and leverages
    virtual memory capabilities for fast lookups.
  prefs: []
  type: TYPE_NORMAL
- en: Performance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Iterating over a memory-mapped dataset using Arrow is fast. Iterating over
    Wikipedia on a laptop gives you speeds of 1-3 Gbit/s:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
