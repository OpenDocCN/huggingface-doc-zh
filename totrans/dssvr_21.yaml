- en: Polars
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/datasets-server/polars](https://huggingface.co/docs/datasets-server/polars)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: '[Polars](https://pola-rs.github.io/polars-book/user-guide/) is a fast DataFrame
    library written in Rust with Arrow as its foundation.'
  prefs: []
  type: TYPE_NORMAL
- en: ðŸ’¡ Learn more about how to get the dataset URLs in the [List Parquet files](parquet)
    guide.
  prefs: []
  type: TYPE_NORMAL
- en: 'Letâ€™s start by grabbing the URLs to the `train` split of the [`blog_authorship_corpus`](https://huggingface.co/datasets/blog_authorship_corpus)
    dataset from Datasets Server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'To read from a single Parquet file, use the [`read_parquet`](https://pola-rs.github.io/polars/py-polars/html/reference/api/polars.read_parquet.html)
    function to read it into a DataFrame and then execute your query:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To read multiple Parquet files - for example, if the dataset is sharded - youâ€™ll
    need to use the [`concat`](https://pola-rs.github.io/polars/py-polars/html/reference/api/polars.concat.html)
    function to concatenate the files into a single DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Lazy API
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Polars offers a [lazy API](https://pola-rs.github.io/polars-book/user-guide/lazy/using/)
    that is more performant and memory-efficient for large Parquet files. The LazyFrame
    API keeps track of what you want to do, and itâ€™ll only execute the entire query
    when youâ€™re ready. This way, the lazy API doesnâ€™t load everything into RAM beforehand,
    and it allows you to work with datasets larger than your available RAM.
  prefs: []
  type: TYPE_NORMAL
- en: 'To lazily read a Parquet file, use the [`scan_parquet`](https://pola-rs.github.io/polars/py-polars/html/reference/api/polars.scan_parquet.html)
    function instead. Then, execute the entire query with the [`collect`](https://pola-rs.github.io/polars/py-polars/html/reference/lazyframe/api/polars.LazyFrame.collect.html)
    function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
