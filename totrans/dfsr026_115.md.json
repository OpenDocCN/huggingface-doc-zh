["```py\n( sample_size: Optional = None in_channels: int = 4 out_channels: int = 4 down_block_types: Tuple = ('CrossAttnDownBlockMotion', 'CrossAttnDownBlockMotion', 'CrossAttnDownBlockMotion', 'DownBlockMotion') up_block_types: Tuple = ('UpBlockMotion', 'CrossAttnUpBlockMotion', 'CrossAttnUpBlockMotion', 'CrossAttnUpBlockMotion') block_out_channels: Tuple = (320, 640, 1280, 1280) layers_per_block: int = 2 downsample_padding: int = 1 mid_block_scale_factor: float = 1 act_fn: str = 'silu' norm_num_groups: int = 32 norm_eps: float = 1e-05 cross_attention_dim: int = 1280 use_linear_projection: bool = False num_attention_heads: Union = 8 motion_max_seq_length: int = 32 motion_num_attention_heads: int = 8 use_motion_mid_block: int = True encoder_hid_dim: Optional = None encoder_hid_dim_type: Optional = None )\n```", "```py\n( )\n```", "```py\n( chunk_size: Optional = None dim: int = 0 )\n```", "```py\n( s1: float s2: float b1: float b2: float )\n```", "```py\n( sample: FloatTensor timestep: Union encoder_hidden_states: Tensor timestep_cond: Optional = None attention_mask: Optional = None cross_attention_kwargs: Optional = None added_cond_kwargs: Optional = None down_block_additional_residuals: Optional = None mid_block_additional_residual: Optional = None return_dict: bool = True ) \u2192 export const metadata = 'undefined';~models.unet_3d_condition.UNet3DConditionOutput or tuple\n```", "```py\n( )\n```", "```py\n( processor: Union )\n```", "```py\n( )\n```", "```py\n( sample: FloatTensor )\n```"]