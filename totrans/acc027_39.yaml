- en: Stateful Classes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/accelerate/package_reference/state](https://huggingface.co/docs/accelerate/package_reference/state)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: Below are variations of a [singleton class](https://en.wikipedia.org/wiki/Singleton_pattern)
    in the sense that all instances share the same state, which is initialized on
    the first instantiation.
  prefs: []
  type: TYPE_NORMAL
- en: These classes are immutable and store information about certain configurations
    or states.
  prefs: []
  type: TYPE_NORMAL
- en: '### `class accelerate.PartialState`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L105)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Singleton class that has information about the current training environment
    and functions to help with process control. Designed to be used when only process
    control and device execution states are needed. Does *not* need to be initialized
    from `Accelerator`.
  prefs: []
  type: TYPE_NORMAL
- en: '**Available attributes:**'
  prefs: []
  type: TYPE_NORMAL
- en: '`device` (`torch.device`) — The device to use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`distributed_type` ([DistributedType](/docs/accelerate/v0.27.2/en/package_reference/utilities#accelerate.DistributedType))
    — The type of distributed environment currently in use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_process_index` (`int`) — The index of the current process on the current
    server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mixed_precision` (`str`) — Whether or not the current script will use mixed
    precision, and if so the type of mixed precision being performed. (Choose from
    ‘no’,‘fp16’,‘bf16 or ‘fp8’).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`num_processes` (`int`) — The number of processes currently launched in parallel.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`process_index` (`int`) — The index of the current process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_last_process` (`bool`) — Whether or not the current process is the last
    one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_main_process` (`bool`) — Whether or not the current process is the main
    one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_local_main_process` (`bool`) — Whether or not the current process is the
    main one on the local node.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`debug` (`bool`) — Whether or not the current script is being run in debug
    mode.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `local_main_process_first`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L528)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Lets the local main process go inside a with block.
  prefs: []
  type: TYPE_NORMAL
- en: The other processes will enter the with block after the main process exits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '#### `main_process_first`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L507)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Lets the main process go first inside a with block.
  prefs: []
  type: TYPE_NORMAL
- en: The other processes will enter the with block after the main process exits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '#### `on_last_process`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L610)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`function` (`Callable`) — The function to decorate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decorator that only runs the decorated function on the last process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '#### `on_local_main_process`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L579)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`function` (`Callable`) — The function to decorate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decorator that only runs the decorated function on the local main process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '#### `on_local_process`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L671)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`function` (`Callable`, *optional*) — The function to decorate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_process_index` (`int`, *optional*) — The index of the local process
    on which to run the function.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decorator that only runs the decorated function on the process with the given
    index on the current node.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '#### `on_main_process`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L549)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`function` (`Callable`) — The function to decorate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decorator that only runs the decorated function on the main process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '#### `on_process`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L638)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`function` (`Callable`, `optional`) — The function to decorate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`process_index` (`int`, `optional`) — The index of the process on which to
    run the function.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decorator that only runs the decorated function on the process with the given
    index.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '#### `split_between_processes`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L428)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`inputs` (`list`, `tuple`, `torch.Tensor`, or `dict` of `list`/`tuple`/`torch.Tensor`)
    — The input to split between processes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`apply_padding` (`bool`, `optional`, defaults to `False`) — Whether to apply
    padding by repeating the last element of the input so that all processes have
    the same number of elements. Useful when trying to perform actions such as `gather()`
    on the outputs or passing in less inputs than there are processes. If so, just
    remember to drop the padded elements afterwards.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Splits `input` between `self.num_processes` quickly and can be then used on
    that process. Useful when doing distributed inference, such as with different
    prompts.
  prefs: []
  type: TYPE_NORMAL
- en: Note that when using a `dict`, all keys need to have the same number of elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '#### `wait_for_everyone`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L385)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Will stop the execution of the current process until every other process has
    reached that point (so this does nothing when the script is only run in one process).
    Useful to do before saving a model.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '### `class accelerate.state.AcceleratorState`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L733)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Singleton class that has information about the current training environment.
  prefs: []
  type: TYPE_NORMAL
- en: '**Available attributes:**'
  prefs: []
  type: TYPE_NORMAL
- en: '`device` (`torch.device`) — The device to use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`distributed_type` ([DistributedType](/docs/accelerate/v0.27.2/en/package_reference/utilities#accelerate.DistributedType))
    — The type of distributed environment currently in use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`initialized` (`bool`) — Whether or not the `AcceleratorState` has been initialized
    from `Accelerator`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_process_index` (`int`) — The index of the current process on the current
    server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mixed_precision` (`str`) — Whether or not the current script will use mixed
    precision, and if so the type of mixed precision being performed. (Choose from
    ‘no’,‘fp16’,‘bf16 or ‘fp8’).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`num_processes` (`int`) — The number of processes currently launched in parallel.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`process_index` (`int`) — The index of the current process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_last_process` (`bool`) — Whether or not the current process is the last
    one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_main_process` (`bool`) — Whether or not the current process is the main
    one.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`is_local_main_process` (`bool`) — Whether or not the current process is the
    main one on the local node.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`debug` (`bool`) — Whether or not the current script is being run in debug
    mode.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `local_main_process_first`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L983)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Lets the local main process go inside a with block.
  prefs: []
  type: TYPE_NORMAL
- en: The other processes will enter the with block after the main process exits.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `main_process_first`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L973)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Lets the main process go first inside a with block.
  prefs: []
  type: TYPE_NORMAL
- en: The other processes will enter the with block after the main process exits.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `split_between_processes`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L931)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`inputs` (`list`, `tuple`, `torch.Tensor`, or `dict` of `list`/`tuple`/`torch.Tensor`)
    — The input to split between processes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`apply_padding` (`bool`, `optional`, defaults to `False`) — Whether to apply
    padding by repeating the last element of the input so that all processes have
    the same number of elements. Useful when trying to perform actions such as `gather()`
    on the outputs or passing in less inputs than there are processes. If so, just
    remember to drop the padded elements afterwards.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Splits `input` between `self.num_processes` quickly and can be then used on
    that process. Useful when doing distributed inference, such as with different
    prompts.
  prefs: []
  type: TYPE_NORMAL
- en: Note that when using a `dict`, all keys need to have the same number of elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '### `class accelerate.state.GradientState`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/accelerate/blob/v0.27.2/src/accelerate/state.py#L997)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Singleton class that has information related to gradient synchronization for
    gradient accumulation
  prefs: []
  type: TYPE_NORMAL
- en: '**Available attributes:**'
  prefs: []
  type: TYPE_NORMAL
- en: '`end_of_dataloader` (`bool`) — Whether we have reached the end the current
    dataloader'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`remainder` (`int`) — The number of extra samples that were added from padding
    the dataloader'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sync_gradients` (`bool`) — Whether the gradients should be synced across all
    devices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`active_dataloader` (`Optional[DataLoader]`) — The dataloader that is currently
    being iterated over'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataloader_references` (`List[Optional[DataLoader]]`) — A list of references
    to the dataloaders that are being iterated over'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`num_steps` (`int`) — The number of steps to accumulate over'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`adjust_scheduler` (`bool`) — Whether the scheduler should be adjusted to account
    for the gradient accumulation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sync_with_dataloader` (`bool`) — Whether the gradients should be synced at
    the end of the dataloader iteration and the number of total steps reset'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
