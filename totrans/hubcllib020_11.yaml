- en: Create and manage a repository
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/guides/repository](https://huggingface.co/docs/huggingface_hub/guides/repository)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: 'The Hugging Face Hub is a collection of git repositories. [Git](https://git-scm.com/)
    is a widely used tool in software development to easily version projects when
    working collaboratively. This guide will show you how to interact with the repositories
    on the Hub, especially:'
  prefs: []
  type: TYPE_NORMAL
- en: Create and delete a repository.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage branches and tags.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rename your repository.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update your repository visibility.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage a local copy of your repository.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are used to working with platforms such as GitLab/GitHub/Bitbucket, your
    first instinct might be to use `git` CLI to clone your repo (`git clone`), commit
    changes (`git add, git commit`) and push them (`git push`). This is valid when
    using the Hugging Face Hub. However, software engineering and machine learning
    do not share the same requirements and workflows. Model repositories might maintain
    large model weight files for different frameworks and tools, so cloning the repository
    can lead to you maintaining large local folders with massive sizes. As a result,
    it may be more efficient to use our custom HTTP methods. You can read our [Git
    vs HTTP paradigm](../concepts/git_vs_http) explanation page for more details.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to create and manage a repository on the Hub, your machine must
    be logged in. If you are not, please refer to [this section](../quick-start#authentication).
    In the rest of this guide, we will assume that your machine is logged in.
  prefs: []
  type: TYPE_NORMAL
- en: Repo creation and deletion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first step is to know how to create and delete repositories. You can only
    manage repositories that you own (under your username namespace) or from organizations
    in which you have write permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Create a repository
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Create an empty repository with [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    and give it a name with the `repo_id` parameter. The `repo_id` is your namespace
    followed by the repository name: `username_or_org/repo_name`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'By default, [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    creates a model repository. But you can use the `repo_type` parameter to specify
    another repository type. For example, if you want to create a dataset repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: When you create a repository, you can set your repository visibility with the
    `private` parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If you want to change the repository visibility at a later time, you can use
    the [update_repo_visibility()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.update_repo_visibility)
    function.
  prefs: []
  type: TYPE_NORMAL
- en: Delete a repository
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Delete a repository with [delete_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_repo).
    Make sure you want to delete a repository because this is an irreversible process!
  prefs: []
  type: TYPE_NORMAL
- en: 'Specify the `repo_id` of the repository you want to delete:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Duplicate a repository (only for Spaces)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In some cases, you want to copy someone else’s repo to adapt it to your use
    case. This is possible for Spaces using the [duplicate_space()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.duplicate_space)
    method. It will duplicate the whole repository. You will still need to configure
    your own settings (hardware, sleep-time, storage, variables and secrets). Check
    out our [Manage your Space](./manage-spaces) guide for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Upload and download files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that you have created your repository, you are interested in pushing changes
    to it and downloading files from it.
  prefs: []
  type: TYPE_NORMAL
- en: These 2 topics deserve their own guides. Please refer to the [upload](./upload)
    and the [download](./download) guides to learn how to use your repository.
  prefs: []
  type: TYPE_NORMAL
- en: Branches and tags
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Git repositories often make use of branches to store different versions of a
    same repository. Tags can also be used to flag a specific state of your repository,
    for example, when releasing a version. More generally, branches and tags are referred
    as [git references](https://git-scm.com/book/en/v2/Git-Internals-Git-References).
  prefs: []
  type: TYPE_NORMAL
- en: Create branches and tags
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can create new branch and tags using [create_branch()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_branch)
    and [create_tag()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_tag):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: You can use the [delete_branch()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_branch)
    and [delete_tag()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.delete_tag)
    functions in the same way to delete a branch or a tag.
  prefs: []
  type: TYPE_NORMAL
- en: List all branches and tags
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also list the existing git refs from a repository using [list_repo_refs()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.list_repo_refs):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Change repository settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Repositories come with some settings that you can configure. Most of the time,
    you will want to do that manually in the repo settings page in your browser. You
    must have write access to a repo to configure it (either own it or being part
    of an organization). In this section, we will see the settings that you can also
    configure programmatically using `huggingface_hub`.
  prefs: []
  type: TYPE_NORMAL
- en: Some settings are specific to Spaces (hardware, environment variables,…). To
    configure those, please refer to our [Manage your Spaces](../guides/manage-spaces)
    guide.
  prefs: []
  type: TYPE_NORMAL
- en: Update visibility
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A repository can be public or private. A private repository is only visible
    to you or members of the organization in which the repository is located. Change
    a repository to private as shown in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Rename your repository
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can rename your repository on the Hub using [move_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.move_repo).
    Using this method, you can also move the repo from a user to an organization.
    When doing so, there are a [few limitations](https://hf.co/docs/hub/repositories-settings#renaming-or-transferring-a-repo)
    that you should be aware of. For example, you can’t transfer your repo to another
    user.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Manage a local copy of your repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All the actions described above can be done using HTTP requests. However, in
    some cases you might be interested in having a local copy of your repository and
    interact with it using the Git commands you are familiar with.
  prefs: []
  type: TYPE_NORMAL
- en: The [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    class allows you to interact with files and repositories on the Hub with functions
    similar to Git commands. It is a wrapper over Git and Git-LFS methods to use the
    Git commands you already know and love. Before starting, please make sure you
    have Git-LFS installed (see [here](https://git-lfs.github.com/) for installation
    instructions).
  prefs: []
  type: TYPE_NORMAL
- en: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    is deprecated in favor of the http-based alternatives implemented in [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi).
    Given its large adoption in legacy code, the complete removal of [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    will only happen in release `v1.0`. For more details, please read [this explanation
    page](./concepts/git_vs_http).'
  prefs: []
  type: TYPE_NORMAL
- en: Use a local repository
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Instantiate a [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    object with a path to a local repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Clone
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `clone_from` parameter clones a repository from a Hugging Face repository
    ID to a local directory specified by the `local_dir` argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '`clone_from` can also clone a repository using a URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'You can combine the `clone_from` parameter with [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    to create and clone a repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: You can also configure a Git username and email to a cloned repository by specifying
    the `git_user` and `git_email` parameters when you clone a repository. When users
    commit to that repository, Git will be aware of the commit author.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Branch
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Branches are important for collaboration and experimentation without impacting
    your current files and code. Switch between branches with [git_checkout()](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository.git_checkout).
    For example, if you want to switch from `branch1` to `branch2`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Pull
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[git_pull()](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository.git_pull)
    allows you to update a current local branch with changes from a remote repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Set `rebase=True` if you want your local commits to occur after your branch
    is updated with the new commits from the remote:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
