- en: Analyze a dataset on the Hub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/datasets-server/analyze_data](https://huggingface.co/docs/datasets-server/analyze_data)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: In the Quickstart, you were introduced to various endpoints for interacting
    with datasets on the Hub. One of the most useful ones is the `/parquet` endpoint,
    which allows you to get a dataset stored on the Hub and analyze it. This is a
    great way to explore the dataset, and get a better understanding of it’s contents.
  prefs: []
  type: TYPE_NORMAL
- en: To demonstrate, this guide will show you an end-to-end example of how to retrieve
    a dataset from the Hub and do some basic data analysis with the Pandas library.
  prefs: []
  type: TYPE_NORMAL
- en: Get a dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [Hub](https://huggingface.co/datasets) is home to more than 40,000 datasets
    across a wide variety of tasks, sizes, and languages. For this example, you’ll
    use the [`codeparrot/codecomplex`](https://huggingface.co/datasets/codeparrot/codecomplex)
    dataset, but feel free to explore and find another dataset that interests you!
    The dataset contains Java code from programming competitions, and the time complexity
    of the code is labeled by a group of algorithm experts.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say you’re interested in the average length of the submitted code as it
    relates to the time complexity. Here’s how you can get started.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the `/parquet` endpoint to convert the dataset to a Parquet file and return
    the URL to it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Read dataset with Pandas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'With the URL, you can read the Parquet file into a Pandas DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '| src | complexity | problem | from |'
  prefs: []
  type: TYPE_TB
- en: '| --: | --: | --: | --: |'
  prefs: []
  type: TYPE_TB
- en: '| import java.io.*;\nimport java.math.BigInteger… | quadratic | 1179_B. Tolik
    and His Uncle | CODEFORCES |'
  prefs: []
  type: TYPE_TB
- en: '| import java.util.Scanner;\n \npublic class pil… | linear | 1197_B. Pillars
    | CODEFORCES |'
  prefs: []
  type: TYPE_TB
- en: '| import java.io.BufferedReader;\nimport java.io… | linear | 1059_C. Sequence
    Transformation | CODEFORCES |'
  prefs: []
  type: TYPE_TB
- en: '| import java.util.*;\n\nimport java.io.*;\npubl… | linear | 1011_A. Stages
    | CODEFORCES |'
  prefs: []
  type: TYPE_TB
- en: '| import java.io.OutputStream;\nimport java.io.I… | linear | 1190_C. Tokitsukaze
    and Duel | CODEFORCES |'
  prefs: []
  type: TYPE_TB
- en: Calculate mean code length by time complexity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pandas is a powerful library for data analysis; group the dataset by time complexity,
    apply a function to calculate the average length of the code snippet, and plot
    the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7de93a91b1115e077942c544945b223d.png)'
  prefs: []
  type: TYPE_IMG
