- en: Builder classes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://huggingface.co/docs/datasets/package_reference/builder_classes](https://huggingface.co/docs/datasets/package_reference/builder_classes)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/datasets/v2.17.0/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/entry/start.146395b0.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/scheduler.bdbef820.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/singletons.98dc5b8b.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/index.8a885b74.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/paths.a483fec8.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/entry/app.e612c4fb.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/index.c0aea24a.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/nodes/0.5e8dbda6.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/nodes/35.b18a3bb3.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/Docstring.8f10b780.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/globals.7f7f1b26.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/Heading.2eb892cb.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/CodeBlock.6ccca92e.js">
    <link rel="modulepreload" href="/docs/datasets/v2.17.0/en/_app/immutable/chunks/ExampleCodeBlock.d8ca6748.js">
  prefs: []
  type: TYPE_NORMAL
- en: Builders
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'ü§ó Datasets relies on two main classes during the dataset building process:
    [DatasetBuilder](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.DatasetBuilder)
    and [BuilderConfig](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.BuilderConfig).'
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.DatasetBuilder`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L214)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`cache_dir` (`str`, *optional*) ‚Äî Directory to cache data. Defaults to `"~/.cache/huggingface/datasets"`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_name` (`str`, *optional*) ‚Äî Name of the dataset, if different from
    the builder name. Useful for packaged builders like csv, imagefolder, audiofolder,
    etc. to reflect the difference between datasets that use the same packaged builder.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config_name` (`str`, *optional*) ‚Äî Name of the dataset configuration. It affects
    the data generated on disk. Different configurations will have their own subdirectories
    and versions. If not provided, the default configuration is used (if it exists).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.3.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Parameter `name` was renamed to `config_name`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`hash` (`str`, *optional*) ‚Äî Hash specific to the dataset code. Used to update
    the caching directory when the dataset loading script code is updated (to avoid
    reusing old data). The typical caching directory (defined in `self._relative_data_dir`)
    is `name/version/hash/`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`base_path` (`str`, *optional*) ‚Äî Base path for relative paths that are used
    to download files. This can be a remote URL.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`features` ([Features](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Features),
    *optional*) ‚Äî Features types to use with this dataset. It can be used to change
    the [Features](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Features)
    types of a dataset, for example.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str` or `bool`, *optional*) ‚Äî String or boolean to use as Bearer
    token for remote files on the Datasets Hub. If `True`, will get token from `"~/.huggingface"`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_id` (`str`, *optional*) ‚Äî ID of the dataset repository. Used to distinguish
    builders with the same name but not coming from the same namespace, for example
    ‚Äúsquad‚Äù and ‚Äúlhoestq/squad‚Äù repo IDs. In the latter, the builder name would be
    ‚Äúlhoestq___squad‚Äù.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`data_files` (`str` or `Sequence` or `Mapping`, *optional*) ‚Äî Path(s) to source
    data file(s). For builders like ‚Äúcsv‚Äù or ‚Äújson‚Äù that need the user to specify
    data files. They can be either local or remote files. For convenience, you can
    use a `DataFilesDict`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`data_dir` (`str`, *optional*) ‚Äî Path to directory containing source data file(s).
    Use only if `data_files` is not passed, in which case it is equivalent to passing
    `os.path.join(data_dir, "**")` as `data_files`. For builders that require manual
    download, it must be the path to the local directory containing the manually downloaded
    data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`storage_options` (`dict`, *optional*) ‚Äî Key/value pairs to be passed on to
    the dataset file-system backend, if any.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`writer_batch_size` (`int`, *optional*) ‚Äî Batch size used by the ArrowWriter.
    It defines the number of samples that are kept in memory before writing them and
    also the length of the arrow chunks. None means that the ArrowWriter will use
    its default value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name` (`str`) ‚Äî Configuration name for the dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated in 2.3.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use `config_name` instead.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*`*config_kwargs` (additional keyword arguments) ‚Äî Keyword arguments to be
    passed to the corresponding builder configuration class, set on the class attribute
    [DatasetBuilder.BUILDER_CONFIG_CLASS](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.BuilderConfig).
    The builder configuration class is [BuilderConfig](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.BuilderConfig)
    or a subclass of it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abstract base class for all datasets.
  prefs: []
  type: TYPE_NORMAL
- en: '`DatasetBuilder` has 3 key methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '`DatasetBuilder.info`: Documents the dataset, including feature names, types,
    shapes, version, splits, citation, etc.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DatasetBuilder.download_and_prepare()](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.DatasetBuilder.download_and_prepare):
    Downloads the source data and writes it to disk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DatasetBuilder.as_dataset()](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.DatasetBuilder.as_dataset):
    Generates a [Dataset](/docs/datasets/v2.17.0/en/package_reference/main_classes#datasets.Dataset).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some `DatasetBuilder`s expose multiple variants of the dataset by defining a
    [BuilderConfig](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.BuilderConfig)
    subclass and accepting a config object (or name) on construction. Configurable
    datasets expose a pre-defined set of configurations in `DatasetBuilder.builder_configs()`.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `as_dataset`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L1166)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`split` (`datasets.Split`) ‚Äî Which subset of the data to return.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`run_post_process` (`bool`, defaults to `True`) ‚Äî Whether to run post-processing
    dataset transforms and/or add indexes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`verification_mode` ([VerificationMode](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.VerificationMode)
    or `str`, defaults to `BASIC_CHECKS`) ‚Äî Verification mode determining the checks
    to run on the downloaded/processed dataset information (checksums/size/splits/‚Ä¶).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.9.1
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`ignore_verifications` (`bool`, defaults to `False`) ‚Äî Whether to ignore the
    verifications of the downloaded/processed dataset information (checksums/size/splits/‚Ä¶).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated in 2.9.1
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`ignore_verifications` was deprecated in version 2.9.1 and will be removed
    in 3.0.0. Please use `verification_mode` instead.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`in_memory` (`bool`, defaults to `False`) ‚Äî Whether to copy the data in-memory.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Return a Dataset for the specified split.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '#### `download_and_prepare`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L744)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`output_dir` (`str`, *optional*) ‚Äî Output directory for the dataset. Default
    to this builder‚Äôs `cache_dir`, which is inside `~/.cache/huggingface/datasets`
    by default.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.5.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`download_config` (`DownloadConfig`, *optional*) ‚Äî Specific download configuration
    parameters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`download_mode` ([DownloadMode](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.DownloadMode)
    or `str`, *optional*) ‚Äî Select the download/generate mode, default to `REUSE_DATASET_IF_EXISTS`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`verification_mode` ([VerificationMode](/docs/datasets/v2.17.0/en/package_reference/builder_classes#datasets.VerificationMode)
    or `str`, defaults to `BASIC_CHECKS`) ‚Äî Verification mode determining the checks
    to run on the downloaded/processed dataset information (checksums/size/splits/‚Ä¶).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.9.1
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`ignore_verifications` (`bool`, defaults to `False`) ‚Äî Ignore the verifications
    of the downloaded/processed dataset information (checksums/size/splits/‚Ä¶).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated in 2.9.1
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`ignore_verifications` was deprecated in version 2.9.1 and will be removed
    in 3.0.0. Please use `verification_mode` instead.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`try_from_hf_gcs` (`bool`) ‚Äî If `True`, it will try to download the already
    prepared dataset from the HF Google cloud storage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dl_manager` (`DownloadManager`, *optional*) ‚Äî Specific `DownloadManger` to
    use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`base_path` (`str`, *optional*) ‚Äî Base path for relative paths that are used
    to download files. This can be a remote url. If not specified, the value of the
    `base_path` attribute (`self.base_path`) will be used instead.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use_auth_token` (`Union[str, bool]`, *optional*) ‚Äî Optional string or boolean
    to use as Bearer token for remote files on the Datasets Hub. If True, or not specified,
    will get token from ~/.huggingface.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated in 2.7.1
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Pass `use_auth_token` to `load_dataset_builder` instead.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`file_format` (`str`, *optional*) ‚Äî Format of the data files in which the dataset
    will be written. Supported formats: ‚Äúarrow‚Äù, ‚Äúparquet‚Äù. Default to ‚Äúarrow‚Äù format.
    If the format is ‚Äúparquet‚Äù, then image and audio data are embedded into the Parquet
    files instead of pointing to local files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.5.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`max_shard_size` (`Union[str, int]`, *optional*) ‚Äî Maximum number of bytes
    written per shard, default is ‚Äú500MB‚Äù. The size is based on uncompressed data
    size, so in practice your shard files may be smaller than `max_shard_size` thanks
    to Parquet compression for example.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.5.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`num_proc` (`int`, *optional*, defaults to `None`) ‚Äî Number of processes when
    downloading and generating the dataset locally. Multiprocessing is disabled by
    default.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.7.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`storage_options` (`dict`, *optional*) ‚Äî Key/value pairs to be passed on to
    the caching file-system backend, if any.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added in 2.5.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*`*download_and_prepare_kwargs` (additional keyword arguments) ‚Äî Keyword arguments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloads and prepares dataset for reading.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Download and prepare the dataset as Arrow files that can be loaded as a Dataset
    using `builder.as_dataset()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Download and prepare the dataset as sharded Parquet files locally:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Download and prepare the dataset as sharded Parquet files in a cloud storage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '#### `get_all_exported_dataset_infos`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L530)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Empty dict if doesn‚Äôt exist
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '#### `get_exported_dataset_info`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L545)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Empty `DatasetInfo` if doesn‚Äôt exist
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '#### `get_imported_module_dir`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L736)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Return the path of the module of this class or subclass.
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.GeneratorBasedBuilder`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L1514)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Base class for datasets with data generation based on dict generators.
  prefs: []
  type: TYPE_NORMAL
- en: '`GeneratorBasedBuilder` is a convenience class that abstracts away much of
    the data writing and reading of `DatasetBuilder`. It expects subclasses to implement
    generators of feature dictionaries across the dataset splits (`_split_generators`).
    See the method docstrings for details.'
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.BeamBasedBuilder`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L2028)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Beam-based Builder.
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.ArrowBasedBuilder`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L1779)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Base class for datasets with data generation based on Arrow loading functions
    (CSV/JSON/Parquet).
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.BuilderConfig`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L100)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`, defaults to `default`) ‚Äî The name of the configuration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`version` (`Version` or `str`, defaults to `0.0.0`) ‚Äî The version of the configuration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`data_dir` (`str`, *optional*) ‚Äî Path to the directory containing the source
    data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`data_files` (`str` or `Sequence` or `Mapping`, *optional*) ‚Äî Path(s) to source
    data file(s).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`description` (`str`, *optional*) ‚Äî A human description of the configuration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Base class for `DatasetBuilder` data configuration.
  prefs: []
  type: TYPE_NORMAL
- en: '`DatasetBuilder` subclasses with data configuration options should subclass
    `BuilderConfig` and add their own properties.'
  prefs: []
  type: TYPE_NORMAL
- en: '#### `create_config_id`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/builder.py#L144)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The config id is used to build the cache directory. By default it is equal
    to the config name. However the name of a config is not sufficient to have a unique
    identifier for the dataset being generated since it doesn‚Äôt take into account:'
  prefs: []
  type: TYPE_NORMAL
- en: the config kwargs that can be used to overwrite attributes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the custom features used to write the dataset
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the data_files for json/text/csv/pandas datasets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Therefore the config id is just the config name with an optional suffix based
    on these.
  prefs: []
  type: TYPE_NORMAL
- en: Download
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class datasets.DownloadManager`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L263)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '#### `download`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L406)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`url_or_urls` (`str` or `list` or `dict`) ‚Äî URL or `list` or `dict` of URLs
    to download. Each URL is a `str`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`str` or `list` or `dict`'
  prefs: []
  type: TYPE_NORMAL
- en: The downloaded paths matching the given input `url_or_urls`.
  prefs: []
  type: TYPE_NORMAL
- en: Download given URL(s).
  prefs: []
  type: TYPE_NORMAL
- en: By default, only one process is used for download. Pass customized `download_config.num_proc`
    to change this behavior.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '#### `download_and_extract`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L554)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`url_or_urls` (`str` or `list` or `dict`) ‚Äî URL or `list` or `dict` of URLs
    to download and extract. Each URL is a `str`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: extracted_path(s)
  prefs: []
  type: TYPE_NORMAL
- en: '`str`, extracted paths of given URL(s).'
  prefs: []
  type: TYPE_NORMAL
- en: Download and extract given `url_or_urls`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Is roughly equivalent to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '#### `download_custom`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L359)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`url_or_urls` (`str` or `list` or `dict`) ‚Äî URL or `list` or `dict` of URLs
    to download and extract. Each URL is a `str`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`custom_download` (`Callable[src_url, dst_path]`) ‚Äî The source URL and destination
    path. For example `tf.io.gfile.copy`, that lets you download from Google storage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: downloaded_path(s)
  prefs: []
  type: TYPE_NORMAL
- en: '`str`, The downloaded paths matching the given input `url_or_urls`.'
  prefs: []
  type: TYPE_NORMAL
- en: Download given urls(s) by calling `custom_download`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '#### `extract`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L508)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`path_or_paths` (path or `list` or `dict`) ‚Äî Path of file to extract. Each
    path is a `str`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`num_proc` (`int`) ‚Äî Use multi-processing if `num_proc` > 1 and the length
    of `path_or_paths` is larger than `num_proc`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated in 2.6.2
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Pass `DownloadConfig(num_proc=<num_proc>)` to the initializer instead.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: extracted_path(s)
  prefs: []
  type: TYPE_NORMAL
- en: '`str`, The extracted paths matching the given input path_or_paths.'
  prefs: []
  type: TYPE_NORMAL
- en: Extract given path(s).
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '#### `iter_archive`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L464)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`path_or_buf` (`str` or `io.BufferedReader`) ‚Äî Archive path or archive binary
    file object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yields
  prefs: []
  type: TYPE_NORMAL
- en: '`tuple[str, io.BufferedReader]`'
  prefs: []
  type: TYPE_NORMAL
- en: Iterate over files within an archive.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '#### `iter_files`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L489)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`paths` (`str` or `list` of `str`) ‚Äî Root paths.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yields
  prefs: []
  type: TYPE_NORMAL
- en: '`str`'
  prefs: []
  type: TYPE_NORMAL
- en: Iterate over file paths.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '#### `ship_files_with_pipeline`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L310)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`downloaded_path_or_paths` (`str` or `list[str]` or `dict[str, str]`) ‚Äî Nested
    structure containing the downloaded path(s).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pipeline` (`utils.beam_utils.BeamPipeline`) ‚Äî Apache Beam Pipeline.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ship the files using Beam FileSystems to the pipeline temp dir.
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.StreamingDownloadManager`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/streaming_download_manager.py#L969)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Download manager that uses the ‚Äù::‚Äù separator to navigate through (possibly
    remote) compressed archives. Contrary to the regular `DownloadManager`, the `download`
    and `extract` methods don‚Äôt actually download nor extract data, but they rather
    return the path or url that could be opened using the `xopen` function which extends
    the built-in `open` function to stream data from remote files.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `download`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/streaming_download_manager.py#L995)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`url_or_urls` (`str` or `list` or `dict`) ‚Äî URL(s) of files to stream data
    from. Each url is a `str`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: url(s)
  prefs: []
  type: TYPE_NORMAL
- en: (`str` or `list` or `dict`), URL(s) to stream data from matching the given input
    url_or_urls.
  prefs: []
  type: TYPE_NORMAL
- en: Normalize URL(s) of files to stream data from. This is the lazy version of `DownloadManager.download`
    for streaming.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '#### `download_and_extract`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/streaming_download_manager.py#L1071)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`url_or_urls` (`str` or `list` or `dict`) ‚Äî URL(s) to stream from data from.
    Each url is a `str`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: url(s)
  prefs: []
  type: TYPE_NORMAL
- en: (`str` or `list` or `dict`), URL(s) to stream data from matching the given input
    `url_or_urls`.
  prefs: []
  type: TYPE_NORMAL
- en: Prepare given `url_or_urls` for streaming (add extraction protocol).
  prefs: []
  type: TYPE_NORMAL
- en: This is the lazy version of `DownloadManager.download_and_extract` for streaming.
  prefs: []
  type: TYPE_NORMAL
- en: 'Is equivalent to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '#### `extract`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/streaming_download_manager.py#L1022)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`url_or_urls` (`str` or `list` or `dict`) ‚Äî URL(s) of files to stream data
    from. Each url is a `str`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: url(s)
  prefs: []
  type: TYPE_NORMAL
- en: (`str` or `list` or `dict`), URL(s) to stream data from matching the given input
    `url_or_urls`.
  prefs: []
  type: TYPE_NORMAL
- en: Add extraction protocol for given url(s) for streaming.
  prefs: []
  type: TYPE_NORMAL
- en: This is the lazy version of `DownloadManager.extract` for streaming.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '#### `iter_archive`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/streaming_download_manager.py#L1091)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`urlpath_or_buf` (`str` or `io.BufferedReader`) ‚Äî Archive path or archive binary
    file object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yields
  prefs: []
  type: TYPE_NORMAL
- en: '`tuple[str, io.BufferedReader]`'
  prefs: []
  type: TYPE_NORMAL
- en: Iterate over files within an archive.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '#### `iter_files`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/streaming_download_manager.py#L1116)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`urlpaths` (`str` or `list` of `str`) ‚Äî Root paths.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yields
  prefs: []
  type: TYPE_NORMAL
- en: str
  prefs: []
  type: TYPE_NORMAL
- en: Iterate over files.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '### `class datasets.DownloadConfig`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_config.py#L10)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`cache_dir` (`str` or `Path`, *optional*) ‚Äî Specify a cache directory to save
    the file to (overwrite the default cache dir).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`force_download` (`bool`, defaults to `False`) ‚Äî If `True`, re-dowload the
    file even if it‚Äôs already cached in the cache dir.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`resume_download` (`bool`, defaults to `False`) ‚Äî If `True`, resume the download
    if an incompletely received file is found.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`proxies` (`dict`, *optional*) ‚Äî'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`user_agent` (`str`, *optional*) ‚Äî Optional string or dict that will be appended
    to the user-agent on remote requests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`extract_compressed_file` (`bool`, defaults to `False`) ‚Äî If `True` and the
    path point to a zip or tar file, extract the compressed file in a folder along
    the archive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`force_extract` (`bool`, defaults to `False`) ‚Äî If `True` when `extract_compressed_file`
    is `True` and the archive was already extracted, re-extract the archive and override
    the folder where it was extracted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`delete_extracted` (`bool`, defaults to `False`) ‚Äî Whether to delete (or keep)
    the extracted files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use_etag` (`bool`, defaults to `True`) ‚Äî Whether to use the ETag HTTP response
    header to validate the cached files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`num_proc` (`int`, *optional*) ‚Äî The number of processes to launch to download
    the files in parallel.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max_retries` (`int`, default to `1`) ‚Äî The number of times to retry an HTTP
    request if it fails.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str` or `bool`, *optional*) ‚Äî Optional string or boolean to use as
    Bearer token for remote files on the Datasets Hub. If `True`, or not specified,
    will get token from `~/.huggingface`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use_auth_token` (`str` or `bool`, *optional*) ‚Äî Optional string or boolean
    to use as Bearer token for remote files on the Datasets Hub. If `True`, or not
    specified, will get token from `~/.huggingface`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated in 2.14.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`use_auth_token` was deprecated in favor of `token` in version 2.14.0 and will
    be removed in 3.0.0.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`ignore_url_params` (`bool`, defaults to `False`) ‚Äî Whether to strip all query
    parameters and fragments from the download URL before using it for caching the
    file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`storage_options` (`dict`, *optional*) ‚Äî Key/value pairs to be passed on to
    the dataset file-system backend, if any.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`download_desc` (`str`, *optional*) ‚Äî A description to be displayed alongside
    with the progress bar while downloading the files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration for our cached path manager.
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.DownloadMode`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/download/download_manager.py#L85)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '`Enum` for how to treat pre-existing downloads and data.'
  prefs: []
  type: TYPE_NORMAL
- en: The default mode is `REUSE_DATASET_IF_EXISTS`, which will reuse both raw downloads
    and the prepared dataset if they exist.
  prefs: []
  type: TYPE_NORMAL
- en: 'The generations modes:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Downloads | Dataset |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `REUSE_DATASET_IF_EXISTS` (default) | Reuse | Reuse |'
  prefs: []
  type: TYPE_TB
- en: '| `REUSE_CACHE_IF_EXISTS` | Reuse | Fresh |'
  prefs: []
  type: TYPE_TB
- en: '| `FORCE_REDOWNLOAD` | Fresh | Fresh |'
  prefs: []
  type: TYPE_TB
- en: Verification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class datasets.VerificationMode`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/utils/info_utils.py#L14)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '`Enum` that specifies which verification checks to run.'
  prefs: []
  type: TYPE_NORMAL
- en: The default mode is `BASIC_CHECKS`, which will perform only rudimentary checks
    to avoid slowdowns when generating/downloading a dataset for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 'The verification modes:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | Verification checks |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `ALL_CHECKS` | Split checks, uniqueness of the keys yielded in case of the
    GeneratorBuilder |'
  prefs: []
  type: TYPE_TB
- en: '|  | and the validity (number of files, checksums, etc.) of downloaded files
    |'
  prefs: []
  type: TYPE_TB
- en: '| `BASIC_CHECKS` (default) | Same as `ALL_CHECKS` but without checking downloaded
    files |'
  prefs: []
  type: TYPE_TB
- en: '| `NO_CHECKS` | None |'
  prefs: []
  type: TYPE_TB
- en: Splits
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class datasets.SplitGenerator`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/splits.py#L604)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`name` (`str`) ‚Äî Name of the `Split` for which the generator will create the
    examples.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*`*gen_kwargs` (additional keyword arguments) ‚Äî Keyword arguments to forward
    to the `DatasetBuilder._generate_examples` method of the builder.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defines the split information for the generator.
  prefs: []
  type: TYPE_NORMAL
- en: This should be used as returned value of `GeneratorBasedBuilder._split_generators`.
    See `GeneratorBasedBuilder._split_generators` for more info and example of usage.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '### `class datasets.Split`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/splits.py#L407)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '`Enum` for dataset splits.'
  prefs: []
  type: TYPE_NORMAL
- en: Datasets are typically split into different subsets to be used at various stages
    of training and evaluation.
  prefs: []
  type: TYPE_NORMAL
- en: '`TRAIN`: the training data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`VALIDATION`: the validation data. If present, this is typically used as evaluation
    data while iterating on a model (e.g. changing hyperparameters, model architecture,
    etc.).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TEST`: the testing data. This is the data to report metrics on. Typically
    you do not want to use this during model iteration as you may overfit to it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ALL`: the union of all defined dataset splits.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All splits, including compositions inherit from `datasets.SplitBase`.
  prefs: []
  type: TYPE_NORMAL
- en: See the [guide](../load_hub#splits) on splits for more information.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '### `class datasets.NamedSplit`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/splits.py#L315)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Descriptor corresponding to a named split (train, test, ‚Ä¶).
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Each descriptor can be composed with other using addition or slice:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: The resulting split will correspond to 25% of the train split merged with 100%
    of the test split.
  prefs: []
  type: TYPE_NORMAL
- en: 'A split cannot be added twice, so the following will fail:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'The slices can be applied only one time. So the following are valid:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'But this is not valid:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '### `class datasets.NamedSplitAll`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/splits.py#L392)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: Split corresponding to the union of all defined dataset splits.
  prefs: []
  type: TYPE_NORMAL
- en: '### `class datasets.ReadInstruction`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/arrow_reader.py#L495)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Reading instruction for a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '#### `from_spec`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/arrow_reader.py#L575)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`spec` (`str`) ‚Äî Split(s) + optional slice(s) to read + optional rounding if
    percents are used as the slicing unit. A slice can be specified, using absolute
    numbers (`int`) or percentages (`int`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creates a `ReadInstruction` instance out of a string spec.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: '#### `to_absolute`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/arrow_reader.py#L647)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`name2len` (`dict`) ‚Äî Associating split names to number of examples.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Translate instruction into a list of absolute instructions.
  prefs: []
  type: TYPE_NORMAL
- en: Those absolute instructions are then to be added together.
  prefs: []
  type: TYPE_NORMAL
- en: Version
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class datasets.Version`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/datasets/blob/2.17.0/src/datasets/utils/version.py#L28)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`version_str` (`str`) ‚Äî The dataset version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`description` (`str`) ‚Äî A description of what is new in this version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`major` (`str`) ‚Äî'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`minor` (`str`) ‚Äî'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`patch` (`str`) ‚Äî'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dataset version `MAJOR.MINOR.PATCH`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
