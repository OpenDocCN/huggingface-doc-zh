["```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('xception41', pretrained=True)\n>>> o = m(torch.randn(2, 3, 299, 299))\n>>> print(f'Original shape: {o.shape}')\n>>> o = m.forward_features(torch.randn(2, 3, 299, 299))\n>>> print(f'Unpooled shape: {o.shape}')\n```", "```py\nOriginal shape: torch.Size([2, 1000])\nUnpooled shape: torch.Size([2, 2048, 10, 10])\n```", "```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('resnet50', pretrained=True, num_classes=0, global_pool='')\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> print(f'Unpooled shape: {o.shape}')\n```", "```py\nUnpooled shape: torch.Size([2, 2048, 7, 7])\n```", "```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('densenet121', pretrained=True)\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> print(f'Original shape: {o.shape}')\n>>> m.reset_classifier(0, '')\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> print(f'Unpooled shape: {o.shape}')\n```", "```py\nOriginal shape: torch.Size([2, 1000])\nUnpooled shape: torch.Size([2, 1024, 7, 7])\n```", "```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('resnet50', pretrained=True, num_classes=0)\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> print(f'Pooled shape: {o.shape}')\n```", "```py\nPooled shape: torch.Size([2, 2048])\n```", "```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('ese_vovnet19b_dw', pretrained=True)\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> print(f'Original shape: {o.shape}')\n>>> m.reset_classifier(0)\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> print(f'Pooled shape: {o.shape}')\n```", "```py\nOriginal shape: torch.Size([2, 1000])\nPooled shape: torch.Size([2, 1024])\n```", "```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('resnest26d', features_only=True, pretrained=True)\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> for x in o:\n...     print(x.shape)\n```", "```py\ntorch.Size([2, 64, 112, 112])\ntorch.Size([2, 256, 56, 56])\ntorch.Size([2, 512, 28, 28])\ntorch.Size([2, 1024, 14, 14])\ntorch.Size([2, 2048, 7, 7])\n```", "```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('regnety_032', features_only=True, pretrained=True)\n>>> print(f'Feature channels: {m.feature_info.channels()}')\n>>> o = m(torch.randn(2, 3, 224, 224))\n>>> for x in o:\n...     print(x.shape)\n```", "```py\nFeature channels: [32, 72, 216, 576, 1512]\ntorch.Size([2, 32, 112, 112])\ntorch.Size([2, 72, 56, 56])\ntorch.Size([2, 216, 28, 28])\ntorch.Size([2, 576, 14, 14])\ntorch.Size([2, 1512, 7, 7])\n```", "```py\n>>> import torch\n>>> import timm\n>>> m = timm.create_model('ecaresnet101d', features_only=True, output_stride=8, out_indices=(2, 4), pretrained=True)\n>>> print(f'Feature channels: {m.feature_info.channels()}')\n>>> print(f'Feature reduction: {m.feature_info.reduction()}')\n>>> o = m(torch.randn(2, 3, 320, 320))\n>>> for x in o:\n...     print(x.shape)\n```", "```py\nFeature channels: [512, 2048]\nFeature reduction: [8, 8]\ntorch.Size([2, 512, 40, 40])\ntorch.Size([2, 2048, 40, 40])\n```"]