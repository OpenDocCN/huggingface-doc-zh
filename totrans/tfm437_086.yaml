- en: Contribute to ü§ó Transformers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://huggingface.co/docs/transformers/v4.37.2/en/contributing](https://huggingface.co/docs/transformers/v4.37.2/en/contributing)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/transformers/v4.37.2/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/entry/start.1af50ed5.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/scheduler.9bc65507.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/singletons.a2d7fdf1.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/index.3b203c72.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/paths.b8f1dad4.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/entry/app.59e74a31.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/index.707bf1b6.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/nodes/0.dbd8cc12.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/nodes/13.6ea2dc5f.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/Tip.c2ecdbf4.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/CodeBlock.54a9f38d.js">
    <link rel="modulepreload" href="/docs/transformers/v4.37.2/en/_app/immutable/chunks/Heading.342b1fa6.js">
  prefs: []
  type: TYPE_NORMAL
- en: Everyone is welcome to contribute, and we value everybody‚Äôs contribution. Code
    contributions are not the only way to help the community. Answering questions,
    helping others, and improving the documentation are also immensely valuable.
  prefs: []
  type: TYPE_NORMAL
- en: It also helps us if you spread the word! Reference the library in blog posts
    about the awesome projects it made possible, shout out on Twitter every time it
    has helped you, or simply ‚≠êÔ∏è the repository to say thank you.
  prefs: []
  type: TYPE_NORMAL
- en: However you choose to contribute, please be mindful and respect our [code of
    conduct](https://github.com/huggingface/transformers/blob/main/CODE_OF_CONDUCT.md).
  prefs: []
  type: TYPE_NORMAL
- en: '**This guide was heavily inspired by the awesome [scikit-learn guide to contributing](https://github.com/scikit-learn/scikit-learn/blob/main/CONTRIBUTING.md).**'
  prefs: []
  type: TYPE_NORMAL
- en: Ways to contribute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are several ways you can contribute to ü§ó Transformers:'
  prefs: []
  type: TYPE_NORMAL
- en: Fix outstanding issues with the existing code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Submit issues related to bugs or desired new features.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement new models.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribute to the examples or to the documentation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you don‚Äôt know where to start, there is a special [Good First Issue](https://github.com/huggingface/transformers/contribute)
    listing. It will give you a list of open issues that are beginner-friendly and
    help you start contributing to open-source. Just comment on the issue that you‚Äôd
    like to work on.
  prefs: []
  type: TYPE_NORMAL
- en: For something slightly more challenging, you can also take a look at the [Good
    Second Issue](https://github.com/huggingface/transformers/labels/Good%20Second%20Issue)
    list. In general though, if you feel like you know what you‚Äôre doing, go for it
    and we‚Äôll help you get there! üöÄ
  prefs: []
  type: TYPE_NORMAL
- en: All contributions are equally valuable to the community. ü•∞
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Fixing outstanding issues
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you notice an issue with the existing code and have a fix in mind, feel free
    to [start contributing](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md/#create-a-pull-request)
    and open a Pull Request!
  prefs: []
  type: TYPE_NORMAL
- en: Submitting a bug-related issue or feature request
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Do your best to follow these guidelines when submitting a bug-related issue
    or a feature request. It will make it easier for us to come back to you quickly
    and with good feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Did you find a bug?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The ü§ó Transformers library is robust and reliable thanks to users who report
    the problems they encounter.
  prefs: []
  type: TYPE_NORMAL
- en: Before you report an issue, we would really appreciate it if you could **make
    sure the bug was not already reported** (use the search bar on GitHub under Issues).
    Your issue should also be related to bugs in the library itself, and not your
    code. If you‚Äôre unsure whether the bug is in your code or the library, please
    ask in the [forum](https://discuss.huggingface.co/) first. This helps us respond
    quicker to fixing issues related to the library versus general questions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you‚Äôve confirmed the bug hasn‚Äôt already been reported, please include
    the following information in your issue so we can quickly resolve it:'
  prefs: []
  type: TYPE_NORMAL
- en: Your **OS type and version** and **Python**, **PyTorch** and **TensorFlow**
    versions when applicable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A short, self-contained, code snippet that allows us to reproduce the bug in
    less than 30s.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *full* traceback if an exception is raised.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attach any other additional information, like screenshots, you think may help.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To get the OS and software versions automatically, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also run the same command from the root of the repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Do you want a new feature?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If there is a new feature you‚Äôd like to see in ü§ó Transformers, please open
    an issue and describe:'
  prefs: []
  type: TYPE_NORMAL
- en: What is the *motivation* behind this feature? Is it related to a problem or
    frustration with the library? Is it a feature related to something you need for
    a project? Is it something you worked on and think it could benefit the community?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Whatever it is, we‚Äôd love to hear about it!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Describe your requested feature in as much detail as possible. The more you
    can tell us about it, the better we‚Äôll be able to help you.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide a *code snippet* that demonstrates the features usage.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the feature is related to a paper, please include a link.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If your issue is well written we‚Äôre already 80% of the way there by the time
    you create it.
  prefs: []
  type: TYPE_NORMAL
- en: We have added [templates](https://github.com/huggingface/transformers/tree/main/templates)
    to help you get started with your issue.
  prefs: []
  type: TYPE_NORMAL
- en: Do you want to implement a new model?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: New models are constantly released and if you want to implement a new model,
    please provide the following information
  prefs: []
  type: TYPE_NORMAL
- en: A short description of the model and a link to the paper.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Link to the implementation if it is open-sourced.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Link to the model weights if they are available.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are willing to contribute the model yourself, let us know so we can help
    you add it to ü§ó Transformers!
  prefs: []
  type: TYPE_NORMAL
- en: We have added a [detailed guide and templates](https://github.com/huggingface/transformers/tree/main/templates)
    to help you get started with adding a new model, and we also have a more technical
    guide for [how to add a model to ü§ó Transformers](https://huggingface.co/docs/transformers/add_new_model).
  prefs: []
  type: TYPE_NORMAL
- en: Do you want to add documentation?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We‚Äôre always looking for improvements to the documentation that make it more
    clear and accurate. Please let us know how the documentation can be improved such
    as typos and any content that is missing, unclear or inaccurate. We‚Äôll be happy
    to make the changes or help you make a contribution if you‚Äôre interested!
  prefs: []
  type: TYPE_NORMAL
- en: For more details about how to generate, build, and write the documentation,
    take a look at the documentation [README](https://github.com/huggingface/transformers/tree/main/docs).
  prefs: []
  type: TYPE_NORMAL
- en: Create a Pull Request
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before writing any code, we strongly advise you to search through the existing
    PRs or issues to make sure nobody is already working on the same thing. If you
    are unsure, it is always a good idea to open an issue to get some feedback.
  prefs: []
  type: TYPE_NORMAL
- en: You will need basic `git` proficiency to contribute to ü§ó Transformers. While
    `git` is not the easiest tool to use, it has the greatest manual. Type `git --help`
    in a shell and enjoy! If you prefer books, [Pro Git](https://git-scm.com/book/en/v2)
    is a very good reference.
  prefs: []
  type: TYPE_NORMAL
- en: 'You‚Äôll need **[Python 3.8]((https://github.com/huggingface/transformers/blob/main/setup.py#L426))**
    or above to contribute to ü§ó Transformers. Follow the steps below to start contributing:'
  prefs: []
  type: TYPE_NORMAL
- en: Fork the [repository](https://github.com/huggingface/transformers) by clicking
    on the **[Fork](https://github.com/huggingface/transformers/fork)** button on
    the repository‚Äôs page. This creates a copy of the code under your GitHub user
    account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Clone your fork to your local disk, and add the base repository as a remote:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a new branch to hold your development changes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: üö® **Do not** work on the `main` branch!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Set up a development environment by running the following command in a virtual
    environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: If ü§ó Transformers was already installed in the virtual environment, remove it
    with `pip uninstall transformers` before reinstalling it in editable mode with
    the `-e` flag.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Depending on your OS, and since the number of optional dependencies of Transformers
    is growing, you might get a failure with this command. If that‚Äôs the case make
    sure to install the Deep Learning framework you are working with (PyTorch, TensorFlow
    and/or Flax) then do:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: which should be enough for most use cases.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Develop the features in your branch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As you work on your code, you should make sure the test suite passes. Run the
    tests impacted by your changes like this:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For more information about tests, check out the [Testing](https://huggingface.co/docs/transformers/testing)
    guide.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'ü§ó Transformers relies on `black` and `ruff` to format its source code consistently.
    After you make changes, apply automatic style corrections and code verifications
    that can‚Äôt be automated in one go with:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This target is also optimized to only work with files modified by the PR you‚Äôre
    working on.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If you prefer to run the checks one after the other, the following command
    applies the style corrections:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'ü§ó Transformers also uses `ruff` and a few custom scripts to check for coding
    mistakes. Quality controls are run by the CI, but you can run the same checks
    with:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Finally, we have a lot of scripts to make sure we don‚Äôt forget to update some
    files when adding a new model. You can run these scripts with:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: To learn more about those checks and how to fix any issues with them, check
    out the [Checks on a Pull Request](https://huggingface.co/docs/transformers/pr_checks)
    guide.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If you‚Äôre modifying documents under the `docs/source` directory, make sure
    the documentation can still be built. This check will also run in the CI when
    you open a pull request. To run a local check make sure you install the documentation
    builder:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run the following command from the root of the repository:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This will build the documentation in the `~/tmp/test-build` folder where you
    can inspect the generated Markdown files with your favorite editor. You can also
    preview the docs on GitHub when you open a pull request.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once you‚Äôre happy with your changes, add the changed files with `git add` and
    record your changes locally with `git commit`:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Please remember to write [good commit messages](https://chris.beams.io/posts/git-commit/)
    to clearly communicate the changes you made!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To keep your copy of the code up to date with the original repository, rebase
    your branch on `upstream/branch` *before* you open a pull request or if requested
    by a maintainer:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Push your changes to your branch:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: If you‚Äôve already opened a pull request, you‚Äôll need to force push with the
    `--force` flag. Otherwise, if the pull request hasn‚Äôt been opened yet, you can
    just push your changes normally.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now you can go to your fork of the repository on GitHub and click on **Pull
    Request** to open a pull request. Make sure you tick off all the boxes on our
    [checklist](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md/#pull-request-checklist)
    below. When you‚Äôre ready, you can send your changes to the project maintainers
    for review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It‚Äôs ok if maintainers request changes, it happens to our core contributors
    too! So everyone can see the changes in the pull request, work in your local branch
    and push the changes to your fork. They will automatically appear in the pull
    request.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pull request checklist
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ‚òê The pull request title should summarize your contribution.
  prefs: []
  type: TYPE_NORMAL
- en: ‚òê If your pull request addresses an issue, please mention the issue number in
    the pull request description to make sure they are linked (and people viewing
    the issue know you are working on it).
  prefs: []
  type: TYPE_NORMAL
- en: ‚òê To indicate a work in progress please prefix the title with `[WIP]`. These
    are useful to avoid duplicated work, and to differentiate it from PRs ready to
    be merged.
  prefs: []
  type: TYPE_NORMAL
- en: ‚òê Make sure existing tests pass.
  prefs: []
  type: TYPE_NORMAL
- en: ‚òê If adding a new feature, also add tests for it.
  prefs: []
  type: TYPE_NORMAL
- en: If you are adding a new model, make sure you use `ModelTester.all_model_classes
    = (MyModel, MyModelWithLMHead,...)` to trigger the common tests.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are adding new `@slow` tests, make sure they pass using `RUN_SLOW=1 python
    -m pytest tests/models/my_new_model/test_my_new_model.py`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are adding a new tokenizer, write tests and make sure `RUN_SLOW=1 python
    -m pytest tests/models/{your_model_name}/test_tokenization_{your_model_name}.py`
    passes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CircleCI does not run the slow tests, but GitHub Actions does every night!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‚òê All public methods must have informative docstrings (see [`modeling_bert.py`](https://github.com/huggingface/transformers/blob/main/src/transformers/models/bert/modeling_bert.py)
    for an example).
  prefs: []
  type: TYPE_NORMAL
- en: '‚òê Due to the rapidly growing repository, don‚Äôt add any images, videos and other
    non-text files that‚Äôll significantly weigh down the repository. Instead, use a
    Hub repository such as [`hf-internal-testing`](https://huggingface.co/hf-internal-testing)
    to host these files and reference them by URL. We recommend placing documentation
    related images in the following repository: [huggingface/documentation-images](https://huggingface.co/datasets/huggingface/documentation-images).
    You can open a PR on this dataset repostitory and ask a Hugging Face member to
    merge it.'
  prefs: []
  type: TYPE_NORMAL
- en: For more information about the checks run on a pull request, take a look at
    our [Checks on a Pull Request](https://huggingface.co/docs/transformers/pr_checks)
    guide.
  prefs: []
  type: TYPE_NORMAL
- en: Tests
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An extensive test suite is included to test the library behavior and several
    examples. Library tests can be found in the [tests](https://github.com/huggingface/transformers/tree/main/tests)
    folder and examples tests in the [examples](https://github.com/huggingface/transformers/tree/main/examples)
    folder.
  prefs: []
  type: TYPE_NORMAL
- en: We like `pytest` and `pytest-xdist` because it‚Äôs faster. From the root of the
    repository, specify a *path to a subfolder or a test file* to run the test.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Similarly, for the `examples` directory, specify a *path to a subfolder or
    test file* to run the test. For example, the following command tests the text
    classification subfolder in the PyTorch `examples` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: In fact, this is actually how our `make test` and `make test-examples` commands
    are implemented (not including the `pip install`)!
  prefs: []
  type: TYPE_NORMAL
- en: You can also specify a smaller set of tests in order to test only the feature
    you‚Äôre working on.
  prefs: []
  type: TYPE_NORMAL
- en: By default, slow tests are skipped but you can set the `RUN_SLOW` environment
    variable to `yes` to run them. This will download many gigabytes of models so
    make sure you have enough disk space, a good internet connection or a lot of patience!
  prefs: []
  type: TYPE_NORMAL
- en: Remember to specify a *path to a subfolder or a test file* to run the test.
    Otherwise, you‚Äôll run all the tests in the `tests` or `examples` folder, which
    will take a very long time!
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Like the slow tests, there are other environment variables available which
    not enabled by default during testing:'
  prefs: []
  type: TYPE_NORMAL
- en: '`RUN_CUSTOM_TOKENIZERS`: Enables tests for custom tokenizers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RUN_PT_FLAX_CROSS_TESTS`: Enables tests for PyTorch + Flax integration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RUN_PT_TF_CROSS_TESTS`: Enables tests for TensorFlow + PyTorch integration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More environment variables and additional information can be found in the [testing_utils.py](src/transformers/testing_utils.py).
  prefs: []
  type: TYPE_NORMAL
- en: ü§ó Transformers uses `pytest` as a test runner only. It doesn‚Äôt use any `pytest`-specific
    features in the test suite itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'This means `unittest` is fully supported. Here‚Äôs how to run tests with `unittest`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Style guide
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For documentation strings, ü§ó Transformers follows the [Google Python Style Guide](https://google.github.io/styleguide/pyguide.html).
    Check our [documentation writing guide](https://github.com/huggingface/transformers/tree/main/docs#writing-documentation---specification)
    for more information.
  prefs: []
  type: TYPE_NORMAL
- en: Develop on Windows
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'On Windows (unless you‚Äôre working in [Windows Subsystem for Linux](https://learn.microsoft.com/en-us/windows/wsl/)
    or WSL), you need to configure git to transform Windows `CRLF` line endings to
    Linux `LF` line endings:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'One way to run the `make` command on Windows is with MSYS2:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Download MSYS2](https://www.msys2.org/), and we assume it‚Äôs installed in `C:\msys64`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the command line `C:\msys64\msys2.exe` (it should be available from the
    **Start** menu).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run in the shell: `pacman -Syu` and install `make` with `pacman -S make`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add `C:\msys64\usr\bin` to your PATH environment variable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now use `make` from any terminal (Powershell, cmd.exe, etc.)! üéâ
  prefs: []
  type: TYPE_NORMAL
- en: Sync a forked repository with upstream main (the Hugging Face repository)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When updating the main branch of a forked repository, please follow these steps
    to avoid pinging the upstream repository which adds reference notes to each upstream
    PR, and sends unnecessary notifications to the developers involved in these PRs.
  prefs: []
  type: TYPE_NORMAL
- en: When possible, avoid syncing with the upstream using a branch and PR on the
    forked repository. Instead, merge directly into the forked main.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If a PR is absolutely necessary, use the following steps after checking out
    your branch:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
