- en: Quiz
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://huggingface.co/learn/deep-rl-course/unit3/quiz](https://huggingface.co/learn/deep-rl-course/unit3/quiz)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/deep-rl-course/main/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/entry/start.c0547f01.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/scheduler.37c15a92.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/singletons.b4cd11ef.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/index.18351ede.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/paths.3cd722f3.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/entry/app.41e0adab.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/index.7cb9c9b8.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/nodes/0.b906e680.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/nodes/44.99892f00.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/Question.f95a37ca.js">
    <link rel="modulepreload" href="/docs/deep-rl-course/main/en/_app/immutable/chunks/Heading.d3928e2a.js">
  prefs: []
  type: TYPE_NORMAL
- en: The best way to learn and [to avoid the illusion of competence](https://www.coursera.org/lecture/learning-how-to-learn/illusions-of-competence-BuFzf)
    **is to test yourself.** This will help you to find **where you need to reinforce
    your knowledge**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Q1: We mentioned Q Learning is a tabular method. What are tabular methods?'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: <details data-svelte-h="svelte-gsebop"><summary>Solution</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '*Tabular methods* is a type of problem in which the state and actions spaces
    are small enough to approximate value functions to be **represented as arrays
    and tables**. For instance, **Q-Learning is a tabular method** since we use a
    table to represent the state, and action value pairs.</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'Q2: Why can‚Äôt we use a classical Q-Learning to solve an Atari Game?'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Q3: Why do we stack four frames together when we use frames as input in Deep
    Q-Learning?'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: <details data-svelte-h="svelte-nzbq54"><summary>Solution</summary>
  prefs: []
  type: TYPE_NORMAL
- en: 'We stack frames together because it helps us **handle the problem of temporal
    limitation**: one frame is not enough to capture temporal information. For instance,
    in pong, our agent **will be unable to know the ball direction if it gets only
    one frame**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Temporal limitation](../Images/916225d18ad696514245f8c4e88a5a56.png) ![Temporal
    limitation](../Images/e35a3e3cfeefe6f7a16b681ab91dfa7b.png)</details>'
  prefs: []
  type: TYPE_NORMAL
- en: 'Q4: What are the two phases of Deep Q-Learning?'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Q5: Why do we create a replay memory in Deep Q-Learning?'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: <details data-svelte-h="svelte-10rxkt3"><summary>Solution</summary>
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. Make more efficient use of the experiences during the training**'
  prefs: []
  type: TYPE_NORMAL
- en: Usually, in online reinforcement learning, the agent interacts in the environment,
    gets experiences (state, action, reward, and next state), learns from them (updates
    the neural network), and discards them. This is not efficient. But, with experience
    replay, **we create a replay buffer that saves experience samples that we can
    reuse during the training**.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Avoid forgetting previous experiences and reduce the correlation between
    experiences**'
  prefs: []
  type: TYPE_NORMAL
- en: The problem we get if we give sequential samples of experiences to our neural
    network is that it **tends to forget the previous experiences as it overwrites
    new experiences**. For instance, if we are in the first level and then the second,
    which is different, our agent can forget how to behave and play in the first level.</details>
  prefs: []
  type: TYPE_NORMAL
- en: 'Q6: How do we use Double Deep Q-Learning?'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: <details data-svelte-h="svelte-1u03gxl"><summary>Solution</summary>
  prefs: []
  type: TYPE_NORMAL
- en: 'When we compute the Q target, we use two networks to decouple the action selection
    from the target Q value generation. We:'
  prefs: []
  type: TYPE_NORMAL
- en: Use our *DQN network* to **select the best action to take for the next state**
    (the action with the highest Q value).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use our *Target network* to calculate **the target Q value of taking that action
    at the next state**.</details>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Congrats on finishing this Quiz ü•≥, if you missed some elements, take time to
    read again the chapter to reinforce (üòè) your knowledge.
  prefs: []
  type: TYPE_NORMAL
