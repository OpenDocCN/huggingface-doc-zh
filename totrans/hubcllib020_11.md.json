["```py\n>>> from huggingface_hub import create_repo\n>>> create_repo(\"lysandre/test-model\")\n'https://huggingface.co/lysandre/test-model'\n```", "```py\n>>> from huggingface_hub import create_repo\n>>> create_repo(\"lysandre/test-dataset\", repo_type=\"dataset\")\n'https://huggingface.co/datasets/lysandre/test-dataset'\n```", "```py\n>>> from huggingface_hub import create_repo\n>>> create_repo(\"lysandre/test-private\", private=True)\n```", "```py\n>>> delete_repo(repo_id=\"lysandre/my-corrupted-dataset\", repo_type=\"dataset\")\n```", "```py\n>>> from huggingface_hub import duplicate_space\n>>> duplicate_space(\"multimodalart/dreambooth-training\", private=False)\nRepoUrl('https://huggingface.co/spaces/nateraw/dreambooth-training',...)\n```", "```py\n>>> from huggingface_hub import create_branch, create_tag\n\n# Create a branch on a Space repo from `main` branch\n>>> create_branch(\"Matthijs/speecht5-tts-demo\", repo_type=\"space\", branch=\"handle-dog-speaker\")\n\n# Create a tag on a Dataset repo from `v0.1-release` branch\n>>> create_branch(\"bigcode/the-stack\", repo_type=\"dataset\", revision=\"v0.1-release\", tag=\"v0.1.1\", tag_message=\"Bump release version.\")\n```", "```py\n>>> from huggingface_hub import list_repo_refs\n>>> list_repo_refs(\"bigcode/the-stack\", repo_type=\"dataset\")\nGitRefs(\n   branches=[\n         GitRefInfo(name='main', ref='refs/heads/main', target_commit='18edc1591d9ce72aa82f56c4431b3c969b210ae3'),\n         GitRefInfo(name='v1.1.a1', ref='refs/heads/v1.1.a1', target_commit='f9826b862d1567f3822d3d25649b0d6d22ace714')\n   ],\n   converts=[],\n   tags=[\n         GitRefInfo(name='v1.0', ref='refs/tags/v1.0', target_commit='c37a8cd1e382064d8aced5e05543c5f7753834da')\n   ]\n)\n```", "```py\n>>> from huggingface_hub import update_repo_visibility\n>>> update_repo_visibility(repo_id=repo_id, private=True)\n```", "```py\n>>> from huggingface_hub import move_repo\n>>> move_repo(from_id=\"Wauplin/cool-model\", to_id=\"huggingface/cool-model\")\n```", "```py\n>>> from huggingface_hub import Repository\n>>> repo = Repository(local_dir=\"<path>/<to>/<folder>\")\n```", "```py\n>>> from huggingface_hub import Repository\n>>> repo = Repository(local_dir=\"w2v2\", clone_from=\"facebook/wav2vec2-large-960h-lv60\")\n```", "```py\n>>> repo = Repository(local_dir=\"huggingface-hub\", clone_from=\"https://huggingface.co/facebook/wav2vec2-large-960h-lv60\")\n```", "```py\n>>> repo_url = create_repo(repo_id=\"repo_name\")\n>>> repo = Repository(local_dir=\"repo_local_path\", clone_from=repo_url)\n```", "```py\n>>> repo = Repository(\n...   \"my-dataset\",\n...   clone_from=\"<user>/<dataset_id>\",\n...   token=True,\n...   repo_type=\"dataset\",\n...   git_user=\"MyName\",\n...   git_email=\"me@cool.mail\"\n... )\n```", "```py\n>>> from huggingface_hub import Repository\n>>> repo = Repository(local_dir=\"huggingface-hub\", clone_from=\"<user>/<dataset_id>\", revision='branch1')\n>>> repo.git_checkout(\"branch2\")\n```", "```py\n>>> from huggingface_hub import Repository\n>>> repo.git_pull()\n```", "```py\n>>> repo.git_pull(rebase=True)\n```"]