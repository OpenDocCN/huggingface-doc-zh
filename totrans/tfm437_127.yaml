- en: Feature Extractor
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特征提取器
- en: 'Original text: [https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/feature_extractor](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/feature_extractor)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/feature_extractor](https://huggingface.co/docs/transformers/v4.37.2/en/main_classes/feature_extractor)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: A feature extractor is in charge of preparing input features for audio or vision
    models. This includes feature extraction from sequences, e.g., pre-processing
    audio files to generate Log-Mel Spectrogram features, feature extraction from
    images, e.g., cropping image files, but also padding, normalization, and conversion
    to NumPy, PyTorch, and TensorFlow tensors.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 特征提取器负责为音频或视觉模型准备输入特征。这包括从序列中提取特征，例如，对音频文件进行预处理以生成 Log-Mel Spectrogram 特征，从图像中提取特征，例如，裁剪图像文件，但也包括填充、归一化和转换为
    NumPy、PyTorch 和 TensorFlow 张量。
- en: FeatureExtractionMixin
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FeatureExtractionMixin
- en: '### `class transformers.FeatureExtractionMixin`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.FeatureExtractionMixin`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L240)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L240)'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is a feature extraction mixin used to provide saving/loading functionality
    for sequential and image feature extractors.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个特征提取混合类，用于为序列和图像特征提取器提供保存/加载功能。
- en: '#### `from_pretrained`'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `from_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L264)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L264)'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`) — This can be either:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pretrained_model_name_or_path` (`str` 或 `os.PathLike`) — 这可以是：'
- en: a string, the *model id* of a pretrained feature_extractor hosted inside a model
    repo on huggingface.co. Valid model ids can be located at the root-level, like
    `bert-base-uncased`, or namespaced under a user or organization name, like `dbmdz/bert-base-german-cased`.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，预训练特征提取器的 *模型id*，托管在 huggingface.co 上的模型存储库中。有效的模型id可以位于根级别，如 `bert-base-uncased`，或者在用户或组织名称下进行命名空间，如
    `dbmdz/bert-base-german-cased`。
- en: a path to a *directory* containing a feature extractor file saved using the
    [save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.save_pretrained)
    method, e.g., `./my_model_directory/`.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个指向包含使用 [save_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.save_pretrained)
    方法保存的特征提取器文件的 *目录* 的路径，例如 `./my_model_directory/`。
- en: a path or url to a saved feature extractor JSON *file*, e.g., `./my_model_directory/preprocessor_config.json`.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个保存的特征提取器 JSON *文件* 的路径或 URL，例如 `./my_model_directory/preprocessor_config.json`。
- en: '`cache_dir` (`str` or `os.PathLike`, *optional*) — Path to a directory in which
    a downloaded pretrained model feature extractor should be cached if the standard
    cache should not be used.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache_dir` (`str` 或 `os.PathLike`, *可选*) — 下载的预训练模型特征提取器应该缓存在其中的目录路径，如果不使用标准缓存。'
- en: '`force_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to force to (re-)download the feature extractor files and override the cached
    versions if they exist.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`force_download` (`bool`, *可选*, 默认为 `False`) — 是否强制（重新）下载特征提取器文件并覆盖缓存版本（如果存在）。'
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) — Whether or not
    to delete incompletely received file. Attempts to resume the download if such
    a file exists.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resume_download` (`bool`, *可选*, 默认为 `False`) — 是否删除接收不完整的文件。如果存在这样的文件，则尝试恢复下载。'
- en: '`proxies` (`Dict[str, str]`, *optional*) — A dictionary of proxy servers to
    use by protocol or endpoint, e.g., `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}.` The proxies are used on each request.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies` (`Dict[str, str]`, *可选*) — 一个按协议或端点使用的代理服务器字典，例如，`{''http'': ''foo.bar:3128'',
    ''http://hostname'': ''foo.bar:4012''}`。代理将在每个请求中使用。'
- en: '`token` (`str` or `bool`, *optional*) — The token to use as HTTP bearer authorization
    for remote files. If `True`, or not specified, will use the token generated when
    running `huggingface-cli login` (stored in `~/.huggingface`).'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`str` 或 `bool`, *可选*) — 用作远程文件的 HTTP bearer 授权的令牌。如果为 `True`，或未指定，将使用运行
    `huggingface-cli login` 时生成的令牌（存储在 `~/.huggingface` 中）。'
- en: '`revision` (`str`, *optional*, defaults to `"main"`) — The specific model version
    to use. It can be a branch name, a tag name, or a commit id, since we use a git-based
    system for storing models and other artifacts on huggingface.co, so `revision`
    can be any identifier allowed by git.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*, 默认为 `"main"`) — 要使用的特定模型版本。它可以是分支名称、标签名称或提交 id，因为我们在
    huggingface.co 上使用基于 git 的系统来存储模型和其他工件，所以 `revision` 可以是 git 允许的任何标识符。'
- en: Instantiate a type of [FeatureExtractionMixin](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin)
    from a feature extractor, *e.g.* a derived class of [SequenceFeatureExtractor](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.SequenceFeatureExtractor).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从特征提取器实例化一种类型的 [FeatureExtractionMixin](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin)，*例如*
    [SequenceFeatureExtractor](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.SequenceFeatureExtractor)
    的派生类。
- en: 'Examples:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '#### `save_pretrained`'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `save_pretrained`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L377)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L377)'
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`save_directory` (`str` or `os.PathLike`) — Directory where the feature extractor
    JSON file will be saved (will be created if it does not exist).'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save_directory` (`str` 或 `os.PathLike`) — 特征提取器 JSON 文件将保存在的目录（如果不存在将被创建）。'
- en: '`push_to_hub` (`bool`, *optional*, defaults to `False`) — Whether or not to
    push your model to the Hugging Face model hub after saving it. You can specify
    the repository you want to push to with `repo_id` (will default to the name of
    `save_directory` in your namespace).'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`push_to_hub` (`bool`, *可选*, 默认为 `False`) — 在保存模型后是否将其推送到 Hugging Face 模型中心。您可以使用
    `repo_id` 指定要推送到的存储库（将默认为您的命名空间中的 `save_directory` 的名称）。'
- en: '`kwargs` (`Dict[str, Any]`, *optional*) — Additional key word arguments passed
    along to the [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    method.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs` (`Dict[str, Any]`, *可选*) — 传递给 [push_to_hub()](/docs/transformers/v4.37.2/en/internal/tokenization_utils#transformers.PreTrainedTokenizerBase.push_to_hub)
    方法的额外关键字参数。'
- en: Save a feature_extractor object to the directory `save_directory`, so that it
    can be re-loaded using the [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.from_pretrained)
    class method.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将 feature_extractor 对象保存到目录 `save_directory`，以便可以使用 [from_pretrained()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.FeatureExtractionMixin.from_pretrained)
    类方法重新加载。
- en: SequenceFeatureExtractor
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SequenceFeatureExtractor
- en: '### `class transformers.SequenceFeatureExtractor`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.SequenceFeatureExtractor`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_sequence_utils.py#L29)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_sequence_utils.py#L29)'
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`feature_size` (`int`) — The feature dimension of the extracted features.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`feature_size` (`int`) — 提取特征的特征维度。'
- en: '`sampling_rate` (`int`) — The sampling rate at which the audio files should
    be digitalized expressed in hertz (Hz).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sampling_rate` (`int`) — 应以赫兹（Hz）表示的音频文件数字化的采样率。'
- en: '`padding_value` (`float`) — The value that is used to fill the padding values
    / vectors.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`padding_value` (`float`) — 用于填充填充值/向量的值。'
- en: This is a general feature extraction class for speech recognition.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用于语音识别的通用特征提取类。
- en: '#### `pad`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `pad`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_sequence_utils.py#L52)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_sequence_utils.py#L52)'
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`processed_features` ([BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature),
    list of [BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature),
    `Dict[str, List[float]]`, `Dict[str, List[List[float]]` or `List[Dict[str, List[float]]]`)
    — Processed inputs. Can represent one input ([BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)
    or `Dict[str, List[float]]`) or a batch of input values / vectors (list of [BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature),
    *Dict[str, List[List[float]]]* or *List[Dict[str, List[float]]]*) so you can use
    this method during preprocessing as well as in a PyTorch Dataloader collate function.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`processed_features` ([BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)、[BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)
    列表、`Dict[str, List[float]]`、`Dict[str, List[List[float]]` 或 `List[Dict[str, List[float]]`)
    — 处理后的输入。可以表示一个输入（[BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)
    或 `Dict[str, List[float]]`）或一批输入值/向量（[BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)
    列表、*Dict[str, List[List[float]]]* 或 *List[Dict[str, List[float]]*），因此您可以在预处理期间以及在
    PyTorch Dataloader 收集函数中使用此方法。'
- en: Instead of `List[float]` you can have tensors (numpy arrays, PyTorch tensors
    or TensorFlow tensors), see the note above for the return type.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用张量（numpy 数组、PyTorch 张量或 TensorFlow 张量）代替 `List[float]`，请参阅上面的返回类型说明。
- en: '`padding` (`bool`, `str` or [PaddingStrategy](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.utils.PaddingStrategy),
    *optional*, defaults to `True`) — Select a strategy to pad the returned sequences
    (according to the model’s padding side and padding index) among:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`padding` (`bool`、`str` 或 [PaddingStrategy](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.utils.PaddingStrategy),
    *可选*, 默认为 `True`) — 选择一种策略来填充返回的序列（根据模型的填充方向和填充索引）:'
- en: '`True` or `''longest''`: Pad to the longest sequence in the batch (or no padding
    if only a single sequence if provided).'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`True` 或 `''longest''`: 填充到批次中最长的序列（如果只提供单个序列，则不填充）。'
- en: '`''max_length''`: Pad to a maximum length specified with the argument `max_length`
    or to the maximum acceptable input length for the model if that argument is not
    provided.'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''max_length''`: 填充到指定的最大长度参数 `max_length` 或模型的最大可接受输入长度（如果未提供该参数）。'
- en: '`False` or `''do_not_pad''` (default): No padding (i.e., can output a batch
    with sequences of different lengths).'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`False` 或 `''do_not_pad''` (默认): 无填充（即，可以输出具有不同长度序列的批次）。'
- en: '`max_length` (`int`, *optional*) — Maximum length of the returned list and
    optionally padding length (see above).'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_length` (`int`, *可选*) — 返回列表的最大长度和可选填充长度（见上文）。'
- en: '`truncation` (`bool`) — Activates truncation to cut input sequences longer
    than `max_length` to `max_length`.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`截断` (`bool`) — 激活截断以将输入序列长度超过 `max_length` 的部分截断为 `max_length`。'
- en: '`pad_to_multiple_of` (`int`, *optional*) — If set will pad the sequence to
    a multiple of the provided value.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pad_to_multiple_of` (`int`, *可选*) — 如果设置，将序列填充到提供的值的倍数。'
- en: This is especially useful to enable the use of Tensor Cores on NVIDIA hardware
    with compute capability `>= 7.5` (Volta), or on TPUs which benefit from having
    sequence lengths be a multiple of 128.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这对于在具有计算能力 `>= 7.5`（Volta）的 NVIDIA 硬件上启用 Tensor Cores，或者在受益于序列长度为 128 的 TPUs
    上使用特别有用。
- en: '`return_attention_mask` (`bool`, *optional*) — Whether to return the attention
    mask. If left to the default, will return the attention mask according to the
    specific feature_extractor’s default.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_attention_mask` (`bool`, *可选*) — 是否返回注意力掩码。如果保持默认值，将根据特定 feature_extractor
    的默认值返回注意力掩码。'
- en: '[What are attention masks?](../glossary#attention-mask)'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[什么是注意力掩码？](../glossary#attention-mask)'
- en: '`return_tensors` (`str` or [TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType),
    *optional*) — If set, will return tensors instead of list of python integers.
    Acceptable values are:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_tensors` (`str` 或 [TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType),
    *可选*) — 如果设置，将返回张量而不是 Python 整数列表。可接受的值为:'
- en: '`''tf''`: Return TensorFlow `tf.constant` objects.'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''tf''`: 返回 TensorFlow `tf.constant` 对象。'
- en: '`''pt''`: Return PyTorch `torch.Tensor` objects.'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''pt''`: 返回 PyTorch `torch.Tensor` 对象。'
- en: '`''np''`: Return Numpy `np.ndarray` objects.'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''np''`: 返回 Numpy `np.ndarray` 对象。'
- en: Pad input values / input vectors or a batch of input values / input vectors
    up to predefined length or to the max sequence length in the batch.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 填充输入值/输入向量或一批输入值/输入向量到预定义长度或批次中的最大序列长度。
- en: Padding side (left/right) padding values are defined at the feature extractor
    level (with `self.padding_side`, `self.padding_value`)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 填充侧（左/右）填充值在特征提取器级别定义（使用`self.padding_side`，`self.padding_value`）
- en: If the `processed_features` passed are dictionary of numpy arrays, PyTorch tensors
    or TensorFlow tensors, the result will use the same type unless you provide a
    different tensor type with `return_tensors`. In the case of PyTorch tensors, you
    will lose the specific device of your tensors however.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递的`processed_features`是numpy数组、PyTorch张量或TensorFlow张量的字典，则结果将使用相同类型，除非您使用`return_tensors`提供不同的张量类型。在PyTorch张量的情况下，您将丢失张量的特定设备。
- en: BatchFeature
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BatchFeature
- en: '### `class transformers.BatchFeature`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.BatchFeature`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L61)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L61)'
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Parameters
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`data` (`dict`, *optional*) — Dictionary of lists/arrays/tensors returned by
    the **call**/pad methods (‘input_values’, ‘attention_mask’, etc.).'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data`（`dict`，*可选*）-由**call**/pad方法返回的列表/数组/张量的字典（''input_values''，''attention_mask''等）。'
- en: '`tensor_type` (`Union[None, str, TensorType]`, *optional*) — You can give a
    tensor_type here to convert the lists of integers in PyTorch/TensorFlow/Numpy
    Tensors at initialization.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tensor_type`（`Union[None, str, TensorType]`，*可选*）-您可以在此处提供一个tensor_type，以在初始化时将整数列表转换为PyTorch/TensorFlow/Numpy张量。'
- en: Holds the output of the [pad()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.SequenceFeatureExtractor.pad)
    and feature extractor specific `__call__` methods.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 保存[pad()](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.SequenceFeatureExtractor.pad)和特征提取器特定的`__call__`方法的输出。
- en: This class is derived from a python dictionary and can be used as a dictionary.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此类派生自Python字典，可用作字典。
- en: '#### `convert_to_tensors`'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `convert_to_tensors`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L164)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L164)'
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`tensor_type` (`str` or [TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType),
    *optional*) — The type of tensors to use. If `str`, should be one of the values
    of the enum [TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType).
    If `None`, no modification is done.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tensor_type`（`str`或[TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType)，*可选*）-要使用的张量类型。如果是`str`，应该是枚举[TensorType](/docs/transformers/v4.37.2/en/internal/file_utils#transformers.TensorType)值之一。如果是`None`，则不进行修改。'
- en: Convert the inner content to tensors.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 将内部内容转换为张量。
- en: '#### `to`'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L195)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/feature_extraction_utils.py#L195)'
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`args` (`Tuple`) — Will be passed to the `to(...)` function of the tensors.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`args`（`Tuple`）-将传递给张量的`to(...)`函数。'
- en: '`kwargs` (`Dict`, *optional*) — Will be passed to the `to(...)` function of
    the tensors.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kwargs`（`Dict`，*可选*）-将传递给张量的`to(...)`函数。'
- en: Returns
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '[BatchFeature](/docs/transformers/v4.37.2/en/main_classes/feature_extractor#transformers.BatchFeature)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: BatchFeature
- en: The same instance after modification.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 修改后的相同实例。
- en: Send all values to device by calling `v.to(*args, **kwargs)` (PyTorch only).
    This should support casting in different `dtypes` and sending the `BatchFeature`
    to a different `device`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调用`v.to(*args, **kwargs)`将所有值发送到设备（仅适用于PyTorch）。这应该支持在不同的`dtypes`中进行转换，并将`BatchFeature`发送到不同的`device`。
- en: ImageFeatureExtractionMixin
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ImageFeatureExtractionMixin
- en: '### `class transformers.ImageFeatureExtractionMixin`'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class transformers.ImageFeatureExtractionMixin`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L341)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L341)'
- en: '[PRE9]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Mixin that contain utilities for preparing image features.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 包含准备图像特征的实用程序的Mixin。
- en: '#### `center_crop`'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `center_crop`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L569)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L569)'
- en: '[PRE10]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Parameters
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `np.ndarray` or `torch.Tensor` of shape (n_channels,
    height, width) or (height, width, n_channels)) — The image to resize.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`，形状为（n_channels，height，width）或（height，width，n_channels））-要调整大小的图像。'
- en: '`size` (`int` or `Tuple[int, int]`) — The size to which crop the image.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（`int`或`Tuple[int, int]`）-要裁剪图像的大小。'
- en: Returns
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: new_image
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: new_image
- en: 'A center cropped `PIL.Image.Image` or `np.ndarray` or `torch.Tensor` of shape:
    (n_channels, height, width).'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 中心裁剪的`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`的形状：（n_channels，height，width）。
- en: Crops `image` to the given size using a center crop. Note that if the image
    is too small to be cropped to the size given, it will be padded (so the returned
    result has the size asked).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用中心裁剪将`image`裁剪到给定大小。请注意，如果图像太小而无法裁剪到给定大小，则将进行填充（因此返回的结果具有所需的大小）。
- en: '#### `convert_rgb`'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `convert_rgb`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L383)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L383)'
- en: '[PRE11]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Parameters
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image`) — The image to convert.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`）-要转换的图像。'
- en: Converts `PIL.Image.Image` to RGB format.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 将`PIL.Image.Image`转换为RGB格式。
- en: '#### `expand_dims`'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `expand_dims`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L436)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L436)'
- en: '[PRE12]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Parameters
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `np.ndarray` or `torch.Tensor`) — The image to
    expand.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`）-要扩展的图像。'
- en: Expands 2-dimensional `image` to 3 dimensions.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 将二维`image`扩展为三维。
- en: '#### `flip_channel_order`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `flip_channel_order`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L644)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L644)'
- en: '[PRE13]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Parameters
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `np.ndarray` or `torch.Tensor`) — The image whose
    color channels to flip. If `np.ndarray` or `torch.Tensor`, the channel dimension
    should be first.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`）- 要翻转颜色通道的图像。如果是`np.ndarray`或`torch.Tensor`，通道维度应该在前面。'
- en: Flips the channel order of `image` from RGB to BGR, or vice versa. Note that
    this will trigger a conversion of `image` to a NumPy array if it’s a PIL Image.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 将`image`的通道顺序从RGB翻转为BGR，或反之。请注意，如果`image`是PIL图像，则这将触发将其转换为NumPy数组。
- en: '#### `normalize`'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `normalize`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L456)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L456)'
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Parameters
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `np.ndarray` or `torch.Tensor`) — The image to
    normalize.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`）- 要归一化的图像。'
- en: '`mean` (`List[float]` or `np.ndarray` or `torch.Tensor`) — The mean (per channel)
    to use for normalization.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mean`（`List[float]`或`np.ndarray`或`torch.Tensor`）- 用于归一化的均值（每个通道）。'
- en: '`std` (`List[float]` or `np.ndarray` or `torch.Tensor`) — The standard deviation
    (per channel) to use for normalization.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std`（`List[float]`或`np.ndarray`或`torch.Tensor`）- 用于归一化的标准差（每个通道）。'
- en: '`rescale` (`bool`, *optional*, defaults to `False`) — Whether or not to rescale
    the image to be between 0 and 1\. If a PIL image is provided, scaling will happen
    automatically.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rescale`（`bool`，*可选*，默认为`False`）- 是否将图像重新缩放为0到1之间。如果提供了PIL图像，缩放将自动发生。'
- en: Normalizes `image` with `mean` and `std`. Note that this will trigger a conversion
    of `image` to a NumPy array if it’s a PIL Image.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`mean`和`std`对`image`进行归一化。请注意，如果`image`是PIL图像，则这将触发将其转换为NumPy数组。
- en: '#### `rescale`'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `rescale`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L397)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L397)'
- en: '[PRE15]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Rescale a numpy image by scale amount
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 按比例缩放numpy图像
- en: '#### `resize`'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `resize`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L502)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L502)'
- en: '[PRE16]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Parameters
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `np.ndarray` or `torch.Tensor`) — The image to
    resize.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`）- 要调整大小的图像。'
- en: '`size` (`int` or `Tuple[int, int]`) — The size to use for resizing the image.
    If `size` is a sequence like (h, w), output size will be matched to this.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（`int`或`Tuple[int, int]`）- 用于调整图像大小的大小。如果`size`是一个类似（h，w）的序列，输出大小将与此匹配。'
- en: If `size` is an int and `default_to_square` is `True`, then image will be resized
    to (size, size). If `size` is an int and `default_to_square` is `False`, then
    smaller edge of the image will be matched to this number. i.e, if height > width,
    then image will be rescaled to (size * height / width, size).
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果`size`是一个整数且`default_to_square`为`True`，则图像将被调整为（size，size）。如果`size`是一个整数且`default_to_square`为`False`，则图像的较小边将与此数字匹配。即，如果高度>宽度，则图像将被调整为（size
    * height / width，size）。
- en: '`resample` (`int`, *optional*, defaults to `PILImageResampling.BILINEAR`) —
    The filter to user for resampling.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resample`（`int`，*可选*，默认为`PILImageResampling.BILINEAR`）- 用于重采样的滤波器。'
- en: '`default_to_square` (`bool`, *optional*, defaults to `True`) — How to convert
    `size` when it is a single int. If set to `True`, the `size` will be converted
    to a square (`size`,`size`). If set to `False`, will replicate [`torchvision.transforms.Resize`](https://pytorch.org/vision/stable/transforms.html#torchvision.transforms.Resize)
    with support for resizing only the smallest edge and providing an optional `max_size`.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default_to_square`（`bool`，*可选*，默认为`True`）- 当`size`是单个整数时如何转换`size`。如果设置为`True`，`size`将被转换为正方形（`size`，`size`）。如果设置为`False`，将复制[`torchvision.transforms.Resize`](https://pytorch.org/vision/stable/transforms.html#torchvision.transforms.Resize)，支持仅调整最小边并提供可选的`max_size`。'
- en: '`max_size` (`int`, *optional*, defaults to `None`) — The maximum allowed for
    the longer edge of the resized image: if the longer edge of the image is greater
    than `max_size` after being resized according to `size`, then the image is resized
    again so that the longer edge is equal to `max_size`. As a result, `size` might
    be overruled, i.e the smaller edge may be shorter than `size`. Only used if `default_to_square`
    is `False`.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_size`（`int`，*可选*，默认为`None`）- 调整大小后图像较长边的最大允许值：如果图像的较长边大于`max_size`，则根据`size`再次调整图像，使较长边等于`max_size`。因此，`size`可能会被覆盖，即较小的边可能会比`size`短。仅在`default_to_square`为`False`时使用。'
- en: Returns
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: image
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图像
- en: A resized `PIL.Image.Image`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 一个调整大小的`PIL.Image.Image`。
- en: Resizes `image`. Enforces conversion of input to PIL.Image.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 调整`image`的大小。强制将输入转换为PIL.Image。
- en: '#### `rotate`'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `rotate`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L661)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L661)'
- en: '[PRE17]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Parameters
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `np.ndarray` or `torch.Tensor`) — The image to
    rotate. If `np.ndarray` or `torch.Tensor`, will be converted to `PIL.Image.Image`
    before rotating.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`）- 要旋转的图像。如果是`np.ndarray`或`torch.Tensor`，将在旋转之前转换为`PIL.Image.Image`。'
- en: Returns
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: image
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图像
- en: A rotated `PIL.Image.Image`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 一个旋转后的`PIL.Image.Image`。
- en: Returns a rotated copy of `image`. This method returns a copy of `image`, rotated
    the given number of degrees counter clockwise around its centre.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 返回旋转后的`image`的副本。此方法返回`image`的副本，将其围绕中心逆时针旋转给定角度。
- en: '#### `to_numpy_array`'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_numpy_array`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L404)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L404)'
- en: '[PRE18]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Parameters
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `np.ndarray` or `torch.Tensor`) — The image to
    convert to a NumPy array.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image`（`PIL.Image.Image`或`np.ndarray`或`torch.Tensor`）- 要转换为NumPy数组的图像。'
- en: '`rescale` (`bool`, *optional*) — Whether or not to apply the scaling factor
    (to make pixel values floats between 0\. and 1.). Will default to `True` if the
    image is a PIL Image or an array/tensor of integers, `False` otherwise.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rescale` (`bool`, *optional*) — 是否应用缩放因子（使像素值为0到1之间的浮点数）。如果图像是PIL图像或整数数组/张量，则默认为`True`，否则为`False`。'
- en: '`channel_first` (`bool`, *optional*, defaults to `True`) — Whether or not to
    permute the dimensions of the image to put the channel dimension first.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`channel_first` (`bool`, *optional*，默认为`True`) — 是否重新排列图像的维度以将通道维度放在第一维。'
- en: Converts `image` to a numpy array. Optionally rescales it and puts the channel
    dimension as the first dimension.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 将`image`转换为numpy数组。可选择重新缩放并将通道维度作为第一维。
- en: '#### `to_pil_image`'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `to_pil_image`'
- en: '[< source >](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L353)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/transformers/blob/v4.37.2/src/transformers/image_utils.py#L353)'
- en: '[PRE19]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Parameters
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`image` (`PIL.Image.Image` or `numpy.ndarray` or `torch.Tensor`) — The image
    to convert to the PIL Image format.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image` (`PIL.Image.Image`或`numpy.ndarray`或`torch.Tensor`) — 要转换为PIL图像格式的图像。'
- en: '`rescale` (`bool`, *optional*) — Whether or not to apply the scaling factor
    (to make pixel values integers between 0 and 255). Will default to `True` if the
    image type is a floating type, `False` otherwise.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rescale` (`bool`, *optional*) — 是否应用缩放因子（使像素值为0到255之间的整数）。如果图像类型为浮点类型，则默认为`True`，否则为`False`。'
- en: Converts `image` to a PIL Image. Optionally rescales it and puts the channel
    dimension back as the last axis if needed.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 将`image`转换为PIL图像。可选择重新缩放并在需要时将通道维度放回最后一个轴。
