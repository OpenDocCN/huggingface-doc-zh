["```py\nimport { pipeline } from '@xenova/transformers';\n\nlet classifier = await pipeline('sentiment-analysis');\n```", "```py\nlet result = await classifier('I love transformers!');\n// [{'label': 'POSITIVE', 'score': 0.9998}]\n```", "```py\nlet result = await classifier(['I love transformers!', 'I hate transformers!']);\n// [{'label': 'POSITIVE', 'score': 0.9998}, {'label': 'NEGATIVE', 'score': 0.9982}]\n```", "```py\nlet reviewer = await pipeline('sentiment-analysis', 'Xenova/bert-base-multilingual-uncased-sentiment');\n\nlet result = await reviewer('The Shawshank Redemption is a true masterpiece of cinema.');\n// [{label: '5 stars', score: 0.8167929649353027}]\n```", "```py\n// Allocate a pipeline for Automatic Speech Recognition\nlet transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-small.en');\n\n// Transcribe an audio file, loaded from a URL.\nlet result = await transcriber('https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac');\n// {text: ' I have a dream that one day this nation will rise up and live out the true meaning of its creed.'}\n```", "```py\n// Allocation a pipeline for feature extraction, using the unquantized model\nconst pipe = await pipeline('feature-extraction', 'Xenova/all-MiniLM-L6-v2', {\n    quantized: false,\n});\n```", "```py\nlet transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-tiny.en', {\n    revision: 'output_attentions',\n});\n```", "```py\n// Allocation a pipeline for translation\nlet translator = await pipeline('translation', 'Xenova/nllb-200-distilled-600M');\n\n// Translate from English to Greek\nlet result = await translator('I like to walk my dog.', {\n    src_lang: 'eng_Latn',\n    tgt_lang: 'ell_Grek'\n});\n// [ { translation_text: '\u039c\u03bf\u03c5 \u03b1\u03c1\u03ad\u03c3\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03c0\u03b1\u03c4\u03ac\u03c9 \u03c4\u03bf \u03c3\u03ba\u03c5\u03bb\u03af \u03bc\u03bf\u03c5.' } ]\n\n// Translate back to English\nlet result2 = await translator(result[0].translation_text, {\n    src_lang: 'ell_Grek',\n    tgt_lang: 'eng_Latn'\n});\n// [ { translation_text: 'I like to walk my dog.' } ]\n```", "```py\n// Allocate a pipeline for text2text-generation\nlet poet = await pipeline('text2text-generation', 'Xenova/LaMini-Flan-T5-783M');\nlet result = await poet('Write me a love poem about cheese.', {\n    max_new_tokens: 200,\n    temperature: 0.9,\n    repetition_penalty: 2.0,\n    no_repeat_ngram_size: 3,\n});\n```", "```py\nCheese, oh cheese! You're the perfect comfort food.\nYour texture so smooth and creamy you can never get old.\nWith every bite it melts in your mouth like buttery delights\nthat make me feel right at home with this sweet treat of mine. \n\nFrom classic to bold flavor combinations,\nI love how versatile you are as an ingredient too?\nCheddar is my go-to for any occasion or mood; \nIt adds depth and richness without being overpowering its taste buds alone\n```"]