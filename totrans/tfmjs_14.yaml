- en: Accessing Private/Gated Models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问私有/受限模型
- en: 'Original text: [https://huggingface.co/docs/transformers.js/guides/private](https://huggingface.co/docs/transformers.js/guides/private)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/transformers.js/guides/private](https://huggingface.co/docs/transformers.js/guides/private)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Due to the possibility of leaking access tokens to users of your website or
    web application, we only support accessing private/gated models from server-side
    environments (e.g., Node.js) that have access to the process’ environment variables.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由于存在泄露访问令牌给您的网站或 Web 应用程序用户的可能性，我们仅支持从具有对进程环境变量访问权限的服务器端环境（例如 Node.js）访问私有/受限模型。
- en: 'Step 1: Generating a User Access Token'
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步：生成用户访问令牌
- en: '[User Access Tokens](https://huggingface.co/docs/hub/security-tokens) are the
    preferred way to authenticate an application to Hugging Face services.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[用户访问令牌](https://huggingface.co/docs/hub/security-tokens) 是验证应用程序访问 Hugging
    Face 服务的首选方式。'
- en: To generate an access token, navigate to the [Access Tokens tab](https://huggingface.co/settings/tokens)
    in your settings and click on the **New token** button. Choose a name for your
    token and click **Generate a token** (we recommend keeping the “Role” as read-only).
    You can then click the **Copy** button next to your newly-created token to copy
    it to your clipboard.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成访问令牌，请转到您的设置中的[访问令牌选项卡](https://huggingface.co/settings/tokens)，然后单击**新建令牌**按钮。为您的令牌选择一个名称，然后单击**生成令牌**（我们建议将“角色”保持为只读）。然后，您可以单击您新创建的令牌旁边的**复制**按钮将其复制到剪贴板中。
- en: '![](../Images/fad8ed158713ed3996494a15929f7b2b.png) ![](../Images/3c5777a517394bbd48a556e13d64b7ac.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fad8ed158713ed3996494a15929f7b2b.png) ![](../Images/3c5777a517394bbd48a556e13d64b7ac.png)'
- en: To delete or refresh User Access Tokens, you can click the **Manage** button.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除或刷新用户访问令牌，您可以单击**管理**按钮。
- en: 'Step 2: Using the access token in Transformers.js'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二步：在 Transformers.js 中使用访问令牌
- en: Transformers.js will attach an Authorization header to requests made to the
    Hugging Face Hub when the `HF_TOKEN` environment variable is set and visible to
    the process.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `HF_TOKEN` 环境变量设置并对进程可见时，Transformers.js 将在向 Hugging Face Hub 发出的请求中附加一个授权头。
- en: 'One way to do this is to call your program with the environment variable set.
    For example, let’s say you have a file called `llama.js` with the following code:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是在设置环境变量的情况下调用您的程序。例如，假设您有一个名为 `llama.js` 的文件，其中包含以下代码：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can then use the following command to set the `HF_TOKEN` environment variable
    and run the file:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以使用以下命令设置 `HF_TOKEN` 环境变量并运行文件：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: (remember to replace `hf_...` with your actual access token).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: （请记住用您的实际访问令牌替换 `hf_...`）。
- en: 'If done correctly, you should see the following output:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果操作正确，您应该看到以下输出：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, you can set the environment variable directly in your code:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以直接在您的代码中设置环境变量：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
