["```py\ninit_mem_cpu_alloc_delta   =     1301MB\ninit_mem_cpu_peaked_delta  =      154MB\ninit_mem_gpu_alloc_delta   =      230MB\ninit_mem_gpu_peaked_delta  =        0MB\ntrain_mem_cpu_alloc_delta  =     1345MB\ntrain_mem_cpu_peaked_delta =        0MB\ntrain_mem_gpu_alloc_delta  =      693MB\ntrain_mem_gpu_peaked_delta =        7MB\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_dataloader(train_batch_size=16, eval_batch_size=64)\n>>> args.per_device_train_batch_size\n16\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_evaluate(strategy=\"steps\", steps=100)\n>>> args.eval_steps\n100\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_logging(strategy=\"steps\", steps=100)\n>>> args.logging_steps\n100\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_lr_scheduler(name=\"cosine\", warmup_ratio=0.05)\n>>> args.warmup_ratio\n0.05\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_optimizer(name=\"adamw_torch\", beta1=0.8)\n>>> args.optim\n'adamw_torch'\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_push_to_hub(\"me/awesome-model\")\n>>> args.hub_model_id\n'me/awesome-model'\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_save(strategy=\"steps\", steps=100)\n>>> args.save_steps\n100\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_testing(batch_size=32)\n>>> args.per_device_eval_batch_size\n32\n```", "```py\n>>> from transformers import TrainingArguments\n\n>>> args = TrainingArguments(\"working_dir\")\n>>> args = args.set_training(learning_rate=1e-4, batch_size=32)\n>>> args.learning_rate\n1e-4\n```"]