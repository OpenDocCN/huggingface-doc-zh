["```py\ndevice = \"cuda\"\nmodel.to(device)\n\nfor batch in training_dataloader:\n    optimizer.zero_grad()\n    inputs, targets = batch\n    inputs = inputs.to(device)\n    targets = targets.to(device)\n    outputs = model(inputs)\n    loss = loss_function(outputs, targets)\n    loss.backward()\n    optimizer.step()\n    scheduler.step()\n```", "```py\nfrom accelerate import Accelerator\n\naccelerator = Accelerator()\n```", "```py\n- device = 'cuda'\n+ device = accelerator.device\n  model.to(device)\n```", "```py\nmodel, optimizer, training_dataloader, scheduler = accelerator.prepare(\n model, optimizer, training_dataloader, scheduler\n)\n```", "```py\n-   inputs = inputs.to(device)\n-   targets = targets.to(device)\n    outputs = model(inputs)\n    loss = loss_function(outputs, targets)\n-   loss.backward()\n+   accelerator.backward(loss)\n```", "```py\nfrom accelerate import Accelerator\n\naccelerator = Accelerator()\n\nmodel, optimizer, training_dataloader, scheduler = accelerator.prepare(\n    model, optimizer, training_dataloader, scheduler\n)\n\nfor batch in training_dataloader:\n    optimizer.zero_grad()\n    inputs, targets = batch\n    outputs = model(inputs)\n    loss = loss_function(outputs, targets)\n    accelerator.backward(loss)\n    optimizer.step()\n    scheduler.step()\n```"]