["```py\n>>> import PIL\n>>> import requests\n>>> import torch\n>>> from io import BytesIO\n\n>>> from diffusers import StableDiffusionInstructPix2PixPipeline\n\n>>> def download_image(url):\n...     response = requests.get(url)\n...     return PIL.Image.open(BytesIO(response.content)).convert(\"RGB\")\n\n>>> img_url = \"https://huggingface.co/datasets/diffusers/diffusers-images-docs/resolve/main/mountain.png\"\n\n>>> image = download_image(img_url).resize((512, 512))\n\n>>> pipe = StableDiffusionInstructPix2PixPipeline.from_pretrained(\n...     \"timbrooks/instruct-pix2pix\", torch_dtype=torch.float16\n... )\n>>> pipe = pipe.to(\"cuda\")\n\n>>> prompt = \"make the mountains snowy\"\n>>> image = pipe(prompt=prompt, image=image).images[0]\n```", "```py\nfrom diffusers import StableDiffusionPipeline\nimport torch\n\nmodel_id = \"runwayml/stable-diffusion-v1-5\"\npipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16).to(\"cuda\")\n\npipe.load_textual_inversion(\"sd-concepts-library/cat-toy\")\n\nprompt = \"A <cat-toy> backpack\"\n\nimage = pipe(prompt, num_inference_steps=50).images[0]\nimage.save(\"cat-backpack.png\")\n```", "```py\nfrom diffusers import StableDiffusionPipeline\nimport torch\n\nmodel_id = \"runwayml/stable-diffusion-v1-5\"\npipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16).to(\"cuda\")\n\npipe.load_textual_inversion(\"./charturnerv2.pt\", token=\"charturnerv2\")\n\nprompt = \"charturnerv2, multiple views of the same character in the same outfit, a character turnaround of a woman wearing a black jacket and red shirt, best quality, intricate details.\"\n\nimage = pipe(prompt, num_inference_steps=50).images[0]\nimage.save(\"character.png\")\n```", "```py\n>>> import torch\n>>> from diffusers import StableDiffusionXLInstructPix2PixPipeline\n>>> from diffusers.utils import load_image\n\n>>> resolution = 768\n>>> image = load_image(\n...     \"https://hf.co/datasets/diffusers/diffusers-images-docs/resolve/main/mountain.png\"\n... ).resize((resolution, resolution))\n>>> edit_instruction = \"Turn sky into a cloudy one\"\n\n>>> pipe = StableDiffusionXLInstructPix2PixPipeline.from_pretrained(\n...     \"diffusers/sdxl-instructpix2pix-768\", torch_dtype=torch.float16\n... ).to(\"cuda\")\n\n>>> edited_image = pipe(\n...     prompt=edit_instruction,\n...     image=image,\n...     height=resolution,\n...     width=resolution,\n...     guidance_scale=3.0,\n...     image_guidance_scale=1.5,\n...     num_inference_steps=30,\n... ).images[0]\n>>> edited_image\n```"]