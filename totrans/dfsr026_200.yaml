- en: KDPM2AncestralDiscreteScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: KDPM2AncestralDiscreteScheduler
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/dpm_discrete_ancestral](https://huggingface.co/docs/diffusers/api/schedulers/dpm_discrete_ancestral)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/api/schedulers/dpm_discrete_ancestral](https://huggingface.co/docs/diffusers/api/schedulers/dpm_discrete_ancestral)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The `KDPM2DiscreteScheduler` with ancestral sampling is inspired by the [Elucidating
    the Design Space of Diffusion-Based Generative Models](https://huggingface.co/papers/2206.00364)
    paper, and the scheduler is ported from and created by [Katherine Crowson](https://github.com/crowsonkb/).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 具有祖先采样的`KDPM2DiscreteScheduler`受到[Elucidating the Design Space of Diffusion-Based
    Generative Models](https://huggingface.co/papers/2206.00364)论文的启发，调度器从[Katherine
    Crowson](https://github.com/crowsonkb/)那里移植并创建。
- en: The original codebase can be found at [crowsonkb/k-diffusion](https://github.com/crowsonkb/k-diffusion).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 原始代码库可在[crowsonkb/k-diffusion](https://github.com/crowsonkb/k-diffusion)找到。
- en: KDPM2AncestralDiscreteScheduler
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KDPM2AncestralDiscreteScheduler
- en: '### `class diffusers.KDPM2AncestralDiscreteScheduler`'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.KDPM2AncestralDiscreteScheduler`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L72)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L72)'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_train_timesteps` (`int`, defaults to 1000) — The number of diffusion steps
    to train the model.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_train_timesteps` (`int`, 默认为1000) — 训练模型的扩散步数。'
- en: '`beta_start` (`float`, defaults to 0.00085) — The starting `beta` value of
    inference.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_start` (`float`, 默认为0.00085）— 推断的起始`beta`值。'
- en: '`beta_end` (`float`, defaults to 0.012) — The final `beta` value.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_end` (`float`, 默认为0.012) — 最终的`beta`值。'
- en: '`beta_schedule` (`str`, defaults to `"linear"`) — The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`
    or `scaled_linear`.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`beta_schedule` (`str`, 默认为`"linear"`) — beta计划，从beta范围映射到用于模型步进的beta序列。可选择`linear`或`scaled_linear`。'
- en: '`trained_betas` (`np.ndarray`, *optional*) — Pass an array of betas directly
    to the constructor to bypass `beta_start` and `beta_end`.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trained_betas` (`np.ndarray`, *可选*) — 直接传递一个beta数组给构造函数，以绕过`beta_start`和`beta_end`。'
- en: '`use_karras_sigmas` (`bool`, *optional*, defaults to `False`) — Whether to
    use Karras sigmas for step sizes in the noise schedule during the sampling process.
    If `True`, the sigmas are determined according to a sequence of noise levels {σi}.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_karras_sigmas` (`bool`, *可选*, 默认为`False`) — 在采样过程中是否使用Karras sigmas来调整噪声计划中的步长。如果为`True`，则根据噪声级别序列{σi}确定sigmas。'
- en: '`prediction_type` (`str`, defaults to `epsilon`, *optional*) — Prediction type
    of the scheduler function; can be `epsilon` (predicts the noise of the diffusion
    process), `sample` (directly predicts the noisy sample`) or` v_prediction` (see
    section 2.4 of [Imagen Video](https://imagen.research.google/video/paper.pdf)
    paper).'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prediction_type` (`str`, 默认为`epsilon`, *可选*) — 调度器函数的预测类型；可以是`epsilon`（预测扩散过程的噪声）、`sample`（直接预测带噪样本）或`v_prediction`（参见[Imagen
    Video](https://imagen.research.google/video/paper.pdf)论文第2.4节）。'
- en: '`timestep_spacing` (`str`, defaults to `"linspace"`) — The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep_spacing` (`str`, 默认为`"linspace"`) — 时间步应该如何缩放。有关更多信息，请参考[Common Diffusion
    Noise Schedules and Sample Steps are Flawed](https://huggingface.co/papers/2305.08891)的表2。 '
- en: '`steps_offset` (`int`, defaults to 0) — An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use step 0 for the previous alpha product like in Stable Diffusion.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`steps_offset` (`int`, 默认为0) — 添加到推断步骤的偏移量。您可以使用`offset=1`和`set_alpha_to_one=False`的组合，使最后一步使用前一个alpha乘积的步骤0，就像在Stable
    Diffusion中一样。'
- en: KDPM2DiscreteScheduler with ancestral sampling is inspired by the DPMSolver2
    and Algorithm 2 from the [Elucidating the Design Space of Diffusion-Based Generative
    Models](https://huggingface.co/papers/2206.00364) paper.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 具有祖先采样的KDPM2DiscreteScheduler受到[Elucidating the Design Space of Diffusion-Based
    Generative Models](https://huggingface.co/papers/2206.00364)论文中DPMSolver2和Algorithm
    2的启发。
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型继承自[SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)和[ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin)。查看超类文档以了解库为所有调度器实现的通用方法，如加载和保存。
- en: '#### `scale_model_input`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `scale_model_input`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L179)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L179)'
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`sample` (`torch.FloatTensor`) — The input sample.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 输入样本。'
- en: '`timestep` (`int`, *optional*) — The current timestep in the diffusion chain.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`int`, *可选*) — 扩散链中的当前时间步。'
- en: Returns
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`torch.FloatTensor`'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`torch.FloatTensor`'
- en: A scaled input sample.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经过缩放的输入样本。
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 确保与需要根据当前时间步长缩放去噪模型输入的调度器可以互换。
- en: '#### `set_timesteps`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `set_timesteps`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L209)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L209)'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`num_inference_steps` (`int`) — The number of diffusion steps used when generating
    samples with a pre-trained model.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_inference_steps` (`int`) — 使用预训练模型生成样本时使用的扩散步数。'
- en: '`device` (`str` or `torch.device`, *optional*) — The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`device` (`str`或`torch.device`, *可选*) — 时间步应移动到的设备。如果为`None`，则不移动时间步。'
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 设置用于扩散链的离散时间步骤（在推理之前运行）。
- en: '#### `step`'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `step`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L377)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_k_dpm_2_ancestral_discrete.py#L377)'
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`model_output` (`torch.FloatTensor`) — The direct output from learned diffusion
    model.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_output` (`torch.FloatTensor`) — 从学习扩散模型直接输出的结果。'
- en: '`timestep` (`float`) — The current discrete timestep in the diffusion chain.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timestep` (`float`) — 扩散链中当前的离散时间步。'
- en: '`sample` (`torch.FloatTensor`) — A current instance of a sample created by
    the diffusion process.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sample` (`torch.FloatTensor`) — 由扩散过程创建的样本的当前实例。'
- en: '`generator` (`torch.Generator`, *optional*) — A random number generator.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`generator` (`torch.Generator`，*可选的*) — 一个随机数生成器。'
- en: '`return_dict` (`bool`) — Whether or not to return a [SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or tuple.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return_dict` (`bool`) — 是否返回一个[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或元组。'
- en: Returns
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值
- en: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)
    or `tuple`'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[SchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/dpm_discrete_ancestral#diffusers.schedulers.scheduling_utils.SchedulerOutput)或`tuple`'
- en: If return_dict is `True`, `~schedulers.scheduling_ddim.SchedulerOutput` is returned,
    otherwise a tuple is returned where the first element is the sample tensor.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`return_dict`为`True`，则返回`~schedulers.scheduling_ddim.SchedulerOutput`，否则返回一个元组，其中第一个元素是样本张量。
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通过反转SDE来预测前一个时间步的样本。此函数从学习模型输出（通常是预测的噪声）中传播扩散过程。
- en: SchedulerOutput
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SchedulerOutput
- en: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class diffusers.schedulers.scheduling_utils.SchedulerOutput`'
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_utils.py#L50)'
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) — Computed sample `(x_{t-1})` of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prev_sample` (`torch.FloatTensor`，对于图像为形状为`(batch_size, num_channels, height,
    width)`的张量) — 先前时间步的计算样本`(x_{t-1})`。`prev_sample`应该在去噪循环中作为下一个模型输入使用。'
- en: Base class for the output of a scheduler’s `step` function.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 调度器`step`函数输出的基类。
