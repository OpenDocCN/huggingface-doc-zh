["```py\n>>> from transformers import ViTMAEConfig, ViTMAEModel\n\n>>> # Initializing a ViT MAE vit-mae-base style configuration\n>>> configuration = ViTMAEConfig()\n\n>>> # Initializing a model (with random weights) from the vit-mae-base style configuration\n>>> model = ViTMAEModel(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from transformers import AutoImageProcessor, ViTMAEModel\n>>> from PIL import Image\n>>> import requests\n\n>>> url = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> image_processor = AutoImageProcessor.from_pretrained(\"facebook/vit-mae-base\")\n>>> model = ViTMAEModel.from_pretrained(\"facebook/vit-mae-base\")\n\n>>> inputs = image_processor(images=image, return_tensors=\"pt\")\n>>> outputs = model(**inputs)\n>>> last_hidden_states = outputs.last_hidden_state\n```", "```py\n>>> from transformers import AutoImageProcessor, ViTMAEForPreTraining\n>>> from PIL import Image\n>>> import requests\n\n>>> url = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> image_processor = AutoImageProcessor.from_pretrained(\"facebook/vit-mae-base\")\n>>> model = ViTMAEForPreTraining.from_pretrained(\"facebook/vit-mae-base\")\n\n>>> inputs = image_processor(images=image, return_tensors=\"pt\")\n>>> outputs = model(**inputs)\n>>> loss = outputs.loss\n>>> mask = outputs.mask\n>>> ids_restore = outputs.ids_restore\n```", "```py\n>>> from transformers import AutoImageProcessor, TFViTMAEModel\n>>> from PIL import Image\n>>> import requests\n\n>>> url = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> image_processor = AutoImageProcessor.from_pretrained(\"facebook/vit-mae-base\")\n>>> model = TFViTMAEModel.from_pretrained(\"facebook/vit-mae-base\")\n\n>>> inputs = image_processor(images=image, return_tensors=\"tf\")\n>>> outputs = model(**inputs)\n>>> last_hidden_states = outputs.last_hidden_state\n```", "```py\n>>> from transformers import AutoImageProcessor, TFViTMAEForPreTraining\n>>> from PIL import Image\n>>> import requests\n\n>>> url = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n>>> image = Image.open(requests.get(url, stream=True).raw)\n\n>>> image_processor = AutoImageProcessor.from_pretrained(\"facebook/vit-mae-base\")\n>>> model = TFViTMAEForPreTraining.from_pretrained(\"facebook/vit-mae-base\")\n\n>>> inputs = image_processor(images=image, return_tensors=\"pt\")\n>>> outputs = model(**inputs)\n>>> loss = outputs.loss\n>>> mask = outputs.mask\n>>> ids_restore = outputs.ids_restore\n```"]