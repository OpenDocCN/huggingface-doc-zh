- en: DDPMScheduler
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/diffusers/api/schedulers/ddpm](https://huggingface.co/docs/diffusers/api/schedulers/ddpm)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '[Denoising Diffusion Probabilistic Models](https://huggingface.co/papers/2006.11239)
    (DDPM) by Jonathan Ho, Ajay Jain and Pieter Abbeel proposes a diffusion based
    model of the same name. In the context of the ü§ó Diffusers library, DDPM refers
    to the discrete denoising scheduler from the paper as well as the pipeline.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'The abstract from the paper is:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '*We present high quality image synthesis results using diffusion probabilistic
    models, a class of latent variable models inspired by considerations from nonequilibrium
    thermodynamics. Our best results are obtained by training on a weighted variational
    bound designed according to a novel connection between diffusion probabilistic
    models and denoising score matching with Langevin dynamics, and our models naturally
    admit a progressive lossy decompression scheme that can be interpreted as a generalization
    of autoregressive decoding. On the unconditional CIFAR10 dataset, we obtain an
    Inception score of 9.46 and a state-of-the-art FID score of 3.17\. On 256x256
    LSUN, we obtain sample quality similar to ProgressiveGAN. Our implementation is
    available at [this https URL](https://github.com/hojonathanho/diffusion).*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: DDPMScheduler
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.DDPMScheduler`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddpm.py#L129)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Parameters
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '`num_train_timesteps` (`int`, defaults to 1000) ‚Äî The number of diffusion steps
    to train the model.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_start` (`float`, defaults to 0.0001) ‚Äî The starting `beta` value of inference.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_end` (`float`, defaults to 0.02) ‚Äî The final `beta` value.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`beta_schedule` (`str`, defaults to `"linear"`) ‚Äî The beta schedule, a mapping
    from a beta range to a sequence of betas for stepping the model. Choose from `linear`,
    `scaled_linear`, or `squaredcos_cap_v2`.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`trained_betas` (`np.ndarray`, *optional*) ‚Äî An array of betas to pass directly
    to the constructor without using `beta_start` and `beta_end`.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`variance_type` (`str`, defaults to `"fixed_small"`) ‚Äî Clip the variance when
    adding noise to the denoised sample. Choose from `fixed_small`, `fixed_small_log`,
    `fixed_large`, `fixed_large_log`, `learned` or `learned_range`.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`clip_sample` (`bool`, defaults to `True`) ‚Äî Clip the predicted sample for
    numerical stability.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`clip_sample_range` (`float`, defaults to 1.0) ‚Äî The maximum magnitude for
    sample clipping. Valid only when `clip_sample=True`.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`prediction_type` (`str`, defaults to `epsilon`, *optional*) ‚Äî Prediction type
    of the scheduler function; can be `epsilon` (predicts the noise of the diffusion
    process), `sample` (directly predicts the noisy sample`) or` v_prediction` (see
    section 2.4 of [Imagen Video](https://imagen.research.google/video/paper.pdf)
    paper).'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`thresholding` (`bool`, defaults to `False`) ‚Äî Whether to use the ‚Äúdynamic
    thresholding‚Äù method. This is unsuitable for latent-space diffusion models such
    as Stable Diffusion.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dynamic_thresholding_ratio` (`float`, defaults to 0.995) ‚Äî The ratio for the
    dynamic thresholding method. Valid only when `thresholding=True`.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sample_max_value` (`float`, defaults to 1.0) ‚Äî The threshold value for dynamic
    thresholding. Valid only when `thresholding=True`.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestep_spacing` (`str`, defaults to `"leading"`) ‚Äî The way the timesteps
    should be scaled. Refer to Table 2 of the [Common Diffusion Noise Schedules and
    Sample Steps are Flawed](https://huggingface.co/papers/2305.08891) for more information.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`steps_offset` (`int`, defaults to 0) ‚Äî An offset added to the inference steps.
    You can use a combination of `offset=1` and `set_alpha_to_one=False` to make the
    last step use step 0 for the previous alpha product like in Stable Diffusion.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rescale_betas_zero_snr` (`bool`, defaults to `False`) ‚Äî Whether to rescale
    the betas to have zero terminal SNR. This enables the model to generate very bright
    and dark samples instead of limiting it to samples with medium brightness. Loosely
    related to [`--offset_noise`](https://github.com/huggingface/diffusers/blob/74fd735eb073eb1d774b1ab4154a0876eb82f055/examples/dreambooth/train_dreambooth.py#L506).'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DDPMScheduler` explores the connections between denoising score matching and
    Langevin dynamics sampling.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: This model inherits from [SchedulerMixin](/docs/diffusers/v0.26.3/en/api/schedulers/overview#diffusers.SchedulerMixin)
    and [ConfigMixin](/docs/diffusers/v0.26.3/en/api/configuration#diffusers.ConfigMixin).
    Check the superclass documentation for the generic methods the library implements
    for all schedulers such as loading and saving.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '#### `scale_model_input`'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddpm.py#L236)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '`sample` (`torch.FloatTensor`) ‚Äî The input sample.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestep` (`int`, *optional*) ‚Äî The current timestep in the diffusion chain.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '`torch.FloatTensor`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: A scaled input sample.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Ensures interchangeability with schedulers that need to scale the denoising
    model input depending on the current timestep.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '#### `set_timesteps`'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddpm.py#L253)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Parameters
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '`num_inference_steps` (`int`) ‚Äî The number of diffusion steps used when generating
    samples with a pre-trained model. If used, `timesteps` must be `None`.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`device` (`str` or `torch.device`, *optional*) ‚Äî The device to which the timesteps
    should be moved to. If `None`, the timesteps are not moved.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timesteps` (`List[int]`, *optional*) ‚Äî Custom timesteps used to support arbitrary
    spacing between timesteps. If `None`, then the default timestep spacing strategy
    of equal spacing between timesteps is used. If `timesteps` is passed, `num_inference_steps`
    must be `None`.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sets the discrete timesteps used for the diffusion chain (to be run before inference).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '#### `step`'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddpm.py#L401)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '`model_output` (`torch.FloatTensor`) ‚Äî The direct output from learned diffusion
    model.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`timestep` (`float`) ‚Äî The current discrete timestep in the diffusion chain.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sample` (`torch.FloatTensor`) ‚Äî A current instance of a sample created by
    the diffusion process.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`generator` (`torch.Generator`, *optional*) ‚Äî A random number generator.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`return_dict` (`bool`, *optional*, defaults to `True`) ‚Äî Whether or not to
    return a [DDPMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddpm#diffusers.schedulers.scheduling_ddpm.DDPMSchedulerOutput)
    or `tuple`.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[DDPMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddpm#diffusers.schedulers.scheduling_ddpm.DDPMSchedulerOutput)
    or `tuple`'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: If return_dict is `True`, [DDPMSchedulerOutput](/docs/diffusers/v0.26.3/en/api/schedulers/ddpm#diffusers.schedulers.scheduling_ddpm.DDPMSchedulerOutput)
    is returned, otherwise a tuple is returned where the first element is the sample
    tensor.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Predict the sample from the previous timestep by reversing the SDE. This function
    propagates the diffusion process from the learned model outputs (most often the
    predicted noise).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: DDPMSchedulerOutput
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.schedulers.scheduling_ddpm.DDPMSchedulerOutput`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/schedulers/scheduling_ddpm.py#L30)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '`prev_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels, height,
    width)` for images) ‚Äî Computed sample `(x_{t-1})` of previous timestep. `prev_sample`
    should be used as next model input in the denoising loop.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pred_original_sample` (`torch.FloatTensor` of shape `(batch_size, num_channels,
    height, width)` for images) ‚Äî The predicted denoised sample `(x_{0})` based on
    the model output from the current timestep. `pred_original_sample` can be used
    to preview progress or for guidance.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pred_original_sample`Ôºà`torch.FloatTensor`ÔºåÂΩ¢Áä∂‰∏∫`(batch_size, num_channels, height,
    width)`ÔºåÁî®‰∫éÂõæÂÉèÔºâ- Âü∫‰∫éÂΩìÂâçÊó∂Èó¥Ê≠•ÁöÑÊ®°ÂûãËæìÂá∫ÁöÑÈ¢ÑÊµãÂéªÂô™Ê†∑Êú¨`(x_{0})`„ÄÇ`pred_original_sample`ÂèØÁî®‰∫éÈ¢ÑËßàËøõÂ±ïÊàñÊåáÂØº„ÄÇ'
- en: Output class for the scheduler‚Äôs `step` function output.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Ë∞ÉÂ∫¶Á®ãÂ∫èÁöÑ`step`ÂáΩÊï∞ËæìÂá∫ÁöÑËæìÂá∫Á±ª„ÄÇ
