- en: Managing local and online repositories
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理本地和在线存储库
- en: 'Original text: [https://huggingface.co/docs/huggingface_hub/package_reference/repository](https://huggingface.co/docs/huggingface_hub/package_reference/repository)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://huggingface.co/docs/huggingface_hub/package_reference/repository](https://huggingface.co/docs/huggingface_hub/package_reference/repository)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: The `Repository` class is a helper class that wraps `git` and `git-lfs` commands.
    It provides tooling adapted for managing repositories which can be very large.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`Repository` 类是一个辅助类，包装了 `git` 和 `git-lfs` 命令。它提供了适用于管理可能非常庞大的存储库的工具。'
- en: It is the recommended tool as soon as any `git` operation is involved, or when
    collaboration will be a point of focus with the repository itself.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 每当涉及任何 `git` 操作或合作将成为重点时，这是推荐的工具。
- en: The Repository class
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储库类
- en: '### `class huggingface_hub.Repository`'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class huggingface_hub.Repository`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L425)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L425)'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Helper class to wrap the git and git-lfs commands.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 包装 git 和 git-lfs 命令的辅助类。
- en: The aim is to facilitate interacting with huggingface.co hosted model or dataset
    repos, though not a lot here (if any) is actually specific to huggingface.co.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 旨在简化与 huggingface.co 托管的模型或数据集存储库的交互，尽管这里（如果有的话）实际上与 huggingface.co 没有太多特定的内容。
- en: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    is deprecated in favor of the http-based alternatives implemented in [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi).
    Given its large adoption in legacy code, the complete removal of [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    will only happen in release `v1.0`. For more details, please read [https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http](https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    已被弃用，推荐使用 [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    中实现的基于 http 的替代方案。鉴于它在旧代码中的广泛应用，完全移除 [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    将在版本 `v1.0` 中才会发生。更多详情，请阅读 [https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http](https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http)。'
- en: '#### `__init__`'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `__init__`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L445)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L445)'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Parameters
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`local_dir` (`str` or `Path`) — path (e.g. `''my_trained_model/''`) to the
    local directory, where the `Repository` will be initialized.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local_dir` (`str` 或 `Path`) — 本地目录的路径（例如 `''my_trained_model/''`），在那里将初始化
    `Repository`。'
- en: '`clone_from` (`str`, *optional*) — Either a repository url or `repo_id`. Example:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clone_from` (`str`, *可选*) — 要么是存储库 URL，要么是 `repo_id`。示例：'
- en: '`"https://huggingface.co/philschmid/playground-tests"`'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"https://huggingface.co/philschmid/playground-tests"`'
- en: '`"philschmid/playground-tests"`'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"philschmid/playground-tests"`'
- en: '`repo_type` (`str`, *optional*) — To set when cloning a repo from a repo_id.
    Default is model.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_type` (`str`, *可选*) — 从 repo_id 克隆存储库时设置。默认为 model。'
- en: '`token` (`bool` or `str`, *optional*) — A valid authentication token (see [https://huggingface.co/settings/token](https://huggingface.co/settings/token)).
    If `None` or `True` and machine is logged in (through `huggingface-cli login`
    or [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)),
    token will be retrieved from the cache. If `False`, token is not sent in the request
    header.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`bool` 或 `str`, *可选*) — 一个有效的身份验证令牌（参见 [https://huggingface.co/settings/token](https://huggingface.co/settings/token)）。如果为
    `None` 或 `True` 并且机器已登录（通过 `huggingface-cli login` 或 [login()](/docs/huggingface_hub/v0.20.3/en/package_reference/login#huggingface_hub.login)），则令牌将从缓存中检索。如果为
    `False`，则请求头中不会发送令牌。'
- en: '`git_user` (`str`, *optional*) — will override the `git config user.name` for
    committing and pushing files to the hub.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git_user` (`str`, *可选*) — 将覆盖用于提交和推送文件到中心的 `git config user.name`。'
- en: '`git_email` (`str`, *optional*) — will override the `git config user.email`
    for committing and pushing files to the hub.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git_email` (`str`, *可选*) — 将覆盖用于提交和推送文件到中心的 `git config user.email`。'
- en: '`revision` (`str`, *optional*) — Revision to checkout after initializing the
    repository. If the revision doesn’t exist, a branch will be created with that
    revision name from the default branch’s current HEAD.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`, *可选*) — 初始化存储库后要检出的修订版。如果修订版不存在，则将从默认分支的当前 HEAD 创建一个具有该修订版名称的分支。'
- en: '`skip_lfs_files` (`bool`, *optional*, defaults to `False`) — whether to skip
    git-LFS files or not.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skip_lfs_files` (`bool`, *可选*, 默认为 `False`) — 是否跳过 git-LFS 文件。'
- en: '`client` (`HfApi`, *optional*) — Instance of [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    to use when calling the HF Hub API. A new instance will be created if this is
    left to `None`.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`client` (`HfApi`, *可选*) — 在调用 HF Hub API 时要使用的 [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)
    实例。如果将其留空，则将创建一个新实例。'
- en: Raises
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: — [`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    if the remote repository set in `clone_from` does not exist.
  id: totrans-28
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: — 如果在 `clone_from` 中设置的远程存储库不存在，则引发 [`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)。
- en: Instantiate a local clone of a git repo.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 实例化一个 git 存储库的本地克隆。
- en: If `clone_from` is set, the repo will be cloned from an existing remote repository.
    If the remote repo does not exist, a `EnvironmentError` exception will be thrown.
    Please create the remote repo first using [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设置了 `clone_from`，则将从现有远程存储库克隆存储库。如果远程存储库不存在，则将引发 `EnvironmentError` 异常。请先使用
    [create_repo()](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo)
    创建远程存储库。
- en: '`Repository` uses the local git credentials by default. If explicitly set,
    the `token` or the `git_user`/`git_email` pair will be used instead.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`Repository` 默认使用本地 git 凭据。如果明确设置，则将使用 `token` 或 `git_user`/`git_email` 对。'
- en: '#### `current_branch`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `current_branch`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L562)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L562)'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Returns
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: Current checked out branch.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当前检出的分支。
- en: Returns the current checked out branch.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 返回当前检出的分支。
- en: '#### `add_tag`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `add_tag`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1246)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1246)'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Parameters
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`tag_name` (`str`) — The name of the tag to be added.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tag_name` (`str`) — 要添加的标签的名称。'
- en: '`message` (`str`, *optional*) — The message that accompanies the tag. The tag
    will turn into an annotated tag if a message is passed.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`message` (`str`, *可选*) — 附带标签的消息。如果传递了消息，则标签将变为注释标签。'
- en: '`remote` (`str`, *optional*) — The remote on which to add the tag.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remote` (`str`, *可选*) — 要添加标签的远程。'
- en: Add a tag at the current head and push it
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前头部添加标签并推送它
- en: If remote is None, will just be updated locally
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果远程为None，则只会在本地更新
- en: If no message is provided, the tag will be lightweight. if a message is provided,
    the tag will be annotated.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未提供消息，则标签将是轻量级的。如果提供了消息，则标签将是注释的。
- en: '#### `auto_track_binary_files`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `auto_track_binary_files`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L888)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L888)'
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Parameters
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pattern` (`str`, *optional*, defaults to ”.“) — The pattern with which to
    track files that are binary.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern` (`str`, *可选*, 默认为”.“) — 用于跟踪二进制文件的模式。'
- en: Returns
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`List[str]`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`List[str]`'
- en: List of filenames that are now tracked due to being binary files
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由于是二进制文件而现在被跟踪的文件名列表
- en: Automatically track binary files with git-lfs.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 自动使用git-lfs跟踪二进制文件。
- en: '#### `auto_track_large_files`'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `auto_track_large_files`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L931)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L931)'
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Parameters
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pattern` (`str`, *optional*, defaults to ”.“) — The pattern with which to
    track files that are above 10MBs.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern` (`str`, *可选*, 默认为”.“) — 用于跟踪大小超过10MB的文件的模式。'
- en: Returns
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`List[str]`'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`List[str]`'
- en: List of filenames that are now tracked due to their size.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其大小而现在被跟踪的文件名列表。
- en: Automatically track large files (files that weigh more than 10MBs) with git-lfs.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 自动使用git-lfs跟踪大文件（大于10MB的文件）。
- en: '#### `check_git_versions`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `check_git_versions`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L577)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L577)'
- en: '[PRE6]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Raises
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 引发
- en: — [`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    if `git` or `git-lfs` are not installed.
  id: totrans-71
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: — [`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    如果未安装`git`或`git-lfs`。
- en: Checks that `git` and `git-lfs` can be run.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 检查`git`和`git-lfs`是否可以运行。
- en: '#### `clone_from`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `clone_from`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L600)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L600)'
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Parameters
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`repo_url` (`str`) — The URL from which to clone the repository'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`repo_url` (`str`) — 从中克隆存储库的URL'
- en: '`token` (`Union[str, bool]`, *optional*) — Whether to use the authentication
    token. It can be:'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`token` (`Union[str, bool]`, *可选*) — 是否使用身份验证令牌。可以是：'
- en: a string which is the token itself
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字符串，即令牌本身
- en: '`False`, which would not use the authentication token'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`False`，不使用身份验证令牌'
- en: '`True`, which would fetch the authentication token from the local folder and
    use it (you should be logged in for this to work).'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`True`，将从本地文件夹获取身份验证令牌并使用它（您必须登录才能使用）。'
- en: '`None`, which would retrieve the value of `self.huggingface_token`.'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`None`，这将检索`self.huggingface_token`的值。'
- en: Clone from a remote. If the folder already exists, will try to clone the repository
    within it.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 从远程克隆。如果文件夹已经存在，将尝试在其中克隆存储库。
- en: If this folder is a git repository with linked history, will try to update the
    repository.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此文件夹是具有链接历史的git存储库，则将尝试更新存储库。
- en: 'Raises the following error:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 引发以下错误：
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if an organization token (starts with “api_org”) is passed. Use must use your
    own personal access token (see [https://hf.co/settings/tokens](https://hf.co/settings/tokens)).'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    如果传递了组织令牌（以“api_org”开头）。必须使用您自己的个人访问令牌（请参阅[https://hf.co/settings/tokens](https://hf.co/settings/tokens)）。'
- en: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    if you are trying to clone the repository in a non-empty folder, or if the `git`
    operations raise errors.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`EnvironmentError`](https://docs.python.org/3/library/exceptions.html#EnvironmentError)
    如果您尝试在非空文件夹中克隆存储库，或者如果`git`操作引发错误。'
- en: '#### `commit`'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `commit`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1330)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1330)'
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Parameters
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`commit_message` (`str`) — Message to use for the commit.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`) — 用于提交的消息。'
- en: '`branch` (`str`, *optional*) — The branch on which the commit will appear.
    This branch will be checked-out before any operation.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`branch` (`str`, *可选*) — 提交将出现在的分支。在任何操作之前，将检出此分支。'
- en: '`track_large_files` (`bool`, *optional*, defaults to `True`) — Whether to automatically
    track large files or not. Will do so by default.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`track_large_files` (`bool`, *可选*, 默认为`True`) — 是否自动跟踪大文件。默认情况下会这样做。'
- en: '`blocking` (`bool`, *optional*, defaults to `True`) — Whether the function
    should return only when the `git push` has finished.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`blocking` (`bool`, *可选*, 默认为`True`) — 函数是否应该仅在`git push`完成时返回。'
- en: '`auto_lfs_prune` (`bool`, defaults to `True`) — Whether to automatically prune
    files once they have been pushed to the remote.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_lfs_prune` (`bool`, 默认为`True`) — 是否在文件被推送到远程后自动修剪文件。'
- en: Context manager utility to handle committing to a repository. This automatically
    tracks large files (>10Mb) with git-lfs. Set the `track_large_files` argument
    to `False` if you wish to ignore that behavior.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 处理提交到存储库的上下文管理器实用程序。这将自动跟踪大文件（>10Mb）使用 git-lfs。如果要忽略该行为，请将 `track_large_files`
    参数设置为 `False`。
- en: 'Examples:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE9]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '#### `delete_tag`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `delete_tag`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1209)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1209)'
- en: '[PRE10]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Parameters
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`tag_name` (`str`) — The tag name to delete.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tag_name` (`str`) — 要删除的标签名称。'
- en: '`remote` (`str`, *optional*) — The remote on which to delete the tag.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remote` (`str`, *optional*) — 要删除标签的远程。'
- en: Returns
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: '`True` if deleted, `False` if the tag didn’t exist. If remote is not passed,
    will just be updated locally'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已删除，则返回 `True`，如果标签不存在，则返回 `False`。如果未传递远程，则仅在本地更新
- en: Delete a tag, both local and remote, if it exists
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 删除标签，无论是本地还是远程，如果存在。
- en: '#### `git_add`'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_add`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1006)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1006)'
- en: '[PRE11]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Parameters
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pattern` (`str`, *optional*, defaults to ”.“) — The pattern with which to
    add files to staging.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern` (`str`, *optional*, 默认为 ”.“) — 用于将文件添加到暂存区的模式。'
- en: '`auto_lfs_track` (`bool`, *optional*, defaults to `False`) — Whether to automatically
    track large and binary files with git-lfs. Any file over 10MB in size, or in binary
    format, will be automatically tracked.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_lfs_track` (`bool`, *optional*, 默认为 `False`) — 是否自动跟踪大型和二进制文件使用 git-lfs。任何大小超过
    10MB 或为二进制格式的文件将自动跟踪。'
- en: git add
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: git add
- en: Setting the `auto_lfs_track` parameter to `True` will automatically track files
    that are larger than 10MB with `git-lfs`.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `auto_lfs_track` 参数设置为 `True` 将自动跟踪大于 10MB 的文件使用 `git-lfs`。
- en: '#### `git_checkout`'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`git_checkout`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1147)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1147)'
- en: '[PRE12]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Parameters
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`revision` (`str`) — The revision to checkout.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revision` (`str`) — 要检出的修订版本。'
- en: '`create_branch_ok` (`str`, *optional*, defaults to `False`) — Whether creating
    a branch named with the `revision` passed at the current checked-out reference
    if `revision` isn’t an existing revision is allowed.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_branch_ok` (`str`, *optional*, 默认为 `False`) — 如果允许创建以当前检出引用处传递的 `revision`
    命名的分支，而 `revision` 不是现有的修订版本。'
- en: git checkout a given revision
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: git checkout 给定的修订版本
- en: Specifying `create_branch_ok` to `True` will create the branch to the given
    revision if that revision doesn’t exist.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `create_branch_ok` 指定为 `True` 将在当前检出的引用处创建到给定修订版本的分支（如果该修订版本不存在）。
- en: '#### `git_commit`'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_commit`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1040)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1040)'
- en: '[PRE13]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Parameters
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`commit_message` (`str`, *optional*, defaults to “commit files to HF hub”)
    — The message attributed to the commit.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`, *optional*, 默认为 “commit files to HF hub”) — 提交的消息。'
- en: git commit
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: git commit
- en: '#### `git_config_username_and_email`'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_config_username_and_email`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L728)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L728)'
- en: '[PRE14]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Parameters
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`git_user` (`str`, *optional*) — The username to register through `git`.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git_user` (`str`, *optional*) — 通过 `git` 注册的用户名。'
- en: '`git_email` (`str`, *optional*) — The email to register through `git`.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git_email` (`str`, *optional*) — 通过 `git` 注册的电子邮件。'
- en: Sets git username and email (only in the current repo).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 git 用户名和电子邮件（仅在当前存储库中）。
- en: '#### `git_credential_helper_store`'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_credential_helper_store`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L747)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L747)'
- en: '[PRE15]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Sets the git credential helper to `store`
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 将 git 凭据助手设置为 `store`
- en: '#### `git_head_commit_url`'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_head_commit_url`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L784)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L784)'
- en: '[PRE16]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Returns
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: The URL to the current checked-out commit.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当前检出的提交的 URL。
- en: Get URL to last commit on HEAD. We assume it’s been pushed, and the url scheme
    is the same one as for GitHub or HuggingFace.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 HEAD 上最后一次提交的 URL。我们假设已经推送，并且 URL 方案与 GitHub 或 HuggingFace 的相同。
- en: '#### `git_head_hash`'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_head_hash`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L756)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L756)'
- en: '[PRE17]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Returns
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: The current checked out commit SHA.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 当前检出的提交 SHA。
- en: Get commit sha on top of HEAD.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 HEAD 顶部的提交 sha。
- en: '#### `git_pull`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_pull`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L982)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L982)'
- en: '[PRE18]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Parameters
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`rebase` (`bool`, *optional*, defaults to `False`) — Whether to rebase the
    current branch on top of the upstream branch after fetching.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rebase` (`bool`, *optional*, 默认为 `False`) — 在获取后是否将当前分支重新设置到上游分支之上。'
- en: '`lfs` (`bool`, *optional*, defaults to `False`) — Whether to fetch the LFS
    files too. This option only changes the behavior when a repository was cloned
    without fetching the LFS files; calling `repo.git_pull(lfs=True)` will then fetch
    the LFS file from the remote repository.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lfs` (`bool`, *optional*, 默认为 `False`) — 是否也获取 LFS 文件。此选项仅在克隆存储库时未获取 LFS 文件时更改行为；调用
    `repo.git_pull(lfs=True)` 将从远程存储库获取 LFS 文件。'
- en: git pull
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: git pull
- en: '#### `git_push`'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_push`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1057)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1057)'
- en: '[PRE19]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Parameters
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`upstream` (`str`, *optional*) — Upstream to which this should push. If not
    specified, will push to the lastly defined upstream or to the default one (`origin
    main`).'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`upstream` (`str`, *optional*) — 要推送到的上游。如果未指定，将推送到最后定义的上游或默认上游（`origin main`）。'
- en: '`blocking` (`bool`, *optional*, defaults to `True`) — Whether the function
    should return only when the push has finished. Setting this to `False` will return
    an `CommandInProgress` object which has an `is_done` property. This property will
    be set to `True` when the push is finished.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`blocking` (`bool`, *可选*, 默认为 `True`) — 函数是否应该仅在推送完成时返回。将此设置为`False`将返回一个`CommandInProgress`对象，该对象具有`is_done`属性。当推送完成时，此属性将设置为`True`。'
- en: '`auto_lfs_prune` (`bool`, *optional*, defaults to `False`) — Whether to automatically
    prune files once they have been pushed to the remote.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_lfs_prune` (`bool`, *可选*, 默认为 `False`) — 是否在文件被推送到远程后自动修剪文件。'
- en: git push
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: git push
- en: If used without setting `blocking`, will return url to commit on remote repo.
    If used with `blocking=True`, will return a tuple containing the url to commit
    and the command object to follow for information about the process.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不设置`blocking`使用，将返回远程存储库上提交的URL。如果使用`blocking=True`，将返回一个包含提交URL和关于过程信息的命令对象的元组。
- en: '#### `git_remote_url`'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `git_remote_url`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L769)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L769)'
- en: '[PRE20]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Returns
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`str`'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`str`'
- en: The URL of the `origin` remote.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`origin`远程的URL。'
- en: Get URL to origin remote.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 获取到原始远程的URL。
- en: '#### `is_repo_clean`'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `is_repo_clean`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1280)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1280)'
- en: '[PRE21]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Returns
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: '`True` if the git status is clean, `False` otherwise.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果git状态干净，则为`True`，否则为`False`。
- en: Return whether or not the git status is clean or not
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 返回git状态是否干净或不干净
- en: '#### `lfs_enable_largefiles`'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `lfs_enable_largefiles`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L874)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L874)'
- en: '[PRE22]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: HF-specific. This enables upload support of files >5GB.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: HF特定。这使得支持上传大于5GB的文件。
- en: '#### `lfs_prune`'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `lfs_prune`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L964)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L964)'
- en: '[PRE23]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Parameters
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`recent` (`bool`, *optional*, defaults to `False`) — Whether to prune files
    even if they were referenced by recent commits. See the following [link](https://github.com/git-lfs/git-lfs/blob/f3d43f0428a84fc4f1e5405b76b5a73ec2437e65/docs/man/git-lfs-prune.1.ronn#recent-files)
    for more information.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`recent` (`bool`, *可选*, 默认为 `False`) — 是否修剪文件，即使它们被最近的提交引用。有关更多信息，请参阅以下[链接](https://github.com/git-lfs/git-lfs/blob/f3d43f0428a84fc4f1e5405b76b5a73ec2437e65/docs/man/git-lfs-prune.1.ronn#recent-files)。'
- en: git lfs prune
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: git lfs prune
- en: '#### `lfs_track`'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `lfs_track`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L833)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L833)'
- en: '[PRE24]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Parameters
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`patterns` (`Union[str, List[str]]`) — The pattern, or list of patterns, to
    track with git-lfs.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`patterns` (`Union[str, List[str]]`) — 要使用git-lfs跟踪的模式或模式列表。'
- en: '`filename` (`bool`, *optional*, defaults to `False`) — Whether to use the patterns
    as literal filenames.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filename` (`bool`, *可选*, 默认为 `False`) — 是否将模式视为字面文件名。'
- en: Tell git-lfs to track files according to a pattern.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 告诉git-lfs根据模式跟踪文件。
- en: Setting the `filename` argument to `True` will treat the arguments as literal
    filenames, not as patterns. Any special glob characters in the filename will be
    escaped when writing to the `.gitattributes` file.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 将`filename`参数设置为`True`将把参数视为字面文件名，而不是模式。写入`.gitattributes`文件时，文件名中的任何特殊通配符将被转义。
- en: '#### `lfs_untrack`'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `lfs_untrack`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L858)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L858)'
- en: '[PRE25]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Parameters
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`patterns` (`Union[str, List[str]]`) — The pattern, or list of patterns, to
    untrack with git-lfs.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`patterns` (`Union[str, List[str]]`) — 要使用git-lfs取消跟踪的模式或模式列表。'
- en: Tell git-lfs to untrack those files.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 告诉git-lfs取消跟踪这些文件。
- en: '#### `list_deleted_files`'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `list_deleted_files`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L798)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L798)'
- en: '[PRE26]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Returns
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`List[str]`'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`List[str]`'
- en: A list of files that have been deleted in the working directory or index.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作目录或索引中已删除的文件列表。
- en: Returns a list of the files that are deleted in the working directory or index.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个在工作目录或索引中已删除的文件列表。
- en: '#### `push_to_hub`'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `push_to_hub`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1294)'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1294)'
- en: '[PRE27]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Parameters
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`commit_message` (`str`) — Message to use for the commit.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit_message` (`str`) — 用于提交的消息。'
- en: '`blocking` (`bool`, *optional*, defaults to `True`) — Whether the function
    should return only when the `git push` has finished.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`blocking` (`bool`, *可选*, 默认为 `True`) — 函数是否应该仅在`git push`完成时返回。'
- en: '`clean_ok` (`bool`, *optional*, defaults to `True`) — If True, this function
    will return None if the repo is untouched. Default behavior is to fail because
    the git command fails.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clean_ok` (`bool`, *可选*, 默认为 `True`) — 如果为True，则如果存储库未更改，此函数将返回None。默认行为是失败，因为git命令失败。'
- en: '`auto_lfs_prune` (`bool`, *optional*, defaults to `False`) — Whether to automatically
    prune files once they have been pushed to the remote.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_lfs_prune` (`bool`, *可选*, 默认为 `False`) — 是否在文件被推送到远程后自动修剪文件。'
- en: Helper to add, commit, and push files to remote repository on the HuggingFace
    Hub. Will automatically track large files (>10MB).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 帮助将文件添加、提交和推送到HuggingFace Hub上的远程存储库。将自动跟踪大文件（>10MB）。
- en: '#### `tag_exists`'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `tag_exists`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1179)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1179)'
- en: '[PRE28]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Parameters
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`tag_name` (`str`) — The name of the tag to check.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tag_name` (`str`) — 要检查的标签名称。'
- en: '`remote` (`str`, *optional*) — Whether to check if the tag exists on a remote.
    This parameter should be the identifier of the remote.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remote` (`str`, *可选*) — 是否要检查远程上是否存在标签。此参数应为远程的标识符。'
- en: Returns
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: Whether the tag exists.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 标签是否存在。
- en: Check if a tag exists or not.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 检查标签是否存在。
- en: '#### `wait_for_commands`'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `wait_for_commands`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1458)'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1458)'
- en: '[PRE29]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Blocking method: blocks all subsequent execution until all commands have been
    processed.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 阻塞方法：阻止所有后续执行，直到所有命令都已处理。
- en: Helper methods
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 辅助方法
- en: '#### `huggingface_hub.repository.is_git_repo`'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.repository.is_git_repo`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L114)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L114)'
- en: '[PRE30]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Parameters
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`folder` (`str`) — The folder in which to run the command.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`folder` (`str`) — 要运行命令的文件夹。'
- en: Returns
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: '`True` if the repository is part of a repository, `False` otherwise.'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存储库是存储库的一部分，则为 `True`，否则为 `False`。
- en: Check if the folder is the root or part of a git repository
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 检查文件夹是否是根目录或 git 存储库的一部分
- en: '#### `huggingface_hub.repository.is_local_clone`'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.repository.is_local_clone`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L131)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L131)'
- en: '[PRE31]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Parameters
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`folder` (`str` or `Path`) — The folder in which to run the command.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`folder` (`str` 或 `Path`) — 要运行命令的文件夹。'
- en: '`remote_url` (`str`) — The url of a git repository.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remote_url` (`str`) — git 存储库的 url。'
- en: Returns
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: '`True` if the repository is a local clone of the remote repository specified,
    `False` otherwise.'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存储库是指定的远程存储库的本地克隆，则为 `True`，否则为 `False`。
- en: Check if the folder is a local clone of the remote_url
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 检查文件夹是否是远程 url 的本地克隆
- en: '#### `huggingface_hub.repository.is_tracked_with_lfs`'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.repository.is_tracked_with_lfs`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L156)'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L156)'
- en: '[PRE32]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Parameters
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`filename` (`str` or `Path`) — The filename to check.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filename` (`str` 或 `Path`) — 要检查的文件名。'
- en: Returns
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: '`True` if the file passed is tracked with git-lfs, `False` otherwise.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递的文件被 git-lfs 跟踪，则为 `True`，否则为 `False`。
- en: Check if the file passed is tracked with git-lfs.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 检查传递的文件是否由 git-lfs 跟踪。
- en: '#### `huggingface_hub.repository.is_git_ignored`'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.repository.is_git_ignored`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L193)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L193)'
- en: '[PRE33]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Parameters
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`filename` (`str` or `Path`) — The filename to check.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filename` (`str` 或 `Path`) — 要检查的文件名。'
- en: Returns
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: '`True` if the file passed is ignored by `git`, `False` otherwise.'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递的文件被 `git` 忽略，则为 `True`，否则为 `False`。
- en: Check if file is git-ignored. Supports nested .gitignore files.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 检查文件是否被 git 忽略。支持嵌套的 .gitignore 文件。
- en: '#### `huggingface_hub.repository.files_to_be_staged`'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.repository.files_to_be_staged`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L241)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L241)'
- en: '[PRE34]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Parameters
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`pattern` (`str` or `Path`) — The pattern of filenames to check. Put `.` to
    get all files.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern` (`str` 或 `Path`) — 要检查的文件名模式。放置 `.` 以获取所有文件。'
- en: '`folder` (`str` or `Path`) — The folder in which to run the command.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`folder` (`str` 或 `Path`) — 要运行命令的文件夹。'
- en: Returns
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`List[str]`'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '`List[str]`'
- en: List of files that are to be staged.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 要暂存的文件列表。
- en: Returns a list of filenames that are to be staged.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 返回要暂存的文件名列表。
- en: '#### `huggingface_hub.repository.is_tracked_upstream`'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.repository.is_tracked_upstream`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L266)'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L266)'
- en: '[PRE35]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Parameters
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`folder` (`str` or `Path`) — The folder in which to run the command.'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`folder` (`str` 或 `Path`) — 要运行命令的文件夹。'
- en: Returns
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`bool`'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`bool`'
- en: '`True` if the current checked-out branch is tracked upstream, `False` otherwise.'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前签出的分支被上游跟踪，则为 `True`，否则为 `False`。
- en: Check if the current checked-out branch is tracked upstream.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 检查当前签出的分支是否被追踪到上游。
- en: '#### `huggingface_hub.repository.commits_to_push`'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `huggingface_hub.repository.commits_to_push`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L288)'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L288)'
- en: '[PRE36]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Parameters
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 参数
- en: '`folder` (`str` or `Path`) — The folder in which to run the command.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`folder` (`str` 或 `Path`) — 要运行命令的文件夹。'
- en: '`upstream` (`str`, *optional*) —'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`upstream` (`str`, *可选*) —'
- en: Returns
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 返回
- en: '`int`'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`int`'
- en: Number of commits that would be pushed upstream were a `git push` to proceed.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 如果继续 `git push`，将推送到上游的提交数。
- en: Check the number of commits that would be pushed upstream
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 检查将被推送到上游的提交数
- en: The name of the upstream repository with which the comparison should be made.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 应进行比较的上游存储库的名称。
- en: Following asynchronous commands
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以下异步命令
- en: 'The `Repository` utility offers several methods which can be launched asynchronously:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '`Repository` 实用程序提供了几种可以异步启动的方法：'
- en: '`git_push`'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git_push`'
- en: '`git_pull`'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`git_pull`'
- en: '`push_to_hub`'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`push_to_hub`'
- en: The `commit` context manager
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit` 上下文管理器'
- en: See below for utilities to manage such asynchronous methods.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下用于管理此类异步方法的实用程序。
- en: '### `class huggingface_hub.Repository`'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class huggingface_hub.Repository`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L425)'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L425)'
- en: '[PRE37]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Helper class to wrap the git and git-lfs commands.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 包装 git 和 git-lfs 命令的辅助类。
- en: The aim is to facilitate interacting with huggingface.co hosted model or dataset
    repos, though not a lot here (if any) is actually specific to huggingface.co.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 目的是简化与 huggingface.co 托管的模型或数据集存储库的交互，尽管这里（如果有的话）实际上与 huggingface.co 没有太多特定的内容。
- en: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    is deprecated in favor of the http-based alternatives implemented in [HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi).
    Given its large adoption in legacy code, the complete removal of [Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)
    will only happen in release `v1.0`. For more details, please read [https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http](https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http).'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)已被弃用，推荐使用基于http的替代方案，该替代方案已在[HfApi](/docs/huggingface_hub/v0.20.3/en/package_reference/hf_api#huggingface_hub.HfApi)中实现。鉴于其在旧代码中的广泛应用，完全移除[Repository](/docs/huggingface_hub/v0.20.3/en/package_reference/repository#huggingface_hub.Repository)将仅在版本`v1.0`中发生。有关更多详细信息，请阅读[https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http](https://huggingface.co/docs/huggingface_hub/concepts/git_vs_http)。'
- en: '#### `commands_failed`'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `commands_failed`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1444)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1444)'
- en: '[PRE38]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Returns the asynchronous commands that failed.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 返回失败的异步命令。
- en: '#### `commands_in_progress`'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `commands_in_progress`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1451)'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1451)'
- en: '[PRE39]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Returns the asynchronous commands that are currently in progress.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 返回当前正在进行的异步命令。
- en: '#### `wait_for_commands`'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `wait_for_commands`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1458)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L1458)'
- en: '[PRE40]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Blocking method: blocks all subsequent execution until all commands have been
    processed.'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 阻塞方法：阻止所有后续执行，直到所有命令都已处理。
- en: '### `class huggingface_hub.repository.CommandInProgress`'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '### `class huggingface_hub.repository.CommandInProgress`'
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L31)'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '[<来源>](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repository.py#L31)'
- en: '[PRE41]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Utility to follow commands launched asynchronously.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 用于跟踪异步启动的命令的实用程序。
