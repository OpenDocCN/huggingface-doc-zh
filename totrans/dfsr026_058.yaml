- en: Text-to-image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://huggingface.co/docs/diffusers/training/text2image](https://huggingface.co/docs/diffusers/training/text2image)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/diffusers/v0.26.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/start.99629b4a.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/scheduler.182ea377.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/singletons.fade7992.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.1f6d62f6.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/paths.108a236d.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/app.2b3eaeb0.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.abf12888.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/0.3862a335.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/148.016a18ff.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Tip.230e2334.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/CodeBlock.57fe6e13.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Heading.16916d63.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/HfOption.fc88c804.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/stores.aa51e67d.js">
  prefs: []
  type: TYPE_NORMAL
- en: The text-to-image script is experimental, and itâ€™s easy to overfit and run into
    issues like catastrophic forgetting. Try exploring different hyperparameters to
    get the best results on your dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Text-to-image models like Stable Diffusion are conditioned to generate images
    given a text prompt.
  prefs: []
  type: TYPE_NORMAL
- en: Training a model can be taxing on your hardware, but if you enable `gradient_checkpointing`
    and `mixed_precision`, it is possible to train a model on a single 24GB GPU. If
    youâ€™re training with larger batch sizes or want to train faster, itâ€™s better to
    use GPUs with more than 30GB of memory. You can reduce your memory footprint by
    enabling memory-efficient attention with [xFormers](../optimization/xformers).
    JAX/Flax training is also supported for efficient training on TPUs and GPUs, but
    it doesnâ€™t support gradient checkpointing, gradient accumulation or xFormers.
    A GPU with at least 30GB of memory or a TPU v3 is recommended for training with
    Flax.
  prefs: []
  type: TYPE_NORMAL
- en: This guide will explore the [train_text_to_image.py](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py)
    training script to help you become familiar with it, and how you can adapt it
    for your own use-case.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before running the script, make sure you install the library from source:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then navigate to the example folder containing the training script and install
    the required dependencies for the script youâ€™re using:'
  prefs: []
  type: TYPE_NORMAL
- en: PyTorchFlax
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: ðŸ¤— Accelerate is a library for helping you train on multiple GPUs/TPUs or with
    mixed-precision. Itâ€™ll automatically configure your training setup based on your
    hardware and environment. Take a look at the ðŸ¤— Accelerate [Quick tour](https://huggingface.co/docs/accelerate/quicktour)
    to learn more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Initialize an ðŸ¤— Accelerate environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To setup a default ðŸ¤— Accelerate environment without choosing any configurations:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Or if your environment doesnâ€™t support an interactive shell, like a notebook,
    you can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Lastly, if you want to train a model on your own dataset, take a look at the
    [Create a dataset for training](create_dataset) guide to learn how to create a
    dataset that works with the training script.
  prefs: []
  type: TYPE_NORMAL
- en: Script parameters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following sections highlight parts of the training script that are important
    for understanding how to modify it, but it doesnâ€™t cover every aspect of the script
    in detail. If youâ€™re interested in learning more, feel free to read through the
    [script](https://github.com/huggingface/diffusers/blob/main/examples/text_to_image/train_text_to_image.py)
    and let us know if you have any questions or concerns.
  prefs: []
  type: TYPE_NORMAL
- en: The training script provides many parameters to help you customize your training
    run. All of the parameters and their descriptions are found in the [`parse_args()`](https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L193)
    function. This function provides default values for each parameter, such as the
    training batch size and learning rate, but you can also set your own values in
    the training command if youâ€™d like.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, to speedup training with mixed precision using the fp16 format,
    add the `--mixed_precision` parameter to the training command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Some basic and important parameters include:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--pretrained_model_name_or_path`: the name of the model on the Hub or a local
    path to the pretrained model'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--dataset_name`: the name of the dataset on the Hub or a local path to the
    dataset to train on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--image_column`: the name of the image column in the dataset to train on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--caption_column`: the name of the text column in the dataset to train on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--output_dir`: where to save the trained model'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--push_to_hub`: whether to push the trained model to the Hub'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--checkpointing_steps`: frequency of saving a checkpoint as the model trains;
    this is useful if for some reason training is interrupted, you can continue training
    from that checkpoint by adding `--resume_from_checkpoint` to your training command'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Min-SNR weighting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The [Min-SNR](https://huggingface.co/papers/2303.09556) weighting strategy can
    help with training by rebalancing the loss to achieve faster convergence. The
    training script supports predicting `epsilon` (noise) or `v_prediction`, but Min-SNR
    is compatible with both prediction types. This weighting strategy is only supported
    by PyTorch and is unavailable in the Flax training script.
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the `--snr_gamma` parameter and set it to the recommended value of 5.0:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: You can compare the loss surfaces for different `snr_gamma` values in this [Weights
    and Biases](https://wandb.ai/sayakpaul/text2image-finetune-minsnr) report. For
    smaller datasets, the effects of Min-SNR may not be as obvious compared to larger
    datasets.
  prefs: []
  type: TYPE_NORMAL
- en: Training script
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The dataset preprocessing code and training loop are found in the [`main()`](https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L490)
    function. If you need to adapt the training script, this is where youâ€™ll need
    to make your changes.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `train_text_to_image` script starts by [loading a scheduler](https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L543)
    and tokenizer. You can choose to use a different scheduler here if you want:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Then the script [loads the UNet](https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L619)
    model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, the text and image columns of the dataset need to be preprocessed. The
    [`tokenize_captions`](https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L724)
    function handles tokenizing the inputs, and the [`train_transforms`](https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L742)
    function specifies the type of transforms to apply to the image. Both of these
    functions are bundled into `preprocess_train`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Lastly, the [training loop](https://github.com/huggingface/diffusers/blob/8959c5b9dec1c94d6ba482c94a58d2215c5fd026/examples/text_to_image/train_text_to_image.py#L878)
    handles everything else. It encodes images into latent space, adds noise to the
    latents, computes the text embeddings to condition on, updates the model parameters,
    and saves and pushes the model to the Hub. If you want to learn more about how
    the training loop works, check out the [Understanding pipelines, models and schedulers](../using-diffusers/write_own_pipeline)
    tutorial which breaks down the basic pattern of the denoising process.
  prefs: []
  type: TYPE_NORMAL
- en: Launch the script
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once youâ€™ve made all your changes or youâ€™re okay with the default configuration,
    youâ€™re ready to launch the training script! ðŸš€
  prefs: []
  type: TYPE_NORMAL
- en: PyTorchFlax
  prefs: []
  type: TYPE_NORMAL
- en: Letâ€™s train on the [PokÃ©mon BLIP captions](https://huggingface.co/datasets/lambdalabs/pokemon-blip-captions)
    dataset to generate your own PokÃ©mon. Set the environment variables `MODEL_NAME`
    and `dataset_name` to the model and the dataset (either from the Hub or a local
    path). If youâ€™re training on more than one GPU, add the `--multi_gpu` parameter
    to the `accelerate launch` command.
  prefs: []
  type: TYPE_NORMAL
- en: To train on a local dataset, set the `TRAIN_DIR` and `OUTPUT_DIR` environment
    variables to the path of the dataset and where to save the model to.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Once training is complete, you can use your newly trained model for inference:'
  prefs: []
  type: TYPE_NORMAL
- en: PyTorchFlax
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Next steps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Congratulations on training your own text-to-image model! To learn more about
    how to use your new model, the following guides may be helpful:'
  prefs: []
  type: TYPE_NORMAL
- en: Learn how to [load LoRA weights](../using-diffusers/loading_adapters#LoRA) for
    inference if you trained your model with LoRA.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn more about how certain parameters like guidance scale or techniques such
    as prompt weighting can help you control inference in the [Text-to-image](../using-diffusers/conditional_image_generation)
    task guide.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
