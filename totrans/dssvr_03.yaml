- en: Quickstart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/datasets-server/quick_start](https://huggingface.co/docs/datasets-server/quick_start)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/datasets-server/main/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/entry/start.72deb59f.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/scheduler.db6b1edd.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/singletons.08f900c0.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/index.badce0ed.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/paths.8205e2a2.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/entry/app.9c9f50af.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/index.ef84021a.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/nodes/0.895e992d.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/nodes/15.611755b3.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/Tip.67451c24.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/CodeBlock.786162a6.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/DocNotebookDropdown.84370fbf.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/InferenceApi.4a0db4d5.js">
    <link rel="modulepreload" href="/docs/datasets-server/main/en/_app/immutable/chunks/Heading.87f70b00.js">
  prefs: []
  type: TYPE_NORMAL
- en: 'In this quickstart, you’ll learn how to use the Datasets Server’s REST API
    to:'
  prefs: []
  type: TYPE_NORMAL
- en: Check whether a dataset on the Hub is functional.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Return the configuration and splits of a dataset.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preview the first 100 rows of a dataset.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download slices of rows of a dataset.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search a word in a dataset.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filter rows based on a query string.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access the dataset as parquet files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get the dataset size (in number of rows or bytes).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get statistics about the dataset.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: API endpoints
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Each feature is served through an endpoint summarized in the table below:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Endpoint | Method | Description | Query parameters |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [/is-valid](./valid) | GET | Check whether a specific dataset is valid. |
    `dataset`: name of the dataset |'
  prefs: []
  type: TYPE_TB
- en: '| [/splits](./splits) | GET | Get the list of configurations and splits of
    a dataset. | `dataset`: name of the dataset |'
  prefs: []
  type: TYPE_TB
- en: '| [/first-rows](./first_rows) | GET | Get the first rows of a dataset split.
    | - `dataset`: name of the dataset - `config`: name of the config'
  prefs: []
  type: TYPE_NORMAL
- en: '- `split`: name of the split |'
  prefs: []
  type: TYPE_NORMAL
- en: '| [/rows](./rows) | GET | Get a slice of rows of a dataset split. | - `dataset`:
    name of the dataset - `config`: name of the config'
  prefs: []
  type: TYPE_NORMAL
- en: '- `split`: name of the split'
  prefs: []
  type: TYPE_NORMAL
- en: '- `offset`: offset of the slice'
  prefs: []
  type: TYPE_NORMAL
- en: '- `length`: length of the slice (maximum 100) |'
  prefs: []
  type: TYPE_NORMAL
- en: '| [/search](./search) | GET | Search text in a dataset split. | - `dataset`:
    name of the dataset - `config`: name of the config'
  prefs: []
  type: TYPE_NORMAL
- en: '- `split`: name of the split'
  prefs: []
  type: TYPE_NORMAL
- en: '- `query`: text to search for'
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| [/filter](./filter) | GET | Filter rows in a dataset split. | - `dataset`:
    name of the dataset - `config`: name of the config'
  prefs: []
  type: TYPE_NORMAL
- en: '- `split`: name of the split'
  prefs: []
  type: TYPE_NORMAL
- en: '- `where`: filter query'
  prefs: []
  type: TYPE_NORMAL
- en: '- `offset`: offset of the slice'
  prefs: []
  type: TYPE_NORMAL
- en: '- `length`: length of the slice (maximum 100) |'
  prefs: []
  type: TYPE_NORMAL
- en: '| [/parquet](./parquet) | GET | Get the list of parquet files of a dataset.
    | `dataset`: name of the dataset |'
  prefs: []
  type: TYPE_TB
- en: '| [/size](./size) | GET | Get the size of a dataset. | `dataset`: name of the
    dataset |'
  prefs: []
  type: TYPE_TB
- en: '| [/statistics](./statistics) | GET | Get statistics about a dataset split.
    | - `dataset`: name of the dataset - `config`: name of the config'
  prefs: []
  type: TYPE_NORMAL
- en: '- `split`: name of the split |'
  prefs: []
  type: TYPE_NORMAL
- en: There is no installation or setup required to use Datasets Server.
  prefs: []
  type: TYPE_NORMAL
- en: Sign up for a [Hugging Face account](https://huggingface.co/join) if you don't
    already have one! While you can use Datasets Server without a Hugging Face account,
    you won't be able to access [gated datasets](https://huggingface.co/docs/hub/datasets-gated)
    like [CommonVoice](https://huggingface.co/datasets/mozilla-foundation/common_voice_10_0)
    and [ImageNet](https://huggingface.co/datasets/imagenet-1k) without providing
    a [user token](https://huggingface.co/settings/tokens) which you can find in your
    user settings.
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to try out the API in [Postman](https://www.postman.com/huggingface/workspace/hugging-face-apis/documentation/23242779-d068584e-96d1-4d92-a703-7cb12cbd8053),
    [ReDoc](https://redocly.github.io/redoc/?url=https://datasets-server.huggingface.co/openapi.json)
    or [RapidAPI](https://rapidapi.com/hugging-face-hugging-face-default/api/hugging-face-datasets-api/).
    This quickstart will show you how to query the endpoints programmatically.
  prefs: []
  type: TYPE_NORMAL
- en: 'The base URL of the REST API is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Gated datasets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For gated datasets, you’ll need to provide your user token in `headers` of your
    query. Otherwise, you’ll get an error message to retry with authentication.
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'You’ll see the following error if you’re trying to access a gated dataset without
    providing your user token:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Check dataset validity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To check whether a specific dataset is valid, for example, [Rotten Tomatoes](https://huggingface.co/datasets/rotten_tomatoes),
    use the `/is-valid` endpoint:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns whether the dataset provides a preview (see /first-rows), the
    viewer (see /rows), the search (see /search) and the filter (see /filter):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: List configurations and splits
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `/splits` endpoint returns a JSON list of the splits in a dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns the available configuration and splits in the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Preview a dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `/first-rows` endpoint returns a JSON list of the first 100 rows of a dataset.
    It also returns the types of data features (“columns” data types). You should
    specify the dataset name, configuration name (you can find out the configuration
    name from the `/splits` endpoint), and split name of the dataset you’d like to
    preview:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns the first 100 rows of the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Download slices of a dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `/rows` endpoint returns a JSON list of a slice of rows of a dataset at
    any given location (offset). It also returns the types of data features (“columns”
    data types). You should specify the dataset name, configuration name (you can
    find out the configuration name from the `/splits` endpoint), the split name and
    the offset and length of the slice you’d like to download:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: You can download slices of 100 rows maximum at a time.
  prefs: []
  type: TYPE_NORMAL
- en: 'The response looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Search text in a dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `/search` endpoint returns a JSON list of a slice of rows of a dataset
    that match a text query. The text is searched in the columns of type `string`,
    even if the values are nested in a dictionary. It also returns the types of data
    features (“columns” data types). The response format is the same as the /rows
    endpoint. You should specify the dataset name, configuration name (you can find
    out the configuration name from the `/splits` endpoint), the split name and the
    search query you’d like to find in the text columns:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: You can get slices of 100 rows maximum at a time, and you can ask for other
    slices using the `offset` and `length` parameters, as for the `/rows` endpoint.
  prefs: []
  type: TYPE_NORMAL
- en: 'The response looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Access Parquet files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Datasets Server converts every dataset on the Hub to the [Parquet](https://parquet.apache.org/)
    format. The `/parquet` endpoint returns a JSON list of the Parquet URLs for a
    dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns a URL to the Parquet file for each split:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Get the size of the dataset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `/size` endpoint returns a JSON with the size (number of rows and size
    in bytes) of the dataset, and for every configuration and split:'
  prefs: []
  type: TYPE_NORMAL
- en: PythonJavaScriptcURL
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'This returns the size of the dataset, and for every configuration and split:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
