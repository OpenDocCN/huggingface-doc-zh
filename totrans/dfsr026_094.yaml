- en: How to contribute to Diffusers üß®
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/diffusers/conceptual/contribution](https://huggingface.co/docs/diffusers/conceptual/contribution)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en:  
    
    
    
    
    
    
    
    
    
    
    
  prefs: []
  type: TYPE_NORMAL
- en: We ‚ù§Ô∏è contributions from the open-source community! Everyone is welcome, and
    all types of participation ‚Äìnot just code‚Äì are valued and appreciated. Answering
    questions, helping others, reaching out, and improving the documentation are all
    immensely valuable to the community, so don‚Äôt be afraid and get involved if you‚Äôre
    up for it!
  prefs: []
  type: TYPE_NORMAL
- en: Everyone is encouraged to start by saying üëã in our public Discord channel. We
    discuss the latest trends in diffusion models, ask questions, show off personal
    projects, help each other with contributions, or just hang out ‚òï. [![Join us on
    Discord](../Images/69f5e21f1db3ea11465e435dc4b4927f.png)](https://Discord.gg/G7tWnz98XR)
  prefs: []
  type: TYPE_NORMAL
- en: Whichever way you choose to contribute, we strive to be part of an open, welcoming,
    and kind community. Please, read our [code of conduct](https://github.com/huggingface/diffusers/blob/main/CODE_OF_CONDUCT.md)
    and be mindful to respect it during your interactions. We also recommend you become
    familiar with the [ethical guidelines](https://huggingface.co/docs/diffusers/conceptual/ethical_guidelines)
    that guide our project and ask you to adhere to the same principles of transparency
    and responsibility.
  prefs: []
  type: TYPE_NORMAL
- en: We enormously value feedback from the community, so please do not be afraid
    to speak up if you believe you have valuable feedback that can help improve the
    library - every message, comment, issue, and pull request (PR) is read and considered.
  prefs: []
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contribute in many ways ranging from answering questions on issues to
    adding new diffusion models to the core library.
  prefs: []
  type: TYPE_NORMAL
- en: In the following, we give an overview of different ways to contribute, ranked
    by difficulty in ascending order. All of them are valuable to the community.
  prefs: []
  type: TYPE_NORMAL
- en: Asking and answering questions on [the Diffusers discussion forum](https://discuss.huggingface.co/c/discussion-related-to-httpsgithubcomhuggingfacediffusers)
    or on [Discord](https://discord.gg/G7tWnz98XR).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Opening new issues on [the GitHub Issues tab](https://github.com/huggingface/diffusers/issues/new/choose).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Answering issues on [the GitHub Issues tab](https://github.com/huggingface/diffusers/issues).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Fix a simple issue, marked by the ‚ÄúGood first issue‚Äù label, see [here](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Contribute to the [documentation](https://github.com/huggingface/diffusers/tree/main/docs/source).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Contribute a [Community Pipeline](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3Acommunity-examples).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Contribute to the [examples](https://github.com/huggingface/diffusers/tree/main/examples).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Fix a more difficult issue, marked by the ‚ÄúGood second issue‚Äù label, see [here](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22Good+second+issue%22).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Add a new pipeline, model, or scheduler, see [‚ÄúNew Pipeline/Model‚Äù](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22New+pipeline%2Fmodel%22)
    and [‚ÄúNew scheduler‚Äù](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22New+scheduler%22)
    issues. For this contribution, please have a look at [Design Philosophy](https://github.com/huggingface/diffusers/blob/main/PHILOSOPHY.md).
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: As said before, **all contributions are valuable to the community**. In the
    following, we will explain each contribution a bit more in detail.
  prefs: []
  type: TYPE_NORMAL
- en: For all contributions 4 - 9, you will need to open a PR. It is explained in
    detail how to do so in [Opening a pull request](#how-to-open-a-pr).
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Asking and answering questions on the Diffusers discussion forum or on the
    Diffusers Discord
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Any question or comment related to the Diffusers library can be asked on the
    [discussion forum](https://discuss.huggingface.co/c/discussion-related-to-httpsgithubcomhuggingfacediffusers/)
    or on [Discord](https://discord.gg/G7tWnz98XR). Such questions and comments include
    (but are not limited to):'
  prefs: []
  type: TYPE_NORMAL
- en: Reports of training or inference experiments in an attempt to share knowledge
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Presentation of personal projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Questions to non-official training examples
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project proposals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: General feedback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paper summaries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asking for help on personal projects that build on top of the Diffusers library
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: General questions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ethical questions regarding diffusion models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‚Ä¶
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Every question that is asked on the forum or on Discord actively encourages
    the community to publicly share knowledge and might very well help a beginner
    in the future who has the same question you‚Äôre having. Please do pose any questions
    you might have. In the same spirit, you are of immense help to the community by
    answering such questions because this way you are publicly documenting knowledge
    for everybody to learn from.
  prefs: []
  type: TYPE_NORMAL
- en: '**Please** keep in mind that the more effort you put into asking or answering
    a question, the higher the quality of the publicly documented knowledge. In the
    same way, well-posed and well-answered questions create a high-quality knowledge
    database accessible to everybody, while badly posed questions or answers reduce
    the overall quality of the public knowledge database. In short, a high quality
    question or answer is *precise*, *concise*, *relevant*, *easy-to-understand*,
    *accessible*, and *well-formated/well-posed*. For more information, please have
    a look through the [How to write a good issue](#how-to-write-a-good-issue) section.'
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE about channels**: [*The forum*](https://discuss.huggingface.co/c/discussion-related-to-httpsgithubcomhuggingfacediffusers/63)
    is much better indexed by search engines, such as Google. Posts are ranked by
    popularity rather than chronologically. Hence, it‚Äôs easier to look up questions
    and answers that we posted some time ago. In addition, questions and answers posted
    in the forum can easily be linked to. In contrast, *Discord* has a chat-like format
    that invites fast back-and-forth communication. While it will most likely take
    less time for you to get an answer to your question on Discord, your question
    won‚Äôt be visible anymore over time. Also, it‚Äôs much harder to find information
    that was posted a while back on Discord. We therefore strongly recommend using
    the forum for high-quality questions and answers in an attempt to create long-lasting
    knowledge for the community. If discussions on Discord lead to very interesting
    answers and conclusions, we recommend posting the results on the forum to make
    the information more available for future readers.'
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Opening new issues on the GitHub issues tab
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The üß® Diffusers library is robust and reliable thanks to the users who notify
    us of the problems they encounter. So thank you for reporting an issue.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, GitHub issues are reserved for technical questions directly related
    to the Diffusers library, bug reports, feature requests, or feedback on the library
    design.
  prefs: []
  type: TYPE_NORMAL
- en: In a nutshell, this means that everything that is **not** related to the **code
    of the Diffusers library** (including the documentation) should **not** be asked
    on GitHub, but rather on either the [forum](https://discuss.huggingface.co/c/discussion-related-to-httpsgithubcomhuggingfacediffusers/63)
    or [Discord](https://discord.gg/G7tWnz98XR).
  prefs: []
  type: TYPE_NORMAL
- en: '**Please consider the following guidelines when opening a new issue**:'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you have searched whether your issue has already been asked before
    (use the search bar on GitHub under Issues).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Please never report a new issue on another (related) issue. If another issue
    is highly related, please open a new issue nevertheless and link to the related
    issue.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure your issue is written in English. Please use one of the great, free
    online translation services, such as [DeepL](https://www.deepl.com/translator)
    to translate from your native language to English if you are not comfortable in
    English.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check whether your issue might be solved by updating to the newest Diffusers
    version. Before posting your issue, please make sure that `python -c "import diffusers;
    print(diffusers.__version__)"` is higher or matches the latest Diffusers version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember that the more effort you put into opening a new issue, the higher the
    quality of your answer will be and the better the overall quality of the Diffusers
    issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New issues usually include the following.
  prefs: []
  type: TYPE_NORMAL
- en: 2.1\. Reproducible, minimal bug reports
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'A bug report should always have a reproducible code snippet and be as minimal
    and concise as possible. This means in more detail:'
  prefs: []
  type: TYPE_NORMAL
- en: Narrow the bug down as much as you can, **do not just dump your whole code file**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Format your code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not include any external libraries except for Diffusers depending on them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Always** provide all necessary information about your environment; for this,
    you can run: `diffusers-cli env` in your shell and copy-paste the displayed information
    to the issue.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explain the issue. If the reader doesn‚Äôt know what the issue is and why it is
    an issue, she cannot solve it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Always** make sure the reader can reproduce your issue with as little effort
    as possible. If your code snippet cannot be run because of missing libraries or
    undefined variables, the reader cannot help you. Make sure your reproducible code
    snippet is as minimal as possible and can be copy-pasted into a simple Python
    shell.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If in order to reproduce your issue a model and/or dataset is required, make
    sure the reader has access to that model or dataset. You can always upload your
    model or dataset to the [Hub](https://huggingface.co) to make it easily downloadable.
    Try to keep your model and dataset as small as possible, to make the reproduction
    of your issue as effortless as possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information, please have a look through the [How to write a good issue](#how-to-write-a-good-issue)
    section.
  prefs: []
  type: TYPE_NORMAL
- en: You can open a bug report [here](https://github.com/huggingface/diffusers/issues/new?assignees=&labels=bug&projects=&template=bug-report.yml).
  prefs: []
  type: TYPE_NORMAL
- en: 2.2\. Feature requests
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'A world-class feature request addresses the following points:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Motivation first:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is it related to a problem/frustration with the library? If so, please explain
    why. Providing a code snippet that demonstrates the problem is best.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is it related to something you would need for a project? We‚Äôd love to hear about
    it!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is it something you worked on and think could benefit the community? Awesome!
    Tell us what problem it solved for you.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write a *full paragraph* describing the feature;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide a **code snippet** that demonstrates its future use;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In case this is related to a paper, please attach a link;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Attach any additional information (drawings, screenshots, etc.) you think may
    help.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can open a feature request [here](https://github.com/huggingface/diffusers/issues/new?assignees=&labels=&template=feature_request.md&title=).
  prefs: []
  type: TYPE_NORMAL
- en: 2.3 Feedback
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Feedback about the library design and why it is good or not good helps the core
    maintainers immensely to build a user-friendly library. To understand the philosophy
    behind the current design philosophy, please have a look [here](https://huggingface.co/docs/diffusers/conceptual/philosophy).
    If you feel like a certain design choice does not fit with the current design
    philosophy, please explain why and how it should be changed. If a certain design
    choice follows the design philosophy too much, hence restricting use cases, explain
    why and how it should be changed. If a certain design choice is very useful for
    you, please also leave a note as this is great feedback for future design decisions.
  prefs: []
  type: TYPE_NORMAL
- en: You can open an issue about feedback [here](https://github.com/huggingface/diffusers/issues/new?assignees=&labels=&template=feedback.md&title=).
  prefs: []
  type: TYPE_NORMAL
- en: 2.4 Technical questions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Technical questions are mainly about why certain code of the library was written
    in a certain way, or what a certain part of the code does. Please make sure to
    link to the code in question and please provide details on why this part of the
    code is difficult to understand.
  prefs: []
  type: TYPE_NORMAL
- en: You can open an issue about a technical question [here](https://github.com/huggingface/diffusers/issues/new?assignees=&labels=bug&template=bug-report.yml).
  prefs: []
  type: TYPE_NORMAL
- en: 2.5 Proposal to add a new model, scheduler, or pipeline
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If the diffusion model community released a new model, pipeline, or scheduler
    that you would like to see in the Diffusers library, please provide the following
    information:'
  prefs: []
  type: TYPE_NORMAL
- en: Short description of the diffusion pipeline, model, or scheduler and link to
    the paper or public release.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Link to any of its open-source implementation(s).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Link to the model weights if they are available.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are willing to contribute to the model yourself, let us know so we can
    best guide you. Also, don‚Äôt forget to tag the original author of the component
    (model, scheduler, pipeline, etc.) by GitHub handle if you can find it.
  prefs: []
  type: TYPE_NORMAL
- en: You can open a request for a model/pipeline/scheduler [here](https://github.com/huggingface/diffusers/issues/new?assignees=&labels=New+model%2Fpipeline%2Fscheduler&template=new-model-addition.yml).
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Answering issues on the GitHub issues tab
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Answering issues on GitHub might require some technical knowledge of Diffusers,
    but we encourage everybody to give it a try even if you are not 100% certain that
    your answer is correct. Some tips to give a high-quality answer to an issue:'
  prefs: []
  type: TYPE_NORMAL
- en: Be as concise and minimal as possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stay on topic. An answer to the issue should concern the issue and only the
    issue.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide links to code, papers, or other sources that prove or encourage your
    point.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Answer in code. If a simple code snippet is the answer to the issue or shows
    how the issue can be solved, please provide a fully reproducible code snippet.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, many issues tend to be simply off-topic, duplicates of other issues, or
    irrelevant. It is of great help to the maintainers if you can answer such issues,
    encouraging the author of the issue to be more precise, provide the link to a
    duplicated issue or redirect them to [the forum](https://discuss.huggingface.co/c/discussion-related-to-httpsgithubcomhuggingfacediffusers/63)
    or [Discord](https://discord.gg/G7tWnz98XR).
  prefs: []
  type: TYPE_NORMAL
- en: If you have verified that the issued bug report is correct and requires a correction
    in the source code, please have a look at the next sections.
  prefs: []
  type: TYPE_NORMAL
- en: For all of the following contributions, you will need to open a PR. It is explained
    in detail how to do so in the [Opening a pull request](#how-to-open-a-pr) section.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Fixing a ‚ÄúGood first issue‚Äù
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Good first issues* are marked by the [Good first issue](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)
    label. Usually, the issue already explains how a potential solution should look
    so that it is easier to fix. If the issue hasn‚Äôt been closed and you would like
    to try to fix this issue, you can just leave a message ‚ÄúI would like to try this
    issue.‚Äù. There are usually three scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: a.) The issue description already proposes a fix. In this case and if the solution
    makes sense to you, you can open a PR or draft PR to fix it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: b.) The issue description does not propose a fix. In this case, you can ask
    what a proposed fix could look like and someone from the Diffusers team should
    answer shortly. If you have a good idea of how to fix it, feel free to directly
    open a PR.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: c.) There is already an open PR to fix the issue, but the issue hasn‚Äôt been
    closed yet. If the PR has gone stale, you can simply open a new PR and link to
    the stale PR. PRs often go stale if the original contributor who wanted to fix
    the issue suddenly cannot find the time anymore to proceed. This often happens
    in open-source and is very normal. In this case, the community will be very happy
    if you give it a new try and leverage the knowledge of the existing PR. If there
    is already a PR and it is active, you can help the author by giving suggestions,
    reviewing the PR or even asking whether you can contribute to the PR.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5\. Contribute to the documentation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A good library **always** has good documentation! The official documentation
    is often one of the first points of contact for new users of the library, and
    therefore contributing to the documentation is a **highly valuable contribution**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Contributing to the library can have many forms:'
  prefs: []
  type: TYPE_NORMAL
- en: Correcting spelling or grammatical errors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Correct incorrect formatting of the docstring. If you see that the official
    documentation is weirdly displayed or a link is broken, we would be very happy
    if you take some time to correct it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Correct the shape or dimensions of a docstring input or output tensor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarify documentation that is hard to understand or incorrect.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update outdated code examples.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Translating the documentation to another language.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anything displayed on [the official Diffusers doc page](https://huggingface.co/docs/diffusers/index)
    is part of the official documentation and can be corrected, adjusted in the respective
    [documentation source](https://github.com/huggingface/diffusers/tree/main/docs/source).
  prefs: []
  type: TYPE_NORMAL
- en: Please have a look at [this page](https://github.com/huggingface/diffusers/tree/main/docs)
    on how to verify changes made to the documentation locally.
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Contribute a community pipeline
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Pipelines](https://huggingface.co/docs/diffusers/api/pipelines/overview) are
    usually the first point of contact between the Diffusers library and the user.
    Pipelines are examples of how to use Diffusers [models](https://huggingface.co/docs/diffusers/api/models/overview)
    and [schedulers](https://huggingface.co/docs/diffusers/api/schedulers/overview).
    We support two types of pipelines:'
  prefs: []
  type: TYPE_NORMAL
- en: Official Pipelines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Community Pipelines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both official and community pipelines follow the same design and consist of
    the same type of components.
  prefs: []
  type: TYPE_NORMAL
- en: Official pipelines are tested and maintained by the core maintainers of Diffusers.
    Their code resides in [src/diffusers/pipelines](https://github.com/huggingface/diffusers/tree/main/src/diffusers/pipelines).
    In contrast, community pipelines are contributed and maintained purely by the
    **community** and are **not** tested. They reside in [examples/community](https://github.com/huggingface/diffusers/tree/main/examples/community)
    and while they can be accessed via the [PyPI diffusers package](https://pypi.org/project/diffusers/),
    their code is not part of the PyPI distribution.
  prefs: []
  type: TYPE_NORMAL
- en: The reason for the distinction is that the core maintainers of the Diffusers
    library cannot maintain and test all possible ways diffusion models can be used
    for inference, but some of them may be of interest to the community. Officially
    released diffusion pipelines, such as Stable Diffusion are added to the core src/diffusers/pipelines
    package which ensures high quality of maintenance, no backward-breaking code changes,
    and testing. More bleeding edge pipelines should be added as community pipelines.
    If usage for a community pipeline is high, the pipeline can be moved to the official
    pipelines upon request from the community. This is one of the ways we strive to
    be a community-driven library.
  prefs: []
  type: TYPE_NORMAL
- en: To add a community pipeline, one should add a <name-of-the-community>.py file
    to [examples/community](https://github.com/huggingface/diffusers/tree/main/examples/community)
    and adapt the [examples/community/README.md](https://github.com/huggingface/diffusers/tree/main/examples/community/README.md)
    to include an example of the new pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: An example can be seen [here](https://github.com/huggingface/diffusers/pull/2400).
  prefs: []
  type: TYPE_NORMAL
- en: Community pipeline PRs are only checked at a superficial level and ideally they
    should be maintained by their original authors.
  prefs: []
  type: TYPE_NORMAL
- en: Contributing a community pipeline is a great way to understand how Diffusers
    models and schedulers work. Having contributed a community pipeline is usually
    the first stepping stone to contributing an official pipeline to the core package.
  prefs: []
  type: TYPE_NORMAL
- en: 7\. Contribute to training examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Diffusers examples are a collection of training scripts that reside in [examples](https://github.com/huggingface/diffusers/tree/main/examples).
  prefs: []
  type: TYPE_NORMAL
- en: 'We support two types of training examples:'
  prefs: []
  type: TYPE_NORMAL
- en: Official training examples
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Research training examples
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Research training examples are located in [examples/research_projects](https://github.com/huggingface/diffusers/tree/main/examples/research_projects)
    whereas official training examples include all folders under [examples](https://github.com/huggingface/diffusers/tree/main/examples)
    except the `research_projects` and `community` folders. The official training
    examples are maintained by the Diffusers‚Äô core maintainers whereas the research
    training examples are maintained by the community. This is because of the same
    reasons put forward in [6\. Contribute a community pipeline](#6-contribute-a-community-pipeline)
    for official pipelines vs. community pipelines: It is not feasible for the core
    maintainers to maintain all possible training methods for diffusion models. If
    the Diffusers core maintainers and the community consider a certain training paradigm
    to be too experimental or not popular enough, the corresponding training code
    should be put in the `research_projects` folder and maintained by the author.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Both official training and research examples consist of a directory that contains
    one or more training scripts, a requirements.txt file, and a README.md file. In
    order for the user to make use of the training examples, it is required to clone
    the repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'as well as to install all additional dependencies required for training:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Therefore when adding an example, the `requirements.txt` file shall define all
    pip dependencies required for your training example so that once all those are
    installed, the user can run the example‚Äôs training script. See, for example, the
    [DreamBooth `requirements.txt` file](https://github.com/huggingface/diffusers/blob/main/examples/dreambooth/requirements.txt).
  prefs: []
  type: TYPE_NORMAL
- en: 'Training examples of the Diffusers library should adhere to the following philosophy:'
  prefs: []
  type: TYPE_NORMAL
- en: All the code necessary to run the examples should be found in a single Python
    file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One should be able to run the example from the command line with `python <your-example>.py
    --args`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examples should be kept simple and serve as **an example** on how to use Diffusers
    for training. The purpose of example scripts is **not** to create state-of-the-art
    diffusion models, but rather to reproduce known training schemes without adding
    too much custom logic. As a byproduct of this point, our examples also strive
    to serve as good educational materials.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To contribute an example, it is highly recommended to look at already existing
    examples such as [dreambooth](https://github.com/huggingface/diffusers/blob/main/examples/dreambooth/train_dreambooth.py)
    to get an idea of how they should look like. We strongly advise contributors to
    make use of the [Accelerate library](https://github.com/huggingface/accelerate)
    as it‚Äôs tightly integrated with Diffusers. Once an example script works, please
    make sure to add a comprehensive `README.md` that states how to use the example
    exactly. This README should include:'
  prefs: []
  type: TYPE_NORMAL
- en: An example command on how to run the example script as shown [here](https://github.com/huggingface/diffusers/tree/main/examples/dreambooth#running-locally-with-pytorch).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A link to some training results (logs, models, etc.) that show what the user
    can expect as shown [here](https://api.wandb.ai/report/patrickvonplaten/xm6cd5q5).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are adding a non-official/research training example, **please don‚Äôt forget**
    to add a sentence that you are maintaining this training example which includes
    your git handle as shown [here](https://github.com/huggingface/diffusers/tree/main/examples/research_projects/intel_opts#diffusers-examples-with-intel-optimizations).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are contributing to the official training examples, please also make
    sure to add a test to [examples/test_examples.py](https://github.com/huggingface/diffusers/blob/main/examples/test_examples.py).
    This is not necessary for non-official training examples.
  prefs: []
  type: TYPE_NORMAL
- en: 8\. Fixing a ‚ÄúGood second issue‚Äù
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Good second issues* are marked by the [Good second issue](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22Good+second+issue%22)
    label. Good second issues are usually more complicated to solve than [Good first
    issues](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22).
    The issue description usually gives less guidance on how to fix the issue and
    requires a decent understanding of the library by the interested contributor.
    If you are interested in tackling a good second issue, feel free to open a PR
    to fix it and link the PR to the issue. If you see that a PR has already been
    opened for this issue but did not get merged, have a look to understand why it
    wasn‚Äôt merged and try to open an improved PR. Good second issues are usually more
    difficult to get merged compared to good first issues, so don‚Äôt hesitate to ask
    for help from the core maintainers. If your PR is almost finished the core maintainers
    can also jump into your PR and commit to it in order to get it merged.'
  prefs: []
  type: TYPE_NORMAL
- en: 9\. Adding pipelines, models, schedulers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Pipelines, models, and schedulers are the most important pieces of the Diffusers
    library. They provide easy access to state-of-the-art diffusion technologies and
    thus allow the community to build powerful generative AI applications.
  prefs: []
  type: TYPE_NORMAL
- en: By adding a new model, pipeline, or scheduler you might enable a new powerful
    use case for any of the user interfaces relying on Diffusers which can be of immense
    value for the whole generative AI ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Diffusers has a couple of open feature requests for all three components -
    feel free to gloss over them if you don‚Äôt know yet what specific component you
    would like to add:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Model or pipeline](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22New+pipeline%2Fmodel%22)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Scheduler](https://github.com/huggingface/diffusers/issues?q=is%3Aopen+is%3Aissue+label%3A%22New+scheduler%22)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before adding any of the three components, it is strongly recommended that you
    give the [Philosophy guide](philosophy) a read to better understand the design
    of any of the three components. Please be aware that we cannot merge model, scheduler,
    or pipeline additions that strongly diverge from our design philosophy as it will
    lead to API inconsistencies. If you fundamentally disagree with a design choice,
    please open a [Feedback issue](https://github.com/huggingface/diffusers/issues/new?assignees=&labels=&template=feedback.md&title=)
    instead so that it can be discussed whether a certain design pattern/design choice
    shall be changed everywhere in the library and whether we shall update our design
    philosophy. Consistency across the library is very important for us.
  prefs: []
  type: TYPE_NORMAL
- en: Please make sure to add links to the original codebase/paper to the PR and ideally
    also ping the original author directly on the PR so that they can follow the progress
    and potentially help with questions.
  prefs: []
  type: TYPE_NORMAL
- en: If you are unsure or stuck in the PR, don‚Äôt hesitate to leave a message to ask
    for a first review or help.
  prefs: []
  type: TYPE_NORMAL
- en: Copied from mechanism
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A unique and important feature to understand when adding any pipeline, model
    or scheduler code is the `# Copied from` mechanism. You‚Äôll see this all over the
    Diffusers codebase, and the reason we use it is to keep the codebase easy to understand
    and maintain. Marking code with the `# Copied from` mechanism forces the marked
    code to be identical to the code it was copied from. This makes it easy to update
    and propagate changes across many files whenever you run `make fix-copies`.
  prefs: []
  type: TYPE_NORMAL
- en: For example, in the code example below, [StableDiffusionPipelineOutput](/docs/diffusers/v0.26.3/en/api/pipelines/stable_diffusion/upscale#diffusers.pipelines.stable_diffusion.StableDiffusionPipelineOutput)
    is the original code and `AltDiffusionPipelineOutput` uses the `# Copied from`
    mechanism to copy it. The only difference is changing the class prefix from `Stable`
    to `Alt`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: To learn more, read this section of the [~Don‚Äôt~ Repeat Yourself*](https://huggingface.co/blog/transformers-design-philosophy#4-machine-learning-models-are-static)
    blog post.
  prefs: []
  type: TYPE_NORMAL
- en: How to write a good issue
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**The better your issue is written, the higher the chances that it will be
    quickly resolved.**'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that you‚Äôve used the correct template for your issue. You can pick
    between *Bug Report*, *Feature Request*, *Feedback about API Design*, *New model/pipeline/scheduler
    addition*, *Forum*, or a blank issue. Make sure to pick the correct one when opening
    [a new issue](https://github.com/huggingface/diffusers/issues/new/choose).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Be precise**: Give your issue a fitting title. Try to formulate your issue
    description as simple as possible. The more precise you are when submitting an
    issue, the less time it takes to understand the issue and potentially solve it.
    Make sure to open an issue for one issue only and not for multiple issues. If
    you found multiple issues, simply open multiple issues. If your issue is a bug,
    try to be as precise as possible about what bug it is - you should not just write
    ‚ÄúError in diffusers‚Äù.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Reproducibility**: No reproducible code snippet == no solution. If you encounter
    a bug, maintainers **have to be able to reproduce** it. Make sure that you include
    a code snippet that can be copy-pasted into a Python interpreter to reproduce
    the issue. Make sure that your code snippet works, *i.e.* that there are no missing
    imports or missing links to images, ‚Ä¶ Your issue should contain an error message
    **and** a code snippet that can be copy-pasted without any changes to reproduce
    the exact same error message. If your issue is using local model weights or local
    data that cannot be accessed by the reader, the issue cannot be solved. If you
    cannot share your data or model, try to make a dummy model or dummy data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Minimalistic**: Try to help the reader as much as you can to understand the
    issue as quickly as possible by staying as concise as possible. Remove all code
    / all information that is irrelevant to the issue. If you have found a bug, try
    to create the easiest code example you can to demonstrate your issue, do not just
    dump your whole workflow into the issue as soon as you have found a bug. E.g.,
    if you train a model and get an error at some point during the training, you should
    first try to understand what part of the training code is responsible for the
    error and try to reproduce it with a couple of lines. Try to use dummy data instead
    of full datasets.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add links. If you are referring to a certain naming, method, or model make sure
    to provide a link so that the reader can better understand what you mean. If you
    are referring to a specific PR or issue, make sure to link it to your issue. Do
    not assume that the reader knows what you are talking about. The more links you
    add to your issue the better.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Formatting. Make sure to nicely format your issue by formatting code into Python
    code syntax, and error messages into normal code syntax. See the [official GitHub
    formatting docs](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)
    for more information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Think of your issue not as a ticket to be solved, but rather as a beautiful
    entry to a well-written encyclopedia. Every added issue is a contribution to publicly
    available knowledge. By adding a nicely written issue you not only make it easier
    for maintainers to solve your issue, but you are helping the whole community to
    better understand a certain aspect of the library.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to write a good PR
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Be a chameleon. Understand existing design patterns and syntax and make sure
    your code additions flow seamlessly into the existing code base. Pull requests
    that significantly diverge from existing design patterns or user interfaces will
    not be merged.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Be laser focused. A pull request should solve one problem and one problem only.
    Make sure to not fall into the trap of ‚Äúalso fixing another problem while we‚Äôre
    adding it‚Äù. It is much more difficult to review pull requests that solve multiple,
    unrelated problems at once.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If helpful, try to add a code snippet that displays an example of how your addition
    can be used.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The title of your pull request should be a summary of its contribution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If your pull request addresses an issue, please mention the issue number in
    the pull request description to make sure they are linked (and people consulting
    the issue know you are working on it);
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To indicate a work in progress please prefix the title with `[WIP]`. These are
    useful to avoid duplicated work, and to differentiate it from PRs ready to be
    merged;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try to formulate and format your text as explained in [How to write a good issue](#how-to-write-a-good-issue).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure existing tests pass;
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add high-coverage tests. No quality testing = no merge.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you are adding new `@slow` tests, make sure they pass using `RUN_SLOW=1 python
    -m pytest tests/test_my_new_model.py`. CircleCI does not run the slow tests, but
    GitHub Actions does every night!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All public methods must have informative docstrings that work nicely with markdown.
    See [`pipeline_latent_diffusion.py`](https://github.com/huggingface/diffusers/blob/main/src/diffusers/pipelines/latent_diffusion/pipeline_latent_diffusion.py)
    for an example.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Due to the rapidly growing repository, it is important to make sure that no
    files that would significantly weigh down the repository are added. This includes
    images, videos, and other non-text files. We prefer to leverage a hf.co hosted
    `dataset` like [`hf-internal-testing`](https://huggingface.co/hf-internal-testing)
    or [huggingface/documentation-images](https://huggingface.co/datasets/huggingface/documentation-images)
    to place these files. If an external contribution, feel free to add the images
    to your PR and ask a Hugging Face member to migrate your images to this dataset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to open a PR
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before writing code, we strongly advise you to search through the existing PRs
    or issues to make sure that nobody is already working on the same thing. If you
    are unsure, it is always a good idea to open an issue to get some feedback.
  prefs: []
  type: TYPE_NORMAL
- en: You will need basic `git` proficiency to be able to contribute to üß® Diffusers.
    `git` is not the easiest tool to use but it has the greatest manual. Type `git
    --help` in a shell and enjoy. If you prefer books, [Pro Git](https://git-scm.com/book/en/v2)
    is a very good reference.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to start contributing ([supported Python versions](https://github.com/huggingface/diffusers/blob/main/setup.py#L244)):'
  prefs: []
  type: TYPE_NORMAL
- en: Fork the [repository](https://github.com/huggingface/diffusers) by clicking
    on the ‚ÄòFork‚Äô button on the repository‚Äôs page. This creates a copy of the code
    under your GitHub user account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Clone your fork to your local disk, and add the base repository as a remote:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a new branch to hold your development changes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Do not** work on the `main` branch.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set up a development environment by running the following command in a virtual
    environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: If you have already cloned the repo, you might need to `git pull` to get the
    most recent changes in the library.
  prefs: []
  type: TYPE_NORMAL
- en: Develop the features on your branch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As you work on the features, you should make sure that the test suite passes.
    You should run the tests impacted by your changes like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Before you run the tests, please make sure you install the dependencies required
    for testing. You can do so with this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also run the full test suite with the following command, but it takes
    a beefy machine to produce a result in a decent amount of time now that Diffusers
    has grown a lot. Here is the command for it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'üß® Diffusers relies on `black` and `isort` to format its source code consistently.
    After you make changes, apply automatic style corrections and code verifications
    that can‚Äôt be automated in one go with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'üß® Diffusers also uses `ruff` and a few custom scripts to check for coding mistakes.
    Quality control runs in CI, however, you can also run the same checks with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Once you‚Äôre happy with your changes, add changed files using `git add` and
    make a commit with `git commit` to record your changes locally:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'It is a good idea to sync your copy of the code with the original repository
    regularly. This way you can quickly account for changes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Push the changes to your account using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Once you are satisfied, go to the webpage of your fork on GitHub. Click on ‚ÄòPull
    request‚Äô to send your changes to the project maintainers for review.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It‚Äôs OK if maintainers ask you for changes. It happens to core contributors
    too! So everyone can see the changes in the Pull request, work in your local branch
    and push the changes to your fork. They will automatically appear in the pull
    request.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tests
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An extensive test suite is included to test the library behavior and several
    examples. Library tests can be found in the [tests folder](https://github.com/huggingface/diffusers/tree/main/tests).
  prefs: []
  type: TYPE_NORMAL
- en: 'We like `pytest` and `pytest-xdist` because it‚Äôs faster. From the root of the
    repository, here‚Äôs how to run tests with `pytest` for the library:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: In fact, that‚Äôs how `make test` is implemented!
  prefs: []
  type: TYPE_NORMAL
- en: You can specify a smaller set of tests in order to test only the feature you‚Äôre
    working on.
  prefs: []
  type: TYPE_NORMAL
- en: By default, slow tests are skipped. Set the `RUN_SLOW` environment variable
    to `yes` to run them. This will download many gigabytes of models ‚Äî make sure
    you have enough disk space and a good Internet connection, or a lot of patience!
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '`unittest` is fully supported, here‚Äôs how to run tests with it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Syncing forked main with upstream (HuggingFace) main
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To avoid pinging the upstream repository which adds reference notes to each
    upstream PR and sends unnecessary notifications to the developers involved in
    these PRs, when syncing the main branch of a forked repository, please, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: When possible, avoid syncing with the upstream using a branch and PR on the
    forked repository. Instead, merge directly into the forked main.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If a PR is absolutely necessary, use the following steps after checking out
    your branch:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Style guide
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For documentation strings, üß® Diffusers follows the [Google style](https://google.github.io/styleguide/pyguide.html).
  prefs: []
  type: TYPE_NORMAL
