["```py\n>>> from transformers import JukeboxModel, JukeboxConfig\n\n>>> # Initializing a Jukebox configuration\n>>> configuration = JukeboxConfig()\n\n>>> # Initializing a model from the configuration\n>>> model = JukeboxModel(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```", "```py\n>>> from transformers import JukeboxTokenizer\n\n>>> tokenizer = JukeboxTokenizer.from_pretrained(\"openai/jukebox-1b-lyrics\")\n>>> tokenizer(\"Alan Jackson\", \"Country Rock\", \"old town road\")[\"input_ids\"]\n[tensor([[   0,    0,    0, 6785,  546,   41,   38,   30,   76,   46,   41,   49,\n           40,   76,   44,   41,   27,   30]]), tensor([[  0,   0,   0, 145,   0]]), tensor([[  0,   0,   0, 145,   0]])]\n```", "```py\n>>> from transformers import AutoTokenizer, JukeboxModel, set_seed\n\n>>> model = JukeboxModel.from_pretrained(\"openai/jukebox-1b-lyrics\", min_duration=0).eval()\n>>> tokenizer = AutoTokenizer.from_pretrained(\"openai/jukebox-1b-lyrics\")\n\n>>> lyrics = \"Hey, are you awake? Can you talk to me?\"\n>>> artist = \"Zac Brown Band\"\n>>> genre = \"Country\"\n>>> metas = tokenizer(artist=artist, genres=genre, lyrics=lyrics)\n>>> set_seed(0)\n>>> music_tokens = model.ancestral_sample(metas.input_ids, sample_length=400)\n\n>>> with torch.no_grad():\n...     model.decode(music_tokens)[:, :10].squeeze(-1)\ntensor([[-0.0219, -0.0679, -0.1050, -0.1203, -0.1271, -0.0936, -0.0396, -0.0405,\n    -0.0818, -0.0697]])\n```", "```py\n>>> from transformers import AutoTokenizer, JukeboxModel, set_seed\n>>> import torch\n\n>>> metas = dict(artist=\"Zac Brown Band\", genres=\"Country\", lyrics=\"I met a traveller from an antique land\")\n>>> tokenizer = AutoTokenizer.from_pretrained(\"openai/jukebox-1b-lyrics\")\n>>> model = JukeboxModel.from_pretrained(\"openai/jukebox-1b-lyrics\", min_duration=0).eval()\n\n>>> labels = tokenizer(**metas)[\"input_ids\"]\n>>> set_seed(0)\n>>> zs = [torch.zeros(1, 0, dtype=torch.long) for _ in range(3)]\n>>> zs = model._sample(zs, labels, [0], sample_length=40 * model.priors[0].raw_to_tokens, save_results=False)\n>>> zs[0]\ntensor([[1853, 1369, 1150, 1869, 1379, 1789,  519,  710, 1306, 1100, 1229,  519,\n      353, 1306, 1379, 1053,  519,  653, 1631, 1467, 1229, 1229,   10, 1647,\n     1254, 1229, 1306, 1528, 1789,  216, 1631, 1434,  653,  475, 1150, 1528,\n     1804,  541, 1804, 1434]])\n```", "```py\n>>> from transformers import JukeboxVQVAE, set_seed\n>>> import torch\n\n>>> model = JukeboxVQVAE.from_pretrained(\"openai/jukebox-1b-lyrics\").eval()\n>>> set_seed(0)\n>>> zs = [torch.randint(100, (4, 1))]\n>>> model.decode(zs).shape\ntorch.Size([4, 8, 1])\n```"]