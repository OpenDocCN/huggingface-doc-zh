- en: Godot RL Agents
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Godot RL Agents
- en: 'Original text: [https://huggingface.co/learn/deep-rl-course/unitbonus3/godotrl](https://huggingface.co/learn/deep-rl-course/unitbonus3/godotrl)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://huggingface.co/learn/deep-rl-course/unitbonus3/godotrl](https://huggingface.co/learn/deep-rl-course/unitbonus3/godotrl)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '[Godot RL Agents](https://github.com/edbeeching/godot_rl_agents) is an Open
    Source package that allows video game creators, AI researchers, and hobbyists
    the opportunity **to learn complex behaviors for their Non Player Characters or
    agents**.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[Godot RL Agents](https://github.com/edbeeching/godot_rl_agents)是一个开源软件包，允许视频游戏创作者、AI研究人员和爱好者有机会**为他们的非玩家角色或代理学习复杂的行为**。'
- en: 'The library provides:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该库提供：
- en: An interface between games created in the [Godot Engine](https://godotengine.org/) and
    Machine Learning algorithms running in Python
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[Godot Engine](https://godotengine.org/)创建的游戏和在Python中运行的机器学习算法之间的接口
- en: 'Wrappers for four well known rl frameworks: [StableBaselines3](https://stable-baselines3.readthedocs.io/en/master/),
    [CleanRL](https://docs.cleanrl.dev/), [Sample Factory](https://www.samplefactory.dev/)
    and [Ray RLLib](https://docs.ray.io/en/latest/rllib-algorithms.html)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四个知名强化学习框架的包装器：[StableBaselines3](https://stable-baselines3.readthedocs.io/en/master/)、[CleanRL](https://docs.cleanrl.dev/)、[Sample
    Factory](https://www.samplefactory.dev/)和[Ray RLLib](https://docs.ray.io/en/latest/rllib-algorithms.html)
- en: Support for memory-based agents with LSTM or attention based interfaces
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持基于记忆的代理，具有LSTM或基于注意力的接口
- en: Support for *2D and 3D games*
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持*2D和3D游戏*
- en: A suite of *AI sensors* to augment your agent’s capacity to observe the game
    world
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一套*AI传感器*，增强您的代理观察游戏世界的能力
- en: Godot and Godot RL Agents are **completely free and open source under a very
    permissive MIT license**. No strings attached, no royalties, nothing.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Godot和Godot RL Agents都是**完全免费且在非常宽松的MIT许可下开源**。没有任何附加条件，没有版税，没有任何限制。
- en: You can find out more about Godot RL agents on their [GitHub page](https://github.com/edbeeching/godot_rl_agents)
    or their AAAI-2022 Workshop [paper](https://arxiv.org/abs/2112.03636). The library’s
    creator, [Ed Beeching](https://edbeeching.github.io/), is a Research Scientist
    here at Hugging Face.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在他们的[GitHub页面](https://github.com/edbeeching/godot_rl_agents)或他们的AAAI-2022研讨会[论文](https://arxiv.org/abs/2112.03636)中了解更多关于Godot
    RL代理的信息。该库的创建者[Ed Beeching](https://edbeeching.github.io/)是Hugging Face的研究科学家。
- en: 'Installation of the library is simple: `pip install godot-rl`'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 安装库很简单：`pip install godot-rl`
- en: Create a custom RL environment with Godot RL Agents
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Godot RL Agents创建自定义RL环境
- en: In this section, you will **learn how to create a custom environment in the
    Godot Game Engine** and then implement an AI controller that learns to play with
    Deep Reinforcement Learning.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将**学习如何在Godot游戏引擎中创建自定义环境**，然后实现一个学习使用深度强化学习玩游戏的AI控制器。
- en: The example game we create today is simple, **but shows off many of the features
    of the Godot Engine and the Godot RL Agents library**. You can then dive into
    the examples for more complex environments and behaviors.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们今天创建的示例游戏很简单，**但展示了Godot Engine和Godot RL Agents库的许多功能**。然后，您可以深入研究更复杂的环境和行为示例。
- en: The environment we will be building today is called Ring Pong, the game of pong
    but the pitch is a ring and the paddle moves around the ring. The **objective
    is to keep the ball bouncing inside the ring**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们今天将构建的环境称为Ring Pong，这是乒乓球游戏，但球场是一个环，球拍在环内移动。**目标是让球在环内弹跳**。
- en: '![Ring Pong](../Images/a4881f2cd962031d5828c7bf00344a3c.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Ring Pong](../Images/a4881f2cd962031d5828c7bf00344a3c.png)'
- en: Installing the Godot Game Engine
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Godot游戏引擎
- en: The [Godot game engine](https://godotengine.org/) is an open source tool for
    the **creation of video games, tools and user interfaces**.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[Godot游戏引擎](https://godotengine.org/)是一个用于**创建视频游戏、工具和用户界面**的开源工具。'
- en: Godot Engine is a feature-packed, cross-platform game engine designed to create
    2D and 3D games from a unified interface. It provides a comprehensive set of common
    tools, so users **can focus on making games without having to reinvent the wheel**.
    Games can be exported in one click to a number of platforms, including the major
    desktop platforms (Linux, macOS, Windows) as well as mobile (Android, iOS) and
    web-based (HTML5) platforms.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Godot Engine是一个功能丰富的跨平台游戏引擎，旨在通过统一界面创建2D和3D游戏。它提供了一套常用工具，因此用户**可以专注于制作游戏，而无需重新发明轮子**。游戏可以一键导出到多个平台，包括主要的桌面平台（Linux、macOS、Windows）以及移动（Android、iOS）和基于Web的（HTML5）平台。
- en: While we will guide you through the steps to implement your agent, you may wish
    to learn more about the Godot Game Engine. Their [documentation](https://docs.godotengine.org/en/latest/index.html)
    is thorough, and there are many tutorials on YouTube we would also recommend [GDQuest](https://www.gdquest.com/),
    [KidsCanCode](https://kidscancode.org/godot_recipes/4.x/) and [Bramwell](https://www.youtube.com/channel/UCczi7Aq_dTKrQPF5ZV5J3gg)
    as sources of information.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们将指导您实施代理的步骤，但您可能希望了解更多关于Godot游戏引擎的信息。他们的[文档](https://docs.godotengine.org/en/latest/index.html)非常详尽，YouTube上也有许多教程，我们还推荐[GDQuest](https://www.gdquest.com/)、[KidsCanCode](https://kidscancode.org/godot_recipes/4.x/)和[Bramwell](https://www.youtube.com/channel/UCczi7Aq_dTKrQPF5ZV5J3gg)作为信息来源。
- en: In order to create games in Godot, **you must first download the editor**. Godot
    RL Agents supports the latest version of Godot, Godot 4.0.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在Godot中创建游戏，**你必须首先下载编辑器**。Godot RL Agents支持最新版本的Godot，即Godot 4.0。
- en: 'Which can be downloaded at the following links:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 可在以下链接下载：
- en: '[Windows](https://downloads.tuxfamily.org/godotengine/4.0.1/Godot_v4.0.1-stable_win64.exe.zip)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Windows](https://downloads.tuxfamily.org/godotengine/4.0.1/Godot_v4.0.1-stable_win64.exe.zip)'
- en: '[Mac](https://downloads.tuxfamily.org/godotengine/4.0.1/Godot_v4.0.1-stable_macos.universal.zip)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Mac](https://downloads.tuxfamily.org/godotengine/4.0.1/Godot_v4.0.1-stable_macos.universal.zip)'
- en: '[Linux](https://downloads.tuxfamily.org/godotengine/4.0.1/Godot_v4.0.1-stable_linux.x86_64.zip)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Linux](https://downloads.tuxfamily.org/godotengine/4.0.1/Godot_v4.0.1-stable_linux.x86_64.zip)'
- en: Loading the starter project
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载起始项目
- en: 'We provide two versions of the codebase:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提供两个版本的代码库：
- en: '[A starter project, to download and follow along for this tutorial](https://drive.google.com/file/d/1C7xd3TibJHlxFEJPBgBLpksgxrFZ3D8e/view?usp=share_link)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A final version of the project, for comparison and debugging.](https://drive.google.com/file/d/1k-b2Bu7uIA6poApbouX4c3sq98xqogpZ/view?usp=share_link)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To load the project, in the Godot Project Manager click **Import**, navigate
    to where the files are located and load the **project.godot** file.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: If you press F5 or play in the editor, you should be able to play the game in
    human mode. There are several instances of the game running, this is because we
    want to speed up training our AI agent with many parallel environments.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Godot RL Agents plugin
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Godot RL Agents plugin can be installed from the Github repo or with the
    Godot Asset Lib in the editor.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: First click on the AssetLib and search for “rl”
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '![Godot](../Images/d91cd6fd93e5d0a18afe0b076e727b0e.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: Then click on Godot RL Agents, click Download and unselect the LICENSE and README
    .md files. Then click install.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Godot](../Images/26d4383db35914c111438c9d622a0477.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: 'The Godot RL Agents plugin is now downloaded to your machine. Now click on
    Project → Project settings and enable the addon:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '![Godot](../Images/e03584370aca5150857b56f123707645.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: Adding the AI controller
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We now want to add an AI controller to our game. Open the player.tscn scene,
    on the left you should see a hierarchy of nodes that looks like this:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '![Godot](../Images/b80e88fb3e9787bebe7132a2d76b405b.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: Right click the **Player** node and click **Add Child Node.** There are many
    nodes listed here, search for AIController3D and create it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![Godot](../Images/1055ec5b346e15d208fbe0f03ab4751f.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: The AI Controller Node should have been added to the scene tree, next to it
    is a scroll. Click on it to open the script that is attached to the AIController.
    The Godot game engine uses a scripting language called GDScript, which is syntactically
    similar to python. The script contains methods that need to be implemented in
    order to get our AI controller working.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In order to implement these methods, we will need to create a class that inherits
    from AIController3D. This is easy to do in Godot, and is called “extending” a
    class.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: 'Right click the AIController3D Node and click “Extend Script” and call the
    new script `controller.gd`. You should now have an almost empty script file that
    looks like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We will now implement the 4 missing methods, delete this code, and replace
    it with the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We have now defined the agent’s observation, which is the position and velocity
    of the ball in its local coordinate space. We have also defined the action space
    of the agent, which is a single continuous value ranging from -1 to +1.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is to update the Player’s script to use the actions from the
    AIController, edit the Player’s script by clicking on the scroll next to the player
    node, update the code in `Player.gd` to the following:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We now need to synchronize between the game running in Godot and the neural
    network being trained in Python. Godot RL agents provides a node that does just
    that. Open the train.tscn scene, right click on the root node, and click “Add
    child node”. Then, search for “sync” and add a Godot RL Agents Sync node. This
    node handles the communication between Python and Godot over TCP.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: You can run training live in the editor, by first launching the python training
    with `gdrl`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: 'In this simple example, a reasonable policy is learned in several minutes.
    You may wish to speed up training, click on the Sync node in the train scene,
    and you will see there is a “Speed Up” property exposed in the editor:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '![Godot](../Images/a61acc5ada930f05e34ac3d7492e9adf.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
- en: Try setting this property up to 8 to speed up training. This can be a great
    benefit on more complex environments, like the multi-player FPS we will learn
    about in the next chapter.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: There’s more!
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We have only scratched the surface of what can be achieved with Godot RL Agents,
    the library includes custom sensors and cameras to enrich the information available
    to the agent. Take a look at the [examples](https://github.com/edbeeching/godot_rl_agents_examples)
    to find out more!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只是触及了Godot RL Agents可以实现的一小部分，该库包括自定义传感器和摄像头，以丰富可供代理使用的信息。查看[示例](https://github.com/edbeeching/godot_rl_agents_examples)以了解更多！
- en: For the ability to export the trained model to .onnx so that you can run inference
    directly from Godot without the Python server, and other useful training options,
    take a look at the [advanced SB3 tutorial](https://github.com/edbeeching/godot_rl_agents/blob/main/docs/ADV_STABLE_BASELINES_3.md).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于将训练好的模型导出为 .onnx 格式，这样您就可以直接从Godot中运行推理，而无需使用Python服务器，以及其他有用的训练选项，请查看[高级SB3教程](https://github.com/edbeeching/godot_rl_agents/blob/main/docs/ADV_STABLE_BASELINES_3.md)。
- en: Author
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 作者
- en: This section was written by [Edward Beeching](https://twitter.com/edwardbeeching)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 本节由[Edward Beeching](https://twitter.com/edwardbeeching)撰写
