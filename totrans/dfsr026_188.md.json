["```py\npipe.scheduler = DDIMScheduler.from_config(pipe.scheduler.config, rescale_betas_zero_snr=True)\n```", "```py\n--prediction_type=\"v_prediction\"\n```", "```py\npipe.scheduler = DDIMScheduler.from_config(pipe.scheduler.config, timestep_spacing=\"trailing\")\n```", "```py\nimage = pipe(prompt, guidance_rescale=0.7).images[0]\n```", "```py\nfrom diffusers import DiffusionPipeline, DDIMScheduler\nimport torch\n\npipe = DiffusionPipeline.from_pretrained(\"ptx0/pseudo-journey-v2\", torch_dtype=torch.float16)\npipe.scheduler = DDIMScheduler.from_config(\n    pipe.scheduler.config, rescale_betas_zero_snr=True, timestep_spacing=\"trailing\"\n)\npipe.to(\"cuda\")\n\nprompt = \"A lion in galaxies, spirals, nebulae, stars, smoke, iridescent, intricate detail, octane render, 8k\"\nimage = pipe(prompt, guidance_rescale=0.7).images[0]\nimage\n```", "```py\n( num_train_timesteps: int = 1000 beta_start: float = 0.0001 beta_end: float = 0.02 beta_schedule: str = 'linear' trained_betas: Union = None clip_sample: bool = True set_alpha_to_one: bool = True steps_offset: int = 0 prediction_type: str = 'epsilon' thresholding: bool = False dynamic_thresholding_ratio: float = 0.995 clip_sample_range: float = 1.0 sample_max_value: float = 1.0 timestep_spacing: str = 'leading' rescale_betas_zero_snr: bool = False )\n```", "```py\n( sample: FloatTensor timestep: Optional = None ) \u2192 export const metadata = 'undefined';torch.FloatTensor\n```", "```py\n( num_inference_steps: int device: Union = None )\n```", "```py\n( model_output: FloatTensor timestep: int sample: FloatTensor eta: float = 0.0 use_clipped_model_output: bool = False generator = None variance_noise: Optional = None return_dict: bool = True ) \u2192 export const metadata = 'undefined';~schedulers.scheduling_utils.DDIMSchedulerOutput or tuple\n```", "```py\n( prev_sample: FloatTensor pred_original_sample: Optional = None )\n```"]