["```py\nfrom transformers import XmodModel\n\nmodel = XmodModel.from_pretrained(\"facebook/xmod-base\")\nmodel.set_default_language(\"en_XX\")\n```", "```py\nimport torch\n\ninput_ids = torch.tensor(\n    [\n        [0, 581, 10269, 83, 99942, 136, 60742, 23, 70, 80583, 18276, 2],\n        [0, 1310, 49083, 443, 269, 71, 5486, 165, 60429, 660, 23, 2],\n    ]\n)\nlang_ids = torch.LongTensor(\n    [\n        0,  # en_XX\n        8,  # de_DE\n    ]\n)\noutput = model(input_ids, lang_ids=lang_ids)\n```", "```py\nmodel.freeze_embeddings_and_language_adapters()\n# Fine-tune the model ...\n```", "```py\nmodel.set_default_language(\"de_DE\")\n# Evaluate the model on German examples ...\n```", "```py\n>>> from transformers import XmodConfig, XmodModel\n\n>>> # Initializing an X-MOD facebook/xmod-base style configuration\n>>> configuration = XmodConfig()\n\n>>> # Initializing a model (with random weights) from the facebook/xmod-base style configuration\n>>> model = XmodModel(configuration)\n\n>>> # Accessing the model configuration\n>>> configuration = model.config\n```"]