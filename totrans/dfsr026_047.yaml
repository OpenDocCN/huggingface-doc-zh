- en: Community pipelines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社区管道
- en: 'Original text: [https://huggingface.co/docs/diffusers/using-diffusers/custom_pipeline_examples](https://huggingface.co/docs/diffusers/using-diffusers/custom_pipeline_examples)'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://huggingface.co/docs/diffusers/using-diffusers/custom_pipeline_examples](https://huggingface.co/docs/diffusers/using-diffusers/custom_pipeline_examples)
- en: null
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: For more context about the design choices behind community pipelines, please
    have a look at [this issue](https://github.com/huggingface/diffusers/issues/841).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有关社区管道背后设计选择的更多背景信息，请查看[此问题](https://github.com/huggingface/diffusers/issues/841)。
- en: Community pipelines allow you to get creative and build your own unique pipelines
    to share with the community. You can find all community pipelines in the [diffusers/examples/community](https://github.com/huggingface/diffusers/tree/main/examples/community)
    folder along with inference and training examples for how to use them. This guide
    showcases some of the community pipelines and hopefully it’ll inspire you to create
    your own (feel free to open a PR with your own pipeline and we will merge it!).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 社区管道允许您发挥创造力，构建自己独特的管道与社区分享。您可以在[diffusers/examples/community](https://github.com/huggingface/diffusers/tree/main/examples/community)文件夹中找到所有社区管道，以及如何使用它们的推理和训练示例。本指南展示了一些社区管道，希望能激发您创建自己的管道（欢迎打开一个
    PR 提交您自己的管道，我们将合并它！）。
- en: 'To load a community pipeline, use the `custom_pipeline` argument in [DiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline)
    to specify one of the files in [diffusers/examples/community](https://github.com/huggingface/diffusers/tree/main/examples/community):'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要加载一个社区管道，请在[DiffusionPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline)中使用`custom_pipeline`参数，以指定[diffusers/examples/community](https://github.com/huggingface/diffusers/tree/main/examples/community)中的一个文件：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If a community pipeline doesn’t work as expected, please open a GitHub issue
    and mention the author.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果社区管道未按预期工作，请打开一个 GitHub 问题并提及作者。
- en: You can learn more about community pipelines in the how to [load community pipelines](custom_pipeline_overview)
    and how to [contribute a community pipeline](contribute_pipeline) guides.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在如何[加载社区管道](custom_pipeline_overview)和如何[贡献社区管道](contribute_pipeline)指南中了解更多关于社区管道的信息。
- en: Multilingual Stable Diffusion
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多语言稳定扩散
- en: The multilingual Stable Diffusion pipeline uses a pretrained [XLM-RoBERTa](https://huggingface.co/papluca/xlm-roberta-base-language-detection)
    to identify a language and the [mBART-large-50](https://huggingface.co/facebook/mbart-large-50-many-to-one-mmt)
    model to handle the translation. This allows you to generate images from text
    in 20 languages.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 多语言稳定扩散管道使用预训练的[XLM-RoBERTa](https://huggingface.co/papluca/xlm-roberta-base-language-detection)来识别语言，以及[mBART-large-50](https://huggingface.co/facebook/mbart-large-50-many-to-one-mmt)模型来处理翻译。这使您可以从
    20 种语言的文本生成图像。
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/6546d96ce519ebcfc0f56d58a4a0b0a2.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6546d96ce519ebcfc0f56d58a4a0b0a2.png)'
- en: MagicMix
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MagicMix
- en: '[MagicMix](https://huggingface.co/papers/2210.16056) is a pipeline that can
    mix an image and text prompt to generate a new image that preserves the image
    structure. The `mix_factor` determines how much influence the prompt has on the
    layout generation, `kmin` controls the number of steps during the content generation
    process, and `kmax` determines how much information is kept in the layout of the
    original image.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[MagicMix](https://huggingface.co/papers/2210.16056)是一个可以混合图像和文本提示以生成保留图像结构的新图像的管道。`mix_factor`确定提示对布局生成的影响程度，`kmin`控制内容生成过程中的步数，`kmax`确定原始图像布局中保留了多少信息。'
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/8b85bc989252bcc67efbf0e36fa368e5.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8b85bc989252bcc67efbf0e36fa368e5.png)'
- en: original image
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 原始图像
- en: '![](../Images/af5d75b61259af4544b56eef7f51211f.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af5d75b61259af4544b56eef7f51211f.png)'
- en: image and text prompt mix
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图像和文本提示混合
