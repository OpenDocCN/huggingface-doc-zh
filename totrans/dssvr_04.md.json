["```py\nimport requests\nAPI_URL = \"https://datasets-server.huggingface.co/parquet?dataset=codeparrot/codecomplex\"\ndef query():\n    response = requests.get(API_URL)\n    return response.json()\ndata = query()\nprint(data)\n{'parquet_files': \n    [\n        {'dataset': 'codeparrot/codecomplex', 'config': 'default', 'split': 'train', 'url': 'https://huggingface.co/datasets/codeparrot/codecomplex/resolve/refs%2Fconvert%2Fparquet/default/train/0000.parquet', 'filename': '0000.parquet', 'size': 4115908}\n    ], \n 'pending': [], 'failed': [], 'partial: false\n}\n```", "```py\nimport pandas as pd\n\nurl = \"https://huggingface.co/datasets/codeparrot/codecomplex/resolve/refs%2Fconvert%2Fparquet/default/train/0000.parquet\"\ndf = pd.read_parquet(url)\ndf.head(5)\n```", "```py\ndf.groupby('complexity')['src'].apply(lambda x: x.str.len().mean()).sort_values(ascending=False).plot.barh(color=\"orange\")\n```"]