["```py\n( vae: AutoencoderKL image_encoder: PaintByExampleImageEncoder unet: UNet2DConditionModel scheduler: Union safety_checker: StableDiffusionSafetyChecker feature_extractor: CLIPImageProcessor requires_safety_checker: bool = False )\n```", "```py\n( example_image: Union image: Union mask_image: Union height: Optional = None width: Optional = None num_inference_steps: int = 50 guidance_scale: float = 5.0 negative_prompt: Union = None num_images_per_prompt: Optional = 1 eta: float = 0.0 generator: Union = None latents: Optional = None output_type: Optional = 'pil' return_dict: bool = True callback: Optional = None callback_steps: int = 1 ) \u2192 export const metadata = 'undefined';StableDiffusionPipelineOutput or tuple\n```", "```py\n>>> import PIL\n>>> import requests\n>>> import torch\n>>> from io import BytesIO\n>>> from diffusers import PaintByExamplePipeline\n\n>>> def download_image(url):\n...     response = requests.get(url)\n...     return PIL.Image.open(BytesIO(response.content)).convert(\"RGB\")\n\n>>> img_url = (\n...     \"https://raw.githubusercontent.com/Fantasy-Studio/Paint-by-Example/main/examples/image/example_1.png\"\n... )\n>>> mask_url = (\n...     \"https://raw.githubusercontent.com/Fantasy-Studio/Paint-by-Example/main/examples/mask/example_1.png\"\n... )\n>>> example_url = \"https://raw.githubusercontent.com/Fantasy-Studio/Paint-by-Example/main/examples/reference/example_1.jpg\"\n\n>>> init_image = download_image(img_url).resize((512, 512))\n>>> mask_image = download_image(mask_url).resize((512, 512))\n>>> example_image = download_image(example_url).resize((512, 512))\n\n>>> pipe = PaintByExamplePipeline.from_pretrained(\n...     \"Fantasy-Studio/Paint-by-Example\",\n...     torch_dtype=torch.float16,\n... )\n>>> pipe = pipe.to(\"cuda\")\n\n>>> image = pipe(image=init_image, mask_image=mask_image, example_image=example_image).images[0]\n>>> image\n```", "```py\n( images: Union nsfw_content_detected: Optional )\n```"]