["```py\n( *args **kwargs )\n```", "```py\nimport gradio as gr\nfrom huggingface_hub import WebhooksServer, WebhookPayload\n\nwith gr.Blocks() as ui:\n    ...\n\napp = WebhooksServer(ui=ui, webhook_secret=\"my_secret_key\")\n\n@app.add_webhook(\"/say_hello\")\nasync def hello(payload: WebhookPayload):\n    return {\"message\": \"hello\"}\n\napp.run()\n```", "```py\n( path: Optional = None )\n```", "```py\nfrom huggingface_hub import webhook_endpoint, WebhookPayload\n\n@webhook_endpoint\nasync def trigger_training(payload: WebhookPayload):\n    if payload.repo.type == \"dataset\" and payload.event.action == \"update\":\n        # Trigger a training job if a dataset is updated\n        ...\n\n# Server is automatically started at the end of the script.\n```", "```py\nfrom huggingface_hub import webhook_endpoint, WebhookPayload\n\n@webhook_endpoint\nasync def trigger_training(payload: WebhookPayload):\n    if payload.repo.type == \"dataset\" and payload.event.action == \"update\":\n        # Trigger a training job if a dataset is updated\n        ...\n\n# Start the server manually\ntrigger_training.run()\n```", "```py\n( event: WebhookPayloadEvent repo: WebhookPayloadRepo discussion: Optional = None comment: Optional = None webhook: WebhookPayloadWebhook movedTo: Optional = None )\n```", "```py\n( event: WebhookPayloadEvent repo: WebhookPayloadRepo discussion: Optional = None comment: Optional = None webhook: WebhookPayloadWebhook movedTo: Optional = None )\n```", "```py\n( id: str author: ObjectId hidden: bool content: Optional = None url: WebhookPayloadUrl )\n```", "```py\n( id: str num: int author: ObjectId url: WebhookPayloadUrl title: str isPullRequest: bool status: Literal changes: Optional = None pinned: Optional = None )\n```", "```py\n( base: str mergeCommitId: Optional = None )\n```", "```py\n( action: Literal scope: str )\n```", "```py\n( name: str owner: ObjectId )\n```", "```py\n( id: str owner: ObjectId head_sha: Optional = None name: str private: bool subdomain: Optional = None tags: Optional = None type: Literal url: WebhookPayloadUrl )\n```", "```py\n( web: str api: Optional = None )\n```", "```py\n( id: str version: Literal )\n```"]