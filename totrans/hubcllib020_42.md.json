["```py\nimport gradio as gr\nfrom huggingface_hub import WebhooksServer, WebhookPayload\n\nwith gr.Blocks() as ui:\n    ...\n\napp = WebhooksServer(ui=ui, webhook_secret=\"my_secret_key\")\n\n@app.add_webhook(\"/say_hello\")\nasync def hello(payload: WebhookPayload):\n    return {\"message\": \"hello\"}\n\napp.run()\n```", "```py\nfrom huggingface_hub import webhook_endpoint, WebhookPayload\n\n@webhook_endpoint\nasync def trigger_training(payload: WebhookPayload):\n    if payload.repo.type == \"dataset\" and payload.event.action == \"update\":\n        # Trigger a training job if a dataset is updated\n        ...\n\n# Server is automatically started at the end of the script.\n```", "```py\nfrom huggingface_hub import webhook_endpoint, WebhookPayload\n\n@webhook_endpoint\nasync def trigger_training(payload: WebhookPayload):\n    if payload.repo.type == \"dataset\" and payload.event.action == \"update\":\n        # Trigger a training job if a dataset is updated\n        ...\n\n# Start the server manually\ntrigger_training.run()\n```"]