- en: AutoPipeline
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://huggingface.co/docs/diffusers/api/pipelines/auto_pipeline](https://huggingface.co/docs/diffusers/api/pipelines/auto_pipeline)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/diffusers/v0.26.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/start.99629b4a.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/scheduler.182ea377.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/singletons.fade7992.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.1f6d62f6.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/paths.108a236d.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/entry/app.2b3eaeb0.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/index.abf12888.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/0.3862a335.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/nodes/37.e7e82fa6.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Tip.230e2334.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Docstring.93f6f462.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/globals.7f7f1b26.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/Heading.16916d63.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/CodeBlock.57fe6e13.js">
    <link rel="modulepreload" href="/docs/diffusers/v0.26.3/en/_app/immutable/chunks/ExampleCodeBlock.658f5cd6.js">
  prefs: []
  type: TYPE_NORMAL
- en: '`AutoPipeline` is designed to:'
  prefs: []
  type: TYPE_NORMAL
- en: make it easy for you to load a checkpoint for a task without knowing the specific
    pipeline class to use
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: use multiple pipelines in your workflow
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Based on the task, the `AutoPipeline` class automatically retrieves the relevant
    pipeline given the name or path to the pretrained weights with the `from_pretrained()`
    method.
  prefs: []
  type: TYPE_NORMAL
- en: To seamlessly switch between tasks with the same checkpoint without reallocating
    additional memory, use the `from_pipe()` method to transfer the components from
    the original pipeline to the new one.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Check out the [AutoPipeline](../../tutorials/autopipeline) tutorial to learn
    how to use this API!
  prefs: []
  type: TYPE_NORMAL
- en: '`AutoPipeline` supports text-to-image, image-to-image, and inpainting for the
    following diffusion models:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Stable Diffusion](./stable_diffusion/overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ControlNet](./controlnet)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Stable Diffusion XL (SDXL)](./stable_diffusion/stable_diffusion_xl)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DeepFloyd IF](./deepfloyd_if)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Kandinsky 2.1](./kandinsky)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Kandinsky 2.2](./kandinsky_v22)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AutoPipelineForText2Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.AutoPipelineForText2Image`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L175)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[AutoPipelineForText2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image)
    is a generic pipeline class that instantiates a text-to-image pipeline class.
    The specific underlying pipeline class is automatically selected from either the
    [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image.from_pretrained)
    or [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForText2Image.from_pipe)
    methods.'
  prefs: []
  type: TYPE_NORMAL
- en: This class cannot be instantiated using `__init__()` (throws an error).
  prefs: []
  type: TYPE_NORMAL
- en: 'Class attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '`config_name` (`str`) ‚Äî The configuration filename that stores the class and
    module names of all the diffusion pipeline‚Äôs components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `from_pretrained`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L200)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) ‚Äî Can
    be either:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A string, the *repo id* (for example `CompVis/ldm-text2im-large-256`) of a pretrained
    pipeline hosted on the Hub.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A path to a *directory* (for example `./my_pipeline_directory/`) containing
    pipeline weights saved using [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`torch_dtype` (`str` or `torch.dtype`, *optional*) ‚Äî Override the default `torch.dtype`
    and load the model with another dtype. If ‚Äúauto‚Äù is passed, the dtype is automatically
    derived from the model‚Äôs weights.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`force_download` (`bool`, *optional*, defaults to `False`) ‚Äî Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) ‚Äî Path to a directory where
    a downloaded pretrained model configuration is cached if the standard cache is
    not used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) ‚Äî Whether or not
    to resume downloading the model weights and configuration files. If set to `False`,
    any incompletely downloaded files are deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`proxies` (`Dict[str, str]`, *optional*) ‚Äî A dictionary of proxy servers to
    use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`output_loading_info(bool,` *optional*, defaults to `False`) ‚Äî Whether or not
    to also return a dictionary containing missing keys, unexpected keys and error
    messages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) ‚Äî Whether to only
    load local model weights and configuration files or not. If set to `True`, the
    model won‚Äôt be downloaded from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str` or *bool*, *optional*) ‚Äî The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*, defaults to `"main"`) ‚Äî The specific model version
    to use. It can be a branch name, a tag name, a commit id, or any identifier allowed
    by Git.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`custom_revision` (`str`, *optional*, defaults to `"main"`) ‚Äî The specific
    model version to use. It can be a branch name, a tag name, or a commit id similar
    to `revision` when loading a custom pipeline from the Hub. It can be a ü§ó Diffusers
    version when loading a custom pipeline from GitHub, otherwise it defaults to `"main"`
    when loading from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mirror` (`str`, *optional*) ‚Äî Mirror source to resolve accessibility issues
    if you‚Äôre downloading a model in China. We do not guarantee the timeliness or
    safety of the source, and you should refer to the mirror site for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`device_map` (`str` or `Dict[str, Union[int, str, torch.device]]`, *optional*)
    ‚Äî A map that specifies where each submodule should go. It doesn‚Äôt need to be defined
    for each parameter/buffer name; once a given module name is inside, every submodule
    of it will be sent to the same device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set `device_map="auto"` to have ü§ó Accelerate automatically compute the most
    optimized `device_map`. For more information about each option see [designing
    a device map](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`max_memory` (`Dict`, *optional*) ‚Äî A dictionary device identifier for the
    maximum memory. Will default to the maximum memory available for each GPU and
    the available CPU RAM if unset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offload_folder` (`str` or `os.PathLike`, *optional*) ‚Äî The path to offload
    weights if device_map contains the value `"disk"`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offload_state_dict` (`bool`, *optional*) ‚Äî If `True`, temporarily offloads
    the CPU state dict to the hard drive to avoid running out of CPU RAM if the weight
    of the CPU state dict + the biggest shard of the checkpoint does not fit. Defaults
    to `True` when there is some disk offload.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`low_cpu_mem_usage` (`bool`, *optional*, defaults to `True` if torch version
    >= 1.9.0 else `False`) ‚Äî Speed up model loading only loading the pretrained weights
    and not initializing the weights. This also tries to not use more than 1x model
    size in CPU memory (including peak memory) while loading the model. Only supported
    for PyTorch >= 1.9.0\. If you are using an older version of PyTorch, setting this
    argument to `True` will raise an error.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use_safetensors` (`bool`, *optional*, defaults to `None`) ‚Äî If set to `None`,
    the safetensors weights are downloaded if they‚Äôre available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kwargs` (remaining dictionary of keyword arguments, *optional*) ‚Äî Can be used
    to overwrite load and saveable variables (the pipeline components of the specific
    pipeline class). The overwritten components are passed directly to the pipelines
    `__init__` method. See example below for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`variant` (`str`, *optional*) ‚Äî Load weights from a specified variant filename
    such as `"fp16"` or `"ema"`. This is ignored when loading `from_flax`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiates a text-to-image Pytorch diffusion pipeline from pretrained pipeline
    weight.
  prefs: []
  type: TYPE_NORMAL
- en: 'The from_pretrained() method takes care of returning the correct pipeline class
    instance by:'
  prefs: []
  type: TYPE_NORMAL
- en: Detect the pipeline class of the pretrained_model_or_path based on the _class_name
    property of its config object
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the text-to-image pipeline linked to the pipeline class using pattern matching
    on pipeline class name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If a `controlnet` argument is passed, it will instantiate a [StableDiffusionControlNetPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetPipeline)
    object.
  prefs: []
  type: TYPE_NORMAL
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you get the error message below, you need to finetune the weights for your
    downstream task:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: To use private or [gated](https://huggingface.co/docs/hub/models-gated#gated-models)
    models, log-in with `huggingface-cli login`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '#### `from_pipe`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L346)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`pipeline` (`DiffusionPipeline`) ‚Äî an instantiated `DiffusionPipeline` object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiates a text-to-image Pytorch diffusion pipeline from another instantiated
    diffusion pipeline class.
  prefs: []
  type: TYPE_NORMAL
- en: The from_pipe() method takes care of returning the correct pipeline class instance
    by finding the text-to-image pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  prefs: []
  type: TYPE_NORMAL
- en: All the modules the pipeline contains will be used to initialize the new pipeline
    without reallocating additional memoery.
  prefs: []
  type: TYPE_NORMAL
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: AutoPipelineForImage2Image
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.AutoPipelineForImage2Image`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L447)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[AutoPipelineForImage2Image](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image)
    is a generic pipeline class that instantiates an image-to-image pipeline class.
    The specific underlying pipeline class is automatically selected from either the
    [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pretrained)
    or [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForImage2Image.from_pipe)
    methods.'
  prefs: []
  type: TYPE_NORMAL
- en: This class cannot be instantiated using `__init__()` (throws an error).
  prefs: []
  type: TYPE_NORMAL
- en: 'Class attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '`config_name` (`str`) ‚Äî The configuration filename that stores the class and
    module names of all the diffusion pipeline‚Äôs components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `from_pretrained`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L472)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) ‚Äî Can
    be either:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A string, the *repo id* (for example `CompVis/ldm-text2im-large-256`) of a pretrained
    pipeline hosted on the Hub.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A path to a *directory* (for example `./my_pipeline_directory/`) containing
    pipeline weights saved using [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`torch_dtype` (`str` or `torch.dtype`, *optional*) ‚Äî Override the default `torch.dtype`
    and load the model with another dtype. If ‚Äúauto‚Äù is passed, the dtype is automatically
    derived from the model‚Äôs weights.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`force_download` (`bool`, *optional*, defaults to `False`) ‚Äî Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) ‚Äî Path to a directory where
    a downloaded pretrained model configuration is cached if the standard cache is
    not used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) ‚Äî Whether or not
    to resume downloading the model weights and configuration files. If set to `False`,
    any incompletely downloaded files are deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`proxies` (`Dict[str, str]`, *optional*) ‚Äî A dictionary of proxy servers to
    use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`output_loading_info(bool,` *optional*, defaults to `False`) ‚Äî Whether or not
    to also return a dictionary containing missing keys, unexpected keys and error
    messages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) ‚Äî Whether to only
    load local model weights and configuration files or not. If set to `True`, the
    model won‚Äôt be downloaded from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str` or *bool*, *optional*) ‚Äî The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*, defaults to `"main"`) ‚Äî The specific model version
    to use. It can be a branch name, a tag name, a commit id, or any identifier allowed
    by Git.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`custom_revision` (`str`, *optional*, defaults to `"main"`) ‚Äî The specific
    model version to use. It can be a branch name, a tag name, or a commit id similar
    to `revision` when loading a custom pipeline from the Hub. It can be a ü§ó Diffusers
    version when loading a custom pipeline from GitHub, otherwise it defaults to `"main"`
    when loading from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mirror` (`str`, *optional*) ‚Äî Mirror source to resolve accessibility issues
    if you‚Äôre downloading a model in China. We do not guarantee the timeliness or
    safety of the source, and you should refer to the mirror site for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`device_map` (`str` or `Dict[str, Union[int, str, torch.device]]`, *optional*)
    ‚Äî A map that specifies where each submodule should go. It doesn‚Äôt need to be defined
    for each parameter/buffer name; once a given module name is inside, every submodule
    of it will be sent to the same device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set `device_map="auto"` to have ü§ó Accelerate automatically compute the most
    optimized `device_map`. For more information about each option see [designing
    a device map](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`max_memory` (`Dict`, *optional*) ‚Äî A dictionary device identifier for the
    maximum memory. Will default to the maximum memory available for each GPU and
    the available CPU RAM if unset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offload_folder` (`str` or `os.PathLike`, *optional*) ‚Äî The path to offload
    weights if device_map contains the value `"disk"`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offload_state_dict` (`bool`, *optional*) ‚Äî If `True`, temporarily offloads
    the CPU state dict to the hard drive to avoid running out of CPU RAM if the weight
    of the CPU state dict + the biggest shard of the checkpoint does not fit. Defaults
    to `True` when there is some disk offload.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`low_cpu_mem_usage` (`bool`, *optional*, defaults to `True` if torch version
    >= 1.9.0 else `False`) ‚Äî Speed up model loading only loading the pretrained weights
    and not initializing the weights. This also tries to not use more than 1x model
    size in CPU memory (including peak memory) while loading the model. Only supported
    for PyTorch >= 1.9.0\. If you are using an older version of PyTorch, setting this
    argument to `True` will raise an error.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use_safetensors` (`bool`, *optional*, defaults to `None`) ‚Äî If set to `None`,
    the safetensors weights are downloaded if they‚Äôre available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kwargs` (remaining dictionary of keyword arguments, *optional*) ‚Äî Can be used
    to overwrite load and saveable variables (the pipeline components of the specific
    pipeline class). The overwritten components are passed directly to the pipelines
    `__init__` method. See example below for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`variant` (`str`, *optional*) ‚Äî Load weights from a specified variant filename
    such as `"fp16"` or `"ema"`. This is ignored when loading `from_flax`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiates a image-to-image Pytorch diffusion pipeline from pretrained pipeline
    weight.
  prefs: []
  type: TYPE_NORMAL
- en: 'The from_pretrained() method takes care of returning the correct pipeline class
    instance by:'
  prefs: []
  type: TYPE_NORMAL
- en: Detect the pipeline class of the pretrained_model_or_path based on the _class_name
    property of its config object
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the image-to-image pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If a `controlnet` argument is passed, it will instantiate a [StableDiffusionControlNetImg2ImgPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetImg2ImgPipeline)
    object.
  prefs: []
  type: TYPE_NORMAL
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you get the error message below, you need to finetune the weights for your
    downstream task:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: To use private or [gated](https://huggingface.co/docs/hub/models-gated#gated-models)
    models, log-in with `huggingface-cli login`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '#### `from_pipe`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L619)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`pipeline` (`DiffusionPipeline`) ‚Äî an instantiated `DiffusionPipeline` object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiates a image-to-image Pytorch diffusion pipeline from another instantiated
    diffusion pipeline class.
  prefs: []
  type: TYPE_NORMAL
- en: The from_pipe() method takes care of returning the correct pipeline class instance
    by finding the image-to-image pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  prefs: []
  type: TYPE_NORMAL
- en: All the modules the pipeline contains will be used to initialize the new pipeline
    without reallocating additional memoery.
  prefs: []
  type: TYPE_NORMAL
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: AutoPipelineForInpainting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### `class diffusers.AutoPipelineForInpainting`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L724)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[AutoPipelineForInpainting](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting)
    is a generic pipeline class that instantiates an inpainting pipeline class. The
    specific underlying pipeline class is automatically selected from either the [from_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting.from_pretrained)
    or [from_pipe()](/docs/diffusers/v0.26.3/en/api/pipelines/auto_pipeline#diffusers.AutoPipelineForInpainting.from_pipe)
    methods.'
  prefs: []
  type: TYPE_NORMAL
- en: This class cannot be instantiated using `__init__()` (throws an error).
  prefs: []
  type: TYPE_NORMAL
- en: 'Class attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '`config_name` (`str`) ‚Äî The configuration filename that stores the class and
    module names of all the diffusion pipeline‚Äôs components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `from_pretrained`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L749)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`pretrained_model_name_or_path` (`str` or `os.PathLike`, *optional*) ‚Äî Can
    be either:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A string, the *repo id* (for example `CompVis/ldm-text2im-large-256`) of a pretrained
    pipeline hosted on the Hub.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A path to a *directory* (for example `./my_pipeline_directory/`) containing
    pipeline weights saved using [save_pretrained()](/docs/diffusers/v0.26.3/en/api/pipelines/overview#diffusers.DiffusionPipeline.save_pretrained).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`torch_dtype` (`str` or `torch.dtype`, *optional*) ‚Äî Override the default `torch.dtype`
    and load the model with another dtype. If ‚Äúauto‚Äù is passed, the dtype is automatically
    derived from the model‚Äôs weights.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`force_download` (`bool`, *optional*, defaults to `False`) ‚Äî Whether or not
    to force the (re-)download of the model weights and configuration files, overriding
    the cached versions if they exist.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cache_dir` (`Union[str, os.PathLike]`, *optional*) ‚Äî Path to a directory where
    a downloaded pretrained model configuration is cached if the standard cache is
    not used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`resume_download` (`bool`, *optional*, defaults to `False`) ‚Äî Whether or not
    to resume downloading the model weights and configuration files. If set to `False`,
    any incompletely downloaded files are deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`proxies` (`Dict[str, str]`, *optional*) ‚Äî A dictionary of proxy servers to
    use by protocol or endpoint, for example, `{''http'': ''foo.bar:3128'', ''http://hostname'':
    ''foo.bar:4012''}`. The proxies are used on each request.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`output_loading_info(bool,` *optional*, defaults to `False`) ‚Äî Whether or not
    to also return a dictionary containing missing keys, unexpected keys and error
    messages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`local_files_only` (`bool`, *optional*, defaults to `False`) ‚Äî Whether to only
    load local model weights and configuration files or not. If set to `True`, the
    model won‚Äôt be downloaded from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str` or *bool*, *optional*) ‚Äî The token to use as HTTP bearer authorization
    for remote files. If `True`, the token generated from `diffusers-cli login` (stored
    in `~/.huggingface`) is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*, defaults to `"main"`) ‚Äî The specific model version
    to use. It can be a branch name, a tag name, a commit id, or any identifier allowed
    by Git.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`custom_revision` (`str`, *optional*, defaults to `"main"`) ‚Äî The specific
    model version to use. It can be a branch name, a tag name, or a commit id similar
    to `revision` when loading a custom pipeline from the Hub. It can be a ü§ó Diffusers
    version when loading a custom pipeline from GitHub, otherwise it defaults to `"main"`
    when loading from the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mirror` (`str`, *optional*) ‚Äî Mirror source to resolve accessibility issues
    if you‚Äôre downloading a model in China. We do not guarantee the timeliness or
    safety of the source, and you should refer to the mirror site for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`device_map` (`str` or `Dict[str, Union[int, str, torch.device]]`, *optional*)
    ‚Äî A map that specifies where each submodule should go. It doesn‚Äôt need to be defined
    for each parameter/buffer name; once a given module name is inside, every submodule
    of it will be sent to the same device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set `device_map="auto"` to have ü§ó Accelerate automatically compute the most
    optimized `device_map`. For more information about each option see [designing
    a device map](https://hf.co/docs/accelerate/main/en/usage_guides/big_modeling#designing-a-device-map).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`max_memory` (`Dict`, *optional*) ‚Äî A dictionary device identifier for the
    maximum memory. Will default to the maximum memory available for each GPU and
    the available CPU RAM if unset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offload_folder` (`str` or `os.PathLike`, *optional*) ‚Äî The path to offload
    weights if device_map contains the value `"disk"`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`offload_state_dict` (`bool`, *optional*) ‚Äî If `True`, temporarily offloads
    the CPU state dict to the hard drive to avoid running out of CPU RAM if the weight
    of the CPU state dict + the biggest shard of the checkpoint does not fit. Defaults
    to `True` when there is some disk offload.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`low_cpu_mem_usage` (`bool`, *optional*, defaults to `True` if torch version
    >= 1.9.0 else `False`) ‚Äî Speed up model loading only loading the pretrained weights
    and not initializing the weights. This also tries to not use more than 1x model
    size in CPU memory (including peak memory) while loading the model. Only supported
    for PyTorch >= 1.9.0\. If you are using an older version of PyTorch, setting this
    argument to `True` will raise an error.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use_safetensors` (`bool`, *optional*, defaults to `None`) ‚Äî If set to `None`,
    the safetensors weights are downloaded if they‚Äôre available **and** if the safetensors
    library is installed. If set to `True`, the model is forcibly loaded from safetensors
    weights. If set to `False`, safetensors weights are not loaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kwargs` (remaining dictionary of keyword arguments, *optional*) ‚Äî Can be used
    to overwrite load and saveable variables (the pipeline components of the specific
    pipeline class). The overwritten components are passed directly to the pipelines
    `__init__` method. See example below for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`variant` (`str`, *optional*) ‚Äî Load weights from a specified variant filename
    such as `"fp16"` or `"ema"`. This is ignored when loading `from_flax`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiates a inpainting Pytorch diffusion pipeline from pretrained pipeline
    weight.
  prefs: []
  type: TYPE_NORMAL
- en: 'The from_pretrained() method takes care of returning the correct pipeline class
    instance by:'
  prefs: []
  type: TYPE_NORMAL
- en: Detect the pipeline class of the pretrained_model_or_path based on the _class_name
    property of its config object
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the inpainting pipeline linked to the pipeline class using pattern matching
    on pipeline class name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If a `controlnet` argument is passed, it will instantiate a [StableDiffusionControlNetInpaintPipeline](/docs/diffusers/v0.26.3/en/api/pipelines/controlnet#diffusers.StableDiffusionControlNetInpaintPipeline)
    object.
  prefs: []
  type: TYPE_NORMAL
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you get the error message below, you need to finetune the weights for your
    downstream task:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: To use private or [gated](https://huggingface.co/docs/hub/models-gated#gated-models)
    models, log-in with `huggingface-cli login`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '#### `from_pipe`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/diffusers/blob/v0.26.3/src/diffusers/pipelines/auto_pipeline.py#L895)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`pipeline` (`DiffusionPipeline`) ‚Äî an instantiated `DiffusionPipeline` object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiates a inpainting Pytorch diffusion pipeline from another instantiated
    diffusion pipeline class.
  prefs: []
  type: TYPE_NORMAL
- en: The from_pipe() method takes care of returning the correct pipeline class instance
    by finding the inpainting pipeline linked to the pipeline class using pattern
    matching on pipeline class name.
  prefs: []
  type: TYPE_NORMAL
- en: All the modules the pipeline class contain will be used to initialize the new
    pipeline without reallocating additional memoery.
  prefs: []
  type: TYPE_NORMAL
- en: The pipeline is set in evaluation mode (`model.eval()`) by default.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
