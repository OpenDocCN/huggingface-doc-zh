["```py\nimport torch\n\nmy_model = ModelClass(...)\nstate_dict = torch.load(checkpoint_file)\nmy_model.load_state_dict(state_dict)\n```", "```py\nfrom accelerate import init_empty_weights\nwith init_empty_weights():\n    my_model = ModelClass(...)\n```", "```py\nfrom accelerate import load_checkpoint_and_dispatch\n\nmodel = load_checkpoint_and_dispatch(\n    model, checkpoint=checkpoint_file, device_map=\"auto\"\n)\n```", "```py\ninput = torch.randn(2,3)\ninput = input.to(\"cuda\")\noutput = model(input)\n```", "```py\nimport torch\nfrom accelerate import init_empty_weights, load_checkpoint_and_dispatch\n\nwith init_empty_weights():\n    model = MyModel(...)\n\nmodel = load_checkpoint_and_dispatch(\n    model, checkpoint=checkpoint_file, device_map=\"auto\"\n)\n\ninput = torch.randn(2,3)\ninput = input.to(\"cuda\")\noutput = model(input)\n```", "```py\nfrom transformers import AutoModelForSeq2SeqLM\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"bigscience/T0pp\", device_map=\"auto\")\n```", "```py\nfrom transformers import AutoModelForSeq2SeqLM\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"bigscience/T0pp\", device_map=\"auto\", torch_dtype=torch.float16)\n```"]