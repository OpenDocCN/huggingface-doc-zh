- en: Repository Cards
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://huggingface.co/docs/huggingface_hub/package_reference/cards](https://huggingface.co/docs/huggingface_hub/package_reference/cards)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <link href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/assets/0.e3b0c442.css"
    rel="modulepreload"> <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/entry/start.81f0ceaa.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/scheduler.6062bdaf.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/singletons.3c2729d2.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/paths.566d2d8a.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/entry/app.77e31cee.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/index.4bca734e.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/nodes/0.d6dfa8c0.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/each.e59479a4.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/nodes/22.619e2a61.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Tip.b9ac1f03.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Docstring.ed07512f.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/Heading.723dceba.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/CodeBlock.fa01571c.js">
    <link rel="modulepreload" href="/docs/huggingface_hub/v0.20.3/en/_app/immutable/chunks/ExampleCodeBlock.823fb173.js">
  prefs: []
  type: TYPE_NORMAL
- en: The huggingface_hub library provides a Python interface to create, share, and
    update Model/Dataset Cards. Visit the [dedicated documentation page](https://huggingface.co/docs/hub/models-cards)
    for a deeper view of what Model Cards on the Hub are, and how they work under
    the hood. You can also check out our [Model Cards guide](../how-to-model-cards)
    to get a feel for how you would use these utilities in your own projects.
  prefs: []
  type: TYPE_NORMAL
- en: Repo Card
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `RepoCard` object is the parent class of [ModelCard](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCard),
    [DatasetCard](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.DatasetCard)
    and `SpaceCard`.
  prefs: []
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.RepoCard`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L35)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '#### `__init__`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L40)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`content` (`str`) — The content of the Markdown file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Initialize a RepoCard from string content. The content should be a Markdown
    file with a YAML block at the beginning and a Markdown body.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Raises the following error:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    when the content of the repo card metadata is not a dictionary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '#### `from_template`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L290)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`card_data` (`huggingface_hub.CardData`) — A huggingface_hub.CardData instance
    containing the metadata you want to include in the YAML header of the repo card
    on the Hugging Face Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`template_path` (`str`, *optional*) — A path to a markdown file with optional
    Jinja template variables that can be filled in with `template_kwargs`. Defaults
    to the default template.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '[huggingface_hub.repocard.RepoCard](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard)'
  prefs: []
  type: TYPE_NORMAL
- en: A RepoCard instance with the specified card data and content from the template.
  prefs: []
  type: TYPE_NORMAL
- en: Initialize a RepoCard from a template. By default, it uses the default template.
  prefs: []
  type: TYPE_NORMAL
- en: Templates are Jinja2 templates that can be customized by passing keyword arguments.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `load`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L134)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id_or_path` (`Union[str, Path]`) — The repo ID associated with a Hugging
    Face Hub repo or a local filepath.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — The type of Hugging Face repo to push to.
    Defaults to None, which will use use “model”. Other options are “dataset” and
    “space”. Not used when loading from a local filepath. If this is called from a
    child class, the default value will be the child class’s `repo_type`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `huggingface_hub.HfApi.login`
    method. Will default to the stored token.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ignore_metadata_errors` (`str`) — If True, errors while parsing the metadata
    section will be ignored. Some information might be lost during the process. Use
    it at your own risk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '[huggingface_hub.repocard.RepoCard](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard)'
  prefs: []
  type: TYPE_NORMAL
- en: The RepoCard (or subclass) initialized from the repo’s README.md file or filepath.
  prefs: []
  type: TYPE_NORMAL
- en: Initialize a RepoCard from a Hugging Face Hub repo’s README.md or a local filepath.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '#### `push_to_hub`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L227)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The repo ID of the Hugging Face Hub repo to push to. Example:
    “nateraw/food”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — Authentication token, obtained with `huggingface_hub.HfApi.login`
    method. Will default to the stored token.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*, defaults to “model”) — The type of Hugging
    Face repo to push to. Options are “model”, “dataset”, and “space”. If this function
    is called by a child class, it will default to the child class’s `repo_type`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_message` (`str`, *optional*) — The summary / title / first line of
    the generated commit.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_description` (`str`, *optional*) — The description of the generated
    commit.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`create_pr` (`bool`, *optional*) — Whether or not to create a Pull Request
    with this commit. Defaults to `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parent_commit` (`str`, *optional*) — The OID / SHA of the parent commit, as
    a hexadecimal string. Shorthands (7 first characters) are also supported. If specified
    and `create_pr` is `False`, the commit will fail if `revision` does not point
    to `parent_commit`. If specified and `create_pr` is `True`, the pull request will
    be created from `parent_commit`. Specifying `parent_commit` ensures the repo has
    not changed before committing the changes, and can be especially useful if the
    repo is updated / committed to concurrently.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`str`'
  prefs: []
  type: TYPE_NORMAL
- en: URL of the commit which updated the card metadata.
  prefs: []
  type: TYPE_NORMAL
- en: Push a RepoCard to a Hugging Face Hub repo.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `save`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L114)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`filepath` (`Union[Path, str]`) — Filepath to the markdown file to save.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Save a RepoCard to a file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '#### `validate`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L188)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*, defaults to “model”) — The type of Hugging
    Face repo to push to. Options are “model”, “dataset”, and “space”. If this function
    is called from a child class, the default will be the child class’s `repo_type`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Validates card against Hugging Face Hub’s card validation logic. Using this
    function requires access to the internet, so it is only called internally by [huggingface_hub.repocard.RepoCard.push_to_hub()](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.RepoCard.push_to_hub).
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises the following errors:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError)
    if the card fails validation checks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HTTPError`](https://requests.readthedocs.io/en/latest/api/#requests.HTTPError)
    if the request to the Hub API fails for any other reason.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Card Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [CardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.CardData)
    object is the parent class of [ModelCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCardData)
    and [DatasetCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.DatasetCardData).
  prefs: []
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.CardData`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L162)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Structure containing metadata from a RepoCard.
  prefs: []
  type: TYPE_NORMAL
- en: '[CardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.CardData)
    is the parent class of [ModelCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCardData)
    and [DatasetCardData](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.DatasetCardData).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Metadata can be exported as a dictionary or YAML. Export can be customized
    to alter the representation of the data (example: flatten evaluation results).
    `CardData` behaves as a dictionary (can get, pop, set values) but do not inherit
    from `dict` to allow this export step.'
  prefs: []
  type: TYPE_NORMAL
- en: '#### `get`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L214)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Get value for a given metadata key.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `pop`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L218)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Pop value for a given metadata key.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `to_dict`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L176)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`dict`'
  prefs: []
  type: TYPE_NORMAL
- en: CardData represented as a dictionary ready to be dumped to a YAML block for
    inclusion in a README.md file.
  prefs: []
  type: TYPE_NORMAL
- en: Converts CardData to a dict.
  prefs: []
  type: TYPE_NORMAL
- en: '#### `to_yaml`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L196)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`line_break` (str, *optional*) — The line break to use when dumping to yaml.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`str`'
  prefs: []
  type: TYPE_NORMAL
- en: CardData represented as a YAML block.
  prefs: []
  type: TYPE_NORMAL
- en: Dumps CardData to a YAML block for inclusion in a README.md file.
  prefs: []
  type: TYPE_NORMAL
- en: Model Cards
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ModelCard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.ModelCard`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L328)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '#### `from_template`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L333)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`card_data` (`huggingface_hub.ModelCardData`) — A huggingface_hub.ModelCardData
    instance containing the metadata you want to include in the YAML header of the
    model card on the Hugging Face Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`template_path` (`str`, *optional*) — A path to a markdown file with optional
    Jinja template variables that can be filled in with `template_kwargs`. Defaults
    to the default template.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '[huggingface_hub.ModelCard](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.ModelCard)'
  prefs: []
  type: TYPE_NORMAL
- en: A ModelCard instance with the specified card data and content from the template.
  prefs: []
  type: TYPE_NORMAL
- en: 'Initialize a ModelCard from a template. By default, it uses the default template,
    which can be found here: [https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md](https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/modelcard_template.md)'
  prefs: []
  type: TYPE_NORMAL
- en: Templates are Jinja2 templates that can be customized by passing keyword arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: ModelCardData
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.ModelCardData`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L239)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`language` (`Union[str, List[str]]`, *optional*) — Language of model’s training
    data or metadata. It must be an ISO 639-1, 639-2 or 639-3 code (two/three letters),
    or a special value like “code”, “multilingual”. Defaults to `None`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`license` (`str`, *optional*) — License of this model. Example: apache-2.0
    or any license from [https://huggingface.co/docs/hub/repositories-licenses](https://huggingface.co/docs/hub/repositories-licenses).
    Defaults to None.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`library_name` (`str`, *optional*) — Name of library used by this model. Example:
    keras or any library from [https://github.com/huggingface/huggingface.js/blob/main/packages/tasks/src/model-libraries.ts](https://github.com/huggingface/huggingface.js/blob/main/packages/tasks/src/model-libraries.ts).
    Defaults to None.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tags` (`List[str]`, *optional*) — List of tags to add to your model that can
    be used when filtering on the Hugging Face Hub. Defaults to None.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datasets` (`List[str]`, *optional*) — List of datasets that were used to train
    this model. Should be a dataset ID found on [https://hf.co/datasets](https://hf.co/datasets).
    Defaults to None.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metrics` (`List[str]`, *optional*) — List of metrics used to evaluate this
    model. Should be a metric name that can be found at [https://hf.co/metrics](https://hf.co/metrics).
    Example: ‘accuracy’. Defaults to None.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`eval_results` (`Union[List[EvalResult], EvalResult]`, *optional*) — List of
    `huggingface_hub.EvalResult` that define evaluation results of the model. If provided,
    `model_name` is used to as a name on PapersWithCode’s leaderboards. Defaults to
    `None`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`model_name` (`str`, *optional*) — A name for this model. It is used along
    with `eval_results` to construct the `model-index` within the card’s metadata.
    The name you supply here is what will be used on PapersWithCode’s leaderboards.
    If None is provided then the repo name is used as a default. Defaults to None.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ignore_metadata_errors` (`str`) — If True, errors while parsing the metadata
    section will be ignored. Some information might be lost during the process. Use
    it at your own risk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kwargs` (`dict`, *optional*) — Additional metadata that will be added to the
    model card. Defaults to None.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Model Card Metadata that is used by Hugging Face Hub when included at the top
    of your README.md
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Dataset Cards
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Dataset cards are also known as Data Cards in the ML Community.
  prefs: []
  type: TYPE_NORMAL
- en: DatasetCard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.DatasetCard`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L408)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '#### `from_template`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L413)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`card_data` (`huggingface_hub.DatasetCardData`) — A huggingface_hub.DatasetCardData
    instance containing the metadata you want to include in the YAML header of the
    dataset card on the Hugging Face Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`template_path` (`str`, *optional*) — A path to a markdown file with optional
    Jinja template variables that can be filled in with `template_kwargs`. Defaults
    to the default template.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '[huggingface_hub.DatasetCard](/docs/huggingface_hub/v0.20.3/en/package_reference/cards#huggingface_hub.DatasetCard)'
  prefs: []
  type: TYPE_NORMAL
- en: A DatasetCard instance with the specified card data and content from the template.
  prefs: []
  type: TYPE_NORMAL
- en: 'Initialize a DatasetCard from a template. By default, it uses the default template,
    which can be found here: [https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/datasetcard_template.md](https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/templates/datasetcard_template.md)'
  prefs: []
  type: TYPE_NORMAL
- en: Templates are Jinja2 templates that can be customized by passing keyword arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: DatasetCardData
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.DatasetCardData`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L345)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`language` (`List[str]`, *optional*) — Language of dataset’s data or metadata.
    It must be an ISO 639-1, 639-2 or 639-3 code (two/three letters), or a special
    value like “code”, “multilingual”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`license` (`Union[str, List[str]]`, *optional*) — License(s) of this dataset.
    Example: apache-2.0 or any license from [https://huggingface.co/docs/hub/repositories-licenses](https://huggingface.co/docs/hub/repositories-licenses).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`annotations_creators` (`Union[str, List[str]]`, *optional*) — How the annotations
    for the dataset were created. Options are: ‘found’, ‘crowdsourced’, ‘expert-generated’,
    ‘machine-generated’, ‘no-annotation’, ‘other’.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`language_creators` (`Union[str, List[str]]`, *optional*) — How the text-based
    data in the dataset was created. Options are: ‘found’, ‘crowdsourced’, ‘expert-generated’,
    ‘machine-generated’, ‘other’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multilinguality` (`Union[str, List[str]]`, *optional*) — Whether the dataset
    is multilingual. Options are: ‘monolingual’, ‘multilingual’, ‘translation’, ‘other’.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`size_categories` (`Union[str, List[str]]`, *optional*) — The number of examples
    in the dataset. Options are: ‘n<1K’, ‘1K<n>1T’, and ‘other’.</n>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`source_datasets` (`List[str]]`, *optional*) — Indicates whether the dataset
    is an original dataset or extended from another existing dataset. Options are:
    ‘original’ and ‘extended’.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task_categories` (`Union[str, List[str]]`, *optional*) — What categories of
    task does the dataset support?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task_ids` (`Union[str, List[str]]`, *optional*) — What specific tasks does
    the dataset support?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`paperswithcode_id` (`str`, *optional*) — ID of the dataset on PapersWithCode.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pretty_name` (`str`, *optional*) — A more human-readable name for the dataset.
    (ex. “Cats vs. Dogs”)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`train_eval_index` (`Dict`, *optional*) — A dictionary that describes the necessary
    spec for doing evaluation on the Hub. If not provided, it will be gathered from
    the ‘train-eval-index’ key of the kwargs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config_names` (`Union[str, List[str]]`, *optional*) — A list of the available
    dataset configs for the dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dataset Card Metadata that is used by Hugging Face Hub when included at the
    top of your README.md
  prefs: []
  type: TYPE_NORMAL
- en: Space Cards
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SpaceCard
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.SpaceCard`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L472)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: SpaceCardData
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.SpaceCardData`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L425)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`title` (`str`, *optional*) — Title of the Space.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sdk` (`str`, *optional*) — SDK of the Space (one of `gradio`, `streamlit`,
    `docker`, or `static`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sdk_version` (`str`, *optional*) — Version of the used SDK (if Gradio/Streamlit
    sdk).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`python_version` (`str`, *optional*) — Python version used in the Space (if
    Gradio/Streamlit sdk).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`app_file` (`str`, *optional*) — Path to your main application file (which
    contains either gradio or streamlit Python code, or static html code). Path is
    relative to the root of the repository.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`app_port` (`str`, *optional*) — Port on which your application is running.
    Used only if sdk is `docker`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`license` (`str`, *optional*) — License of this model. Example: apache-2.0
    or any license from [https://huggingface.co/docs/hub/repositories-licenses](https://huggingface.co/docs/hub/repositories-licenses).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`duplicated_from` (`str`, *optional*) — ID of the original Space if this is
    a duplicated Space.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`models` (List`str`, *optional*) — List of models related to this Space. Should
    be a dataset ID found on [https://hf.co/models](https://hf.co/models).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`datasets` (`List[str]`, *optional*) — List of datasets related to this Space.
    Should be a dataset ID found on [https://hf.co/datasets](https://hf.co/datasets).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tags` (`List[str]`, *optional*) — List of tags to add to your Space that can
    be used when filtering on the Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ignore_metadata_errors` (`str`) — If True, errors while parsing the metadata
    section will be ignored. Some information might be lost during the process. Use
    it at your own risk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kwargs` (`dict`, *optional*) — Additional metadata that will be added to the
    space card.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Space Card Metadata that is used by Hugging Face Hub when included at the top
    of your README.md
  prefs: []
  type: TYPE_NORMAL
- en: To get an exhaustive reference of Spaces configuration, please visit [https://huggingface.co/docs/hub/spaces-config-reference#spaces-configuration-reference](https://huggingface.co/docs/hub/spaces-config-reference#spaces-configuration-reference).
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Utilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: EvalResult
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '### `class huggingface_hub.EvalResult`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L10)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`task_type` (`str`) — The task identifier. Example: “image-classification”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_type` (`str`) — The dataset identifier. Example: “common_voice”. Use
    dataset id from [https://hf.co/datasets](https://hf.co/datasets).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_name` (`str`) — A pretty name for the dataset. Example: “Common Voice
    (French)“.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metric_type` (`str`) — The metric identifier. Example: “wer”. Use metric id
    from [https://hf.co/metrics](https://hf.co/metrics).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metric_value` (`Any`) — The metric value. Example: 0.9 or “20.0 ± 1.2”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task_name` (`str`, *optional*) — A pretty name for the task. Example: “Speech
    Recognition”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_config` (`str`, *optional*) — The name of the dataset configuration
    used in `load_dataset()`. Example: fr in `load_dataset("common_voice", "fr")`.
    See the `datasets` docs for more info: [https://hf.co/docs/datasets/package_reference/loading_methods#datasets.load_dataset.name](https://hf.co/docs/datasets/package_reference/loading_methods#datasets.load_dataset.name)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_split` (`str`, *optional*) — The split used in `load_dataset()`. Example:
    “test”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_revision` (`str`, *optional*) — The revision (AKA Git Sha) of the
    dataset used in `load_dataset()`. Example: 5503434ddd753f426f4b38109466949a1217c2bb'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_args` (`Dict[str, Any]`, *optional*) — The arguments passed during
    `Metric.compute()`. Example for `bleu`: `{"max_order": 4}`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metric_name` (`str`, *optional*) — A pretty name for the metric. Example:
    “Test WER”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metric_config` (`str`, *optional*) — The name of the metric configuration
    used in `load_metric()`. Example: bleurt-large-512 in `load_metric("bleurt", "bleurt-large-512")`.
    See the `datasets` docs for more info: [https://huggingface.co/docs/datasets/v2.1.0/en/loading#load-configurations](https://huggingface.co/docs/datasets/v2.1.0/en/loading#load-configurations)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metric_args` (`Dict[str, Any]`, *optional*) — The arguments passed during
    `Metric.compute()`. Example for `bleu`: max_order: 4'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`verified` (`bool`, *optional*) — Indicates whether the metrics originate from
    Hugging Face’s [evaluation service](https://huggingface.co/spaces/autoevaluate/model-evaluator)
    or not. Automatically computed by Hugging Face, do not set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`verify_token` (`str`, *optional*) — A JSON Web Token that is used to verify
    whether the metrics originate from Hugging Face’s [evaluation service](https://huggingface.co/spaces/autoevaluate/model-evaluator)
    or not.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`source_name` (`str`, *optional*) — The name of the source of the evaluation
    result. Example: “Open LLM Leaderboard”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`source_url` (`str`, *optional*) — The URL of the source of the evaluation
    result. Example: ”[https://huggingface.co/spaces/HuggingFaceH4/open_llm_leaderboard”](https://huggingface.co/spaces/HuggingFaceH4/open_llm_leaderboard%22).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flattened representation of individual evaluation results found in model-index
    of Model Cards.
  prefs: []
  type: TYPE_NORMAL
- en: For more information on the model-index spec, see [https://github.com/huggingface/hub-docs/blob/main/modelcard.md?plain=1](https://github.com/huggingface/hub-docs/blob/main/modelcard.md?plain=1).
  prefs: []
  type: TYPE_NORMAL
- en: '#### `is_equal_except_value`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L143)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Return True if `self` and `other` describe exactly the same metric but with
    a different value.
  prefs: []
  type: TYPE_NORMAL
- en: model_index_to_eval_results
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '#### `huggingface_hub.repocard_data.model_index_to_eval_results`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L506)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`model_index` (`List[Dict[str, Any]]`) — A model index data structure, likely
    coming from a README.md file on the Hugging Face Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: model_name (`str`)
  prefs: []
  type: TYPE_NORMAL
- en: 'The name of the model as found in the model index. This is used as the identifier
    for the model on leaderboards like PapersWithCode. eval_results (`List[EvalResult]`):
    A list of `huggingface_hub.EvalResult` objects containing the metrics reported
    in the provided model_index.'
  prefs: []
  type: TYPE_NORMAL
- en: Takes in a model index and returns the model name and a list of `huggingface_hub.EvalResult`
    objects.
  prefs: []
  type: TYPE_NORMAL
- en: 'A detailed spec of the model index can be found here: [https://github.com/huggingface/hub-docs/blob/main/modelcard.md?plain=1](https://github.com/huggingface/hub-docs/blob/main/modelcard.md?plain=1)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: eval_results_to_model_index
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '#### `huggingface_hub.repocard_data.eval_results_to_model_index`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard_data.py#L622)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`model_name` (`str`) — Name of the model (ex. “my-cool-model”). This is used
    as the identifier for the model on leaderboards like PapersWithCode.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`eval_results` (`List[EvalResult]`) — List of `huggingface_hub.EvalResult`
    objects containing the metrics to be reported in the model-index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: model_index (`List[Dict[str, Any]]`)
  prefs: []
  type: TYPE_NORMAL
- en: The eval_results converted to a model-index.
  prefs: []
  type: TYPE_NORMAL
- en: Takes in given model name and list of `huggingface_hub.EvalResult` and returns
    a valid model-index that will be compatible with the format expected by the Hugging
    Face Hub.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: metadata_eval_result
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '#### `huggingface_hub.metadata_eval_result`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L544)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`model_pretty_name` (`str`) — The name of the model in natural language.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task_pretty_name` (`str`) — The name of a task in natural language.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`task_id` (`str`) — Example: automatic-speech-recognition. A task id.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metrics_pretty_name` (`str`) — A name for the metric in natural language.
    Example: Test WER.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metrics_id` (`str`) — Example: wer. A metric id from [https://hf.co/metrics](https://hf.co/metrics).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metrics_value` (`Any`) — The value from the metric. Example: 20.0 or “20.0
    ± 1.2”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_pretty_name` (`str`) — The name of the dataset in natural language.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_id` (`str`) — Example: common_voice. A dataset id from [https://hf.co/datasets](https://hf.co/datasets).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metrics_config` (`str`, *optional*) — The name of the metric configuration
    used in `load_metric()`. Example: bleurt-large-512 in `load_metric("bleurt", "bleurt-large-512")`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metrics_verified` (`bool`, *optional*, defaults to `False`) — Indicates whether
    the metrics originate from Hugging Face’s [evaluation service](https://huggingface.co/spaces/autoevaluate/model-evaluator)
    or not. Automatically computed by Hugging Face, do not set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_config` (`str`, *optional*) — Example: fr. The name of the dataset
    configuration used in `load_dataset()`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_split` (`str`, *optional*) — Example: test. The name of the dataset
    split used in `load_dataset()`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dataset_revision` (`str`, *optional*) — Example: 5503434ddd753f426f4b38109466949a1217c2bb.
    The name of the dataset dataset revision used in `load_dataset()`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metrics_verification_token` (`bool`, *optional*) — A JSON Web Token that is
    used to verify whether the metrics originate from Hugging Face’s [evaluation service](https://huggingface.co/spaces/autoevaluate/model-evaluator)
    or not.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`dict`'
  prefs: []
  type: TYPE_NORMAL
- en: a metadata dict with the result from a model evaluated on a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Creates a metadata dict with the result from a model evaluated on a dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: metadata_update
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '#### `huggingface_hub.metadata_update`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/huggingface_hub/blob/v0.20.3/src/huggingface_hub/repocard.py#L672)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`repo_id` (`str`) — The name of the repository.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`metadata` (`dict`) — A dictionary containing the metadata to be updated.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`repo_type` (`str`, *optional*) — Set to `"dataset"` or `"space"` if updating
    to a dataset or space, `None` or `"model"` if updating to a model. Default is
    `None`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`overwrite` (`bool`, *optional*, defaults to `False`) — If set to `True` an
    existing field can be overwritten, otherwise attempting to overwrite an existing
    field will cause an error.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`token` (`str`, *optional*) — The Hugging Face authentication token.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_message` (`str`, *optional*) — The summary / title / first line of
    the generated commit. Defaults to `f"Update metadata with huggingface_hub"`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`commit_description` (`str` *optional*) — The description of the generated
    commit'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`revision` (`str`, *optional*) — The git revision to commit from. Defaults
    to the head of the `"main"` branch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`create_pr` (`boolean`, *optional*) — Whether or not to create a Pull Request
    from `revision` with that commit. Defaults to `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`parent_commit` (`str`, *optional*) — The OID / SHA of the parent commit, as
    a hexadecimal string. Shorthands (7 first characters) are also supported. If specified
    and `create_pr` is `False`, the commit will fail if `revision` does not point
    to `parent_commit`. If specified and `create_pr` is `True`, the pull request will
    be created from `parent_commit`. Specifying `parent_commit` ensures the repo has
    not changed before committing the changes, and can be especially useful if the
    repo is updated / committed to concurrently.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns
  prefs: []
  type: TYPE_NORMAL
- en: '`str`'
  prefs: []
  type: TYPE_NORMAL
- en: URL of the commit which updated the card metadata.
  prefs: []
  type: TYPE_NORMAL
- en: Updates the metadata in the README.md of a repository on the Hugging Face Hub.
    If the README.md file doesn’t exist yet, a new one is created with metadata and
    an the default ModelCard or DatasetCard template. For `space` repo, an error is
    thrown as a Space cannot exist without a `README.md` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
