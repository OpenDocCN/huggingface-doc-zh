- en: Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Original text: [https://huggingface.co/docs/timm/reference/models](https://huggingface.co/docs/timm/reference/models)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '
    
    
    
    
    
    
    
    
    
    
    
    
    
    #### `timm.create_model`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/pytorch-image-models/blob/v0.9.12/timm/models/_factory.py#L38)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Create a model.
  prefs: []
  type: TYPE_NORMAL
- en: Lookup model’s entrypoint function and pass relevant args to create a new model.
  prefs: []
  type: TYPE_NORMAL
- en: '**kwargs will be passed through entrypoint fn to `timm.models.build_model_with_cfg()`
    and then the model class __init__(). kwargs values set to None are pruned before
    passing.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Keyword Args: drop_rate (float): Classifier dropout rate for training. drop_path_rate
    (float): Stochastic depth drop rate for training. global_pool (str): Classifier
    global pooling type.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '#### `timm.list_models`'
  prefs: []
  type: TYPE_NORMAL
- en: '[< source >](https://github.com/huggingface/pytorch-image-models/blob/v0.9.12/timm/models/_registry.py#L185)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Parameters
  prefs: []
  type: TYPE_NORMAL
- en: '`filter` - Wildcard filter string that works with fnmatch —'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`module` - Limit model selection to a specific submodule (ie ‘vision_transformer’)
    —'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pretrained` - Include only models with valid pretrained weights if True —'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`exclude_filters` - Wildcard filters to exclude models after including them
    with filter —'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`name_matches_cfg` - Include only models w/ model_name matching default_cfg
    name (excludes some aliases) —'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`include_tags` - Include pretrained tags in model names (model.tag). If None,
    defaults — set to True when pretrained=True else False (default: None)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Return list of available model names, sorted alphabetically
  prefs: []
  type: TYPE_NORMAL
- en: 'Example: model_list(‘gluon_resnet*’) — returns all models starting with ‘gluon_resnet’
    model_list(’*resnext*, ‘resnet’) — returns all models with ‘resnext’ in ‘resnet’
    module'
  prefs: []
  type: TYPE_NORMAL
